var __wxAppData = __wxAppData || {};
var __wxRoute = __wxRoute || "";
var __wxRouteBegin = __wxRouteBegin || "";
var __wxAppCode__ = __wxAppCode__ || {};
var global = global || {};
var __WXML_GLOBAL__ = __WXML_GLOBAL__ || {};
var __wxAppCurrentFile__ = __wxAppCurrentFile__ || "";
var Component = Component || function() {};
var definePlugin = definePlugin || function() {};
var requirePlugin = requirePlugin || function() {};
var Behavior = Behavior || function() {};
var __vd_version_info__ = __vd_version_info__ || {};
/*v0.5vv_20211229_syb_scopedata*/
global.__wcc_version__ = 'v0.5vv_20211229_syb_scopedata';
global.__wcc_version_info__ = {
    "customComponents": true,
    "fixZeroRpx": true,
    "propValueDeepCopy": false
};
var $gwxc
var $gaic = {}
$gwx = function(path, global) {
    if (typeof global === 'undefined') global = {};
    if (typeof __WXML_GLOBAL__ === 'undefined') {
        __WXML_GLOBAL__ = {};
    }
    __WXML_GLOBAL__.modules = __WXML_GLOBAL__.modules || {};

    function _(a, b) {
        if (typeof(b) != 'undefined') a.children.push(b);
    }

    function _v(k) {
        if (typeof(k) != 'undefined') return {
            tag: 'virtual',
            'wxKey': k,
            children: []
        };
        return {
            tag: 'virtual',
            children: []
        };
    }

    function _n(tag) {
        return {
            tag: 'wx-' + tag,
            attr: {},
            children: [],
            n: [],
            raw: {},
            generics: {}
        }
    }

    function _p(a, b) {
        b && a.properities.push(b);
    }

    function _s(scope, env, key) {
        return typeof(scope[key]) != 'undefined' ? scope[key] : env[key]
    }

    function _wp(m) {
        console.warn("WXMLRT_$gwx:" + m)
    }

    function _wl(tname, prefix) {
        _wp(prefix + ':-1:-1:-1: Template `' + tname + '` is being called recursively, will be stop.')
    }
    $gwn = console.warn;
    $gwl = console.log;

    function $gwh() {
        function x() {}
        x.prototype = {
            hn: function(obj, all) {
                if (typeof(obj) == 'object') {
                    var cnt = 0;
                    var any1 = false,
                        any2 = false;
                    for (var x in obj) {
                        any1 = any1 | x === '__value__';
                        any2 = any2 | x === '__wxspec__';
                        cnt++;
                        if (cnt > 2) break;
                    }
                    return cnt == 2 && any1 && any2 && (all || obj.__wxspec__ !== 'm' || this.hn(obj.__value__) === 'h') ? "h" : "n";
                }
                return "n";
            },
            nh: function(obj, special) {
                return {
                    __value__: obj,
                    __wxspec__: special ? special : true
                }
            },
            rv: function(obj) {
                return this.hn(obj, true) === 'n' ? obj : this.rv(obj.__value__);
            },
            hm: function(obj) {
                if (typeof(obj) == 'object') {
                    var cnt = 0;
                    var any1 = false,
                        any2 = false;
                    for (var x in obj) {
                        any1 = any1 | x === '__value__';
                        any2 = any2 | x === '__wxspec__';
                        cnt++;
                        if (cnt > 2) break;
                    }
                    return cnt == 2 && any1 && any2 && (obj.__wxspec__ === 'm' || this.hm(obj.__value__));
                }
                return false;
            }
        }
        return new x;
    }
    wh = $gwh();

    function $gstack(s) {
        var tmp = s.split('\n ' + ' ' + ' ' + ' ');
        for (var i = 0; i < tmp.length; ++i) {
            if (0 == i) continue;
            if (")" === tmp[i][tmp[i].length - 1])
                tmp[i] = tmp[i].replace(/\s\(.*\)$/, "");
            else
                tmp[i] = "at anonymous function";
        }
        return tmp.join('\n ' + ' ' + ' ' + ' ');
    }

    function $gwrt(should_pass_type_info) {
        function ArithmeticEv(ops, e, s, g, o) {
            var _f = false;
            var rop = ops[0][1];
            var _a, _b, _c, _d, _aa, _bb;
            switch (rop) {
                case '?:':
                    _a = rev(ops[1], e, s, g, o, _f);
                    _c = should_pass_type_info && (wh.hn(_a) === 'h');
                    _d = wh.rv(_a) ? rev(ops[2], e, s, g, o, _f) : rev(ops[3], e, s, g, o, _f);
                    _d = _c && wh.hn(_d) === 'n' ? wh.nh(_d, 'c') : _d;
                    return _d;
                    break;
                case '&&':
                    _a = rev(ops[1], e, s, g, o, _f);
                    _c = should_pass_type_info && (wh.hn(_a) === 'h');
                    _d = wh.rv(_a) ? rev(ops[2], e, s, g, o, _f) : wh.rv(_a);
                    _d = _c && wh.hn(_d) === 'n' ? wh.nh(_d, 'c') : _d;
                    return _d;
                    break;
                case '||':
                    _a = rev(ops[1], e, s, g, o, _f);
                    _c = should_pass_type_info && (wh.hn(_a) === 'h');
                    _d = wh.rv(_a) ? wh.rv(_a) : rev(ops[2], e, s, g, o, _f);
                    _d = _c && wh.hn(_d) === 'n' ? wh.nh(_d, 'c') : _d;
                    return _d;
                    break;
                case '+':
                case '*':
                case '/':
                case '%':
                case '|':
                case '^':
                case '&':
                case '===':
                case '==':
                case '!=':
                case '!==':
                case '>=':
                case '<=':
                case '>':
                case '<':
                case '<<':
                case '>>':
                    _a = rev(ops[1], e, s, g, o, _f);
                    _b = rev(ops[2], e, s, g, o, _f);
                    _c = should_pass_type_info && (wh.hn(_a) === 'h' || wh.hn(_b) === 'h');
                    switch (rop) {
                        case '+':
                            _d = wh.rv(_a) + wh.rv(_b);
                            break;
                        case '*':
                            _d = wh.rv(_a) * wh.rv(_b);
                            break;
                        case '/':
                            _d = wh.rv(_a) / wh.rv(_b);
                            break;
                        case '%':
                            _d = wh.rv(_a) % wh.rv(_b);
                            break;
                        case '|':
                            _d = wh.rv(_a) | wh.rv(_b);
                            break;
                        case '^':
                            _d = wh.rv(_a) ^ wh.rv(_b);
                            break;
                        case '&':
                            _d = wh.rv(_a) & wh.rv(_b);
                            break;
                        case '===':
                            _d = wh.rv(_a) === wh.rv(_b);
                            break;
                        case '==':
                            _d = wh.rv(_a) == wh.rv(_b);
                            break;
                        case '!=':
                            _d = wh.rv(_a) != wh.rv(_b);
                            break;
                        case '!==':
                            _d = wh.rv(_a) !== wh.rv(_b);
                            break;
                        case '>=':
                            _d = wh.rv(_a) >= wh.rv(_b);
                            break;
                        case '<=':
                            _d = wh.rv(_a) <= wh.rv(_b);
                            break;
                        case '>':
                            _d = wh.rv(_a) > wh.rv(_b);
                            break;
                        case '<':
                            _d = wh.rv(_a) < wh.rv(_b);
                            break;
                        case '<<':
                            _d = wh.rv(_a) << wh.rv(_b);
                            break;
                        case '>>':
                            _d = wh.rv(_a) >> wh.rv(_b);
                            break;
                        default:
                            break;
                    }
                    return _c ? wh.nh(_d, "c") : _d;
                    break;
                case '-':
                    _a = ops.length === 3 ? rev(ops[1], e, s, g, o, _f) : 0;
                    _b = ops.length === 3 ? rev(ops[2], e, s, g, o, _f) : rev(ops[1], e, s, g, o, _f);
                    _c = should_pass_type_info && (wh.hn(_a) === 'h' || wh.hn(_b) === 'h');
                    _d = _c ? wh.rv(_a) - wh.rv(_b) : _a - _b;
                    return _c ? wh.nh(_d, "c") : _d;
                    break;
                case '!':
                    _a = rev(ops[1], e, s, g, o, _f);
                    _c = should_pass_type_info && (wh.hn(_a) == 'h');
                    _d = !wh.rv(_a);
                    return _c ? wh.nh(_d, "c") : _d;
                case '~':
                    _a = rev(ops[1], e, s, g, o, _f);
                    _c = should_pass_type_info && (wh.hn(_a) == 'h');
                    _d = ~wh.rv(_a);
                    return _c ? wh.nh(_d, "c") : _d;
                default:
                    $gwn('unrecognized op' + rop);
            }
        }

        function rev(ops, e, s, g, o, newap) {
            var op = ops[0];
            var _f = false;
            if (typeof newap !== "undefined") o.ap = newap;
            if (typeof(op) === 'object') {
                var vop = op[0];
                var _a, _aa, _b, _bb, _c, _d, _s, _e, _ta, _tb, _td;
                switch (vop) {
                    case 2:
                        return ArithmeticEv(ops, e, s, g, o);
                        break;
                    case 4:
                        return rev(ops[1], e, s, g, o, _f);
                        break;
                    case 5:
                        switch (ops.length) {
                            case 2:
                                _a = rev(ops[1], e, s, g, o, _f);
                                return should_pass_type_info ? [_a] : [wh.rv(_a)];
                                return [_a];
                                break;
                            case 1:
                                return [];
                                break;
                            default:
                                _a = rev(ops[1], e, s, g, o, _f);
                                _b = rev(ops[2], e, s, g, o, _f);
                                _a.push(
                                    should_pass_type_info ?
                                    _b :
                                    wh.rv(_b)
                                );
                                return _a;
                                break;
                        }
                        break;
                    case 6:
                        _a = rev(ops[1], e, s, g, o);
                        var ap = o.ap;
                        _ta = wh.hn(_a) === 'h';
                        _aa = _ta ? wh.rv(_a) : _a;
                        o.is_affected |= _ta;
                        if (should_pass_type_info) {
                            if (_aa === null || typeof(_aa) === 'undefined') {
                                return _ta ? wh.nh(undefined, 'e') : undefined;
                            }
                            _b = rev(ops[2], e, s, g, o, _f);
                            _tb = wh.hn(_b) === 'h';
                            _bb = _tb ? wh.rv(_b) : _b;
                            o.ap = ap;
                            o.is_affected |= _tb;
                            if (_bb === null || typeof(_bb) === 'undefined' ||
                                _bb === "__proto__" || _bb === "prototype" || _bb === "caller") {
                                return (_ta || _tb) ? wh.nh(undefined, 'e') : undefined;
                            }
                            _d = _aa[_bb];
                            if (typeof _d === 'function' && !ap) _d = undefined;
                            _td = wh.hn(_d) === 'h';
                            o.is_affected |= _td;
                            return (_ta || _tb) ? (_td ? _d : wh.nh(_d, 'e')) : _d;
                        } else {
                            if (_aa === null || typeof(_aa) === 'undefined') {
                                return undefined;
                            }
                            _b = rev(ops[2], e, s, g, o, _f);
                            _tb = wh.hn(_b) === 'h';
                            _bb = _tb ? wh.rv(_b) : _b;
                            o.ap = ap;
                            o.is_affected |= _tb;
                            if (_bb === null || typeof(_bb) === 'undefined' ||
                                _bb === "__proto__" || _bb === "prototype" || _bb === "caller") {
                                return undefined;
                            }
                            _d = _aa[_bb];
                            if (typeof _d === 'function' && !ap) _d = undefined;
                            _td = wh.hn(_d) === 'h';
                            o.is_affected |= _td;
                            return _td ? wh.rv(_d) : _d;
                        }
                    case 7:
                        switch (ops[1][0]) {
                            case 11:
                                o.is_affected |= wh.hn(g) === 'h';
                                return g;
                            case 3:
                                _s = wh.rv(s);
                                _e = wh.rv(e);
                                _b = ops[1][1];
                                if (g && g.f && g.f.hasOwnProperty(_b)) {
                                    _a = g.f;
                                    o.ap = true;
                                } else {
                                    _a = _s && _s.hasOwnProperty(_b) ?
                                        s : (_e && _e.hasOwnProperty(_b) ? e : undefined);
                                }
                                if (should_pass_type_info) {
                                    if (_a) {
                                        _ta = wh.hn(_a) === 'h';
                                        _aa = _ta ? wh.rv(_a) : _a;
                                        _d = _aa[_b];
                                        _td = wh.hn(_d) === 'h';
                                        o.is_affected |= _ta || _td;
                                        _d = _ta && !_td ? wh.nh(_d, 'e') : _d;
                                        return _d;
                                    }
                                } else {
                                    if (_a) {
                                        _ta = wh.hn(_a) === 'h';
                                        _aa = _ta ? wh.rv(_a) : _a;
                                        _d = _aa[_b];
                                        _td = wh.hn(_d) === 'h';
                                        o.is_affected |= _ta || _td;
                                        return wh.rv(_d);
                                    }
                                }
                                return undefined;
                        }
                        break;
                    case 8:
                        _a = {};
                        _a[ops[1]] = rev(ops[2], e, s, g, o, _f);
                        return _a;
                        break;
                    case 9:
                        _a = rev(ops[1], e, s, g, o, _f);
                        _b = rev(ops[2], e, s, g, o, _f);

                        function merge(_a, _b, _ow) {
                            var ka, _bbk;
                            _ta = wh.hn(_a) === 'h';
                            _tb = wh.hn(_b) === 'h';
                            _aa = wh.rv(_a);
                            _bb = wh.rv(_b);
                            for (var k in _bb) {
                                if (_ow || !_aa.hasOwnProperty(k)) {
                                    _aa[k] = should_pass_type_info ? (_tb ? wh.nh(_bb[k], 'e') : _bb[k]) : wh.rv(_bb[k]);
                                }
                            }
                            return _a;
                        }
                        var _c = _a
                        var _ow = true
                        if (typeof(ops[1][0]) === "object" && ops[1][0][0] === 10) {
                            _a = _b
                            _b = _c
                            _ow = false
                        }
                        if (typeof(ops[1][0]) === "object" && ops[1][0][0] === 10) {
                            var _r = {}
                            return merge(merge(_r, _a, _ow), _b, _ow);
                        } else
                            return merge(_a, _b, _ow);
                        break;
                    case 10:
                        _a = rev(ops[1], e, s, g, o, _f);
                        _a = should_pass_type_info ? _a : wh.rv(_a);
                        return _a;
                        break;
                    case 12:
                        var _r;
                        _a = rev(ops[1], e, s, g, o);
                        if (!o.ap) {
                            return should_pass_type_info && wh.hn(_a) === 'h' ? wh.nh(_r, 'f') : _r;
                        }
                        var ap = o.ap;
                        _b = rev(ops[2], e, s, g, o, _f);
                        o.ap = ap;
                        _ta = wh.hn(_a) === 'h';
                        _tb = _ca(_b);
                        _aa = wh.rv(_a);
                        _bb = wh.rv(_b);
                        snap_bb = $gdc(_bb, "nv_");
                        try {
                            _r = typeof _aa === "function" ? $gdc(_aa.apply(null, snap_bb)) : undefined;
                        } catch (e) {
                            e.message = e.message.replace(/nv_/g, "");
                            e.stack = e.stack.substring(0, e.stack.indexOf("\n", e.stack.lastIndexOf("at nv_")));
                            e.stack = e.stack.replace(/\snv_/g, " ");
                            e.stack = $gstack(e.stack);
                            if (g.debugInfo) {
                                e.stack += "\n " + " " + " " + " at " + g.debugInfo[0] + ":" + g.debugInfo[1] + ":" + g.debugInfo[2];
                                console.error(e);
                            }
                            _r = undefined;
                        }
                        return should_pass_type_info && (_tb || _ta) ? wh.nh(_r, 'f') : _r;
                }
            } else {
                if (op === 3 || op === 1) return ops[1];
                else if (op === 11) {
                    var _a = '';
                    for (var i = 1; i < ops.length; i++) {
                        var xp = wh.rv(rev(ops[i], e, s, g, o, _f));
                        _a += typeof(xp) === 'undefined' ? '' : xp;
                    }
                    return _a;
                }
            }
        }

        function wrapper(ops, e, s, g, o, newap) {
            if (ops[0] == '11182016') {
                g.debugInfo = ops[2];
                return rev(ops[1], e, s, g, o, newap);
            } else {
                g.debugInfo = null;
                return rev(ops, e, s, g, o, newap);
            }
        }
        return wrapper;
    }
    gra = $gwrt(true);
    grb = $gwrt(false);

    function TestTest(expr, ops, e, s, g, expect_a, expect_b, expect_affected) {
        {
            var o = {
                is_affected: false
            };
            var a = gra(ops, e, s, g, o);
            if (JSON.stringify(a) != JSON.stringify(expect_a) || o.is_affected != expect_affected) {
                console.warn("A. " + expr + " get result " + JSON.stringify(a) + ", " + o.is_affected + ", but " + JSON.stringify(expect_a) + ", " + expect_affected + " is expected");
            }
        } {
            var o = {
                is_affected: false
            };
            var a = grb(ops, e, s, g, o);
            if (JSON.stringify(a) != JSON.stringify(expect_b) || o.is_affected != expect_affected) {
                console.warn("B. " + expr + " get result " + JSON.stringify(a) + ", " + o.is_affected + ", but " + JSON.stringify(expect_b) + ", " + expect_affected + " is expected");
            }
        }
    }

    function wfor(to_iter, func, env, _s, global, father, itemname, indexname, keyname) {
        var _n = wh.hn(to_iter) === 'n';
        var scope = wh.rv(_s);
        var has_old_item = scope.hasOwnProperty(itemname);
        var has_old_index = scope.hasOwnProperty(indexname);
        var old_item = scope[itemname];
        var old_index = scope[indexname];
        var full = Object.prototype.toString.call(wh.rv(to_iter));
        var type = full[8];
        if (type === 'N' && full[10] === 'l') type = 'X';
        var _y;
        if (_n) {
            if (type === 'A') {
                var r_iter_item;
                for (var i = 0; i < to_iter.length; i++) {
                    scope[itemname] = to_iter[i];
                    scope[indexname] = _n ? i : wh.nh(i, 'h');
                    r_iter_item = wh.rv(to_iter[i]);
                    var key = keyname && r_iter_item ? (keyname === "*this" ? r_iter_item : wh.rv(r_iter_item[keyname])) : undefined;
                    _y = _v(key);
                    _(father, _y);
                    func(env, scope, _y, global);
                }
            } else if (type === 'O') {
                var i = 0;
                var r_iter_item;
                for (var k in to_iter) {
                    scope[itemname] = to_iter[k];
                    scope[indexname] = _n ? k : wh.nh(k, 'h');
                    r_iter_item = wh.rv(to_iter[k]);
                    var key = keyname && r_iter_item ? (keyname === "*this" ? r_iter_item : wh.rv(r_iter_item[keyname])) : undefined;
                    _y = _v(key);
                    _(father, _y);
                    func(env, scope, _y, global);
                    i++;
                }
            } else if (type === 'S') {
                for (var i = 0; i < to_iter.length; i++) {
                    scope[itemname] = to_iter[i];
                    scope[indexname] = _n ? i : wh.nh(i, 'h');
                    _y = _v(to_iter[i] + i);
                    _(father, _y);
                    func(env, scope, _y, global);
                }
            } else if (type === 'N') {
                for (var i = 0; i < to_iter; i++) {
                    scope[itemname] = i;
                    scope[indexname] = _n ? i : wh.nh(i, 'h');
                    _y = _v(i);
                    _(father, _y);
                    func(env, scope, _y, global);
                }
            } else {}
        } else {
            var r_to_iter = wh.rv(to_iter);
            var r_iter_item, iter_item;
            if (type === 'A') {
                for (var i = 0; i < r_to_iter.length; i++) {
                    iter_item = r_to_iter[i];
                    iter_item = wh.hn(iter_item) === 'n' ? wh.nh(iter_item, 'h') : iter_item;
                    r_iter_item = wh.rv(iter_item);
                    scope[itemname] = iter_item
                    scope[indexname] = _n ? i : wh.nh(i, 'h');
                    var key = keyname && r_iter_item ? (keyname === "*this" ? r_iter_item : wh.rv(r_iter_item[keyname])) : undefined;
                    _y = _v(key);
                    _(father, _y);
                    func(env, scope, _y, global);
                }
            } else if (type === 'O') {
                var i = 0;
                for (var k in r_to_iter) {
                    iter_item = r_to_iter[k];
                    iter_item = wh.hn(iter_item) === 'n' ? wh.nh(iter_item, 'h') : iter_item;
                    r_iter_item = wh.rv(iter_item);
                    scope[itemname] = iter_item;
                    scope[indexname] = _n ? k : wh.nh(k, 'h');
                    var key = keyname && r_iter_item ? (keyname === "*this" ? r_iter_item : wh.rv(r_iter_item[keyname])) : undefined;
                    _y = _v(key);
                    _(father, _y);
                    func(env, scope, _y, global);
                    i++
                }
            } else if (type === 'S') {
                for (var i = 0; i < r_to_iter.length; i++) {
                    iter_item = wh.nh(r_to_iter[i], 'h');
                    scope[itemname] = iter_item;
                    scope[indexname] = _n ? i : wh.nh(i, 'h');
                    _y = _v(to_iter[i] + i);
                    _(father, _y);
                    func(env, scope, _y, global);
                }
            } else if (type === 'N') {
                for (var i = 0; i < r_to_iter; i++) {
                    iter_item = wh.nh(i, 'h');
                    scope[itemname] = iter_item;
                    scope[indexname] = _n ? i : wh.nh(i, 'h');
                    _y = _v(i);
                    _(father, _y);
                    func(env, scope, _y, global);
                }
            } else {}
        }
        if (has_old_item) {
            scope[itemname] = old_item;
        } else {
            delete scope[itemname];
        }
        if (has_old_index) {
            scope[indexname] = old_index;
        } else {
            delete scope[indexname];
        }
    }

    function _ca(o) {
        if (wh.hn(o) == 'h') return true;
        if (typeof o !== "object") return false;
        for (var i in o) {
            if (o.hasOwnProperty(i)) {
                if (_ca(o[i])) return true;
            }
        }
        return false;
    }

    function _da(node, attrname, opindex, raw, o) {
        var isaffected = false;
        var value = $gdc(raw, "", 2);
        if (o.ap && value && value.constructor === Function) {
            attrname = "$wxs:" + attrname;
            node.attr["$gdc"] = $gdc;
        }
        if (o.is_affected || _ca(raw)) {
            node.n.push(attrname);
            node.raw[attrname] = raw;
        }
        node.attr[attrname] = value;
    }

    function _r(node, attrname, opindex, env, scope, global) {
        global.opindex = opindex;
        var o = {},
            _env;
        var a = grb(z[opindex], env, scope, global, o);
        _da(node, attrname, opindex, a, o);
    }

    function _rz(z, node, attrname, opindex, env, scope, global) {
        global.opindex = opindex;
        var o = {},
            _env;
        var a = grb(z[opindex], env, scope, global, o);
        _da(node, attrname, opindex, a, o);
    }

    function _o(opindex, env, scope, global) {
        global.opindex = opindex;
        var nothing = {};
        var r = grb(z[opindex], env, scope, global, nothing);
        return (r && r.constructor === Function) ? undefined : r;
    }

    function _oz(z, opindex, env, scope, global) {
        global.opindex = opindex;
        var nothing = {};
        var r = grb(z[opindex], env, scope, global, nothing);
        return (r && r.constructor === Function) ? undefined : r;
    }

    function _1(opindex, env, scope, global, o) {
        var o = o || {};
        global.opindex = opindex;
        return gra(z[opindex], env, scope, global, o);
    }

    function _1z(z, opindex, env, scope, global, o) {
        var o = o || {};
        global.opindex = opindex;
        return gra(z[opindex], env, scope, global, o);
    }

    function _2(opindex, func, env, scope, global, father, itemname, indexname, keyname) {
        var o = {};
        var to_iter = _1(opindex, env, scope, global);
        wfor(to_iter, func, env, scope, global, father, itemname, indexname, keyname);
    }

    function _2z(z, opindex, func, env, scope, global, father, itemname, indexname, keyname) {
        var o = {};
        var to_iter = _1z(z, opindex, env, scope, global);
        wfor(to_iter, func, env, scope, global, father, itemname, indexname, keyname);
    }


    function _m(tag, attrs, generics, env, scope, global) {
        var tmp = _n(tag);
        var base = 0;
        for (var i = 0; i < attrs.length; i += 2) {
            if (base + attrs[i + 1] < 0) {
                tmp.attr[attrs[i]] = true;
            } else {
                _r(tmp, attrs[i], base + attrs[i + 1], env, scope, global);
                if (base === 0) base = attrs[i + 1];
            }
        }
        for (var i = 0; i < generics.length; i += 2) {
            if (base + generics[i + 1] < 0) {
                tmp.generics[generics[i]] = "";
            } else {
                var $t = grb(z[base + generics[i + 1]], env, scope, global);
                if ($t != "") $t = "wx-" + $t;
                tmp.generics[generics[i]] = $t;
                if (base === 0) base = generics[i + 1];
            }
        }
        return tmp;
    }

    function _mz(z, tag, attrs, generics, env, scope, global) {
        var tmp = _n(tag);
        var base = 0;
        for (var i = 0; i < attrs.length; i += 2) {
            if (base + attrs[i + 1] < 0) {
                tmp.attr[attrs[i]] = true;
            } else {
                _rz(z, tmp, attrs[i], base + attrs[i + 1], env, scope, global);
                if (base === 0) base = attrs[i + 1];
            }
        }
        for (var i = 0; i < generics.length; i += 2) {
            if (base + generics[i + 1] < 0) {
                tmp.generics[generics[i]] = "";
            } else {
                var $t = grb(z[base + generics[i + 1]], env, scope, global);
                if ($t != "") $t = "wx-" + $t;
                tmp.generics[generics[i]] = $t;
                if (base === 0) base = generics[i + 1];
            }
        }
        return tmp;
    }

    var nf_init = function() {
        if (typeof __WXML_GLOBAL__ === "undefined" || undefined === __WXML_GLOBAL__.wxs_nf_init) {
            nf_init_Object();
            nf_init_Function();
            nf_init_Array();
            nf_init_String();
            nf_init_Boolean();
            nf_init_Number();
            nf_init_Math();
            nf_init_Date();
            nf_init_RegExp();
        }
        if (typeof __WXML_GLOBAL__ !== "undefined") __WXML_GLOBAL__.wxs_nf_init = true;
    };
    var nf_init_Object = function() {
        Object.defineProperty(Object.prototype, "nv_constructor", {
            writable: true,
            value: "Object"
        })
        Object.defineProperty(Object.prototype, "nv_toString", {
            writable: true,
            value: function() {
                return "[object Object]"
            }
        })
    }
    var nf_init_Function = function() {
        Object.defineProperty(Function.prototype, "nv_constructor", {
            writable: true,
            value: "Function"
        })
        Object.defineProperty(Function.prototype, "nv_length", {get: function() {
                return this.length;
            },
            set: function() {}
        });
        Object.defineProperty(Function.prototype, "nv_toString", {
            writable: true,
            value: function() {
                return "[function Function]"
            }
        })
    }
    var nf_init_Array = function() {
        Object.defineProperty(Array.prototype, "nv_toString", {
            writable: true,
            value: function() {
                return this.nv_join();
            }
        })
        Object.defineProperty(Array.prototype, "nv_join", {
            writable: true,
            value: function(s) {
                s = undefined == s ? ',' : s;
                var r = "";
                for (var i = 0; i < this.length; ++i) {
                    if (0 != i) r += s;
                    if (null == this[i] || undefined == this[i]) r += '';
                    else if (typeof this[i] == 'function') r += this[i].nv_toString();
                    else if (typeof this[i] == 'object' && this[i].nv_constructor === "Array") r += this[i].nv_join();
                    else r += this[i].toString();
                }
                return r;
            }
        })
        Object.defineProperty(Array.prototype, "nv_constructor", {
            writable: true,
            value: "Array"
        })
        Object.defineProperty(Array.prototype, "nv_concat", {
            writable: true,
            value: Array.prototype.concat
        })
        Object.defineProperty(Array.prototype, "nv_pop", {
            writable: true,
            value: Array.prototype.pop
        })
        Object.defineProperty(Array.prototype, "nv_push", {
            writable: true,
            value: Array.prototype.push
        })
        Object.defineProperty(Array.prototype, "nv_reverse", {
            writable: true,
            value: Array.prototype.reverse
        })
        Object.defineProperty(Array.prototype, "nv_shift", {
            writable: true,
            value: Array.prototype.shift
        })
        Object.defineProperty(Array.prototype, "nv_slice", {
            writable: true,
            value: Array.prototype.slice
        })
        Object.defineProperty(Array.prototype, "nv_sort", {
            writable: true,
            value: Array.prototype.sort
        })
        Object.defineProperty(Array.prototype, "nv_splice", {
            writable: true,
            value: Array.prototype.splice
        })
        Object.defineProperty(Array.prototype, "nv_unshift", {
            writable: true,
            value: Array.prototype.unshift
        })
        Object.defineProperty(Array.prototype, "nv_indexOf", {
            writable: true,
            value: Array.prototype.indexOf
        })
        Object.defineProperty(Array.prototype, "nv_lastIndexOf", {
            writable: true,
            value: Array.prototype.lastIndexOf
        })
        Object.defineProperty(Array.prototype, "nv_every", {
            writable: true,
            value: Array.prototype.every
        })
        Object.defineProperty(Array.prototype, "nv_some", {
            writable: true,
            value: Array.prototype.some
        })
        Object.defineProperty(Array.prototype, "nv_forEach", {
            writable: true,
            value: Array.prototype.forEach
        })
        Object.defineProperty(Array.prototype, "nv_map", {
            writable: true,
            value: Array.prototype.map
        })
        Object.defineProperty(Array.prototype, "nv_filter", {
            writable: true,
            value: Array.prototype.filter
        })
        Object.defineProperty(Array.prototype, "nv_reduce", {
            writable: true,
            value: Array.prototype.reduce
        })
        Object.defineProperty(Array.prototype, "nv_reduceRight", {
            writable: true,
            value: Array.prototype.reduceRight
        })
        Object.defineProperty(Array.prototype, "nv_length", {get: function() {
                return this.length;
            },
            set: function(value) {
                this.length = value;
            }
        });
    }
    var nf_init_String = function() {
        Object.defineProperty(String.prototype, "nv_constructor", {
            writable: true,
            value: "String"
        })
        Object.defineProperty(String.prototype, "nv_toString", {
            writable: true,
            value: String.prototype.toString
        })
        Object.defineProperty(String.prototype, "nv_valueOf", {
            writable: true,
            value: String.prototype.valueOf
        })
        Object.defineProperty(String.prototype, "nv_charAt", {
            writable: true,
            value: String.prototype.charAt
        })
        Object.defineProperty(String.prototype, "nv_charCodeAt", {
            writable: true,
            value: String.prototype.charCodeAt
        })
        Object.defineProperty(String.prototype, "nv_concat", {
            writable: true,
            value: String.prototype.concat
        })
        Object.defineProperty(String.prototype, "nv_indexOf", {
            writable: true,
            value: String.prototype.indexOf
        })
        Object.defineProperty(String.prototype, "nv_lastIndexOf", {
            writable: true,
            value: String.prototype.lastIndexOf
        })
        Object.defineProperty(String.prototype, "nv_localeCompare", {
            writable: true,
            value: String.prototype.localeCompare
        })
        Object.defineProperty(String.prototype, "nv_match", {
            writable: true,
            value: String.prototype.match
        })
        Object.defineProperty(String.prototype, "nv_replace", {
            writable: true,
            value: String.prototype.replace
        })
        Object.defineProperty(String.prototype, "nv_search", {
            writable: true,
            value: String.prototype.search
        })
        Object.defineProperty(String.prototype, "nv_slice", {
            writable: true,
            value: String.prototype.slice
        })
        Object.defineProperty(String.prototype, "nv_split", {
            writable: true,
            value: String.prototype.split
        })
        Object.defineProperty(String.prototype, "nv_substring", {
            writable: true,
            value: String.prototype.substring
        })
        Object.defineProperty(String.prototype, "nv_toLowerCase", {
            writable: true,
            value: String.prototype.toLowerCase
        })
        Object.defineProperty(String.prototype, "nv_toLocaleLowerCase", {
            writable: true,
            value: String.prototype.toLocaleLowerCase
        })
        Object.defineProperty(String.prototype, "nv_toUpperCase", {
            writable: true,
            value: String.prototype.toUpperCase
        })
        Object.defineProperty(String.prototype, "nv_toLocaleUpperCase", {
            writable: true,
            value: String.prototype.toLocaleUpperCase
        })
        Object.defineProperty(String.prototype, "nv_trim", {
            writable: true,
            value: String.prototype.trim
        })
        Object.defineProperty(String.prototype, "nv_length", {get: function() {
                return this.length;
            },
            set: function(value) {
                this.length = value;
            }
        });
    }
    var nf_init_Boolean = function() {
        Object.defineProperty(Boolean.prototype, "nv_constructor", {
            writable: true,
            value: "Boolean"
        })
        Object.defineProperty(Boolean.prototype, "nv_toString", {
            writable: true,
            value: Boolean.prototype.toString
        })
        Object.defineProperty(Boolean.prototype, "nv_valueOf", {
            writable: true,
            value: Boolean.prototype.valueOf
        })
    }
    var nf_init_Number = function() {
        Object.defineProperty(Number, "nv_MAX_VALUE", {
            writable: false,
            value: Number.MAX_VALUE
        })
        Object.defineProperty(Number, "nv_MIN_VALUE", {
            writable: false,
            value: Number.MIN_VALUE
        })
        Object.defineProperty(Number, "nv_NEGATIVE_INFINITY", {
            writable: false,
            value: Number.NEGATIVE_INFINITY
        })
        Object.defineProperty(Number, "nv_POSITIVE_INFINITY", {
            writable: false,
            value: Number.POSITIVE_INFINITY
        })
        Object.defineProperty(Number.prototype, "nv_constructor", {
            writable: true,
            value: "Number"
        })
        Object.defineProperty(Number.prototype, "nv_toString", {
            writable: true,
            value: Number.prototype.toString
        })
        Object.defineProperty(Number.prototype, "nv_toLocaleString", {
            writable: true,
            value: Number.prototype.toLocaleString
        })
        Object.defineProperty(Number.prototype, "nv_valueOf", {
            writable: true,
            value: Number.prototype.valueOf
        })
        Object.defineProperty(Number.prototype, "nv_toFixed", {
            writable: true,
            value: Number.prototype.toFixed
        })
        Object.defineProperty(Number.prototype, "nv_toExponential", {
            writable: true,
            value: Number.prototype.toExponential
        })
        Object.defineProperty(Number.prototype, "nv_toPrecision", {
            writable: true,
            value: Number.prototype.toPrecision
        })
    }
    var nf_init_Math = function() {
        Object.defineProperty(Math, "nv_E", {
            writable: false,
            value: Math.E
        })
        Object.defineProperty(Math, "nv_LN10", {
            writable: false,
            value: Math.LN10
        })
        Object.defineProperty(Math, "nv_LN2", {
            writable: false,
            value: Math.LN2
        })
        Object.defineProperty(Math, "nv_LOG2E", {
            writable: false,
            value: Math.LOG2E
        })
        Object.defineProperty(Math, "nv_LOG10E", {
            writable: false,
            value: Math.LOG10E
        })
        Object.defineProperty(Math, "nv_PI", {
            writable: false,
            value: Math.PI
        })
        Object.defineProperty(Math, "nv_SQRT1_2", {
            writable: false,
            value: Math.SQRT1_2
        })
        Object.defineProperty(Math, "nv_SQRT2", {
            writable: false,
            value: Math.SQRT2
        })
        Object.defineProperty(Math, "nv_abs", {
            writable: false,
            value: Math.abs
        })
        Object.defineProperty(Math, "nv_acos", {
            writable: false,
            value: Math.acos
        })
        Object.defineProperty(Math, "nv_asin", {
            writable: false,
            value: Math.asin
        })
        Object.defineProperty(Math, "nv_atan", {
            writable: false,
            value: Math.atan
        })
        Object.defineProperty(Math, "nv_atan2", {
            writable: false,
            value: Math.atan2
        })
        Object.defineProperty(Math, "nv_ceil", {
            writable: false,
            value: Math.ceil
        })
        Object.defineProperty(Math, "nv_cos", {
            writable: false,
            value: Math.cos
        })
        Object.defineProperty(Math, "nv_exp", {
            writable: false,
            value: Math.exp
        })
        Object.defineProperty(Math, "nv_floor", {
            writable: false,
            value: Math.floor
        })
        Object.defineProperty(Math, "nv_log", {
            writable: false,
            value: Math.log
        })
        Object.defineProperty(Math, "nv_max", {
            writable: false,
            value: Math.max
        })
        Object.defineProperty(Math, "nv_min", {
            writable: false,
            value: Math.min
        })
        Object.defineProperty(Math, "nv_pow", {
            writable: false,
            value: Math.pow
        })
        Object.defineProperty(Math, "nv_random", {
            writable: false,
            value: Math.random
        })
        Object.defineProperty(Math, "nv_round", {
            writable: false,
            value: Math.round
        })
        Object.defineProperty(Math, "nv_sin", {
            writable: false,
            value: Math.sin
        })
        Object.defineProperty(Math, "nv_sqrt", {
            writable: false,
            value: Math.sqrt
        })
        Object.defineProperty(Math, "nv_tan", {
            writable: false,
            value: Math.tan
        })
    }
    var nf_init_Date = function() {
        Object.defineProperty(Date.prototype, "nv_constructor", {
            writable: true,
            value: "Date"
        })
        Object.defineProperty(Date, "nv_parse", {
            writable: true,
            value: Date.parse
        })
        Object.defineProperty(Date, "nv_UTC", {
            writable: true,
            value: Date.UTC
        })
        Object.defineProperty(Date, "nv_now", {
            writable: true,
            value: Date.now
        })
        Object.defineProperty(Date.prototype, "nv_toString", {
            writable: true,
            value: Date.prototype.toString
        })
        Object.defineProperty(Date.prototype, "nv_toDateString", {
            writable: true,
            value: Date.prototype.toDateString
        })
        Object.defineProperty(Date.prototype, "nv_toTimeString", {
            writable: true,
            value: Date.prototype.toTimeString
        })
        Object.defineProperty(Date.prototype, "nv_toLocaleString", {
            writable: true,
            value: Date.prototype.toLocaleString
        })
        Object.defineProperty(Date.prototype, "nv_toLocaleDateString", {
            writable: true,
            value: Date.prototype.toLocaleDateString
        })
        Object.defineProperty(Date.prototype, "nv_toLocaleTimeString", {
            writable: true,
            value: Date.prototype.toLocaleTimeString
        })
        Object.defineProperty(Date.prototype, "nv_valueOf", {
            writable: true,
            value: Date.prototype.valueOf
        })
        Object.defineProperty(Date.prototype, "nv_getTime", {
            writable: true,
            value: Date.prototype.getTime
        })
        Object.defineProperty(Date.prototype, "nv_getFullYear", {
            writable: true,
            value: Date.prototype.getFullYear
        })
        Object.defineProperty(Date.prototype, "nv_getUTCFullYear", {
            writable: true,
            value: Date.prototype.getUTCFullYear
        })
        Object.defineProperty(Date.prototype, "nv_getMonth", {
            writable: true,
            value: Date.prototype.getMonth
        })
        Object.defineProperty(Date.prototype, "nv_getUTCMonth", {
            writable: true,
            value: Date.prototype.getUTCMonth
        })
        Object.defineProperty(Date.prototype, "nv_getDate", {
            writable: true,
            value: Date.prototype.getDate
        })
        Object.defineProperty(Date.prototype, "nv_getUTCDate", {
            writable: true,
            value: Date.prototype.getUTCDate
        })
        Object.defineProperty(Date.prototype, "nv_getDay", {
            writable: true,
            value: Date.prototype.getDay
        })
        Object.defineProperty(Date.prototype, "nv_getUTCDay", {
            writable: true,
            value: Date.prototype.getUTCDay
        })
        Object.defineProperty(Date.prototype, "nv_getHours", {
            writable: true,
            value: Date.prototype.getHours
        })
        Object.defineProperty(Date.prototype, "nv_getUTCHours", {
            writable: true,
            value: Date.prototype.getUTCHours
        })
        Object.defineProperty(Date.prototype, "nv_getMinutes", {
            writable: true,
            value: Date.prototype.getMinutes
        })
        Object.defineProperty(Date.prototype, "nv_getUTCMinutes", {
            writable: true,
            value: Date.prototype.getUTCMinutes
        })
        Object.defineProperty(Date.prototype, "nv_getSeconds", {
            writable: true,
            value: Date.prototype.getSeconds
        })
        Object.defineProperty(Date.prototype, "nv_getUTCSeconds", {
            writable: true,
            value: Date.prototype.getUTCSeconds
        })
        Object.defineProperty(Date.prototype, "nv_getMilliseconds", {
            writable: true,
            value: Date.prototype.getMilliseconds
        })
        Object.defineProperty(Date.prototype, "nv_getUTCMilliseconds", {
            writable: true,
            value: Date.prototype.getUTCMilliseconds
        })
        Object.defineProperty(Date.prototype, "nv_getTimezoneOffset", {
            writable: true,
            value: Date.prototype.getTimezoneOffset
        })
        Object.defineProperty(Date.prototype, "nv_setTime", {
            writable: true,
            value: Date.prototype.setTime
        })
        Object.defineProperty(Date.prototype, "nv_setMilliseconds", {
            writable: true,
            value: Date.prototype.setMilliseconds
        })
        Object.defineProperty(Date.prototype, "nv_setUTCMilliseconds", {
            writable: true,
            value: Date.prototype.setUTCMilliseconds
        })
        Object.defineProperty(Date.prototype, "nv_setSeconds", {
            writable: true,
            value: Date.prototype.setSeconds
        })
        Object.defineProperty(Date.prototype, "nv_setUTCSeconds", {
            writable: true,
            value: Date.prototype.setUTCSeconds
        })
        Object.defineProperty(Date.prototype, "nv_setMinutes", {
            writable: true,
            value: Date.prototype.setMinutes
        })
        Object.defineProperty(Date.prototype, "nv_setUTCMinutes", {
            writable: true,
            value: Date.prototype.setUTCMinutes
        })
        Object.defineProperty(Date.prototype, "nv_setHours", {
            writable: true,
            value: Date.prototype.setHours
        })
        Object.defineProperty(Date.prototype, "nv_setUTCHours", {
            writable: true,
            value: Date.prototype.setUTCHours
        })
        Object.defineProperty(Date.prototype, "nv_setDate", {
            writable: true,
            value: Date.prototype.setDate
        })
        Object.defineProperty(Date.prototype, "nv_setUTCDate", {
            writable: true,
            value: Date.prototype.setUTCDate
        })
        Object.defineProperty(Date.prototype, "nv_setMonth", {
            writable: true,
            value: Date.prototype.setMonth
        })
        Object.defineProperty(Date.prototype, "nv_setUTCMonth", {
            writable: true,
            value: Date.prototype.setUTCMonth
        })
        Object.defineProperty(Date.prototype, "nv_setFullYear", {
            writable: true,
            value: Date.prototype.setFullYear
        })
        Object.defineProperty(Date.prototype, "nv_setUTCFullYear", {
            writable: true,
            value: Date.prototype.setUTCFullYear
        })
        Object.defineProperty(Date.prototype, "nv_toUTCString", {
            writable: true,
            value: Date.prototype.toUTCString
        })
        Object.defineProperty(Date.prototype, "nv_toISOString", {
            writable: true,
            value: Date.prototype.toISOString
        })
        Object.defineProperty(Date.prototype, "nv_toJSON", {
            writable: true,
            value: Date.prototype.toJSON
        })
    }
    var nf_init_RegExp = function() {
        Object.defineProperty(RegExp.prototype, "nv_constructor", {
            writable: true,
            value: "RegExp"
        })
        Object.defineProperty(RegExp.prototype, "nv_exec", {
            writable: true,
            value: RegExp.prototype.exec
        })
        Object.defineProperty(RegExp.prototype, "nv_test", {
            writable: true,
            value: RegExp.prototype.test
        })
        Object.defineProperty(RegExp.prototype, "nv_toString", {
            writable: true,
            value: RegExp.prototype.toString
        })
        Object.defineProperty(RegExp.prototype, "nv_source", {get: function() {
                return this.source;
            },
            set: function() {}
        });
        Object.defineProperty(RegExp.prototype, "nv_global", {get: function() {
                return this.global;
            },
            set: function() {}
        });
        Object.defineProperty(RegExp.prototype, "nv_ignoreCase", {get: function() {
                return this.ignoreCase;
            },
            set: function() {}
        });
        Object.defineProperty(RegExp.prototype, "nv_multiline", {get: function() {
                return this.multiline;
            },
            set: function() {}
        });
        Object.defineProperty(RegExp.prototype, "nv_lastIndex", {get: function() {
                return this.lastIndex;
            },
            set: function(v) {
                this.lastIndex = v;
            }
        });
    }
    nf_init();
    var nv_getDate = function() {
        var args = Array.prototype.slice.call(arguments);
        args.unshift(Date);
        return new(Function.prototype.bind.apply(Date, args));
    }
    var nv_getRegExp = function() {
        var args = Array.prototype.slice.call(arguments);
        args.unshift(RegExp);
        return new(Function.prototype.bind.apply(RegExp, args));
    }
    var nv_console = {}
    nv_console.nv_log = function() {
        var res = "WXSRT:";
        for (var i = 0; i < arguments.length; ++i) res += arguments[i] + " ";
        console.log(res);
    }
    var nv_parseInt = parseInt,
        nv_parseFloat = parseFloat,
        nv_isNaN = isNaN,
        nv_isFinite = isFinite,
        nv_decodeURI = decodeURI,
        nv_decodeURIComponent = decodeURIComponent,
        nv_encodeURI = encodeURI,
        nv_encodeURIComponent = encodeURIComponent;

    function $gdc(o, p, r) {
        o = wh.rv(o);
        if (o === null || o === undefined) return o;
        if (typeof o === "string" || typeof o === "boolean" || typeof o === "number") return o;
        if (o.constructor === Object) {
            var copy = {};
            for (var k in o)
                if (Object.prototype.hasOwnProperty.call(o, k))
                    if (undefined === p) copy[k.substring(3)] = $gdc(o[k], p, r);
                    else copy[p + k] = $gdc(o[k], p, r);
            return copy;
        }
        if (o.constructor === Array) {
            var copy = [];
            for (var i = 0; i < o.length; i++) copy.push($gdc(o[i], p, r));
            return copy;
        }
        if (o.constructor === Date) {
            var copy = new Date();
            copy.setTime(o.getTime());
            return copy;
        }
        if (o.constructor === RegExp) {
            var f = "";
            if (o.global) f += "g";
            if (o.ignoreCase) f += "i";
            if (o.multiline) f += "m";
            return (new RegExp(o.source, f));
        }
        if (r && typeof o === "function") {
            if (r == 1) return $gdc(o(), undefined, 2);
            if (r == 2) return o;
        }
        return null;
    }
    var nv_JSON = {}
    nv_JSON.nv_stringify = function(o) {
        JSON.stringify(o);
        return JSON.stringify($gdc(o));
    }
    nv_JSON.nv_parse = function(o) {
        if (o === undefined) return undefined;
        var t = JSON.parse(o);
        return $gdc(t, 'nv_');
    }

    function _af(p, a, r, c) {
        p.extraAttr = {
            "t_action": a,
            "t_rawid": r
        };
        if (typeof(c) != 'undefined') p.extraAttr.t_cid = c;
    }

    function _ai(i, p, e, me, r, c) {
        var x = _grp(p, e, me);
        if (x) i.push(x);
        else {
            i.push('');
            _wp(me + ':import:' + r + ':' + c + ': Path `' + p + '` not found from `' + me + '`.')
        }
    }

    function _grp(p, e, me) {
        if (p[0] != '/') {
            var mepart = me.split('/');
            mepart.pop();
            var ppart = p.split('/');
            for (var i = 0; i < ppart.length; i++) {
                if (ppart[i] == '..') mepart.pop();
                else if (!ppart[i] || ppart[i] == '.') continue;
                else mepart.push(ppart[i]);
            }
            p = mepart.join('/');
        }
        if (me[0] == '.' && p[0] == '/') p = '.' + p;
        if (e[p]) return p;
        if (e[p + '.wxml']) return p + '.wxml';
    }

    function _gd(p, c, e, d) {
        if (!c) return;
        if (d[p][c]) return d[p][c];
        for (var x = e[p].i.length - 1; x >= 0; x--) {
            if (e[p].i[x] && d[e[p].i[x]][c]) return d[e[p].i[x]][c]
        };
        for (var x = e[p].ti.length - 1; x >= 0; x--) {
            var q = _grp(e[p].ti[x], e, p);
            if (q && d[q][c]) return d[q][c]
        }
        var ii = _gapi(e, p);
        for (var x = 0; x < ii.length; x++) {
            if (ii[x] && d[ii[x]][c]) return d[ii[x]][c]
        }
        for (var k = e[p].j.length - 1; k >= 0; k--)
            if (e[p].j[k]) {
                for (var q = e[e[p].j[k]].ti.length - 1; q >= 0; q--) {
                    var pp = _grp(e[e[p].j[k]].ti[q], e, p);
                    if (pp && d[pp][c]) {
                        return d[pp][c]
                    }
                }
            }
    }

    function _gapi(e, p) {
        if (!p) return [];
        if ($gaic[p]) {
            return $gaic[p]
        };
        var ret = [],
            q = [],
            h = 0,
            t = 0,
            put = {},
            visited = {};
        q.push(p);
        visited[p] = true;
        t++;
        while (h < t) {
            var a = q[h++];
            for (var i = 0; i < e[a].ic.length; i++) {
                var nd = e[a].ic[i];
                var np = _grp(nd, e, a);
                if (np && !visited[np]) {
                    visited[np] = true;
                    q.push(np);
                    t++;
                }
            }
            for (var i = 0; a != p && i < e[a].ti.length; i++) {
                var ni = e[a].ti[i];
                var nm = _grp(ni, e, a);
                if (nm && !put[nm]) {
                    put[nm] = true;
                    ret.push(nm);
                }
            }
        }
        $gaic[p] = ret;
        return ret;
    }
    var $ixc = {};

    function _ic(p, ent, me, e, s, r, gg) {
        var x = _grp(p, ent, me);
        ent[me].j.push(x);
        if (x) {
            if ($ixc[x]) {
                _wp('-1:include:-1:-1: `' + p + '` is being included in a loop, will be stop.');
                return;
            }
            $ixc[x] = true;
            try {
                ent[x].f(e, s, r, gg)
            } catch (e) {}
            $ixc[x] = false;
        } else {
            _wp(me + ':include:-1:-1: Included path `' + p + '` not found from `' + me + '`.')
        }
    }

    function _w(tn, f, line, c) {
        _wp(f + ':template:' + line + ':' + c + ': Template `' + tn + '` not found.');
    }

    function _ev(dom) {
        var changed = false;
        delete dom.properities;
        delete dom.n;
        if (dom.children) {
            do {
                changed = false;
                var newch = [];
                for (var i = 0; i < dom.children.length; i++) {
                    var ch = dom.children[i];
                    if (ch.tag == 'virtual') {
                        changed = true;
                        for (var j = 0; ch.children && j < ch.children.length; j++) {
                            newch.push(ch.children[j]);
                        }
                    } else {
                        newch.push(ch);
                    }
                }
                dom.children = newch;
            } while (changed);
            for (var i = 0; i < dom.children.length; i++) {
                _ev(dom.children[i]);
            }
        }
        return dom;
    }

    function _tsd(root) {
        if (root.tag == "wx-wx-scope") {
            root.tag = "virtual";
            root.wxCkey = "11";
            root['wxScopeData'] = root.attr['wx:scope-data'];
            delete root.n;
            delete root.raw;
            delete root.generics;
            delete root.attr;
        }
        for (var i = 0; root.children && i < root.children.length; i++) {
            _tsd(root.children[i]);
        }
        return root;
    }

    var e_ = {}
    if (typeof(global.entrys) === 'undefined') global.entrys = {};
    e_ = global.entrys;
    var d_ = {}
    if (typeof(global.defines) === 'undefined') global.defines = {};
    d_ = global.defines;
    var f_ = {}
    if (typeof(global.modules) === 'undefined') global.modules = {};
    f_ = global.modules || {};
    var p_ = {}
    __WXML_GLOBAL__.ops_cached = __WXML_GLOBAL__.ops_cached || {}
    __WXML_GLOBAL__.ops_set = __WXML_GLOBAL__.ops_set || {};
    __WXML_GLOBAL__.ops_init = __WXML_GLOBAL__.ops_init || {};
    var z = __WXML_GLOBAL__.ops_set.$gwx || [];

    function gz$gwx_1() {
        if (__WXML_GLOBAL__.ops_cached.$gwx_1) return __WXML_GLOBAL__.ops_cached.$gwx_1
        __WXML_GLOBAL__.ops_cached.$gwx_1 = [];
        (function(z) {
            var a = 11;

            function Z(ops) {
                z.push(ops)
            }
            Z([
                [7],
                [3, 'visible']
            ])
            Z([3, '_handleCoverViewTap'])
            Z([3, 'native-msg-cover-layer'])
            Z([a, [3, 'native-msg-container '],
                [
                    [2, '?:'],
                    [
                        [2, '!'],
                        [
                            [2, '!'],
                            [
                                [7],
                                [3, 'title']
                            ]
                        ]
                    ],
                    [1, 'has-title-bar'],
                    [1, '']
                ],
                [3, ' '],
                [
                    [7],
                    [3, 'className']
                ]
            ])
            Z([a, [3, 'main-content '],
                [
                    [2, '||'],
                    [
                        [7],
                        [3, 'mainContentClassName']
                    ],
                    [1, '']
                ]
            ])
            Z([
                [2, '!'],
                [
                    [2, '!'],
                    [
                        [7],
                        [3, 'title']
                    ]
                ]
            ])
            Z(z[5])
            Z([
                [2, '!'],
                [
                    [2, '!'],
                    [
                        [7],
                        [3, 'content']
                    ]
                ]
            ])
            Z([
                [2, '!=='],
                [
                    [7],
                    [3, 'buttonStyle']
                ],
                [1, 'solid']
            ])
            Z([
                [7],
                [3, 'okBtn']
            ])
            Z(z[8])
        })(__WXML_GLOBAL__.ops_cached.$gwx_1);
        return __WXML_GLOBAL__.ops_cached.$gwx_1
    }

    function gz$gwx_2() {
        if (__WXML_GLOBAL__.ops_cached.$gwx_2) return __WXML_GLOBAL__.ops_cached.$gwx_2
        __WXML_GLOBAL__.ops_cached.$gwx_2 = [];
        (function(z) {
            var a = 11;

            function Z(ops) {
                z.push(ops)
            }
        })(__WXML_GLOBAL__.ops_cached.$gwx_2);
        return __WXML_GLOBAL__.ops_cached.$gwx_2
    }

    function gz$gwx_3() {
        if (__WXML_GLOBAL__.ops_cached.$gwx_3) return __WXML_GLOBAL__.ops_cached.$gwx_3
        __WXML_GLOBAL__.ops_cached.$gwx_3 = [];
        (function(z) {
            var a = 11;

            function Z(ops) {
                z.push(ops)
            }
            Z([
                [7],
                [3, 'visible']
            ])
            Z([3, 'onCoverTaped'])
            Z([3, 'fullpage-message-box-view'])
            Z([
                [7],
                [3, 'showButton']
            ])
        })(__WXML_GLOBAL__.ops_cached.$gwx_3);
        return __WXML_GLOBAL__.ops_cached.$gwx_3
    }

    function gz$gwx_4() {
        if (__WXML_GLOBAL__.ops_cached.$gwx_4) return __WXML_GLOBAL__.ops_cached.$gwx_4
        __WXML_GLOBAL__.ops_cached.$gwx_4 = [];
        (function(z) {
            var a = 11;

            function Z(ops) {
                z.push(ops)
            }
            Z([
                [7],
                [3, 'show']
            ])
            Z([a, [3, 'slider-box '],
                [
                    [2, '?:'],
                    [
                        [7],
                        [3, 'show']
                    ],
                    [1, 'show'],
                    [1, '']
                ]
            ])
            Z([3, 'top'])
            Z(z[2])
            Z([3, 'center'])
            Z(z[4])
            Z([3, 'bottom'])
            Z(z[6])
        })(__WXML_GLOBAL__.ops_cached.$gwx_4);
        return __WXML_GLOBAL__.ops_cached.$gwx_4
    }

    function gz$gwx_5() {
        if (__WXML_GLOBAL__.ops_cached.$gwx_5) return __WXML_GLOBAL__.ops_cached.$gwx_5
        __WXML_GLOBAL__.ops_cached.$gwx_5 = [];
        (function(z) {
            var a = 11;

            function Z(ops) {
                z.push(ops)
            }
            Z([
                [7],
                [3, 'visible']
            ])
            Z([3, 'onMaskTapped'])
            Z([3, 'mask-area'])
            Z([3, 'content'])
        })(__WXML_GLOBAL__.ops_cached.$gwx_5);
        return __WXML_GLOBAL__.ops_cached.$gwx_5
    }

    function gz$gwx_6() {
        if (__WXML_GLOBAL__.ops_cached.$gwx_6) return __WXML_GLOBAL__.ops_cached.$gwx_6
        __WXML_GLOBAL__.ops_cached.$gwx_6 = [];
        (function(z) {
            var a = 11;

            function Z(ops) {
                z.push(ops)
            }
            Z([
                [7],
                [3, 'visible']
            ])
            Z([3, '_handleCoverViewTap'])
            Z([3, 'native-msg-cover-layer'])
            Z([a, [3, 'native-msg-container '],
                [
                    [2, '?:'],
                    [
                        [2, '||'],
                        [
                            [2, '!'],
                            [
                                [2, '!'],
                                [
                                    [7],
                                    [3, 'closable']
                                ]
                            ]
                        ],
                        [
                            [2, '!'],
                            [
                                [2, '!'],
                                [
                                    [7],
                                    [3, 'title']
                                ]
                            ]
                        ]
                    ],
                    [1, 'has-title-bar'],
                    [1, '']
                ],
                [3, ' '],
                [
                    [7],
                    [3, 'className']
                ]
            ])
            Z([a, [3, 'main-content '],
                [
                    [2, '||'],
                    [
                        [7],
                        [3, 'mainContentClassName']
                    ],
                    [1, '']
                ]
            ])
            Z([
                [2, '||'],
                [
                    [2, '!'],
                    [
                        [2, '!'],
                        [
                            [7],
                            [3, 'closable']
                        ]
                    ]
                ],
                [
                    [2, '!'],
                    [
                        [2, '!'],
                        [
                            [7],
                            [3, 'title']
                        ]
                    ]
                ]
            ])
            Z([
                [2, '!'],
                [
                    [2, '!'],
                    [
                        [7],
                        [3, 'title']
                    ]
                ]
            ])
            Z([
                [2, '!'],
                [
                    [2, '!'],
                    [
                        [7],
                        [3, 'content']
                    ]
                ]
            ])
            Z([
                [2, '>'],
                [
                    [6],
                    [
                        [7],
                        [3, 'contentArr']
                    ],
                    [3, 'length']
                ],
                [1, 0]
            ])
            Z([
                [2, '!=='],
                [
                    [7],
                    [3, 'buttonStyle']
                ],
                [1, 'solid']
            ])
            Z([a, [3, 'button-container '],
                [
                    [2, '?:'],
                    [
                        [2, '==='],
                        [
                            [7],
                            [3, 'buttonStyle']
                        ],
                        [1, 'solid']
                    ],
                    [1, 'solid'],
                    [1, '']
                ]
            ])
            Z([
                [7],
                [3, 'cancelBtn']
            ])
            Z(z[9])
            Z([
                [7],
                [3, 'okBtn']
            ])
            Z(z[9])
            Z([
                [2, '!'],
                [
                    [2, '!'],
                    [
                        [7],
                        [3, 'closable']
                    ]
                ]
            ])
        })(__WXML_GLOBAL__.ops_cached.$gwx_6);
        return __WXML_GLOBAL__.ops_cached.$gwx_6
    }

    function gz$gwx_7() {
        if (__WXML_GLOBAL__.ops_cached.$gwx_7) return __WXML_GLOBAL__.ops_cached.$gwx_7
        __WXML_GLOBAL__.ops_cached.$gwx_7 = [];
        (function(z) {
            var a = 11;

            function Z(ops) {
                z.push(ops)
            }
        })(__WXML_GLOBAL__.ops_cached.$gwx_7);
        return __WXML_GLOBAL__.ops_cached.$gwx_7
    }

    function gz$gwx_8() {
        if (__WXML_GLOBAL__.ops_cached.$gwx_8) return __WXML_GLOBAL__.ops_cached.$gwx_8
        __WXML_GLOBAL__.ops_cached.$gwx_8 = [];
        (function(z) {
            var a = 11;

            function Z(ops) {
                z.push(ops)
            }
            Z([3, '_beginToScroll'])
            Z([3, 'wrap'])
            Z([3, 'content'])
            Z([a, [3, 'height:'],
                [
                    [2, '?:'],
                    [
                        [7],
                        [3, 'useInPage']
                    ],
                    [
                        [2, '+'],
                        [
                            [2, '+'],
                            [
                                [7],
                                [3, 'totalHeight']
                            ],
                            [
                                [2, '?:'],
                                [
                                    [7],
                                    [3, 'hasBeforeSlotHeight']
                                ],
                                [
                                    [7],
                                    [3, 'beforeSlotHeight']
                                ],
                                [1, 0]
                            ]
                        ],
                        [
                            [2, '?:'],
                            [
                                [7],
                                [3, 'hasAfterSlotHeight']
                            ],
                            [
                                [7],
                                [3, 'afterSlotHeight']
                            ],
                            [1, 0]
                        ]
                    ],
                    [
                        [7],
                        [3, 'height']
                    ]
                ],
                [3, 'px;height:100%;width:'],
                [
                    [7],
                    [3, 'width']
                ],
                [3, 'px;width:100%;transform:translateZ(0);-webkit-transform:translateZ(0);']
            ])
            Z([3, '_scrollViewDidScroll'])
            Z([3, '_scrollToLower'])
            Z([3, '_scrollToUpper'])
            Z(z[2])
            Z([
                [7],
                [3, 'enableBackToTop']
            ])
            Z([
                [7],
                [3, 'lowerThreshold']
            ])
            Z([
                [7],
                [3, 'innerScrollIntoView']
            ])
            Z([
                [7],
                [3, 'innerScrollTop']
            ])
            Z([
                [7],
                [3, 'scrollWithAnimation']
            ])
            Z([1, false])
            Z([
                [2, '?:'],
                [
                    [7],
                    [3, 'useInPage']
                ],
                [1, false],
                [
                    [7],
                    [3, 'scrollY']
                ]
            ])
            Z([3, 'height:100%;position: relative;'])
            Z([
                [7],
                [3, 'throttle']
            ])
            Z([
                [7],
                [3, 'upperThreshold']
            ])
            Z([3, 'itemsize'])
            Z([3, 'before'])
            Z([3, 'after'])
        })(__WXML_GLOBAL__.ops_cached.$gwx_8);
        return __WXML_GLOBAL__.ops_cached.$gwx_8
    }

    function gz$gwx_9() {
        if (__WXML_GLOBAL__.ops_cached.$gwx_9) return __WXML_GLOBAL__.ops_cached.$gwx_9
        __WXML_GLOBAL__.ops_cached.$gwx_9 = [];
        (function(z) {
            var a = 11;

            function Z(ops) {
                z.push(ops)
            }
            Z([a, [3, 'weui-navigation-bar__inner '],
                [
                    [2, '?:'],
                    [
                        [7],
                        [3, 'ios']
                    ],
                    [1, 'ios'],
                    [1, 'android']
                ]
            ])
            Z([a, [3, 'padding-top: '],
                [
                    [7],
                    [3, 'statusBarHeight']
                ],
                [3, 'px; color: '],
                [
                    [7],
                    [3, 'color']
                ],
                [3, ';background: '],
                [
                    [7],
                    [3, 'background']
                ],
                [3, ';'],
                [
                    [7],
                    [3, 'displayStyle']
                ],
                [3, ';'],
                [
                    [7],
                    [3, 'innerPaddingRight']
                ],
                [3, ';'],
                [
                    [7],
                    [3, 'innerWidth']
                ],
                [3, ';height:'],
                [
                    [7],
                    [3, 'capsuleHeight']
                ],
                [3, 'px;']
            ])
            Z([3, 'weui-navigation-bar__left'])
            Z([
                [7],
                [3, 'leftWidth']
            ])
            Z([
                [7],
                [3, 'back']
            ])
            Z([3, 'left'])
            Z([3, 'weui-navigation-bar__center real-bottom'])
            Z([a, [3, 'margin-top:'],
                [
                    [2, '?:'],
                    [
                        [2, '<'],
                        [1, 0],
                        [
                            [7],
                            [3, 'statusBarHeight']
                        ]
                    ],
                    [
                        [2, '/'],
                        [
                            [7],
                            [3, 'statusBarHeight']
                        ],
                        [1, 2]
                    ],
                    [1, 0]
                ],
                [3, 'px']
            ])
            Z([
                [7],
                [3, 'loading']
            ])
            Z([
                [7],
                [3, 'title']
            ])
            Z([3, 'center'])
            Z([3, 'right'])
        })(__WXML_GLOBAL__.ops_cached.$gwx_9);
        return __WXML_GLOBAL__.ops_cached.$gwx_9
    }

    function gz$gwx_10() {
        if (__WXML_GLOBAL__.ops_cached.$gwx_10) return __WXML_GLOBAL__.ops_cached.$gwx_10
        __WXML_GLOBAL__.ops_cached.$gwx_10 = [];
        (function(z) {
            var a = 11;

            function Z(ops) {
                z.push(ops)
            }
            Z([
                [7],
                [3, 'visible']
            ])
            Z([3, '_handleCoverViewTap'])
            Z([3, 'native-msg-cover-layer'])
            Z([a, [3, 'native-msg-container '],
                [
                    [2, '?:'],
                    [
                        [2, '||'],
                        [
                            [2, '!'],
                            [
                                [2, '!'],
                                [
                                    [7],
                                    [3, 'closable']
                                ]
                            ]
                        ],
                        [
                            [2, '!'],
                            [
                                [2, '!'],
                                [
                                    [7],
                                    [3, 'title']
                                ]
                            ]
                        ]
                    ],
                    [1, 'has-title-bar'],
                    [1, '']
                ],
                [3, ' '],
                [
                    [7],
                    [3, 'className']
                ]
            ])
            Z([
                [2, '||'],
                [
                    [2, '!'],
                    [
                        [2, '!'],
                        [
                            [7],
                            [3, 'closable']
                        ]
                    ]
                ],
                [
                    [2, '!'],
                    [
                        [2, '!'],
                        [
                            [7],
                            [3, 'title']
                        ]
                    ]
                ]
            ])
            Z([
                [2, '!'],
                [
                    [2, '!'],
                    [
                        [7],
                        [3, 'title']
                    ]
                ]
            ])
            Z([
                [2, '!=='],
                [
                    [7],
                    [3, 'buttonStyle']
                ],
                [1, 'solid']
            ])
            Z([a, [3, 'button-container '],
                [
                    [2, '?:'],
                    [
                        [2, '==='],
                        [
                            [7],
                            [3, 'buttonStyle']
                        ],
                        [1, 'solid']
                    ],
                    [1, 'solid'],
                    [1, '']
                ]
            ])
            Z([
                [7],
                [3, 'cancelBtn']
            ])
            Z(z[6])
            Z([
                [7],
                [3, 'okBtn']
            ])
            Z(z[6])
            Z([
                [2, '!'],
                [
                    [2, '!'],
                    [
                        [7],
                        [3, 'closable']
                    ]
                ]
            ])
        })(__WXML_GLOBAL__.ops_cached.$gwx_10);
        return __WXML_GLOBAL__.ops_cached.$gwx_10
    }

    function gz$gwx_11() {
        if (__WXML_GLOBAL__.ops_cached.$gwx_11) return __WXML_GLOBAL__.ops_cached.$gwx_11
        __WXML_GLOBAL__.ops_cached.$gwx_11 = [];
        (function(z) {
            var a = 11;

            function Z(ops) {
                z.push(ops)
            }
            Z([
                [7],
                [3, 'show']
            ])
            Z([a, [3, 'slider-box '],
                [
                    [2, '?:'],
                    [
                        [7],
                        [3, 'show']
                    ],
                    [1, 'show'],
                    [1, '']
                ]
            ])
            Z([a, [3, 'height:'],
                [
                    [2, '+'],
                    [
                        [7],
                        [3, 'height']
                    ],
                    [1, 'px']
                ],
                [3, ';bottom: '],
                [
                    [2, '+'],
                    [
                        [2, '+'],
                        [1, '-'],
                        [
                            [7],
                            [3, 'height']
                        ]
                    ],
                    [1, 'px']
                ]
            ])
            Z([3, 'top'])
            Z(z[3])
            Z([3, 'center'])
            Z(z[5])
            Z([3, 'bottom'])
            Z(z[7])
        })(__WXML_GLOBAL__.ops_cached.$gwx_11);
        return __WXML_GLOBAL__.ops_cached.$gwx_11
    }

    function gz$gwx_12() {
        if (__WXML_GLOBAL__.ops_cached.$gwx_12) return __WXML_GLOBAL__.ops_cached.$gwx_12
        __WXML_GLOBAL__.ops_cached.$gwx_12 = [];
        (function(z) {
            var a = 11;

            function Z(ops) {
                z.push(ops)
            }
            Z([
                [7],
                [3, 'show']
            ])
        })(__WXML_GLOBAL__.ops_cached.$gwx_12);
        return __WXML_GLOBAL__.ops_cached.$gwx_12
    }

    function gz$gwx_13() {
        if (__WXML_GLOBAL__.ops_cached.$gwx_13) return __WXML_GLOBAL__.ops_cached.$gwx_13
        __WXML_GLOBAL__.ops_cached.$gwx_13 = [];
        (function(z) {
            var a = 11;

            function Z(ops) {
                z.push(ops)
            }
        })(__WXML_GLOBAL__.ops_cached.$gwx_13);
        return __WXML_GLOBAL__.ops_cached.$gwx_13
    }

    function gz$gwx_14() {
        if (__WXML_GLOBAL__.ops_cached.$gwx_14) return __WXML_GLOBAL__.ops_cached.$gwx_14
        __WXML_GLOBAL__.ops_cached.$gwx_14 = [];
        (function(z) {
            var a = 11;

            function Z(ops) {
                z.push(ops)
            }
        })(__WXML_GLOBAL__.ops_cached.$gwx_14);
        return __WXML_GLOBAL__.ops_cached.$gwx_14
    }

    function gz$gwx_15() {
        if (__WXML_GLOBAL__.ops_cached.$gwx_15) return __WXML_GLOBAL__.ops_cached.$gwx_15
        __WXML_GLOBAL__.ops_cached.$gwx_15 = [];
        (function(z) {
            var a = 11;

            function Z(ops) {
                z.push(ops)
            }
        })(__WXML_GLOBAL__.ops_cached.$gwx_15);
        return __WXML_GLOBAL__.ops_cached.$gwx_15
    }

    function gz$gwx_16() {
        if (__WXML_GLOBAL__.ops_cached.$gwx_16) return __WXML_GLOBAL__.ops_cached.$gwx_16
        __WXML_GLOBAL__.ops_cached.$gwx_16 = [];
        (function(z) {
            var a = 11;

            function Z(ops) {
                z.push(ops)
            }
            Z([3, 'login-container'])
            Z([
                [6],
                [
                    [7],
                    [3, 'exit']
                ],
                [3, 'show']
            ])
            Z([3, 'message-dialog'])
        })(__WXML_GLOBAL__.ops_cached.$gwx_16);
        return __WXML_GLOBAL__.ops_cached.$gwx_16
    }

    function gz$gwx_17() {
        if (__WXML_GLOBAL__.ops_cached.$gwx_17) return __WXML_GLOBAL__.ops_cached.$gwx_17
        __WXML_GLOBAL__.ops_cached.$gwx_17 = [];
        (function(z) {
            var a = 11;

            function Z(ops) {
                z.push(ops)
            }
            Z([3, 'privacy-page'])
            Z([3, 'container'])
            Z([3, 'goPrivacy'])
            Z([3, 'item first-item'])
            Z([
                [7],
                [3, 'hasPrivacyRedRot']
            ])
            Z([3, 'goUseRules'])
            Z([3, 'item'])
            Z([
                [7],
                [3, 'hasUseRulesRedRot']
            ])
            Z([3, 'privacy-message-dialog'])
        })(__WXML_GLOBAL__.ops_cached.$gwx_17);
        return __WXML_GLOBAL__.ops_cached.$gwx_17
    }

    function gz$gwx_18() {
        if (__WXML_GLOBAL__.ops_cached.$gwx_18) return __WXML_GLOBAL__.ops_cached.$gwx_18
        __WXML_GLOBAL__.ops_cached.$gwx_18 = [];
        (function(z) {
            var a = 11;

            function Z(ops) {
                z.push(ops)
            }
        })(__WXML_GLOBAL__.ops_cached.$gwx_18);
        return __WXML_GLOBAL__.ops_cached.$gwx_18
    }
    __WXML_GLOBAL__.ops_set.$gwx = z;
    __WXML_GLOBAL__.ops_init.$gwx = true;
    var nv_require = function() {
        var nnm = {};
        var nom = {};
        return function(n) {
            if (n[0] === 'p' && n[1] === '_' && f_[n.slice(2)]) return f_[n.slice(2)];
            return function() {
                if (!nnm[n]) return undefined;
                try {
                    if (!nom[n]) nom[n] = nnm[n]();
                    return nom[n];
                } catch (e) {
                    e.message = e.message.replace(/nv_/g, '');
                    var tmp = e.stack.substring(0, e.stack.lastIndexOf(n));
                    e.stack = tmp.substring(0, tmp.lastIndexOf('\n'));
                    e.stack = e.stack.replace(/\snv_/g, ' ');
                    e.stack = $gstack(e.stack);
                    e.stack += '\n    at ' + n.substring(2);
                    console.error(e);
                }
            }
        }
    }()
    var x = ['./components/custom-modal/custom-modal.wxml', './components/full-screen-msg-view/full-screen-msg-view.wxml', './components/fullpage-message-box-view/fullpage-message-box-view.wxml', './components/index-message-dialog/message-dialog.wxml', './components/mask/mask.wxml', './components/message-dialog/message-dialog.wxml', './components/miniprogram-recycle-view/recycle-item.wxml', './components/miniprogram-recycle-view/recycle-view.wxml', './components/navigation-bar/navigation-bar.wxml', './components/nickname-dialog/nickname-dialog.wxml', './components/slider-message-dialog/slider-message-dialog.wxml', './components/toast/toast.wxml', './pages/bigHouseCard/bigHouseCard.wxml', './pages/detail/detail.wxml', './pages/face-verify/face-verify.wxml', './pages/index/index.wxml', './pages/index/privacy/index.wxml', './pages/index/privacy/protocol/index.wxml'];
    d_[x[0]] = {}
    var m0 = function(e, s, r, gg) {
        var z = gz$gwx_1()
        var oB = _v()
        _(r, oB)
        if (_oz(z, 0, e, s, gg)) {
            oB.wxVkey = 1
            var xC = _mz(z, 'view', ['bindtap', 1, 'class', 1], [], e, s, gg)
            var oD = _n('view')
            _rz(z, oD, 'class', 3, e, s, gg)
            var hG = _n('view')
            _rz(z, hG, 'class', 4, e, s, gg)
            var oH = _v()
            _(hG, oH)
            if (_oz(z, 5, e, s, gg)) {
                oH.wxVkey = 1
                var oJ = _v()
                _(oH, oJ)
                if (_oz(z, 6, e, s, gg)) {
                    oJ.wxVkey = 1
                }
                oJ.wxXCkey = 1
            }
            var cI = _v()
            _(hG, cI)
            if (_oz(z, 7, e, s, gg)) {
                cI.wxVkey = 1
            }
            oH.wxXCkey = 1
            cI.wxXCkey = 1
            _(oD, hG)
            var fE = _v()
            _(oD, fE)
            if (_oz(z, 8, e, s, gg)) {
                fE.wxVkey = 1
            }
            var cF = _v()
            _(oD, cF)
            if (_oz(z, 9, e, s, gg)) {
                cF.wxVkey = 1
                var lK = _v()
                _(cF, lK)
                if (_oz(z, 10, e, s, gg)) {
                    lK.wxVkey = 1
                }
                lK.wxXCkey = 1
            }
            fE.wxXCkey = 1
            cF.wxXCkey = 1
            _(xC, oD)
            _(oB, xC)
        }
        oB.wxXCkey = 1
        return r
    }
    e_[x[0]] = {
        f: m0,
        j: [],
        i: [],
        ti: [],
        ic: []
    }
    d_[x[1]] = {}
    var m1 = function(e, s, r, gg) {
        var z = gz$gwx_2()
        return r
    }
    e_[x[1]] = {
        f: m1,
        j: [],
        i: [],
        ti: [],
        ic: []
    }
    d_[x[2]] = {}
    var m2 = function(e, s, r, gg) {
        var z = gz$gwx_3()
        var eN = _v()
        _(r, eN)
        if (_oz(z, 0, e, s, gg)) {
            eN.wxVkey = 1
            var bO = _mz(z, 'view', ['bindtap', 1, 'class', 1], [], e, s, gg)
            var oP = _v()
            _(bO, oP)
            if (_oz(z, 3, e, s, gg)) {
                oP.wxVkey = 1
            }
            oP.wxXCkey = 1
            _(eN, bO)
        }
        eN.wxXCkey = 1
        return r
    }
    e_[x[2]] = {
        f: m2,
        j: [],
        i: [],
        ti: [],
        ic: []
    }
    d_[x[3]] = {}
    var m3 = function(e, s, r, gg) {
        var z = gz$gwx_4()
        var oR = _v()
        _(r, oR)
        if (_oz(z, 0, e, s, gg)) {
            oR.wxVkey = 1
            var fS = _n('view')
            _rz(z, fS, 'class', 1, e, s, gg)
            var cT = _mz(z, 'slot', ['class', 2, 'name', 1], [], e, s, gg)
            _(fS, cT)
            var hU = _mz(z, 'slot', ['class', 4, 'name', 1], [], e, s, gg)
            _(fS, hU)
            var oV = _mz(z, 'slot', ['class', 6, 'name', 1], [], e, s, gg)
            _(fS, oV)
            _(oR, fS)
        }
        oR.wxXCkey = 1
        return r
    }
    e_[x[3]] = {
        f: m3,
        j: [],
        i: [],
        ti: [],
        ic: []
    }
    d_[x[4]] = {}
    var m4 = function(e, s, r, gg) {
        var z = gz$gwx_5()
        var oX = _v()
        _(r, oX)
        if (_oz(z, 0, e, s, gg)) {
            oX.wxVkey = 1
            var lY = _mz(z, 'view', ['bindtap', 1, 'class', 1], [], e, s, gg)
            var aZ = _n('slot')
            _rz(z, aZ, 'class', 3, e, s, gg)
            _(lY, aZ)
            _(oX, lY)
        }
        oX.wxXCkey = 1
        return r
    }
    e_[x[4]] = {
        f: m4,
        j: [],
        i: [],
        ti: [],
        ic: []
    }
    d_[x[5]] = {}
    var m5 = function(e, s, r, gg) {
        var z = gz$gwx_6()
        var e2 = _v()
        _(r, e2)
        if (_oz(z, 0, e, s, gg)) {
            e2.wxVkey = 1
            var b3 = _mz(z, 'view', ['bindtap', 1, 'class', 1], [], e, s, gg)
            var x5 = _n('view')
            _rz(z, x5, 'class', 3, e, s, gg)
            var f7 = _n('view')
            _rz(z, f7, 'class', 4, e, s, gg)
            var c8 = _v()
            _(f7, c8)
            if (_oz(z, 5, e, s, gg)) {
                c8.wxVkey = 1
                var cAB = _v()
                _(c8, cAB)
                if (_oz(z, 6, e, s, gg)) {
                    cAB.wxVkey = 1
                }
                cAB.wxXCkey = 1
            }
            var h9 = _v()
            _(f7, h9)
            if (_oz(z, 7, e, s, gg)) {
                h9.wxVkey = 1
            }
            var o0 = _v()
            _(f7, o0)
            if (_oz(z, 8, e, s, gg)) {
                o0.wxVkey = 1
            }
            c8.wxXCkey = 1
            h9.wxXCkey = 1
            o0.wxXCkey = 1
            _(x5, f7)
            var o6 = _v()
            _(x5, o6)
            if (_oz(z, 9, e, s, gg)) {
                o6.wxVkey = 1
            }
            var oBB = _n('view')
            _rz(z, oBB, 'class', 10, e, s, gg)
            var lCB = _v()
            _(oBB, lCB)
            if (_oz(z, 11, e, s, gg)) {
                lCB.wxVkey = 1
                var tEB = _v()
                _(lCB, tEB)
                if (_oz(z, 12, e, s, gg)) {
                    tEB.wxVkey = 1
                }
                tEB.wxXCkey = 1
            }
            var aDB = _v()
            _(oBB, aDB)
            if (_oz(z, 13, e, s, gg)) {
                aDB.wxVkey = 1
                var eFB = _v()
                _(aDB, eFB)
                if (_oz(z, 14, e, s, gg)) {
                    eFB.wxVkey = 1
                }
                eFB.wxXCkey = 1
            }
            lCB.wxXCkey = 1
            aDB.wxXCkey = 1
            _(x5, oBB)
            o6.wxXCkey = 1
            _(b3, x5)
            var o4 = _v()
            _(b3, o4)
            if (_oz(z, 15, e, s, gg)) {
                o4.wxVkey = 1
            }
            o4.wxXCkey = 1
            _(e2, b3)
        }
        e2.wxXCkey = 1
        return r
    }
    e_[x[5]] = {
        f: m5,
        j: [],
        i: [],
        ti: [],
        ic: []
    }
    d_[x[6]] = {}
    var m6 = function(e, s, r, gg) {
        var z = gz$gwx_7()
        var oHB = _n('slot')
        _(r, oHB)
        return r
    }
    e_[x[6]] = {
        f: m6,
        j: [],
        i: [],
        ti: [],
        ic: []
    }
    d_[x[7]] = {}
    var m7 = function(e, s, r, gg) {
        var z = gz$gwx_8()
        var oJB = _mz(z, 'view', ['bindtouchstart', 0, 'class', 1, 'id', 1, 'style', 2], [], e, s, gg)
        var fKB = _mz(z, 'scroll-view', ['scrollAnchoring', -1, 'bindscroll', 4, 'bindscrolltolower', 1, 'bindscrolltoupper', 2, 'class', 3, 'enableBackToTop', 4, 'lowerThreshold', 5, 'scrollIntoView', 6, 'scrollTop', 7, 'scrollWithAnimation', 8, 'scrollX', 9, 'scrollY', 10, 'style', 11, 'throttle', 12, 'upperThreshold', 13], [], e, s, gg)
        var cLB = _n('slot')
        _rz(z, cLB, 'name', 18, e, s, gg)
        _(fKB, cLB)
        var hMB = _n('slot')
        _rz(z, hMB, 'name', 19, e, s, gg)
        _(fKB, hMB)
        var oNB = _n('slot')
        _(fKB, oNB)
        var cOB = _n('slot')
        _rz(z, cOB, 'name', 20, e, s, gg)
        _(fKB, cOB)
        _(oJB, fKB)
        _(r, oJB)
        return r
    }
    e_[x[7]] = {
        f: m7,
        j: [],
        i: [],
        ti: [],
        ic: []
    }
    d_[x[8]] = {}
    var m8 = function(e, s, r, gg) {
        var z = gz$gwx_9()
        var lQB = _mz(z, 'view', ['class', 0, 'style', 1], [], e, s, gg)
        var aRB = _mz(z, 'view', ['class', 2, 'style', 1], [], e, s, gg)
        var tSB = _v()
        _(aRB, tSB)
        if (_oz(z, 4, e, s, gg)) {
            tSB.wxVkey = 1
        } else {
            tSB.wxVkey = 2
            var eTB = _n('slot')
            _rz(z, eTB, 'name', 5, e, s, gg)
            _(tSB, eTB)
        }
        tSB.wxXCkey = 1
        _(lQB, aRB)
        var bUB = _mz(z, 'view', ['class', 6, 'style', 1], [], e, s, gg)
        var oVB = _v()
        _(bUB, oVB)
        if (_oz(z, 8, e, s, gg)) {
            oVB.wxVkey = 1
        }
        var xWB = _v()
        _(bUB, xWB)
        if (_oz(z, 9, e, s, gg)) {
            xWB.wxVkey = 1
        } else {
            xWB.wxVkey = 2
            var oXB = _n('slot')
            _rz(z, oXB, 'name', 10, e, s, gg)
            _(xWB, oXB)
        }
        oVB.wxXCkey = 1
        xWB.wxXCkey = 1
        _(lQB, bUB)
        var fYB = _n('slot')
        _rz(z, fYB, 'name', 11, e, s, gg)
        _(lQB, fYB)
        _(r, lQB)
        return r
    }
    e_[x[8]] = {
        f: m8,
        j: [],
        i: [],
        ti: [],
        ic: []
    }
    d_[x[9]] = {}
    var m9 = function(e, s, r, gg) {
        var z = gz$gwx_10()
        var h1B = _v()
        _(r, h1B)
        if (_oz(z, 0, e, s, gg)) {
            h1B.wxVkey = 1
            var o2B = _mz(z, 'view', ['bindtap', 1, 'class', 1], [], e, s, gg)
            var o4B = _n('view')
            _rz(z, o4B, 'class', 3, e, s, gg)
            var l5B = _v()
            _(o4B, l5B)
            if (_oz(z, 4, e, s, gg)) {
                l5B.wxVkey = 1
                var t7B = _v()
                _(l5B, t7B)
                if (_oz(z, 5, e, s, gg)) {
                    t7B.wxVkey = 1
                }
                t7B.wxXCkey = 1
            }
            var a6B = _v()
            _(o4B, a6B)
            if (_oz(z, 6, e, s, gg)) {
                a6B.wxVkey = 1
            }
            var e8B = _n('view')
            _rz(z, e8B, 'class', 7, e, s, gg)
            var b9B = _v()
            _(e8B, b9B)
            if (_oz(z, 8, e, s, gg)) {
                b9B.wxVkey = 1
                var xAC = _v()
                _(b9B, xAC)
                if (_oz(z, 9, e, s, gg)) {
                    xAC.wxVkey = 1
                }
                xAC.wxXCkey = 1
            }
            var o0B = _v()
            _(e8B, o0B)
            if (_oz(z, 10, e, s, gg)) {
                o0B.wxVkey = 1
                var oBC = _v()
                _(o0B, oBC)
                if (_oz(z, 11, e, s, gg)) {
                    oBC.wxVkey = 1
                }
                oBC.wxXCkey = 1
            }
            b9B.wxXCkey = 1
            o0B.wxXCkey = 1
            _(o4B, e8B)
            l5B.wxXCkey = 1
            a6B.wxXCkey = 1
            _(o2B, o4B)
            var c3B = _v()
            _(o2B, c3B)
            if (_oz(z, 12, e, s, gg)) {
                c3B.wxVkey = 1
            }
            c3B.wxXCkey = 1
            _(h1B, o2B)
        }
        h1B.wxXCkey = 1
        return r
    }
    e_[x[9]] = {
        f: m9,
        j: [],
        i: [],
        ti: [],
        ic: []
    }
    d_[x[10]] = {}
    var m10 = function(e, s, r, gg) {
        var z = gz$gwx_11()
        var cDC = _v()
        _(r, cDC)
        if (_oz(z, 0, e, s, gg)) {
            cDC.wxVkey = 1
            var hEC = _mz(z, 'view', ['class', 1, 'style', 1], [], e, s, gg)
            var oFC = _mz(z, 'slot', ['class', 3, 'name', 1], [], e, s, gg)
            _(hEC, oFC)
            var cGC = _mz(z, 'slot', ['class', 5, 'name', 1], [], e, s, gg)
            _(hEC, cGC)
            var oHC = _mz(z, 'slot', ['class', 7, 'name', 1], [], e, s, gg)
            _(hEC, oHC)
            _(cDC, hEC)
        }
        cDC.wxXCkey = 1
        return r
    }
    e_[x[10]] = {
        f: m10,
        j: [],
        i: [],
        ti: [],
        ic: []
    }
    d_[x[11]] = {}
    var m11 = function(e, s, r, gg) {
        var z = gz$gwx_12()
        var aJC = _v()
        _(r, aJC)
        if (_oz(z, 0, e, s, gg)) {
            aJC.wxVkey = 1
        }
        aJC.wxXCkey = 1
        return r
    }
    e_[x[11]] = {
        f: m11,
        j: [],
        i: [],
        ti: [],
        ic: []
    }
    d_[x[12]] = {}
    var m12 = function(e, s, r, gg) {
        var z = gz$gwx_13()
        return r
    }
    e_[x[12]] = {
        f: m12,
        j: [],
        i: [],
        ti: [],
        ic: []
    }
    d_[x[13]] = {}
    var m13 = function(e, s, r, gg) {
        var z = gz$gwx_14()
        return r
    }
    e_[x[13]] = {
        f: m13,
        j: [],
        i: [],
        ti: [],
        ic: []
    }
    d_[x[14]] = {}
    var m14 = function(e, s, r, gg) {
        var z = gz$gwx_15()
        return r
    }
    e_[x[14]] = {
        f: m14,
        j: [],
        i: [],
        ti: [],
        ic: []
    }
    d_[x[15]] = {}
    var m15 = function(e, s, r, gg) {
        var z = gz$gwx_16()
        var xOC = _n('view')
        _rz(z, xOC, 'class', 0, e, s, gg)
        var oPC = _v()
        _(xOC, oPC)
        if (_oz(z, 1, e, s, gg)) {
            oPC.wxVkey = 1
        }
        var fQC = _n('message-dialog')
        _rz(z, fQC, 'id', 2, e, s, gg)
        _(xOC, fQC)
        oPC.wxXCkey = 1
        _(r, xOC)
        return r
    }
    e_[x[15]] = {
        f: m15,
        j: [],
        i: [],
        ti: [],
        ic: []
    }
    d_[x[16]] = {}
    var m16 = function(e, s, r, gg) {
        var z = gz$gwx_17()
        var hSC = _n('view')
        _rz(z, hSC, 'class', 0, e, s, gg)
        var oTC = _n('view')
        _rz(z, oTC, 'class', 1, e, s, gg)
        var cUC = _mz(z, 'view', ['bindtap', 2, 'class', 1], [], e, s, gg)
        var oVC = _v()
        _(cUC, oVC)
        if (_oz(z, 4, e, s, gg)) {
            oVC.wxVkey = 1
        }
        oVC.wxXCkey = 1
        _(oTC, cUC)
        var lWC = _mz(z, 'view', ['bindtap', 5, 'class', 1], [], e, s, gg)
        var aXC = _v()
        _(lWC, aXC)
        if (_oz(z, 7, e, s, gg)) {
            aXC.wxVkey = 1
        }
        aXC.wxXCkey = 1
        _(oTC, lWC)
        _(hSC, oTC)
        var tYC = _n('message-dialog')
        _rz(z, tYC, 'id', 8, e, s, gg)
        _(hSC, tYC)
        _(r, hSC)
        return r
    }
    e_[x[16]] = {
        f: m16,
        j: [],
        i: [],
        ti: [],
        ic: []
    }
    d_[x[17]] = {}
    var m17 = function(e, s, r, gg) {
        var z = gz$gwx_18()
        return r
    }
    e_[x[17]] = {
        f: m17,
        j: [],
        i: [],
        ti: [],
        ic: []
    }
    if (path && e_[path]) {
        return function(env, dd, global) {
            $gwxc = 0;
            var root = {
                "tag": "wx-page"
            };
            root.children = []
            var main = e_[path].f
            if (typeof global === "undefined") global = {};
            global.f = $gdc(f_[path], "", 1);
            try {
                main(env, {}, root, global);
                _tsd(root)
            } catch (err) {
                console.log(err)
            }
            return root;
        }
    }
}
__wxAppCode__['components/custom-modal/custom-modal.json'] = {
    "component": true,
    "usingComponents": {}
};
if (__vd_version_info__.delayedGwx) __wxAppCode__['components/custom-modal/custom-modal.wxml'] = [$gwx, './components/custom-modal/custom-modal.wxml'];
else __wxAppCode__['components/custom-modal/custom-modal.wxml'] = $gwx('./components/custom-modal/custom-modal.wxml');
__wxAppCode__['components/full-screen-msg-view/full-screen-msg-view.json'] = {
    "component": true,
    "usingComponents": {}
};
if (__vd_version_info__.delayedGwx) __wxAppCode__['components/full-screen-msg-view/full-screen-msg-view.wxml'] = [$gwx, './components/full-screen-msg-view/full-screen-msg-view.wxml'];
else __wxAppCode__['components/full-screen-msg-view/full-screen-msg-view.wxml'] = $gwx('./components/full-screen-msg-view/full-screen-msg-view.wxml');
__wxAppCode__['components/fullpage-message-box-view/fullpage-message-box-view.json'] = {
    "component": true,
    "usingComponents": {}
};
if (__vd_version_info__.delayedGwx) __wxAppCode__['components/fullpage-message-box-view/fullpage-message-box-view.wxml'] = [$gwx, './components/fullpage-message-box-view/fullpage-message-box-view.wxml'];
else __wxAppCode__['components/fullpage-message-box-view/fullpage-message-box-view.wxml'] = $gwx('./components/fullpage-message-box-view/fullpage-message-box-view.wxml');
__wxAppCode__['components/index-message-dialog/message-dialog.json'] = {
    "component": true,
    "usingComponents": {}
};
if (__vd_version_info__.delayedGwx) __wxAppCode__['components/index-message-dialog/message-dialog.wxml'] = [$gwx, './components/index-message-dialog/message-dialog.wxml'];
else __wxAppCode__['components/index-message-dialog/message-dialog.wxml'] = $gwx('./components/index-message-dialog/message-dialog.wxml');
__wxAppCode__['components/mask/mask.json'] = {
    "component": true,
    "usingComponents": {}
};
if (__vd_version_info__.delayedGwx) __wxAppCode__['components/mask/mask.wxml'] = [$gwx, './components/mask/mask.wxml'];
else __wxAppCode__['components/mask/mask.wxml'] = $gwx('./components/mask/mask.wxml');
__wxAppCode__['components/message-dialog/message-dialog.json'] = {
    "component": true,
    "usingComponents": {}
};
if (__vd_version_info__.delayedGwx) __wxAppCode__['components/message-dialog/message-dialog.wxml'] = [$gwx, './components/message-dialog/message-dialog.wxml'];
else __wxAppCode__['components/message-dialog/message-dialog.wxml'] = $gwx('./components/message-dialog/message-dialog.wxml');
__wxAppCode__['components/miniprogram-recycle-view/recycle-item.json'] = {
    "component": true,
    "usingComponents": {}
};
if (__vd_version_info__.delayedGwx) __wxAppCode__['components/miniprogram-recycle-view/recycle-item.wxml'] = [$gwx, './components/miniprogram-recycle-view/recycle-item.wxml'];
else __wxAppCode__['components/miniprogram-recycle-view/recycle-item.wxml'] = $gwx('./components/miniprogram-recycle-view/recycle-item.wxml');
__wxAppCode__['components/miniprogram-recycle-view/recycle-view.json'] = {
    "component": true,
    "usingComponents": {}
};
if (__vd_version_info__.delayedGwx) __wxAppCode__['components/miniprogram-recycle-view/recycle-view.wxml'] = [$gwx, './components/miniprogram-recycle-view/recycle-view.wxml'];
else __wxAppCode__['components/miniprogram-recycle-view/recycle-view.wxml'] = $gwx('./components/miniprogram-recycle-view/recycle-view.wxml');
__wxAppCode__['components/navigation-bar/navigation-bar.json'] = {
    "component": true,
    "usingComponents": {}
};
if (__vd_version_info__.delayedGwx) __wxAppCode__['components/navigation-bar/navigation-bar.wxml'] = [$gwx, './components/navigation-bar/navigation-bar.wxml'];
else __wxAppCode__['components/navigation-bar/navigation-bar.wxml'] = $gwx('./components/navigation-bar/navigation-bar.wxml');
__wxAppCode__['components/nickname-dialog/nickname-dialog.json'] = {
    "component": true,
    "usingComponents": {}
};
if (__vd_version_info__.delayedGwx) __wxAppCode__['components/nickname-dialog/nickname-dialog.wxml'] = [$gwx, './components/nickname-dialog/nickname-dialog.wxml'];
else __wxAppCode__['components/nickname-dialog/nickname-dialog.wxml'] = $gwx('./components/nickname-dialog/nickname-dialog.wxml');
__wxAppCode__['components/slider-message-dialog/slider-message-dialog.json'] = {
    "component": true,
    "usingComponents": {}
};
if (__vd_version_info__.delayedGwx) __wxAppCode__['components/slider-message-dialog/slider-message-dialog.wxml'] = [$gwx, './components/slider-message-dialog/slider-message-dialog.wxml'];
else __wxAppCode__['components/slider-message-dialog/slider-message-dialog.wxml'] = $gwx('./components/slider-message-dialog/slider-message-dialog.wxml');
__wxAppCode__['components/toast/toast.json'] = {
    "component": true,
    "usingComponents": {}
};
if (__vd_version_info__.delayedGwx) __wxAppCode__['components/toast/toast.wxml'] = [$gwx, './components/toast/toast.wxml'];
else __wxAppCode__['components/toast/toast.wxml'] = $gwx('./components/toast/toast.wxml');
__wxAppCode__['pages/bigHouseCard/bigHouseCard.json'] = {
    "usingComponents": {}
};
if (__vd_version_info__.delayedGwx) __wxAppCode__['pages/bigHouseCard/bigHouseCard.wxml'] = [$gwx, './pages/bigHouseCard/bigHouseCard.wxml'];
else __wxAppCode__['pages/bigHouseCard/bigHouseCard.wxml'] = $gwx('./pages/bigHouseCard/bigHouseCard.wxml');
__wxAppCode__['pages/detail/detail.json'] = {
    "usingComponents": {}
};
if (__vd_version_info__.delayedGwx) __wxAppCode__['pages/detail/detail.wxml'] = [$gwx, './pages/detail/detail.wxml'];
else __wxAppCode__['pages/detail/detail.wxml'] = $gwx('./pages/detail/detail.wxml');
__wxAppCode__['pages/face-verify/face-verify.json'] = {
    "usingComponents": {}
};
if (__vd_version_info__.delayedGwx) __wxAppCode__['pages/face-verify/face-verify.wxml'] = [$gwx, './pages/face-verify/face-verify.wxml'];
else __wxAppCode__['pages/face-verify/face-verify.wxml'] = $gwx('./pages/face-verify/face-verify.wxml');
__wxAppCode__['pages/index/index.json'] = {
    "disableScroll": true,
    "usingComponents": {
        "message-dialog": "../../components/message-dialog/message-dialog"
    }
};
if (__vd_version_info__.delayedGwx) __wxAppCode__['pages/index/index.wxml'] = [$gwx, './pages/index/index.wxml'];
else __wxAppCode__['pages/index/index.wxml'] = $gwx('./pages/index/index.wxml');
__wxAppCode__['pages/index/privacy/index.json'] = {
    "usingComponents": {
        "message-dialog": "../../../components/index-message-dialog/message-dialog"
    }
};
if (__vd_version_info__.delayedGwx) __wxAppCode__['pages/index/privacy/index.wxml'] = [$gwx, './pages/index/privacy/index.wxml'];
else __wxAppCode__['pages/index/privacy/index.wxml'] = $gwx('./pages/index/privacy/index.wxml');
__wxAppCode__['pages/index/privacy/protocol/index.json'] = {
    "usingComponents": {}
};
if (__vd_version_info__.delayedGwx) __wxAppCode__['pages/index/privacy/protocol/index.wxml'] = [$gwx, './pages/index/privacy/protocol/index.wxml'];
else __wxAppCode__['pages/index/privacy/protocol/index.wxml'] = $gwx('./pages/index/privacy/protocol/index.wxml');

define("@babel/runtime/helpers/Arrayincludes.js", function(require, module, exports, window, document, frames, self, location, navigator, localStorage, history, Caches, screen, alert, confirm, prompt, XMLHttpRequest, WebSocket, Reporter, webkit, WeixinJSCore) {
    Array.prototype.includes || Object.defineProperty(Array.prototype, "includes", {
        value: function(r, e) {
            if (null == this) throw new TypeError('"this" is null or not defined');
            var t = Object(this),
                n = t.length >>> 0;
            if (0 == n) return !1;
            for (var i, o, a = 0 | e, u = Math.max(0 <= a ? a : n - Math.abs(a), 0); u < n;) {
                if ((i = t[u]) === (o = r) || "number" == typeof i && "number" == typeof o && isNaN(i) && isNaN(o)) return !0;
                u++
            }
            return !1
        }
    });
});
define("@babel/runtime/helpers/Objectentries.js", function(require, module, exports, window, document, frames, self, location, navigator, localStorage, history, Caches, screen, alert, confirm, prompt, XMLHttpRequest, WebSocket, Reporter, webkit, WeixinJSCore) {
    Object.entries || (Object.entries = function(e) {
        for (var r = Object.keys(e), t = r.length, n = new Array(t); t--;) n[t] = [r[t], e[r[t]]];
        return n
    });
});
define("@babel/runtime/helpers/Objectvalues.js", function(require, module, exports, window, document, frames, self, location, navigator, localStorage, history, Caches, screen, alert, confirm, prompt, XMLHttpRequest, WebSocket, Reporter, webkit, WeixinJSCore) {
    Object.values || (Object.values = function(e) {
        if (e !== Object(e)) throw new TypeError("Object.values called on a non-object");
        var t, r = [];
        for (t in e) Object.prototype.hasOwnProperty.call(e, t) && r.push(e[t]);
        return r
    });
});
define("@babel/runtime/helpers/arrayLikeToArray.js", function(require, module, exports, window, document, frames, self, location, navigator, localStorage, history, Caches, screen, alert, confirm, prompt, XMLHttpRequest, WebSocket, Reporter, webkit, WeixinJSCore) {
    function _arrayLikeToArray(r, a) {
        (null == a || a > r.length) && (a = r.length);
        for (var e = 0, n = new Array(a); e < a; e++) n[e] = r[e];
        return n
    }
    module.exports = _arrayLikeToArray;
});
define("@babel/runtime/helpers/arrayWithHoles.js", function(require, module, exports, window, document, frames, self, location, navigator, localStorage, history, Caches, screen, alert, confirm, prompt, XMLHttpRequest, WebSocket, Reporter, webkit, WeixinJSCore) {
    function _arrayWithHoles(r) {
        if (Array.isArray(r)) return r
    }
    module.exports = _arrayWithHoles;
});
define("@babel/runtime/helpers/arrayWithoutHoles.js", function(require, module, exports, window, document, frames, self, location, navigator, localStorage, history, Caches, screen, alert, confirm, prompt, XMLHttpRequest, WebSocket, Reporter, webkit, WeixinJSCore) {
    var arrayLikeToArray = require("./arrayLikeToArray");

    function _arrayWithoutHoles(r) {
        if (Array.isArray(r)) return arrayLikeToArray(r)
    }
    module.exports = _arrayWithoutHoles;
});
define("@babel/runtime/helpers/assertThisInitialized.js", function(require, module, exports, window, document, frames, self, location, navigator, localStorage, history, Caches, screen, alert, confirm, prompt, XMLHttpRequest, WebSocket, Reporter, webkit, WeixinJSCore) {
    function _assertThisInitialized(e) {
        if (void 0 === e) throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
        return e
    }
    module.exports = _assertThisInitialized;
});
define("@babel/runtime/helpers/asyncToGenerator.js", function(require, module, exports, window, document, frames, self, location, navigator, localStorage, history, Caches, screen, alert, confirm, prompt, XMLHttpRequest, WebSocket, Reporter, webkit, WeixinJSCore) {
    function asyncGeneratorStep(n, e, r, t, o, a, c) {
        try {
            var i = n[a](c),
                u = i.value
        } catch (n) {
            return void r(n)
        }
        i.done ? e(u) : Promise.resolve(u).then(t, o)
    }

    function _asyncToGenerator(n) {
        return function() {
            var e = this,
                r = arguments;
            return new Promise((function(t, o) {
                var a = n.apply(e, r);

                function c(n) {
                    asyncGeneratorStep(a, t, o, c, i, "next", n)
                }

                function i(n) {
                    asyncGeneratorStep(a, t, o, c, i, "throw", n)
                }
                c(void 0)
            }))
        }
    }
    module.exports = _asyncToGenerator;
});
define("@babel/runtime/helpers/classCallCheck.js", function(require, module, exports, window, document, frames, self, location, navigator, localStorage, history, Caches, screen, alert, confirm, prompt, XMLHttpRequest, WebSocket, Reporter, webkit, WeixinJSCore) {
    function _classCallCheck(a, l) {
        if (!(a instanceof l)) throw new TypeError("Cannot call a class as a function")
    }
    module.exports = _classCallCheck;
});
define("@babel/runtime/helpers/construct.js", function(require, module, exports, window, document, frames, self, location, navigator, localStorage, history, Caches, screen, alert, confirm, prompt, XMLHttpRequest, WebSocket, Reporter, webkit, WeixinJSCore) {
    var setPrototypeOf = require("./setPrototypeOf"),
        isNativeReflectConstruct = require("./isNativeReflectConstruct");

    function _construct(t, e, r) {
        return isNativeReflectConstruct() ? module.exports = _construct = Reflect.construct.bind() : module.exports = _construct = function(t, e, r) {
            var o = [null];
            o.push.apply(o, e);
            var c = new(Function.bind.apply(t, o));
            return r && setPrototypeOf(c, r.prototype), c
        }, _construct.apply(null, arguments)
    }
    module.exports = _construct;
});
define("@babel/runtime/helpers/createClass.js", function(require, module, exports, window, document, frames, self, location, navigator, localStorage, history, Caches, screen, alert, confirm, prompt, XMLHttpRequest, WebSocket, Reporter, webkit, WeixinJSCore) {
    var toPropertyKey = require("./toPropertyKey");

    function _defineProperties(e, r) {
        for (var t = 0; t < r.length; t++) {
            var o = r[t];
            o.enumerable = o.enumerable || !1, o.configurable = !0, "value" in o && (o.writable = !0), Object.defineProperty(e, toPropertyKey(o.key), o)
        }
    }

    function _createClass(e, r, t) {
        return r && _defineProperties(e.prototype, r), t && _defineProperties(e, t), Object.defineProperty(e, "prototype", {
            writable: !1
        }), e
    }
    module.exports = _createClass;
});
define("@babel/runtime/helpers/createForOfIteratorHelper.js", function(require, module, exports, window, document, frames, self, location, navigator, localStorage, history, Caches, screen, alert, confirm, prompt, XMLHttpRequest, WebSocket, Reporter, webkit, WeixinJSCore) {
    var unsupportedIterableToArray = require("./unsupportedIterableToArray");

    function _createForOfIteratorHelper(r, e) {
        var t = "undefined" != typeof Symbol && r[Symbol.iterator] || r["@@iterator"];
        if (!t) {
            if (Array.isArray(r) || (t = unsupportedIterableToArray(r)) || e && r && "number" == typeof r.length) {
                t && (r = t);
                var n = 0,
                    o = function() {};
                return {
                    s: o,
                    n: function() {
                        return n >= r.length ? {
                            done: !0
                        } : {
                            done: !1,
                            value: r[n++]
                        }
                    },
                    e: function(r) {
                        throw r
                    },
                    f: o
                }
            }
            throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")
        }
        var a, u = !0,
            i = !1;
        return {
            s: function() {
                t = t.call(r)
            },
            n: function() {
                var r = t.next();
                return u = r.done, r
            },
            e: function(r) {
                i = !0, a = r
            },
            f: function() {
                try {
                    u || null == t.return || t.return()
                } finally {
                    if (i) throw a
                }
            }
        }
    }
    module.exports = _createForOfIteratorHelper;
});
define("@babel/runtime/helpers/createSuper.js", function(require, module, exports, window, document, frames, self, location, navigator, localStorage, history, Caches, screen, alert, confirm, prompt, XMLHttpRequest, WebSocket, Reporter, webkit, WeixinJSCore) {
    var getPrototypeOf = require("./getPrototypeOf"),
        isNativeReflectConstruct = require("./isNativeReflectConstruct"),
        possibleConstructorReturn = require("./possibleConstructorReturn");

    function _createSuper(t) {
        var e = isNativeReflectConstruct();
        return function() {
            var r, o = getPrototypeOf(t);
            if (e) {
                var s = getPrototypeOf(this).constructor;
                r = Reflect.construct(o, arguments, s)
            } else r = o.apply(this, arguments);
            return possibleConstructorReturn(this, r)
        }
    }
    module.exports = _createSuper;
});
define("@babel/runtime/helpers/defineProperty.js", function(require, module, exports, window, document, frames, self, location, navigator, localStorage, history, Caches, screen, alert, confirm, prompt, XMLHttpRequest, WebSocket, Reporter, webkit, WeixinJSCore) {
    var toPropertyKey = require("./toPropertyKey");

    function _defineProperty(e, r, t) {
        return (r = toPropertyKey(r)) in e ? Object.defineProperty(e, r, {
            value: t,
            enumerable: !0,
            configurable: !0,
            writable: !0
        }) : e[r] = t, e
    }
    module.exports = _defineProperty;
});
define("@babel/runtime/helpers/get.js", function(require, module, exports, window, document, frames, self, location, navigator, localStorage, history, Caches, screen, alert, confirm, prompt, XMLHttpRequest, WebSocket, Reporter, webkit, WeixinJSCore) {
    var superPropBase = require("./superPropBase");

    function _get() {
        return "undefined" != typeof Reflect && Reflect.get ? module.exports = _get = Reflect.get.bind() : module.exports = _get = function(e, t, r) {
            var o = superPropBase(e, t);
            if (o) {
                var p = Object.getOwnPropertyDescriptor(o, t);
                return p.get ? p.get.call(arguments.length < 3 ? e : r) : p.value
            }
        }, _get.apply(this, arguments)
    }
    module.exports = _get;
});
define("@babel/runtime/helpers/getPrototypeOf.js", function(require, module, exports, window, document, frames, self, location, navigator, localStorage, history, Caches, screen, alert, confirm, prompt, XMLHttpRequest, WebSocket, Reporter, webkit, WeixinJSCore) {
    function _getPrototypeOf(t) {
        return module.exports = _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function(t) {
            return t.__proto__ || Object.getPrototypeOf(t)
        }, _getPrototypeOf(t)
    }
    module.exports = _getPrototypeOf;
});
define("@babel/runtime/helpers/inherits.js", function(require, module, exports, window, document, frames, self, location, navigator, localStorage, history, Caches, screen, alert, confirm, prompt, XMLHttpRequest, WebSocket, Reporter, webkit, WeixinJSCore) {
    var setPrototypeOf = require("./setPrototypeOf");

    function _inherits(e, t) {
        if ("function" != typeof t && null !== t) throw new TypeError("Super expression must either be null or a function");
        e.prototype = Object.create(t && t.prototype, {
            constructor: {
                value: e,
                writable: !0,
                configurable: !0
            }
        }), Object.defineProperty(e, "prototype", {
            writable: !1
        }), t && setPrototypeOf(e, t)
    }
    module.exports = _inherits;
});
define("@babel/runtime/helpers/isNativeFunction.js", function(require, module, exports, window, document, frames, self, location, navigator, localStorage, history, Caches, screen, alert, confirm, prompt, XMLHttpRequest, WebSocket, Reporter, webkit, WeixinJSCore) {
    function _isNativeFunction(n) {
        return -1 !== Function.toString.call(n).indexOf("[native code]")
    }
    module.exports = _isNativeFunction;
});
define("@babel/runtime/helpers/isNativeReflectConstruct.js", function(require, module, exports, window, document, frames, self, location, navigator, localStorage, history, Caches, screen, alert, confirm, prompt, XMLHttpRequest, WebSocket, Reporter, webkit, WeixinJSCore) {
    function _isNativeReflectConstruct() {
        if ("undefined" == typeof Reflect || !Reflect.construct) return !1;
        if (Reflect.construct.sham) return !1;
        if ("function" == typeof Proxy) return !0;
        try {
            return Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], (function() {}))), !0
        } catch (t) {
            return !1
        }
    }
    module.exports = _isNativeReflectConstruct;
});
define("@babel/runtime/helpers/iterableToArray.js", function(require, module, exports, window, document, frames, self, location, navigator, localStorage, history, Caches, screen, alert, confirm, prompt, XMLHttpRequest, WebSocket, Reporter, webkit, WeixinJSCore) {
    function _iterableToArray(r) {
        if ("undefined" != typeof Symbol && null != r[Symbol.iterator] || null != r["@@iterator"]) return Array.from(r)
    }
    module.exports = _iterableToArray;
});
define("@babel/runtime/helpers/iterableToArrayLimit.js", function(require, module, exports, window, document, frames, self, location, navigator, localStorage, history, Caches, screen, alert, confirm, prompt, XMLHttpRequest, WebSocket, Reporter, webkit, WeixinJSCore) {
    function _iterableToArrayLimit(r, e) {
        var l = null == r ? null : "undefined" != typeof Symbol && r[Symbol.iterator] || r["@@iterator"];
        if (null != l) {
            var t, n, i, a, u = [],
                o = !0,
                f = !1;
            try {
                if (i = (l = l.call(r)).next, 0 === e) {
                    if (Object(l) !== l) return;
                    o = !1
                } else
                    for (; !(o = (t = i.call(l)).done) && (u.push(t.value), u.length !== e); o = !0);
            } catch (r) {
                f = !0, n = r
            } finally {
                try {
                    if (!o && null != l.return && (a = l.return(), Object(a) !== a)) return
                } finally {
                    if (f) throw n
                }
            }
            return u
        }
    }
    module.exports = _iterableToArrayLimit;
});
define("@babel/runtime/helpers/nonIterableRest.js", function(require, module, exports, window, document, frames, self, location, navigator, localStorage, history, Caches, screen, alert, confirm, prompt, XMLHttpRequest, WebSocket, Reporter, webkit, WeixinJSCore) {
    function _nonIterableRest() {
        throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")
    }
    module.exports = _nonIterableRest;
});
define("@babel/runtime/helpers/nonIterableSpread.js", function(require, module, exports, window, document, frames, self, location, navigator, localStorage, history, Caches, screen, alert, confirm, prompt, XMLHttpRequest, WebSocket, Reporter, webkit, WeixinJSCore) {
    function _nonIterableSpread() {
        throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")
    }
    module.exports = _nonIterableSpread;
});
define("@babel/runtime/helpers/objectSpread2.js", function(require, module, exports, window, document, frames, self, location, navigator, localStorage, history, Caches, screen, alert, confirm, prompt, XMLHttpRequest, WebSocket, Reporter, webkit, WeixinJSCore) {
    var defineProperty = require("./defineProperty");

    function ownKeys(e, r) {
        var t = Object.keys(e);
        if (Object.getOwnPropertySymbols) {
            var o = Object.getOwnPropertySymbols(e);
            r && (o = o.filter((function(r) {
                return Object.getOwnPropertyDescriptor(e, r).enumerable
            }))), t.push.apply(t, o)
        }
        return t
    }

    function _objectSpread2(e) {
        for (var r = 1; r < arguments.length; r++) {
            var t = null != arguments[r] ? arguments[r] : {};
            r % 2 ? ownKeys(Object(t), !0).forEach((function(r) {
                defineProperty(e, r, t[r])
            })) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach((function(r) {
                Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r))
            }))
        }
        return e
    }
    module.exports = _objectSpread2;
});
define("@babel/runtime/helpers/possibleConstructorReturn.js", function(require, module, exports, window, document, frames, self, location, navigator, localStorage, history, Caches, screen, alert, confirm, prompt, XMLHttpRequest, WebSocket, Reporter, webkit, WeixinJSCore) {
    var _typeof = require("./typeof"),
        assertThisInitialized = require("./assertThisInitialized");

    function _possibleConstructorReturn(e, r) {
        if (r && ("object" === _typeof(r) || "function" == typeof r)) return r;
        if (void 0 !== r) throw new TypeError("Derived constructors may only return object or undefined");
        return assertThisInitialized(e)
    }
    module.exports = _possibleConstructorReturn;
});
define("@babel/runtime/helpers/regeneratorRuntime.js", function(require, module, exports, window, document, frames, self, location, navigator, localStorage, history, Caches, screen, alert, confirm, prompt, XMLHttpRequest, WebSocket, Reporter, webkit, WeixinJSCore) {
    var t = require("./typeof");

    function r() {
        module.exports = r = function() {
            return e
        }, module.exports.__esModule = !0, module.exports.default = module.exports;
        var e = {},
            n = Object.prototype,
            o = n.hasOwnProperty,
            i = Object.defineProperty || function(t, r, e) {
                t[r] = e.value
            },
            a = "function" == typeof Symbol ? Symbol : {},
            c = a.iterator || "@@iterator",
            u = a.asyncIterator || "@@asyncIterator",
            l = a.toStringTag || "@@toStringTag";

        function h(t, r, e) {
            return Object.defineProperty(t, r, {
                value: e,
                enumerable: !0,
                configurable: !0,
                writable: !0
            }), t[r]
        }
        try {
            h({}, "")
        } catch (t) {
            h = function(t, r, e) {
                return t[r] = e
            }
        }

        function f(t, r, e, n) {
            var o = r && r.prototype instanceof d ? r : d,
                a = Object.create(o.prototype),
                c = new k(n || []);
            return i(a, "_invoke", {
                value: E(t, e, c)
            }), a
        }

        function s(t, r, e) {
            try {
                return {
                    type: "normal",
                    arg: t.call(r, e)
                }
            } catch (t) {
                return {
                    type: "throw",
                    arg: t
                }
            }
        }
        e.wrap = f;
        var p = {};

        function d() {}

        function v() {}

        function y() {}
        var g = {};
        h(g, c, (function() {
            return this
        }));
        var m = Object.getPrototypeOf,
            w = m && m(m(G([])));
        w && w !== n && o.call(w, c) && (g = w);
        var x = y.prototype = d.prototype = Object.create(g);

        function L(t) {
            ["next", "throw", "return"].forEach((function(r) {
                h(t, r, (function(t) {
                    return this._invoke(r, t)
                }))
            }))
        }

        function b(r, e) {
            function n(i, a, c, u) {
                var l = s(r[i], r, a);
                if ("throw" !== l.type) {
                    var h = l.arg,
                        f = h.value;
                    return f && "object" == t(f) && o.call(f, "__await") ? e.resolve(f.__await).then((function(t) {
                        n("next", t, c, u)
                    }), (function(t) {
                        n("throw", t, c, u)
                    })) : e.resolve(f).then((function(t) {
                        h.value = t, c(h)
                    }), (function(t) {
                        return n("throw", t, c, u)
                    }))
                }
                u(l.arg)
            }
            var a;
            i(this, "_invoke", {
                value: function(t, r) {
                    function o() {
                        return new e((function(e, o) {
                            n(t, r, e, o)
                        }))
                    }
                    return a = a ? a.then(o, o) : o()
                }
            })
        }

        function E(t, r, e) {
            var n = "suspendedStart";
            return function(o, i) {
                if ("executing" === n) throw new Error("Generator is already running");
                if ("completed" === n) {
                    if ("throw" === o) throw i;
                    return N()
                }
                for (e.method = o, e.arg = i;;) {
                    var a = e.delegate;
                    if (a) {
                        var c = _(a, e);
                        if (c) {
                            if (c === p) continue;
                            return c
                        }
                    }
                    if ("next" === e.method) e.sent = e._sent = e.arg;
                    else if ("throw" === e.method) {
                        if ("suspendedStart" === n) throw n = "completed", e.arg;
                        e.dispatchException(e.arg)
                    } else "return" === e.method && e.abrupt("return", e.arg);
                    n = "executing";
                    var u = s(t, r, e);
                    if ("normal" === u.type) {
                        if (n = e.done ? "completed" : "suspendedYield", u.arg === p) continue;
                        return {
                            value: u.arg,
                            done: e.done
                        }
                    }
                    "throw" === u.type && (n = "completed", e.method = "throw", e.arg = u.arg)
                }
            }
        }

        function _(t, r) {
            var e = r.method,
                n = t.iterator[e];
            if (void 0 === n) return r.delegate = null, "throw" === e && t.iterator.return && (r.method = "return", r.arg = void 0, _(t, r), "throw" === r.method) || "return" !== e && (r.method = "throw", r.arg = new TypeError("The iterator does not provide a '" + e + "' method")), p;
            var o = s(n, t.iterator, r.arg);
            if ("throw" === o.type) return r.method = "throw", r.arg = o.arg, r.delegate = null, p;
            var i = o.arg;
            return i ? i.done ? (r[t.resultName] = i.value, r.next = t.nextLoc, "return" !== r.method && (r.method = "next", r.arg = void 0), r.delegate = null, p) : i : (r.method = "throw", r.arg = new TypeError("iterator result is not an object"), r.delegate = null, p)
        }

        function O(t) {
            var r = {
                tryLoc: t[0]
            };
            1 in t && (r.catchLoc = t[1]), 2 in t && (r.finallyLoc = t[2], r.afterLoc = t[3]), this.tryEntries.push(r)
        }

        function j(t) {
            var r = t.completion || {};
            r.type = "normal", delete r.arg, t.completion = r
        }

        function k(t) {
            this.tryEntries = [{
                tryLoc: "root"
            }], t.forEach(O, this), this.reset(!0)
        }

        function G(t) {
            if (t) {
                var r = t[c];
                if (r) return r.call(t);
                if ("function" == typeof t.next) return t;
                if (!isNaN(t.length)) {
                    var e = -1,
                        n = function r() {
                            for (; ++e < t.length;)
                                if (o.call(t, e)) return r.value = t[e], r.done = !1, r;
                            return r.value = void 0, r.done = !0, r
                        };
                    return n.next = n
                }
            }
            return {
                next: N
            }
        }

        function N() {
            return {
                value: void 0,
                done: !0
            }
        }
        return v.prototype = y, i(x, "constructor", {
            value: y,
            configurable: !0
        }), i(y, "constructor", {
            value: v,
            configurable: !0
        }), v.displayName = h(y, l, "GeneratorFunction"), e.isGeneratorFunction = function(t) {
            var r = "function" == typeof t && t.constructor;
            return !!r && (r === v || "GeneratorFunction" === (r.displayName || r.name))
        }, e.mark = function(t) {
            return Object.setPrototypeOf ? Object.setPrototypeOf(t, y) : (t.__proto__ = y, h(t, l, "GeneratorFunction")), t.prototype = Object.create(x), t
        }, e.awrap = function(t) {
            return {
                __await: t
            }
        }, L(b.prototype), h(b.prototype, u, (function() {
            return this
        })), e.AsyncIterator = b, e.async = function(t, r, n, o, i) {
            void 0 === i && (i = Promise);
            var a = new b(f(t, r, n, o), i);
            return e.isGeneratorFunction(r) ? a : a.next().then((function(t) {
                return t.done ? t.value : a.next()
            }))
        }, L(x), h(x, l, "Generator"), h(x, c, (function() {
            return this
        })), h(x, "toString", (function() {
            return "[object Generator]"
        })), e.keys = function(t) {
            var r = Object(t),
                e = [];
            for (var n in r) e.push(n);
            return e.reverse(),
                function t() {
                    for (; e.length;) {
                        var n = e.pop();
                        if (n in r) return t.value = n, t.done = !1, t
                    }
                    return t.done = !0, t
                }
        }, e.values = G, k.prototype = {
            constructor: k,
            reset: function(t) {
                if (this.prev = 0, this.next = 0, this.sent = this._sent = void 0, this.done = !1, this.delegate = null, this.method = "next", this.arg = void 0, this.tryEntries.forEach(j), !t)
                    for (var r in this) "t" === r.charAt(0) && o.call(this, r) && !isNaN(+r.slice(1)) && (this[r] = void 0)
            },
            stop: function() {
                this.done = !0;
                var t = this.tryEntries[0].completion;
                if ("throw" === t.type) throw t.arg;
                return this.rval
            },
            dispatchException: function(t) {
                if (this.done) throw t;
                var r = this;

                function e(e, n) {
                    return a.type = "throw", a.arg = t, r.next = e, n && (r.method = "next", r.arg = void 0), !!n
                }
                for (var n = this.tryEntries.length - 1; n >= 0; --n) {
                    var i = this.tryEntries[n],
                        a = i.completion;
                    if ("root" === i.tryLoc) return e("end");
                    if (i.tryLoc <= this.prev) {
                        var c = o.call(i, "catchLoc"),
                            u = o.call(i, "finallyLoc");
                        if (c && u) {
                            if (this.prev < i.catchLoc) return e(i.catchLoc, !0);
                            if (this.prev < i.finallyLoc) return e(i.finallyLoc)
                        } else if (c) {
                            if (this.prev < i.catchLoc) return e(i.catchLoc, !0)
                        } else {
                            if (!u) throw new Error("try statement without catch or finally");
                            if (this.prev < i.finallyLoc) return e(i.finallyLoc)
                        }
                    }
                }
            },
            abrupt: function(t, r) {
                for (var e = this.tryEntries.length - 1; e >= 0; --e) {
                    var n = this.tryEntries[e];
                    if (n.tryLoc <= this.prev && o.call(n, "finallyLoc") && this.prev < n.finallyLoc) {
                        var i = n;
                        break
                    }
                }
                i && ("break" === t || "continue" === t) && i.tryLoc <= r && r <= i.finallyLoc && (i = null);
                var a = i ? i.completion : {};
                return a.type = t, a.arg = r, i ? (this.method = "next", this.next = i.finallyLoc, p) : this.complete(a)
            },
            complete: function(t, r) {
                if ("throw" === t.type) throw t.arg;
                return "break" === t.type || "continue" === t.type ? this.next = t.arg : "return" === t.type ? (this.rval = this.arg = t.arg, this.method = "return", this.next = "end") : "normal" === t.type && r && (this.next = r), p
            },
            finish: function(t) {
                for (var r = this.tryEntries.length - 1; r >= 0; --r) {
                    var e = this.tryEntries[r];
                    if (e.finallyLoc === t) return this.complete(e.completion, e.afterLoc), j(e), p
                }
            },
            catch: function(t) {
                for (var r = this.tryEntries.length - 1; r >= 0; --r) {
                    var e = this.tryEntries[r];
                    if (e.tryLoc === t) {
                        var n = e.completion;
                        if ("throw" === n.type) {
                            var o = n.arg;
                            j(e)
                        }
                        return o
                    }
                }
                throw new Error("illegal catch attempt")
            },
            delegateYield: function(t, r, e) {
                return this.delegate = {
                    iterator: G(t),
                    resultName: r,
                    nextLoc: e
                }, "next" === this.method && (this.arg = void 0), p
            }
        }, e
    }
    module.exports = r, module.exports.__esModule = !0, module.exports.default = module.exports;

});
define("@babel/runtime/helpers/set.js", function(require, module, exports, window, document, frames, self, location, navigator, localStorage, history, Caches, screen, alert, confirm, prompt, XMLHttpRequest, WebSocket, Reporter, webkit, WeixinJSCore) {
    var superPropBase = require("./superPropBase"),
        defineProperty = require("./defineProperty");

    function set(e, r, t, i) {
        return (set = "undefined" != typeof Reflect && Reflect.set ? Reflect.set : function(e, r, t, i) {
            var n, o = superPropBase(e, r);
            if (o) {
                if ((n = Object.getOwnPropertyDescriptor(o, r)).set) return n.set.call(i, t), !0;
                if (!n.writable) return !1
            }
            if (n = Object.getOwnPropertyDescriptor(i, r)) {
                if (!n.writable) return !1;
                n.value = t, Object.defineProperty(i, r, n)
            } else defineProperty(i, r, t);
            return !0
        })(e, r, t, i)
    }

    function _set(e, r, t, i, n) {
        if (!set(e, r, t, i || e) && n) throw new TypeError("failed to set property");
        return t
    }
    module.exports = _set;
});
define("@babel/runtime/helpers/setPrototypeOf.js", function(require, module, exports, window, document, frames, self, location, navigator, localStorage, history, Caches, screen, alert, confirm, prompt, XMLHttpRequest, WebSocket, Reporter, webkit, WeixinJSCore) {
    function _setPrototypeOf(t, e) {
        return module.exports = _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function(t, e) {
            return t.__proto__ = e, t
        }, _setPrototypeOf(t, e)
    }
    module.exports = _setPrototypeOf;
});
define("@babel/runtime/helpers/slicedToArray.js", function(require, module, exports, window, document, frames, self, location, navigator, localStorage, history, Caches, screen, alert, confirm, prompt, XMLHttpRequest, WebSocket, Reporter, webkit, WeixinJSCore) {
    var arrayWithHoles = require("./arrayWithHoles"),
        iterableToArrayLimit = require("./iterableToArrayLimit"),
        unsupportedIterableToArray = require("./unsupportedIterableToArray"),
        nonIterableRest = require("./nonIterableRest");

    function _slicedToArray(r, e) {
        return arrayWithHoles(r) || iterableToArrayLimit(r, e) || unsupportedIterableToArray(r, e) || nonIterableRest()
    }
    module.exports = _slicedToArray;
});
define("@babel/runtime/helpers/superPropBase.js", function(require, module, exports, window, document, frames, self, location, navigator, localStorage, history, Caches, screen, alert, confirm, prompt, XMLHttpRequest, WebSocket, Reporter, webkit, WeixinJSCore) {
    var getPrototypeOf = require("./getPrototypeOf");

    function _superPropBase(e, r) {
        for (; !Object.prototype.hasOwnProperty.call(e, r) && null !== (e = getPrototypeOf(e)););
        return e
    }
    module.exports = _superPropBase;
});
define("@babel/runtime/helpers/toArray.js", function(require, module, exports, window, document, frames, self, location, navigator, localStorage, history, Caches, screen, alert, confirm, prompt, XMLHttpRequest, WebSocket, Reporter, webkit, WeixinJSCore) {
    var arrayWithHoles = require("./arrayWithHoles"),
        iterableToArray = require("./iterableToArray"),
        unsupportedIterableToArray = require("./unsupportedIterableToArray"),
        nonIterableRest = require("./nonIterableRest");

    function _toArray(r) {
        return arrayWithHoles(r) || iterableToArray(r) || unsupportedIterableToArray(r) || nonIterableRest()
    }
    module.exports = _toArray;
});
define("@babel/runtime/helpers/toConsumableArray.js", function(require, module, exports, window, document, frames, self, location, navigator, localStorage, history, Caches, screen, alert, confirm, prompt, XMLHttpRequest, WebSocket, Reporter, webkit, WeixinJSCore) {
    var arrayWithoutHoles = require("./arrayWithoutHoles"),
        iterableToArray = require("./iterableToArray"),
        unsupportedIterableToArray = require("./unsupportedIterableToArray"),
        nonIterableSpread = require("./nonIterableSpread");

    function _toConsumableArray(r) {
        return arrayWithoutHoles(r) || iterableToArray(r) || unsupportedIterableToArray(r) || nonIterableSpread()
    }
    module.exports = _toConsumableArray;
});
define("@babel/runtime/helpers/toPrimitive.js", function(require, module, exports, window, document, frames, self, location, navigator, localStorage, history, Caches, screen, alert, confirm, prompt, XMLHttpRequest, WebSocket, Reporter, webkit, WeixinJSCore) {
    var _typeof = require("./typeof");

    function _toPrimitive(r, t) {
        if ("object" !== _typeof(r) || null === r) return r;
        var e = r[Symbol.toPrimitive];
        if (void 0 !== e) {
            var i = e.call(r, t || "default");
            if ("object" !== _typeof(i)) return i;
            throw new TypeError("@@toPrimitive must return a primitive value.")
        }
        return ("string" === t ? String : Number)(r)
    }
    module.exports = _toPrimitive;
});
define("@babel/runtime/helpers/toPropertyKey.js", function(require, module, exports, window, document, frames, self, location, navigator, localStorage, history, Caches, screen, alert, confirm, prompt, XMLHttpRequest, WebSocket, Reporter, webkit, WeixinJSCore) {
    var _typeof = require("./typeof"),
        toPrimitive = require("./toPrimitive");

    function _toPropertyKey(r) {
        var t = toPrimitive(r, "string");
        return "symbol" === _typeof(t) ? t : String(t)
    }
    module.exports = _toPropertyKey;
});
define("@babel/runtime/helpers/typeof.js", function(require, module, exports, window, document, frames, self, location, navigator, localStorage, history, Caches, screen, alert, confirm, prompt, XMLHttpRequest, WebSocket, Reporter, webkit, WeixinJSCore) {
    function _typeof(o) {
        return module.exports = _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(o) {
            return typeof o
        } : function(o) {
            return o && "function" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? "symbol" : typeof o
        }, _typeof(o)
    }
    module.exports = _typeof;
});
define("@babel/runtime/helpers/unsupportedIterableToArray.js", function(require, module, exports, window, document, frames, self, location, navigator, localStorage, history, Caches, screen, alert, confirm, prompt, XMLHttpRequest, WebSocket, Reporter, webkit, WeixinJSCore) {
    var arrayLikeToArray = require("./arrayLikeToArray");

    function _unsupportedIterableToArray(r, e) {
        if (r) {
            if ("string" == typeof r) return arrayLikeToArray(r, e);
            var t = Object.prototype.toString.call(r).slice(8, -1);
            return "Object" === t && r.constructor && (t = r.constructor.name), "Map" === t || "Set" === t ? Array.from(r) : "Arguments" === t || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t) ? arrayLikeToArray(r, e) : void 0
        }
    }
    module.exports = _unsupportedIterableToArray;
});
define("@babel/runtime/helpers/wrapNativeSuper.js", function(require, module, exports, window, document, frames, self, location, navigator, localStorage, history, Caches, screen, alert, confirm, prompt, XMLHttpRequest, WebSocket, Reporter, webkit, WeixinJSCore) {
    var getPrototypeOf = require("./getPrototypeOf"),
        setPrototypeOf = require("./setPrototypeOf"),
        isNativeFunction = require("./isNativeFunction"),
        construct = require("./construct");

    function _wrapNativeSuper(t) {
        var e = "function" == typeof Map ? new Map : void 0;
        return module.exports = _wrapNativeSuper = function(t) {
            if (null === t || !isNativeFunction(t)) return t;
            if ("function" != typeof t) throw new TypeError("Super expression must either be null or a function");
            if (void 0 !== e) {
                if (e.has(t)) return e.get(t);
                e.set(t, r)
            }

            function r() {
                return construct(t, arguments, getPrototypeOf(this).constructor)
            }
            return r.prototype = Object.create(t.prototype, {
                constructor: {
                    value: r,
                    enumerable: !1,
                    writable: !0,
                    configurable: !0
                }
            }), setPrototypeOf(r, t)
        }, _wrapNativeSuper(t)
    }
    module.exports = _wrapNativeSuper;
});
define("Helpers/TRTC.js", function(require, module, exports, window, document, frames, self, location, navigator, localStorage, history, Caches, screen, alert, confirm, prompt, XMLHttpRequest, WebSocket, Reporter, webkit, WeixinJSCore) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
        value: !0
    }), exports.default = exports.ETRTCEvent = void 0, require("../@babel/runtime/helpers/Arrayincludes");
    var e = require("../@babel/runtime/helpers/regeneratorRuntime"),
        r = require("../@babel/runtime/helpers/asyncToGenerator"),
        t = require("../@babel/runtime/helpers/classCallCheck"),
        n = require("../@babel/runtime/helpers/createClass"),
        s = a(require("trtc-wx-sdk")),
        E = a(require("../utils/logger")),
        i = a(require("../configs/AppConfig"));

    function a(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    var o = new E.default({
            pageName: "TRTC",
            aegisLogEnable: !0,
            wxLogEnable: !1
        }),
        u = exports.ETRTCEvent = function(e) {
            return e.LOCAL_JOIN = "LOCAL_JOIN", e.LOCAL_LEAVE = "LOCAL_LEAVE", e.KICKED_OUT = "KICKED_OUT", e.REMOTE_USER_JOIN = "REMOTE_USER_JOIN", e.REMOTE_USER_LEAVE = "REMOTE_USER_LEAVE", e.REMOTE_VIDEO_ADD = "REMOTE_VIDEO_ADD", e.REMOTE_VIDEO_REMOVE = "REMOTE_VIDEO_REMOVE", e.REMOTE_AUDIO_ADD = "REMOTE_AUDIO_ADD", e.REMOTE_AUDIO_REMOVE = "REMOTE_AUDIO_REMOVE", e.REMOTE_STATE_UPDATE = "REMOTE_STATE_UPDATE", e.LOCAL_NET_STATE_UPDATE = "LOCAL_NET_STATE_UPDATE", e.REMOTE_NET_STATE_UPDATE = "REMOTE_NET_STATE_UPDATE", e.REMOTE_AUDIO_VOLUME_UPDATE = "REMOTE_AUDIO_VOLUME_UPDATE", e.LOCAL_AUDIO_VOLUME_UPDATE = "LOCAL_AUDIO_VOLUME_UPDATE", e.VIDEO_FULLSCREEN_UPDATE = "VIDEO_FULLSCREEN_UPDATE", e.BGM_PLAY_PROGRESS = "BGM_PLAY_PROGRESS", e.BGM_PLAY_COMPLETE = "BGM_PLAY_COMPLETE", e.ERROR = "ERROR", e.LOCAL_STATE_UPDATE = "LOCAL_STATE_UPDATE", e.LOCAL_HANGUP = "LOCAL_HANGUP", e.LOCAL_INTERRUPTED = "LOCAL_INTERRUPTED", e.LOCAL_RECONNECTING = "LOCAL_RECONNECTING", e
        }({});
    (exports.default = function() {
        function E(e) {
            if (t(this, E), this.trtc = null, this.EVENTS = null, this.observers = [], this.pusherInstance = null, !e) throw new Error('"pageInstance" is supposed to be passed in ctor of TRTCHelper.');
            this.trtc = new s.default(e), this.EVENTS = this.trtc.EVENT, 0 !== this.observers.length && (o.assert("observers should be 0 but got ".concat(this.observers.length)), o.reportEvent("test-2")), this.registerEvents(), this.pusherInstance = this.trtc.createPusher()
        }
        var a;
        return n(E, [{
            key: "joinMediaRoom",
            value: function(e) {
                var r = e.roomInfo,
                    t = e.mediaState,
                    n = e.scene,
                    s = e.expCloudenv,
                    a = r.app_id,
                    u = r.av_user_id,
                    _ = r.trtc_token,
                    c = t.mic,
                    l = t.cam,
                    T = _ || {},
                    O = T.usr_sig,
                    A = T.group_id,
                    v = T.priv_map,
                    h = T.set_flag,
                    L = void 0 === s ? h : s,
                    R = {
                        scene: n,
                        sdkAppID: a,
                        userID: u,
                        userSig: O,
                        privateMapKey: v,
                        cloudenv: L,
                        enableCamera: l,
                        enableMic: c,
                        autopush: !0,
                        encsmall: 1,
                        recvMode: 4,
                        minBitrate: i.default.minBitrate,
                        maxBitrate: i.default.maxBitrate
                    };
                if ("PRO" === s ? R.roomID = A : R.strRoomID = A, !(a && u && O && (A || R.roomID) && v)) throw o.reportEvent("trtc_invalid_params_for_enter_room"), o.warn("params for enterRoom is invalid: ".concat(JSON.stringify(R))), new Error("invalid params for enterRoom");
                return E.isValidCloudEnv(L) || o.warn("Be noticed! 'cloudenv' passed in is invalid. Got: ".concat(L)), o.info("[enterRoom] req: ".concat(JSON.stringify(R))), this.trtc.enterRoom(R)
            }
        }, {
            key: "leaveMediaRoom",
            value: (a = r(e().mark((function r() {
                return e().wrap((function(e) {
                    for (;;) switch (e.prev = e.next) {
                        case 0:
                            return e.next = 2, this.trtc.exitRoom();
                        case 2:
                        case "end":
                            return e.stop()
                    }
                }), r, this)
            }))), function() {
                return a.apply(this, arguments)
            })
        }, {
            key: "leaveMediaRoomNotUsed",
            value: function() {
                var e = this.trtc.exitRoom();
                return {
                    pusher: e.pusher,
                    playerList: e.playerList
                }
            }
        }, {
            key: "findPlayerAccordingTo",
            value: function(e) {
                for (var r = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : "main", t = this.trtc.getPlayerList(), n = t.length, s = 0; s < n; s++) {
                    var E = t[s],
                        i = E.userID,
                        a = E.streamType;
                    if (a === r && e === i) return t[s]
                }
                return null
            }
        }, {
            key: "getTRTC",
            value: function() {
                return this.trtc
            }
        }, {
            key: "updatePusherAttrs",
            value: function(e) {
                return this.trtc.setPusherAttributes(e)
            }
        }, {
            key: "getPusherAttrs",
            value: function() {
                return this.trtc.getPusherAttributes()
            }
        }, {
            key: "startPusher",
            value: function() {
                null !== this.pusherInstance ? this.pusherInstance.start() : o.error("pusherInstance is null")
            }
        }, {
            key: "getPusherInstance",
            value: function() {
                return this.pusherInstance
            }
        }, {
            key: "switchCamera",
            value: function(e) {
                var r = e.success,
                    t = e.fail;
                if (null === this.pusherInstance) return o.error("pusherInstance is null"), void t("-1");
                try {
                    this.pusherInstance.switchCamera({
                        success: r,
                        fail: t
                    })
                } catch (e) {
                    o.error("switchCamera throws exception: ".concat(e.message)), t("-2")
                }
            }
        }, {
            key: "registerEvent",
            value: function(e, r, t) {
                this.trtc.on(e, r, t)
            }
        }, {
            key: "registerEvents",
            value: function() {
                for (var e = [u.LOCAL_JOIN, u.LOCAL_LEAVE, u.KICKED_OUT, u.REMOTE_USER_JOIN, u.REMOTE_USER_LEAVE, u.REMOTE_VIDEO_ADD, u.REMOTE_VIDEO_REMOVE, u.REMOTE_AUDIO_ADD, u.REMOTE_AUDIO_REMOVE, u.REMOTE_STATE_UPDATE, u.LOCAL_NET_STATE_UPDATE, u.REMOTE_NET_STATE_UPDATE, u.REMOTE_AUDIO_VOLUME_UPDATE, u.LOCAL_AUDIO_VOLUME_UPDATE, u.VIDEO_FULLSCREEN_UPDATE, u.BGM_PLAY_PROGRESS, u.BGM_PLAY_COMPLETE, u.ERROR, u.LOCAL_STATE_UPDATE, u.LOCAL_HANGUP, u.LOCAL_INTERRUPTED, u.LOCAL_RECONNECTING], r = 0, t = e.length; r < t; r++) {
                    var n = e[r];
                    this.registerEvent(n, this.notifyObservers(n), this)
                }
            }
        }, {
            key: "getCallbackFuncName",
            value: function(e) {
                for (var r = e.split("_"), t = "", n = 0, s = r.length; n < s; n++) {
                    var E = r[n];
                    t += "".concat(E[0]).concat(E.substring(1).toLowerCase())
                }
                return "on".concat(t)
            }
        }, {
            key: "_shouldLog",
            value: function(e, r) {
                if ([u.LOCAL_NET_STATE_UPDATE, u.LOCAL_AUDIO_VOLUME_UPDATE, u.REMOTE_NET_STATE_UPDATE].includes(e)) return !1;
                if (e === u.REMOTE_STATE_UPDATE) try {
                    if (2105 === r[0].data.detail.code) return !1
                } catch (e) {
                    return o.error("cannot get 'code' from args: ".concat(JSON.stringify(r))), !0
                }
                return !0
            }
        }, {
            key: "notifyObservers",
            value: function(e) {
                var r = this;
                return function() {
                    for (var t = arguments.length, n = new Array(t), s = 0; s < t; s++) n[s] = arguments[s];
                    r._shouldLog(e, n);
                    for (var E = r.getCallbackFuncName(e), i = 0, a = r.observers.length; i < a; i++) {
                        var u;
                        if ("function" == typeof r.observers[i][E])(u = r.observers[i][E]).call.apply(u, [r.observers[i]].concat(n));
                        else o.warn("observer at index ".concat(i, " doesn't have a listener name '").concat(E, "' for event '").concat(e, "'.\n            Did you miss it?\n          "))
                    }
                }
            }
        }, {
            key: "registerObserver",
            value: function(e) {
                this.observers.push(e), 1 < this.observers.length && (o.assert("observers' length is: ".concat(this.observers.length)), o.reportEvent("test-1"))
            }
        }, {
            key: "unregisterObserver",
            value: function(e) {
                for (var r = 0, t = this.observers.length; r < t; r++)
                    if (this.observers[r] === e) return void this.observers.splice(r, 1);
                o.assert("unregister observer failed because cannot find the given observer. len: ".concat(this.observers.length))
            }
        }, {
            key: "testFireEvent",
            value: function(e) {
                for (var r = arguments.length, t = new Array(r > 1 ? r - 1 : 0), n = 1; n < r; n++) t[n - 1] = arguments[n];
                this.notifyObservers(e).apply(void 0, t)
            }
        }], [{
            key: "isValidCloudEnv",
            value: function(e) {
                return E.ValidCloudEnvs.includes(e)
            }
        }]), E
    }()).ValidCloudEnvs = ["CCC", "DEV", "PRO"];
});
define("Helpers/UpgradeManager.js", function(require, module, exports, window, document, frames, self, location, navigator, localStorage, history, Caches, screen, alert, confirm, prompt, XMLHttpRequest, WebSocket, Reporter, webkit, WeixinJSCore) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
        value: !0
    }), exports.default = void 0;
    var e = require("../@babel/runtime/helpers/regeneratorRuntime"),
        r = require("../@babel/runtime/helpers/asyncToGenerator"),
        t = require("../@babel/runtime/helpers/classCallCheck"),
        n = require("../@babel/runtime/helpers/createClass"),
        a = require("../@babel/runtime/helpers/inherits"),
        i = require("../@babel/runtime/helpers/createSuper"),
        u = o(require("../https/HttpBase")),
        s = o(require("../utils/EventEmitter"));

    function o(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    var p = new(o(require("../utils/logger")).default)({
            pageName: "UpgradeManager",
            aegisLogEnable: !0,
            wxLogEnable: !1
        }),
        c = function(e) {
            return e.Unknown = "unknown", e.No = "no", e.Yes = "yes", e
        }(c || {});
    (exports.default = function(s) {
        a(d, s);
        var o, l, f = i(d);

        function d(e) {
            var r;
            return t(this, d), (r = f.call(this)).flag = c.Unknown, r.mgr = null, r.app = null, p.info("UpdateManager is created"), r.app = e, r.mgr = wx.getUpdateManager(), r.mgr ? r.addListener() : p.assert("cannot get instance from wx.getUpdateManager"), r
        }
        return n(d, [{
            key: "addListener",
            value: function() {
                var t = this;
                this.mgr.onCheckForUpdate(function() {
                    var n = r(e().mark((function r(n) {
                        return e().wrap((function(e) {
                            for (;;) switch (e.prev = e.next) {
                                case 0:
                                    if (n.hasUpdate) {
                                        e.next = 3;
                                        break
                                    }
                                    return p.info("no new version found"), e.abrupt("return");
                                case 3:
                                    return p.info("new version found"), e.next = 6, t.updateFlag();
                                case 6:
                                case "end":
                                    return e.stop()
                            }
                        }), r)
                    })));
                    return function(e) {
                        return n.apply(this, arguments)
                    }
                }()), this.mgr.onUpdateReady(r(e().mark((function r() {
                    return e().wrap((function(e) {
                        for (;;) switch (e.prev = e.next) {
                            case 0:
                                return p.info("new version is ready now"), p.reportEvent("mp_upgrade_ready"), e.next = 4, t.updateFlag();
                            case 4:
                                if (t.isNeedUpgrade()) {
                                    e.next = 7;
                                    break
                                }
                                return p.info("wont force upgrade"), e.abrupt("return");
                            case 7:
                                t.emit("NEW_VERSION_IS_READY", {});
                            case 8:
                            case "end":
                                return e.stop()
                        }
                    }), r)
                })))), this.mgr.onUpdateFailed((function(e) {
                    p.error("new version download failed: ".concat(JSON.stringify(e))), p.reportEvent("mp_upgrade_failed")
                }))
            }
        }, {
            key: "forceUpgrade",
            value: function() {
                var e = this;
                p.info("force upgrade fires"), wx.showModal({
                    title: "更新提示",
                    content: "新版本已经准备好，是否重启应用？",
                    success: function(r) {
                        r.confirm ? (p.reportEvent("mp_upgrade_agreed"), e.mgr.applyUpdate()) : (p.assert("should not be here."), p.reportEvent("mp_upgrade_refused"))
                    }
                })
            }
        }, {
            key: "setFlag",
            value: function(e) {
                p.info("update flag from ".concat(this.flag, " to ").concat(e)), this.flag = e
            }
        }, {
            key: "isUpgradeFlagSettled",
            value: function() {
                return this.flag !== c.Unknown
            }
        }, {
            key: "isNeedUpgrade",
            value: function() {
                return this.flag === c.Yes
            }
        }, {
            key: "updateFlag",
            value: (l = r(e().mark((function r() {
                return e().wrap((function(e) {
                    for (;;) switch (e.prev = e.next) {
                        case 0:
                            if (this.isUpgradeFlagSettled()) {
                                e.next = 3;
                                break
                            }
                            return e.next = 3, this.queryIfWeShallUpgrade();
                        case 3:
                        case "end":
                            return e.stop()
                    }
                }), r, this)
            }))), function() {
                return l.apply(this, arguments)
            })
        }, {
            key: "queryIfWeShallUpgrade",
            value: (o = r(e().mark((function r() {
                var t, n, a;
                return e().wrap((function(e) {
                    for (;;) switch (e.prev = e.next) {
                        case 0:
                            return t = this.app.getCurrentDomain(), n = "".concat(t).concat(d.path), e.prev = 2, e.next = 5, u.default.get(n);
                        case 5:
                            a = e.sent, this.setFlag(a.data.data.isUpgrade ? c.Yes : c.No), e.next = 13;
                            break;
                        case 9:
                            e.prev = 9, e.t0 = e.catch(2), p.error("query pro platform failed: ".concat(null === e.t0 || void 0 === e.t0 ? void 0 : e.t0.message)), this.setFlag(c.No);
                        case 13:
                        case "end":
                            return e.stop()
                    }
                }), r, this, [
                    [2, 9]
                ])
            }))), function() {
                return o.apply(this, arguments)
            })
        }, {
            key: "onceEventListener",
            value: function(e) {
                this.unsubscribe("CHANGE", e), this.subscribe("CHANGE", e)
            }
        }, {
            key: "emit",
            value: function(e, r) {
                this.publish("CHANGE", e, r)
            }
        }]), d
    }(s.default)).path = "/web-service/web-config?group=webConfig.mpWeMeet.upgrade&key=forceUpgrade";
});
define("actions/AppAction.js", function(require, module, exports, window, document, frames, self, location, navigator, localStorage, history, Caches, screen, alert, confirm, prompt, XMLHttpRequest, WebSocket, Reporter, webkit, WeixinJSCore) {
    "use strict";
    require("../@babel/runtime/helpers/Arrayincludes"), console.log("AppAction.js loaded start");
    var e = require("../utils/Dispatcher"),
        t = require("../stores/AppStore"),
        i = require("../stores/UserStore"),
        r = require("../stores/MembersStore"),
        n = require("../stores/MeetingStore"),
        o = require("../clients/BeaconClient"),
        s = require("../stores/PrivateMeetingStore"),
        a = (require("../stores/AudioLayoutMembersStore"), require("../stores/FloatLayoutMembersStore")),
        c = (require("../stores/RecyclableMemberListStore"), require("../actions/UserAction")),
        u = require("../actions/MembersAction"),
        d = require("../actions/MeetingAction"),
        p = require("../actions/PrivateMeetingAction"),
        l = require("../actions/AudioLayoutMembersAction"),
        g = require("../actions/FloatLayoutMembersAction"),
        f = require("../actions/RecyclableMemberListAction"),
        m = (require("../utils/plugins/LivePusherRestarter"), require("../utils/logger")),
        y = require("../constants/AppType"),
        w = require("../utils/util"),
        S = new m({
            pageName: "AppAction",
            aegisLogEnable: !0,
            wxLogEnable: !1
        }),
        h = {
            inited: !1,
            init: function() {
                this.inited || (this._doInit(), this._addListener(), this.updateSysInfo(), this.inited = !0)
            },
            _doInit: function() {
                t.init(), i.init(), r.init(), s.init(), a.init(), c.init(), u.init(), d.init(), p.init(), l.init(), g.init(), f.init(), t.getUpgradeManager().onceEventListener(this.onUpgradeManagerChange.bind(this))
            },
            onUpgradeManagerChange: function(e) {
                switch (e) {
                    case "NEW_VERSION_IS_READY":
                        if (S.info("current meeting state: ".concat(n.getReadableXMPPRoomState())), n.isInMeeting()) return void S.info("current is in meeting, ignore to force upgrade");
                        S.info("current is not in meeting, it's ok to upgrade."), t.getUpgradeManager().forceUpgrade();
                        break;
                    default:
                        S.assert("unhandled action: ".concat(e))
                }
            },
            updateSysInfo: function() {
                var t = {},
                    i = !1,
                    r = !1;
                try {
                    t = wx.getSystemInfoSync(), S.info("systemInfo: ".concat(JSON.stringify(t))), i = "wxwork" === t.environment, r = this.isDeviceSupported(t), o.setConfig({
                        sysInfo: t,
                        releaseChannel: i ? "wxwork" : "wechat"
                    }), e.dispatch({
                        type: y.INIT_SYSTEM_INFO_SUCC,
                        payload: {
                            data: {
                                sysInfo: t,
                                isSupportDevice: r
                            }
                        }
                    })
                } catch (i) {
                    S.error("Get system info falied: ".concat(JSON.stringify(i))), e.dispatch({
                        type: y.INIT_SYSTEM_INFO_FAIL,
                        payload: {
                            data: t
                        }
                    }), wx.showToast({
                        title: i.message,
                        icon: "none"
                    })
                }
                if (i) {
                    S.info("wxwork detected! use wx.qy.xxx API to get wxwork client version only");
                    try {
                        wx.qy.getSystemInfo({
                            success: function(t) {
                                var i = w.isSupportQYWX(t.version);
                                e.dispatch({
                                    type: y.QYWX_VERSION_CHANGE,
                                    payload: {
                                        data: t.version
                                    }
                                }), S.info("wxwork version: ".concat(t.version)), o.report("mp_wxwork_support", {
                                    wxworkver: t.version,
                                    support: i ? "Y" : "N"
                                })
                            },
                            fail: function(e) {
                                throw e
                            }
                        })
                    } catch (e) {
                        var n = e && e.errMsg || e;
                        S.error("wx.qy.getSystemInfo API failed: ".concat(n))
                    }
                }
            },
            updateCurrEnv: function(t) {
                e.dispatch({
                    type: y.CURR_ENV_CHANGE,
                    payload: t
                })
            },
            _addListener: function() {},
            isDeviceSupported: function() {
                var e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {},
                    t = (e.platform || "").toLowerCase(),
                    i = (e.system || "").toLowerCase().replace(/^([a-z]+).*$/, "$1"),
                    r = (e.model || "").toLowerCase(),
                    n = ["ios", "android", "devtools"],
                    s = !n.includes(t),
                    a = ["macos", "windows"],
                    c = a.includes(i),
                    u = ["pad", "ipad"],
                    d = /unknown<iPad\d+,\d+>/i.test(r),
                    p = d || 0 < u.filter((function(e) {
                        return new RegExp("\\b".concat(e, "\\b")).test(r)
                    })).length;
                return (s || c || p) && (o.report("mp_banned_devices", {
                    ban_platform: t,
                    ban_system: i,
                    ban_model: r
                }), S.warn("Device running our mp is not supported: platform=".concat(t, ", system=").concat(i, ", model=").concat(r))), !s && !c && !p
            },
            pageExposed: function(e) {
                e ? o.report("mp_page_onload", {
                    name: e
                }) : S.error("name is required for 'pageExposed', but got: ".concat(e))
            },
            assertReport: function() {}
        };
    console.log("AppAction.js loaded end"), module.exports = h;
});
define("actions/AudioLayoutMembersAction.js", function(require, module, exports, window, document, frames, self, location, navigator, localStorage, history, Caches, screen, alert, confirm, prompt, XMLHttpRequest, WebSocket, Reporter, webkit, WeixinJSCore) {
    "use strict";
    require("../utils/Dispatcher"), require("../constants/AudioLayoutMembersType");
    module.exports = {
        inited: !1,
        init: function() {
            this.inited || (this.inited = !0)
        },
        updateMembers: function() {}
    };
});
define("actions/FloatLayoutMembersAction.js", function(require, module, exports, window, document, frames, self, location, navigator, localStorage, history, Caches, screen, alert, confirm, prompt, XMLHttpRequest, WebSocket, Reporter, webkit, WeixinJSCore) {
    "use strict";
    var e = require("../@babel/runtime/helpers/regeneratorRuntime"),
        t = require("../@babel/runtime/helpers/asyncToGenerator");
    require("../@babel/runtime/helpers/Arrayincludes");
    var a, n = require("../@babel/runtime/helpers/slicedToArray"),
        r = (a = require("../utils/plugins/PlayerVideoMetric")) && a.__esModule ? a : {
            default: a
        };
    var c = require("../utils/Dispatcher"),
        s = require("../constants/FloatLayoutMembersType"),
        o = require("../stores/FloatLayoutMembersStore"),
        i = require("../stores/AppStore"),
        u = require("../constants/LoadingStatus"),
        l = u.LoadingStatus,
        p = u.getReadableLoadingStatus,
        d = new(require("../utils/logger.js"))({
            pageName: "FloatLayoutMembersAction",
            aegisLogEnable: !0,
            wxLogEnable: !1
        }),
        f = [2002, 2003, 2004, 2007, -2301, 2103, 3005, 2104, 2001],
        m = {
            inited: !1,
            init: function() {
                this.inited || (this.inited = !0)
            },
            hideLoadingOf: function(e) {
                c.dispatch({
                    type: s.HIDE_LOADING,
                    payload: {
                        flag: !0,
                        data: e
                    }
                })
            },
            showLoadingOf: function(e) {
                c.dispatch({
                    type: s.SHOW_LOADING,
                    payload: {
                        flag: !0,
                        data: e
                    }
                })
            },
            updateMembers: function() {
                c.dispatch({
                    type: s.UPDATE_FLOATLAYOUT_MEMBERS,
                    payload: {
                        data: {}
                    }
                })
            },
            lockMember: function(e) {
                if (!e) return d.assert("lockVideo: failed since cannot get keyString"), void o.emit(s.LOCK_MEMBER_FAILED, {
                    data: "锁定视图失败(-1)"
                });
                o.getUserIndexByKey(e) < 0 ? o.emit(s.LOCK_MEMBER_FAILED, {
                    data: "锁定视图失败(-2)"
                }) : c.dispatch({
                    type: s.MEMBER_LOCK,
                    payload: {
                        data: e
                    }
                })
            },
            unlockMember: function(e) {
                if (!e) return d.error("unlockVideo: failed since cannot get keyString"), void o.emit(s.UNLOCK_MEMBER_FAILED, {
                    data: "解锁视图失败(-1)"
                });
                o.getUserIndexByKey(e) < 0 ? o.emit(s.UNLOCK_MEMBER_FAILED, {
                    data: "解锁视图失败(-2)"
                }) : c.dispatch({
                    type: s.MEMBER_UNLOCK,
                    payload: {
                        data: e
                    }
                })
            },
            resetPlayer: function(e) {
                o.resetPlayer(e)
            },
            updatePlayerStatus: function(e) {
                var t = e.isInMediaRoom,
                    a = e.keyString,
                    r = e.code,
                    c = e.message,
                    s = a.lastIndexOf("_");
                if (s < 0) d.assert("streamID may be is invalid: ".concat(a));
                else {
                    var i = a.substring(0, s),
                        u = a.substring(s + 1),
                        l = o.findUserByPlayer({
                            userID: i,
                            streamType: u
                        }) || [],
                        p = n(l, 2)[1];
                    if (p) {
                        var f = p.nickname,
                            m = p.playURL,
                            y = p.is_screen_share && "1" === p.share_pause,
                            v = -2301 === r,
                            g = 6001 === r,
                            h = o.getStreamTag(p);
                        "".concat(f, "(").concat(a, ")'s [").concat(h, "]live-player fires ").concat(r, "(").concat(c, ")");
                        m && ((!t || v || y || g) && (v || g) && this.resetPlayer(p), this.updatePlayerLoadingStatus(p, r))
                    } else d.assert("[updatePlayerStatus] cannot find member whose keyString is ".concat(a, "."))
                }
            },
            logPlayerStatus: function(e) {
                var t = e.code,
                    a = e.msg;
                f.includes(t) && d.info(a)
            },
            updatePlayerLoadingStatus: function(e, t) {
                var a = "1" === e.video_on || e.is_screen_share,
                    n = e.loading_status;
                e.nickname;
                if (a) {
                    if (2004 === t || 2003 === t) {
                        l.Playing;
                        o.setPlayerIsLoading(e, !1), r.default.startPlaying(o.getStreamID(e))
                    }
                }
            },
            stopAllPlayers: function() {
                this.unsubscribeAllLivingPlayers()
            },
            unsubscribeAllLivingPlayers: function() {
                d.info("stop all living players before leaving media room");
                for (var e = o.getMaxVisibleMemberIndex(), t = o.getMembers().length, a = Math.min(t, e + 1), n = 0; n < a; n++) {
                    var r = o.getMembers()[n];
                    if (r) {
                        if (!r.isSelf) {
                            var c = !r.is_screen_share && "1" === r.video_on,
                                s = r.is_screen_share && "1" === r.share_on;
                            if (c || s) !!r.streamID && (r.playURL ? (this.stopLivePlayer(r), o.resetUserStreamState(r)) : d.assert("".concat(r.nickname, "'s playURL is empty, could not be stopped. member: ").concat(r)))
                        }
                    } else d.assert("why member is null?\n          current members: ".concat(JSON.stringify(o.getMembers().slice(0, a))))
                }
                o.updateFloatLayoutMembers(!1)
            },
            pauseAllPlayers: function(a) {
                var n = this;
                return t(e().mark((function t() {
                    var r, c, s, i, u, p;
                    return e().wrap((function(t) {
                        for (;;) switch (t.prev = t.next) {
                            case 0:
                                r = [], c = +new Date, s = [], i = e().mark((function t() {
                                    var c;
                                    return e().wrap((function(e) {
                                        for (;;) switch (e.prev = e.next) {
                                            case 0:
                                                c = a[u], c && c.playURL && ("1" === c.video_on || "1" === c.share_on && c.is_screen_share) && (s.push("[".concat(u, "] ").concat(c.nickname)), r.push(n.pauseLivePlayer(c).then((function() {
                                                    c.loading_status = l.Paused
                                                })).catch((function() {}))));
                                            case 3:
                                            case "end":
                                                return e.stop()
                                        }
                                    }), t)
                                })), u = 0, p = a.length;
                            case 5:
                                if (!(u < p)) {
                                    t.next = 10;
                                    break
                                }
                                return t.delegateYield(i(), "t0", 7);
                            case 7:
                                u++, t.next = 5;
                                break;
                            case 10:
                                return t.next = 12, Promise.all(r);
                            case 12:
                                d.info("".concat(s.length, " videos has been paused(all: ").concat(a.length, "). time cost: ").concat(+new Date - c, "ms")), 0 < s.length && d.info("paused members: ".concat(s.join(", "))), o.updateFloatLayoutMembers(!1, !0);
                            case 15:
                            case "end":
                                return t.stop()
                        }
                    }), t)
                })))()
            },
            resumeAllPlayers: function(a) {
                var n = this;
                return t(e().mark((function t() {
                    var c, s, i, u, f, m, y, v, g, h, b, L, _, P, x;
                    return e().wrap((function(e) {
                        for (;;) switch (e.prev = e.next) {
                            case 0:
                                c = [], s = [], i = [], u = [], f = +new Date, m = 0, y = a.length;
                            case 6:
                                if (!(m < y)) {
                                    e.next = 26;
                                    break
                                }
                                if (v = a[m]) {
                                    e.next = 11;
                                    break
                                }
                                return d.assert("member at index ".concat(m, " cannot be undefined. Members: ").concat(JSON.stringify(a))), e.abrupt("continue", 23);
                            case 11:
                                if (g = v.nickname, v.streamID, h = v.playURL, (b = v.loading_status) !== l.Pending) {
                                    e.next = 22;
                                    break
                                }
                                if (h) {
                                    e.next = 16;
                                    break
                                }
                                return d.warn("".concat(g, " is expected to have playURL because it is now in pending state. but got undefined")), e.abrupt("continue", 23);
                            case 16:
                                i.push("[".concat(m, "] ").concat(g)), v.loading_status = l.Loading, r.default.startLoading(o.getStreamID(v)), c.push(n.playLivePlayer(v)), e.next = 23;
                                break;
                            case 22:
                                b === l.Paused ? (s.push("[".concat(m, "] ").concat(g)), v.loading_status = l.Loading, c.push(n.resumeLivePlayer(v))) : b === l.PausedPending ? (u.push("[".concat(m, "] ").concat(g)), v.loading_status = l.Loading, r.default.startLoading(o.getStreamID(v)), c.push(n.resumeThenStart(v))) : d.info("[".concat(m, "] ").concat(g, " loading_status: ").concat(p(b), ". member: ").concat(JSON.stringify(v)));
                            case 23:
                                m++, e.next = 6;
                                break;
                            case 26:
                                return L = s.length, _ = i.length, P = u.length, x = L + _ + P, e.next = 32, Promise.all(c);
                            case 32:
                                d.info("".concat(x, " videos has been recovered, time cost: ").concat(+new Date - f, "ms.\n      ").concat(L, " resumed, ").concat(_, " started, and ").concat(P, " resumed-then-started.")), 0 < x && d.info("\n        resumed members: ".concat(s.join(", "), "\n        started members: ").concat(i.join(", "), "\n        re & st members: ").concat(u.join(", "), "\n      ")), o.updateFloatLayoutMembers(!1, !0);
                            case 35:
                            case "end":
                                return e.stop()
                        }
                    }), t)
                })))()
            },
            pauseLivePlayer: function(a) {
                var n = this;
                return t(e().mark((function t() {
                    return e().wrap((function(e) {
                        for (;;) switch (e.prev = e.next) {
                            case 0:
                                return e.prev = 0, e.next = 3, n._pauseOrResumeLivePlayer(a, !0);
                            case 3:
                                e.next = 8;
                                break;
                            case 5:
                                return e.prev = 5, e.t0 = e.catch(0), e.abrupt("return", Promise.reject(e.t0));
                            case 8:
                            case "end":
                                return e.stop()
                        }
                    }), t, null, [
                        [0, 5]
                    ])
                })))()
            },
            resumeLivePlayer: function(a) {
                var n = this;
                return t(e().mark((function t() {
                    return e().wrap((function(e) {
                        for (;;) switch (e.prev = e.next) {
                            case 0:
                                return e.prev = 0, e.next = 3, n._pauseOrResumeLivePlayer(a, !1);
                            case 3:
                                e.next = 7;
                                break;
                            case 5:
                                e.prev = 5, e.t0 = e.catch(0);
                            case 7:
                            case "end":
                                return e.stop()
                        }
                    }), t, null, [
                        [0, 5]
                    ])
                })))()
            },
            playLivePlayer: function(a) {
                var n = this;
                return t(e().mark((function t() {
                    return e().wrap((function(e) {
                        for (;;) switch (e.prev = e.next) {
                            case 0:
                                return e.prev = 0, e.next = 3, n._playOrStopLivePlayer(a, !0);
                            case 3:
                                e.next = 7;
                                break;
                            case 5:
                                e.prev = 5, e.t0 = e.catch(0);
                            case 7:
                            case "end":
                                return e.stop()
                        }
                    }), t, null, [
                        [0, 5]
                    ])
                })))()
            },
            stopLivePlayer: function(a) {
                var n = this;
                return t(e().mark((function t() {
                    return e().wrap((function(e) {
                        for (;;) switch (e.prev = e.next) {
                            case 0:
                                return e.prev = 0, e.next = 3, n._playOrStopLivePlayer(a, !1);
                            case 3:
                                e.next = 7;
                                break;
                            case 5:
                                e.prev = 5, e.t0 = e.catch(0);
                            case 7:
                            case "end":
                                return e.stop()
                        }
                    }), t, null, [
                        [0, 5]
                    ])
                })))()
            },
            resumeThenStart: function(a) {
                var n = this;
                return t(e().mark((function t() {
                    return e().wrap((function(e) {
                        for (;;) switch (e.prev = e.next) {
                            case 0:
                                return e.next = 2, n.resumeLivePlayer(a);
                            case 2:
                                return e.next = 4, n.playLivePlayer(a);
                            case 4:
                            case "end":
                                return e.stop()
                        }
                    }), t)
                })))()
            },
            testStopMainVideo: function() {
                o.emit(s.TEST_PLAY_OR_STOP_MAIN_VIDEO, {
                    data: !1
                })
            },
            testPlayMainVideo: function() {
                o.emit(s.TEST_PLAY_OR_STOP_MAIN_VIDEO, {
                    data: !0
                })
            },
            _pauseOrResumeLivePlayer: function(e, t) {
                var a = e.nickname,
                    n = e.streamID,
                    r = this._getLivePlayerContextFor(e),
                    c = t ? "pauseLivePlayer" : "resumeLivePlayer";
                return i.isDevtools() ? Promise.resolve("") : (d.info("[live-player] ".concat(t ? "pauses" : "resumes", " ").concat(a, "(").concat(n, ")...")), new Promise((function(e, s) {
                    if (t) try {
                        r.pause({
                            success: function() {
                                d.info("pause ".concat(a, "(").concat(n, ") succeed")), e()
                            },
                            fail: function(e) {
                                d.warn("pause failed for ".concat(a, "(").concat(n, ") because ").concat(e.errMsg), c), s("#-2")
                            }
                        })
                    } catch (e) {
                        d.error("pause live-player of user ".concat(a, "(").concat(n, ") failed: ").concat(JSON.stringify(e)), c), s("#-3")
                    } else try {
                        r.resume({
                            success: function() {
                                d.info("resume ".concat(a, "(").concat(n, ") succeed")), e()
                            },
                            fail: function(e) {
                                d.error("resume failed for ".concat(a, "(").concat(n, ") because ").concat(e.errMsg), c), s("#-4")
                            }
                        })
                    } catch (e) {
                        d.error("resume live-player of user ".concat(a, "(").concat(n, ") failed: ").concat(JSON.stringify(e)), c), s("#-5")
                    }
                })))
            },
            _getLivePlayerContextFor: function(e) {
                var t = e.streamID,
                    a = e.nickname,
                    n = e.created_times,
                    r = o.getVideoLayoutCompInstance();
                if (null === r) return d.assert("video layout comp must not be null when creating live player context"), null;
                if (!t) return d.assert("[_getLivePlayerContextFor] streamID on member object must not be null"), null;
                if (isNaN(n) || n < 0) return d.assert("[_getLivePlayerContextFor] created_times on member object is invalid: ".concat(n)), null;
                var c = "player_".concat(n, "_").concat(t);
                try {
                    r.createSelectorQuery().select("#".concat(c)).node().exec((function(e) {
                        e && e[0] || d.assert("cannot get <live-player> DOM node id='".concat(c, "' in comp: ").concat(e[0]))
                    }));
                    var s = wx.createLivePlayerContext(c, r);
                    return s || (d.assert("no <live-player> context created for: ".concat(a, "(playerID: ").concat(c, ")")), null)
                } catch (e) {
                    return d.assert("create live player context for '".concat(a, "(playerID: ").concat(c, ")' failed: ").concat(e.message)), null
                }
            },
            _playOrStopLivePlayer: function(e, t) {
                var a = e.nickname,
                    n = e.streamID,
                    r = e.created_times,
                    c = "_playOrStopLivePlayer-".concat(r),
                    s = "".concat(a, "(").concat(n, ")[").concat(r, "]");
                if (i.isRunningBackground()) return d.warn("running at background, no permission to invoke jsAPI on <live-player>.\n      wanna ".concat(t ? "play" : "stop", " ").concat(s), c), Promise.reject("#-6");
                var o = this._getLivePlayerContextFor(e);
                return i.isDevtools() ? Promise.resolve("") : (d.info("".concat(t ? "play" : "stop", " ").concat(s, "..."), c), new Promise((function(e, a) {
                    if (null === o) return d.error("invoke API on user ".concat(s, " failed because playerCtx is null"), c), void a("#-6");
                    if (t) try {
                        o.play({
                            success: function() {
                                d.info("play ".concat(s, " succeed"), c), e()
                            },
                            fail: function(e) {
                                d.error("play failed for ".concat(s, " because ").concat(e.errMsg), c), a("#-4")
                            },
                            complete: function() {}
                        })
                    } catch (e) {
                        d.error("start playing live-player of user ".concat(s, " failed: ").concat(JSON.stringify(e)), c), a("#-5")
                    } else try {
                        o.stop({
                            success: function() {
                                d.info("stop ".concat(s, " succeed"), c), e()
                            },
                            fail: function(e) {
                                d.error("stop failed for ".concat(s, " because ").concat(e.errMsg), c), a("#-2")
                            }
                        })
                    } catch (e) {
                        d.error("stop pulling live-player of user ".concat(s, " failed: ").concat(JSON.stringify(e)), c), a("#-3")
                    }
                })))
            }
        };
    module.exports = m;
});
define("actions/MeetingAction.js", function(require, module, exports, window, document, frames, self, location, navigator, localStorage, history, Caches, screen, alert, confirm, prompt, XMLHttpRequest, WebSocket, Reporter, webkit, WeixinJSCore) {
    "use strict";
    require("../@babel/runtime/helpers/Arrayincludes");
    var e = require("../@babel/runtime/helpers/objectSpread2"),
        t = require("../@babel/runtime/helpers/regeneratorRuntime"),
        n = require("../@babel/runtime/helpers/asyncToGenerator"),
        i = c(require("../Helpers/TRTC")),
        o = c(require("../stores/UserStore.js")),
        a = c(require("../utils/plugins/mediaController")),
        r = c(require("../sdk/tim/tim-sdk.js")),
        s = require("../sdk/tim/interface/im-biz-types");

    function c(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    console.log("MeetingAction.js loaded start");
    var d = require("../utils/Dispatcher"),
        u = require("../clients/WemeetClient"),
        l = require("../stores/MeetingStore"),
        _ = require("../utils/logger"),
        f = require("../constants/MeetingType"),
        m = require("../stores/MembersStore"),
        p = require("../utils/util"),
        g = require("../constants/MediaMachineType"),
        h = require("../utils/uploadStreamController.js"),
        S = require("../actions/MembersAction"),
        v = require("../clients/BeaconClient"),
        R = require("../constants/MultMediaState"),
        T = require("../stores/AppStore"),
        E = require("../clients/RavenClient"),
        M = require("../configs/AppConfig"),
        I = require("../utils/performanceReporter.js"),
        y = require("../stores/MediaStateManager.js"),
        A = require("../constants/LivepusherNetstatusMeasure"),
        O = require("../utils/util").setValueInLocalStorage,
        w = require("js-base64").Base64,
        C = new _({
            pageName: "MeetingAction",
            aegisLogEnable: !0,
            wxLogEnable: !1
        }),
        N = u.meetingUserCtrl,
        U = u.constants,
        L = u.constants || {},
        b = L.SwitchReason,
        k = void 0 === b ? {} : b,
        P = L.EnterRoomType,
        D = 0,
        x = {
            inited: !1,
            trtc: null,
            init: function() {
                this.inited || (this.switchAudioReason = k.BYSELF, this._addListener(), this.inited = !0)
            },
            setSwitchAudioReason: function(e) {
                e === k.BYSELF || e === k.BYHOST ? this.switchAudioReason = e : C.error("Invalid reason set to switchAudioReason: ".concat(e))
            },
            getSwitchAudioReason: function() {
                return this.switchAudioReason
            },
            setAudioEnable: function() {
                var e = arguments.length > 0 && void 0 !== arguments[0] && arguments[0];
                d.dispatch({
                    type: f.AUDIO_ENABLE_CHANGE,
                    payload: {
                        data: e
                    }
                })
            },
            setIsJoiningFromWaitingRoom: function(e) {
                l.setIsJoiningFromWaitingRoom(e)
            },
            setIsLeavingFromWaitingRoom: function(e) {
                l.setIsLeavingFromWaitingRoom(e)
            },
            setIsLeavingForWaitingRoom: function(e) {
                l.setIsLeavingForWaitingRoom(e)
            },
            updateMediaMachineType: function(e) {
                l.setCurrentMediaMachineType(e)
            },
            updateMixAudioStream: function() {
                var e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {},
                    t = l.getMixAudioStream();
                e.playURL !== t.playURL && d.dispatch({
                    type: f.MIX_AUDIO_STREAM_CHANGE,
                    payload: {
                        data: e
                    }
                })
            },
            setJoinParam: function(e) {
                d.dispatch({
                    type: f.JOIN_PARAM_UPDATE,
                    payload: e
                })
            },
            _addListener: function() {
                u.on("join_meeting", this._handleJoinMeeting), u.on("leave_meeting", this._handleLeaveMeeting), u.on("query_meeting_item_list", this._handleQueryMeetingInfo), u.on("query_meeting_pay_info", this._handleQueryMeetingPayInfo, this), u.on("user_status", this._handleUserStatusUpdate), u.on("host_status", this._handleHostStatusUpdate), u.on("turn_video", this._handleTurnVideo, this), u.on("turn_audio", this._handleTurnAudio, this), u.on("breakout_room_started", this._handleBreakoutRoom), u.on("member_raise_hand", this._handleRaiseHandComplete), u.on("kicked_out", this._handleKickedOut), u.on("meeting_modified", this._handleMeetingModified), u.on("notify_switch_media_stream", this._handleNotifySwitchMediaStream), u.on("notify_meeting_settings_update", this._handleNotifyMeetingSettingsUpdate, this), u.on("meeting_will_limited", this._handleMeetingWillLimited, this), u.on("modify_user_info", this._handleModifyUserInfo), u.on("refresh_media_auth_info", this._handleRefreshMediaAuthInfo), u.on("waiting_user_status_join_from_waiting_room", this._handleJoinFromWaitingRoom), u.on("waiting_user_status_leave_from_waiting_room", this._handleLeaveFromWaitingRoom), u.on("waiting_user_status_leave_for_waiting_room", this._handleBackToWaitingRoom), u.on("waiting_user_status_i_am_in", this._handleIamInWaitingRoom, this), u.on("query_meeting_settings", this._handleQueryMeetingSettings), u.on("query_ui_config", this._handleQueryMeetingUiCfg), u.on("switch_user_role", this._handleSwitchUserRole), u.on("cloud_record_state", this._handleCloudRecordState, this), u.on("query_cloud_record_state", this._handleQueryCloudRecordState, this), u.on("get_webinar_participants_summary", this._handleGetParticipantsSummary, this), u.on("apply_permission", this._handleApplyPermission, this), u.on("notify_user_be_put_handsdown", this._handleNotifyHandsDown, this), u.on("notify_role_group_be_put_handsdown", this._handleNotifyGroupHandsDown, this), u.on("notify_permission_result", this._handleNotifyPermissionRes, this), u.on("directed_push", this._handleDirectedPush, this), u.on("query_user_sig", this._handleUserSig, this), u.on("meeting_notice", this._meetingNotice, this)
            },
            _meetingNotice: function(e, t) {
                if (e) {
                    l.getNoticeVersion(), t.notice_version;
                    this.queryMeetingNotice()
                }
            },
            _handleUserSig: function(e, t) {
                if (e) {
                    var n = (null == t ? void 0 : t.sig_list) || [];
                    o.default.setUserSig(n)
                }
            },
            _handleNotifyHandsDown: function(e, t) {
                wx.showToast({
                    icon: "none",
                    title: "主持人已将您的手放下"
                }), l.setIsHandsUp(!1), l.onHandsDownSucc()
            },
            _handleNotifyGroupHandsDown: function(e, t) {
                l.getIsHandsUp() && (l.setIsHandsUp(!1), l.onHandsDownSucc(), wx.showToast({
                    icon: "none",
                    title: "主持人已将您的手放下"
                }))
            },
            _handleNotifyPermissionRes: function(e, t) {
                C.info("_handleNotifyPermissionRes: ".concat(JSON.stringify(t))), l.setIsHandsUp(!1);
                var n = l.getMeetingID();
                if (e) {
                    var i = t.permissionType,
                        o = t.permissionState,
                        a = t.userPersonal;
                    switch (i) {
                        case "0":
                            l.setApplyMicIng(!1), l.setPermissionUserInfo(a), O("".concat(n, "_userPermission"), a), l.emit(f.APPLY_PERMISSION_AUDIO_SUCC, {
                                data: "1" === o
                            });
                            break;
                        case "3":
                            "0" === o && this.turnOffAudio(), l.setAllowSpeak("1" === o), l.setPermissionUserInfo(a), O("".concat(n, "_userPermission"), a)
                    }
                }
            },
            _handleDirectedPush: function(e, t) {
                var n = t || {},
                    i = n.type,
                    o = n.content;
                2 === i && l.emit(f.DIRECTED_PUSH_TOAST, {
                    data: o
                })
            },
            _handleBreakoutRoom: function(e, t) {
                d.dispatch({
                    type: e ? f.BREAKOUT_ROOM_SUCC : f.BREAKOUT_ROOM_FAIL,
                    payload: {
                        flag: e,
                        data: t
                    }
                })
            },
            _handleJoinMeeting: function(e, t) {
                if (e) return N.setMediaController(a.default.getInstance(x)), void d.dispatch({
                    type: f.JOIN_MEETING_SUCC,
                    payload: {
                        flag: e,
                        data: t
                    }
                });
                d.dispatch({
                    type: f.JOIN_MEETING_FAIL,
                    payload: {
                        flag: e,
                        data: t
                    }
                })
            },
            _handleLeaveMeeting: function(e, t) {
                C.warn("SHOULD NOT REACH HERE: _handleLeaveMeeting")
            },
            queryMeetingInfo: function(e) {
                u.preMeetingService.internalQueryMeetingItemList({
                    meeting_code: e
                })
            },
            _handleQueryMeetingInfo: function(e, t) {
                e ? d.dispatch({
                    type: f.QUERY_MEETING_ITEM_LIST_SUCC,
                    payload: {
                        flag: e,
                        data: t
                    }
                }) : d.dispatch({
                    type: f.QUERY_MEETING_ITEM_LIST_FAIL,
                    payload: {
                        flag: e,
                        data: t
                    }
                })
            },
            _handleQueryMeetingPayInfo: function(e, t) {
                var n = this;
                if (!e || !t) return C.assert("_handleQueryMeetingPayInfo failed, flag = ".concat(e, ", data = ").concat(JSON.stringify(t))), void d.dispatch({
                    type: f.QUERY_MEETING_PAY_INFO_FAIL,
                    payload: {
                        flag: e,
                        data: t
                    }
                });
                if (isNaN(t.expire_time) || t.expire_time < 0) C.warn('WARNING: the backend does not give us a "expire_time". Maybe this account is unlimited. data='.concat(JSON.stringify(t)));
                else {
                    if (t.expire_time < (new Date).getTime() / 1e3) return C.warn("WARNING: the backend give us a expired time, ignored, just take out the countdown_time"), isNaN(t.countdown_time) || t.countdown_time < 1 ? void C.warn("后台给的countdown_time有问题：".concat(t.countdown_time)) : void l.setPayInfoCountdownThreshhold(t.countdown_time);
                    if (isNaN(t.countdown_time) || t.countdown_time < 1) C.info("There's no necessary to show countdown anymore for non-personal account");
                    else {
                        l.setPayInfoCountdownThreshhold(t.countdown_time), l.setPayInfoMeetingExpireTime(t.expire_time), C.info("meeting will expire after ".concat(parseInt((t.expire_time - (new Date).getTime() / 1e3) / 60, 10), "min,\n      meeting will show countdown when only ").concat(parseInt(t.countdown_time / 60, 10), "min left")), 0 < l.getPayInfoCountdownTimer() && (C.warn("countdownTimer should not greater that 0 because this is the first time we start countdown timer"), this.stopTimerOfOfMeetingTimeCountdown());
                        var i = setInterval((function() {
                            n.meetingTimeCountDown()
                        }), 1e3);
                        l.setPayInfoCountdownTimer(i)
                    }
                }
            },
            stopTimerOfOfMeetingTimeCountdown: function() {
                0 < l.getPayInfoCountdownTimer() && (console.warn("meeting time countdown timer stopped"), clearInterval(l.getPayInfoCountdownTimer()), l.setPayInfoCountdownTimer(0))
            },
            meetingTimeCountDown: function() {
                var e = parseInt(l.getPayInfoMeetingExpireTime() - (new Date).getTime() / 1e3, 10);
                if (e < 1) return C.info("meeting's time is up, secondsLeft = ".concat(e, ",\n        expire at time(s): ").concat(l.getPayInfoMeetingExpireTime(), "(").concat(new Date(1e3 * l.getPayInfoMeetingExpireTime()), ")")), this.stopTimerOfOfMeetingTimeCountdown(), l.getPayInfoMeetingExpireTime() < 1 || !l.isInMeeting() ? void(l.isInMeeting() ? (C.error("那就更奇怪了，当前在会议中，而会议过期时间却是0，忽略"), v.reportError(100902)) : (C.warn("当前不在会议中，却执行到了倒计时结束，忽略"), v.reportError(100901))) : void l.freeMeetingIsEnd();
                if (e < l.getPayInfoCountdownThreshhold()) {
                    var t = "会议即将结束 ";
                    t += 86400 < e ? "大于1天" : 3600 < e ? "大于1小时" : new Date(1e3 * e).toISOString().substr(14, 5), l.updateMeetingTimeCountdown({
                        timeLeft: t
                    })
                }
            },
            _handleQueryMeetingSettings: function(e, t) {
                if (!e || !t) return C.assert("queryMeetingSettings failed: ".concat(e, ", ").concat(t)), void l.emit(f.QUERY_MEETING_SETTINGS_FAIL, {});
                var n = t.allow_audience_hands_up,
                    i = t.allow_look_audience_count;
                l.setAllowTurnOnBySelf(N.isAllowUnmuteBySelf()), l.setAllowHandsUp(n), l.setAllowLookAudienceCount(i), l.setIsHideMeetingCodeAndPassword(N.isHideMeetingCodePassword()), l.setIsMeetingLocked(N.isMeetingLocked()), l.setEnableWatermark(N.isEnableWatermark()), l.setMultipleRowWatermark(N.isMultipleRowWatermark()), l.emit(f.QUERY_MEETING_SETTINGS_SUCC, {})
            },
            _handleQueryMeetingUiCfg: function(e, t) {
                e && t ? l.setUiPstnCfg(N.isMeetingAbilityPstnOn()) : C.assert("queryMeetingUiCfg failed: ".concat(e, ", ").concat(t))
            },
            _handleGetParticipantsSummary: function(e, t) {
                e && t && d.dispatch({
                    type: f.QUERY_WEBINAR_SUMMARY_SUCC,
                    payload: {
                        flag: e,
                        data: t
                    }
                })
            },
            _handleApplyPermission: function(e, t) {
                e && t && d.dispatch({
                    type: f.APPLY_PERMISSION_SUCC,
                    payload: {
                        flag: e,
                        data: t
                    }
                })
            },
            _handleSwitchUserRole: function(e, t) {
                if (C.info("current mediaRoomState is: ".concat(l.mediaRoomState)), l.mediaRoomState !== R.MediaRoomState.REDIRECTING) {
                    if (!e || !t) return C.warn("_handleSwitchUserRole failed: flag=".concat(e, ", data=").concat(JSON.stringify(t))), void d.dispatch({
                        type: f.SWITCH_USER_ROLE_FAIL,
                        payload: {
                            flag: e,
                            data: t
                        }
                    });
                    var n = t.media_platform || {},
                        i = n.trtc_token,
                        o = n.role,
                        a = void 0 === o ? "" : o;
                    if (!i || 0 !== a && 1 !== a) return C.warn("_handleSwitchUserRole failed since no valid 'media_platform' provided: flag=".concat(e, ",\n      data=").concat(JSON.stringify(t))), void d.dispatch({
                        type: f.SWITCH_USER_ROLE_FAIL,
                        payload: {
                            flag: e,
                            data: t
                        }
                    });
                    var r = 0 === a ? f.SWITCH_USER_ROLE_TO_DC : f.SWITCH_USER_ROLE_TO_OC;
                    d.dispatch({
                        type: r,
                        payload: {
                            flag: e,
                            data: t
                        }
                    })
                } else C.info("_handleSwitchUserRole failed: is redirecting")
            },
            _handleCloudRecordState: function(e, t) {
                e && t ? this._fireCloudRecordStateChange(t) : C.assert("_handleCloudRecordState error: ".concat(e, ", ").concat(t))
            },
            _handleQueryCloudRecordState: function(e, t) {
                e && t ? this._fireCloudRecordStateChange(t) : C.assert("_handleQueryCloudRecordState error: ".concat(e, ", ").concat(t))
            },
            _handleReportStreamStatus: function() {
                this._isWaiting = !1
            },
            _fireCloudRecordStateChange: function(e) {
                var t = e.state,
                    n = "";
                switch (t) {
                    case 0:
                        n = f.CLOUD_RECORD_STATE_STOPPED;
                        var i = e.stop_reason || {},
                            o = i.code,
                            a = i.msg;
                        !isNaN(o) || a ? C.info("cloud record stopped for reason: ".concat(a, "(").concat(o, ")")) : C.warn("cloud record stopped for no reason");
                        break;
                    case 1:
                        n = f.CLOUD_RECORD_STATE_PREPARING;
                        break;
                    case 2:
                        n = f.CLOUD_RECORD_STATE_STARTED;
                        break;
                    case 3:
                        n = f.CLOUD_RECORD_STATE_PAUSED;
                        break;
                    default:
                        C.error("_fireCloudRecordStateChange error: unexpected state: ".concat(t))
                }
                n && d.dispatch({
                    type: n,
                    payload: {
                        flag: !0,
                        data: t
                    }
                })
            },
            _handleUserStatusUpdate: function(e, t) {
                d.dispatch({
                    type: e ? f.USER_STATUS_SUCC : f.USER_STATUS_FAIL,
                    payload: {
                        flag: e,
                        data: t
                    }
                })
            },
            _handleHostStatusUpdate: function(e, t) {
                d.dispatch({
                    type: e ? f.HOST_STATUS_SUCC : f.HOST_STATUS_FAIL,
                    payload: {
                        flag: e,
                        data: t
                    }
                })
            },
            _handleTurnVideo: function(e) {
                var t = this,
                    n = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {},
                    i = e && "off" === n.status;
                if (i) l.setIsTurningVideo(!1);
                else if (this.isOperationOnMediaFailed(e, n, !1)) l.getCameraEnable() ? (C.warn("开摄像头失败，但当前已经打开了，需关闭"), this.turnOffVideo()) : l.setIsTurningVideo(!1);
                else {
                    var o = "on" === n.status;
                    if (l.getCameraEnable() === o) return C.warn("摄像头状态一致，不需要动:  ".concat(o ? "on" : "off")), void l.setIsTurningVideo(!1);
                    l.getUploadStreamController().addTask({
                        name: "turn-on-video",
                        action: function() {
                            t.setCameraSwitch(!0), N.updateVideoStatus(!0), l.setIsTurningVideo(!1)
                        },
                        succ: function() {},
                        fail: function(e) {
                            l.setIsTurningVideo(!1), C.error("open cam failed(-3): ".concat(e)), e ? p.showWXToast(e) : p.showWXToast("打开摄像头失败(-3)"), v.reportError(100414)
                        },
                        judgeData: n.media_platform
                    })
                }
            },
            setCameraSwitch: function(e) {
                l.getCameraEnable() !== e ? l.setCameraEnable(e) : console.log("Camera is right status there, ignore this setting: ", e ? "on" : "off")
            },
            isOperationOnMediaFailed: function(e, t, n) {
                var i, o = e && "on" === (null == t ? void 0 : t.status) && 1 === (null === (i = t.info) || void 0 === i ? void 0 : i.limitState);
                if (e && !o) return !1;
                var a = null === t,
                    r = !e && "9091" === (null == t ? void 0 : t.code),
                    s = n ? "麦克风" : "摄像头",
                    c = "";
                return c = a ? "操作超时，请重试" : r || o ? (null == t ? void 0 : t.msg) || (null == t ? void 0 : t.message) || (null == t ? void 0 : t.errmsg) || "开启".concat(s, "数量已达上限") : (null == t ? void 0 : t.msg) || (null == t ? void 0 : t.message) || (null == t ? void 0 : t.errmsg) || "操作失败，请重试", C.warn("操作".concat(s, "失败，原因：").concat(c)), l.emit(f.OPEN_MEDIA_FAILED, {
                    data: c
                }), !0
            },
            _handleTurnAudio: function(e) {
                var t = this,
                    n = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {};
                l.setRequestUpStreamToken("");
                var i = e && "off" === (null == n ? void 0 : n.status);
                if (i) {
                    var o = N.getTurnAudioReason();
                    return l.setMutedBySelf(o === U.SwitchReason.BYSELF), void this.turnAudio(!1, o)
                }
                if (this.isOperationOnMediaFailed(e, n, !0)) l.getAudioEnable() ? (C.warn("开麦失败，但当前已经打开了，需关闭"), this.turnOffAudio()) : l.setIsTurningAudio(!1);
                else {
                    var a = "on" === n.status;
                    if (l.getAudioEnable() === a) return l.setIsTurningAudio(!1), void C.info("麦克风状态一致，不需要动: ".concat(a ? "on" : "off"));
                    var r = N.getTurnAudioReason();
                    if (a && !l.isWebinarMeeting() && r === U.SwitchReason.BYSELF && 1 !== n.info.isGrant) {
                        var s = N.isMeetingAudioAllMuted();
                        return C.warn("自己请求开麦，但主持人已设置不可自行解除，忽略本次开麦. ".concat(s ? "全体静音" : "个人静音")), s ? l.emit(f.OPEN_AUDIO_BUT_ALL_HAS_BEEN_MUTED, {}) : l.emit(f.OPEN_AUDIO_BUT_NOT_ALLOWED, {}), void(l.getAudioEnable() ? (C.warn("开麦失败，但当前已经打开了麦克风，需关闭"), this.turnOffAudio()) : l.setIsTurningAudio(!1))
                    }
                    l.getUploadStreamController().addTask({
                        name: "turn-on-audio",
                        action: function() {
                            t.turnAudio(!0, r)
                        },
                        succ: function() {},
                        fail: function(e) {
                            C.error("open mic failed(-2): ".concat(e)), l.setIsTurningAudio(!1), l.emit(f.TURN_AUDIO_FAILED, {
                                data: e || "打开麦克风失败(-2)"
                            })
                        },
                        judgeData: n.media_platform
                    })
                }
            },
            setAudioSwitch: function(e) {
                l.getAudioEnable() !== e ? (e || m.getAudioMvsp() === l.getMyKeyString() && S.clearAudioMvsp(), l.setAudioEnable(e)) : C.warn("Audio is right status there, ignore this setting: ".concat(e ? "on" : "off"))
            },
            initUploadStreamController: function() {
                var e = new h;
                e.setJudgeFunc(this.redirectMediaRoomToDC.bind(this)), l.setUploadStreamController(e)
            },
            redirectMediaRoomToDC: function(e) {
                var i = this;
                return n(t().mark((function n() {
                    var o, a, r;
                    return t().wrap((function(t) {
                        for (;;) switch (t.prev = t.next) {
                            case 0:
                                if (!l.isOnDC()) {
                                    t.next = 2;
                                    break
                                }
                                return t.abrupt("return", "");
                            case 2:
                                if ("already-updated" === e || i.didUpdateMediaToken(e)) {
                                    t.next = 6;
                                    break
                                }
                                return C.reportEvent("switch_to_dc_failed", "token is required"), t.abrupt("return", "当前参会人数较多，已默认关闭你的麦克风和摄像头。");
                            case 6:
                                return C.info("switching to DC...current is on ".concat(l.isOnDC() ? "DC" : "OC")), I.start(1007), o = (new Date).getTime(), a = "", t.prev = 10, t.next = 13, i.redirectMediaRoom();
                            case 13:
                                t.next = 18;
                                break;
                            case 15:
                                t.prev = 15, t.t0 = t.catch(10), a = t.t0;
                            case 18:
                                if (r = (new Date).getTime() - o, !a) {
                                    t.next = 27;
                                    break
                                }
                                return C.error("switch to DC failed: ".concat(a)), T.getEnvSwitchEnable() && p.showWXToast("测试可见：切换DC失败!"), v.report("mp_switch_media_machine", {
                                    to: "DC",
                                    success: "N",
                                    time_cost: r
                                }), E.captureMessage("switch to DC failed", {
                                    level: "error",
                                    extra: {
                                        detail: a
                                    }
                                }), C.reportCls("cls_switch_to_dc_fail_".concat(a)), i.updateUserAccessType(g.ProxyMachine), t.abrupt("return", Promise.resolve(a));
                            case 27:
                                return v.report("mp_switch_media_machine", {
                                    to: "DC",
                                    success: "Y",
                                    time_cost: r
                                }), C.reportCls("cls_switch_to_dc_success"), C.info("switch to DC successfully! cost ".concat(r, "ms")), I.end(1007), i.updateMediaMachineType(g.InterfaceMachine), i.updateUserAccessType(g.InterfaceMachine), t.abrupt("return", Promise.resolve(""));
                            case 34:
                            case "end":
                                return t.stop()
                        }
                    }), n, null, [
                        [10, 15]
                    ])
                })))()
            },
            redirectMediaRoomToOC: function(e) {
                var i = this;
                return n(t().mark((function n() {
                    var o, a, r, s, c, d;
                    return t().wrap((function(t) {
                        for (;;) switch (t.prev = t.next) {
                            case 0:
                                if (o = l.getAudioEnable(), a = l.getCameraEnable(), !o && !a) {
                                    t.next = 7;
                                    break
                                }
                                return C.info("switch to OC ignored since user is uploading stream\n        (AND update DC!! since backend predict us to be OC).\n        mic = ".concat(o ? "On" : "Off", "\n        cam = ").concat(a ? "On" : "Off", "\n      ")), T.getEnvSwitchEnable() && p.showWXToast("测试可见: 有上行忽略切OC"), i.updateUserAccessTypeAndMediaState({
                                    accessType: g.InterfaceMachine,
                                    audioOn: o,
                                    videoOn: a
                                }), t.abrupt("return");
                            case 7:
                                if (i.didUpdateMediaToken(e.media_platform)) {
                                    t.next = 11;
                                    break
                                }
                                return C.reportEvent("switch_to_oc_failed", "token is required"), i.updateUserAccessType(g.InterfaceMachine), t.abrupt("return");
                            case 11:
                                if (!l.isOnOC()) {
                                    t.next = 16;
                                    break
                                }
                                return C.assert("本来就在OC，怎么又要切OC?"), T.getEnvSwitchEnable(), C.reportEvent("switch_to_oc_failed", "already on oc"), t.abrupt("return", Promise.resolve(""));
                            case 16:
                                return C.info("switching to OC..."), I.start(1008), r = "", s = (new Date).getTime(), t.prev = 20, t.next = 23, i.redirectMediaRoom();
                            case 23:
                                t.next = 28;
                                break;
                            case 25:
                                t.prev = 25, t.t0 = t.catch(20), r = t.t0;
                            case 28:
                                return t.prev = 28, t.finish(28);
                            case 30:
                                if (c = (new Date).getTime() - s, !r) {
                                    t.next = 40;
                                    break
                                }
                                return C.error("switch to OC failed: ".concat(r)), T.getEnvSwitchEnable() && p.showWXToast("测试可见：切换OC失败!"), d = i.getErrcodOfToOCFailed(r), v.report("mp_switch_media_machine", {
                                    to: "OC",
                                    success: d,
                                    time_cost: c
                                }), E.captureMessage("switch to OC failed", {
                                    level: "error",
                                    extra: {
                                        detail: r
                                    }
                                }), C.reportCls("cls_switch_to_oc_fail_".concat(r)), i.updateUserAccessType(g.InterfaceMachine), t.abrupt("return", Promise.resolve(r));
                            case 40:
                                return v.report("mp_switch_media_machine", {
                                    to: "OC",
                                    success: "Y",
                                    time_cost: c
                                }), C.reportCls("cls_switch_to_oc_success"), C.info("switch to OC successfully! cost ".concat(c, "ms")), I.end(1008), i.updateMediaMachineType(g.ProxyMachine), i.updateUserAccessType(g.ProxyMachine), t.abrupt("return", Promise.resolve(""));
                            case 47:
                            case "end":
                                return t.stop()
                        }
                    }), n, null, [
                        [20, 25, 28, 30]
                    ])
                })))()
            },
            getErrcodOfToOCFailed: function(e) {
                return e ? "进入房间失败，请重试" === e ? "N2" : /进入房间失败，请重试.+/.test(e) ? "N3" : "exitMediaRoom failed" === e ? "N4" : /媒体状态异常，请重新进会.+/.test(e) ? "N5" : "N6" : "N1"
            },
            onLocalLeave: function(e) {},
            onKickedOut: function() {
                C.assert("TODO: 收到1019"), this.needLeaveMediaRoom()
            },
            onRemoteUserJoin: function(e) {},
            onRemoteUserLeave: function(e) {},
            onRemoteVideoAdd: function(e) {
                var t = e.data.player;
                if (t.userID === M.MixAudioStreamID) return C.info("混音流视频位收到，手动订阅它"), void l.emit(f.SUBSCRIBE_TO_VIDEO_OF_MIX_AUDIO_STREAM, {
                    data: t
                });
                d.dispatch({
                    type: f.REMOTE_VIDEO_ADD,
                    payload: e.data.player
                })
            },
            onRemoteVideoRemove: function(e) {
                var t = ((null == e ? void 0 : e.data) || {}).player,
                    n = void 0 === t ? null : t;
                null !== n ? n.userID !== M.MixAudioStreamID ? l.emit(f.REMOTE_VIDEO_REMOVE, {
                    data: n
                }) : C.info("混音流发生VideoRemove，不管") : C.assert("cannot get player from onRemoteVideoRemove. event: ".concat(JSON.stringify(e)))
            },
            onRemoteAudioAdd: function(e) {
                var t = e.data.player;
                t.userID === M.MixAudioStreamID && l.emit(f.MIX_AUDIO_STREAM_ADD, {
                    data: t
                })
            },
            onRemoteAudioRemove: function(e) {
                var t = e.data.player;
                t.userID === M.MixAudioStreamID && l.emit(f.MIX_AUDIO_STREAM_REMOVE, {
                    data: t
                })
            },
            onRemoteStateUpdate: function(e) {
                var t, n, i;
                if (2105 !== ((null == e || null === (t = e.data) || void 0 === t ? void 0 : t.detail) || {}).code) {
                    var o = ((null == e || null === (n = e.data) || void 0 === n || null === (i = n.currentTarget) || void 0 === i ? void 0 : i.dataset) || {}).streamid,
                        a = (void 0 === o ? "" : o) === "".concat(M.MixAudioStreamID, "_main");
                    l.emit(a ? f.ON_PLAY_OF_MIX_AUDIO_STREAM : f.ON_PLAY_OF_NORMAL_STREAM, {
                        data: null == e ? void 0 : e.data
                    })
                }
            },
            onLocalNetStateUpdate: function(e) {
                var t = (e.data || {}).pusher;
                this.onLivePusherNetStatusChange(t)
            },
            onRemoteNetStateUpdate: function(e) {},
            onRemoteAudioVolumeUpdate: function(e) {},
            onLocalAudioVolumeUpdate: function(e) {},
            onVideoFullscreenUpdate: function(e) {
                console.log("onVideoFullscreenUpdate", e)
            },
            onBgmPlayProgress: function(e) {
                console.log("onBgmPlayProgress", e)
            },
            onBgmPlayComplete: function(e) {
                console.log("onBgmPlayComplete", e)
            },
            onError: function(e) {
                var t = e.data,
                    n = t.code,
                    i = t.message;
                if (-1307 === n) return C.info("live-pusher is disconnected(-1307). msg: ".concat(i)), void this.mediaRoomRestarting();
                C.assert("live-pusher error: ".concat(n, "(").concat(i, ")")), l.emit(f.ON_PUSHER_ERROR, {
                    data: e.data
                })
            },
            onLocalStateUpdate: function(e) {
                var t = e.code,
                    n = e.message;
                C.info("onLocalStateUpdate: ".concat(t, "(").concat(n, ")"))
            },
            onLocalHangup: function(e) {
                var t = e.data.message;
                C.warn("<live-pusher>收到5000: ".concat(t)), l.setIsPusherHangup(!0)
            },
            onLocalInterrupted: function(e) {
                if (v.report("mp_pusher_5001", {
                        is_in_background: T.isRunningBackground() ? "Y" : "N"
                    }), 0 < l.getTimerFor5001CausedByPhoneCall()) C.warn("subsequent 5001 is ignored, occurred in ".concat(T.isRunningBackground() ? "background" : "foreground"));
                else {
                    var t = setTimeout((function() {
                        C.info("tmp_5001_fired_by_phone_call cleared"), l.setTimerFor5001CausedByPhoneCall(0)
                    }), 1e3);
                    l.setTimerFor5001CausedByPhoneCall(t), T.isRunningBackground() ? (C.info("后台状态下<live-pusher>收到5001(表示被动浮窗被点掉了)，执行退会逻辑"), this.leaveMeeting().then((function() {
                        p.navigateBack()
                    }))) : (C.info("前台状态下<live-pusher>收到5001(表示被VOIP打断)"), this.mediaRoomInterrupted())
                }
            },
            onLocalReconnecting: function(e) {
                var t = e.data,
                    n = t.code,
                    i = t.message;
                C.warn("live-pusher: disconnected, reconnecting(1102): ".concat(n, "(").concat(i, ")")), this.mediaRoomReconnecting()
            },
            initMediaRoom: function(e) {
                var t = new i.default(e);
                t.registerObserver(this), l.setTRTCInstance(t)
            },
            joinMediaRoom: function() {
                var e = this;
                l.setMediaRoomState(R.MediaRoomState.JOINING), this.joinMedia(l.getRoomInfo()).catch((function(t) {
                    C.reportCls("cls_join_media_fail_joining-".concat(t)), e.initialJoinMediaRoomFailed("网络请求超时，请使用腾讯会议app加入会议。")
                }))
            },
            joinMedia: function(e) {
                var i = this;
                return n(t().mark((function n() {
                    return t().wrap((function(t) {
                        for (;;) switch (t.prev = t.next) {
                            case 0:
                                return t.abrupt("return", new Promise((function(t, n) {
                                    var o, a = setTimeout((function() {
                                            0 < d && clearTimeout(d), C.warn("join media room time out"), n("timeout")
                                        }), 1e4),
                                        r = i.onError;
                                    i.onError = function(e) {
                                        var t = (null == e ? void 0 : e.data) || {},
                                            o = t.code,
                                            s = t.message;
                                        if (10004 !== o && 10003 !== o) {
                                            0 < a && (clearTimeout(a), a = 0), i.onError = r;
                                            var c = isNaN(o) ? -1 : o,
                                                d = "".concat(s || "unknown error", "(").concat(c, ")");
                                            C.warn("进房失败：".concat(d)), n(d)
                                        }
                                    }, i.onLocalJoin = function(e) {
                                        0 < a && (clearTimeout(a), a = 0), i.onLocalJoin = function() {
                                            C.assert("LOCAL_JOIN should not be fired before you call MeetingAction.joinMedia")
                                        }, i.onError = r, C.reportCls("cls_join_media_success"), l.getTimerFor5001CausedByPhoneCall() ? C.warn("5001 is in handling, ignored this 1018") : i.joinMediaRoomSucc(), t()
                                    }, (null === (o = e.trtc_token) || void 0 === o ? void 0 : o.set_flag) || (C.assert("'set_flag' is expected but got null. roomInfo: ".concat(JSON.stringify(e))), C.reportEvent("xmpp_set_flag_is_supposed_to_be_in_join_resp"));
                                    var s = "default" === M.trtcEnv ? void 0 : M.trtcEnv,
                                        c = l.getTRTCInstance().joinMediaRoom({
                                            roomInfo: e,
                                            mediaState: {
                                                mic: l.getAudioEnable(),
                                                cam: l.getCameraEnable()
                                            },
                                            expCloudenv: s
                                        });
                                    C.reportCls("cls_join_media_starts"), l.emit(f.PUSHER_CHANGE, {
                                        data: c
                                    });
                                    var d = 0;
                                    T.isDevtools() && (d = setTimeout((function() {
                                        C.warn("运行于IDE中，为方便调试，代码主动触发<live-pusher>1018以模拟媒体入会成功。"), i.onLocalJoin()
                                    }), 2e3))
                                })));
                            case 1:
                            case "end":
                                return t.stop()
                        }
                    }), n)
                })))()
            },
            testFireEvent: function(e, t) {
                l.getTRTCInstance().testFireEvent(e, t)
            },
            getPusherURL: function() {
                var e = this.getPusherAttrs();
                return null === e ? null : e.url || null
            },
            getPusherAttrs: function() {
                return l.getTRTCInstance().getPusherAttrs()
            },
            updatePusherAttrs: function(e) {
                var t = l.getTRTCInstance();
                if (null !== t) {
                    var n = t.updatePusherAttrs(e);
                    l.emit(f.PUSHER_CHANGE, {
                        data: n
                    })
                } else C.warn('trtc is null. cannot call "updatePusherAttrs"')
            },
            getTRTC: function() {
                var e = l.getTRTCInstance();
                return e ? e.getTRTC() : null
            },
            delegateToTRTC: function(e, t) {
                if (this.getTRTC()) {
                    var n = this.getTRTC()[e];
                    if ("function" != typeof n) return void C.assert("cannot find function '".concat(e, "' in trtc-wx.js."));
                    try {
                        n.call(this.getTRTC(), t)
                    } catch (e) {
                        Math.random() < .01 && C.assert("error caught in trtc-wx.js sdk. event: ".concat(JSON.stringify(t), ". error: ").concat((null == e ? void 0 : e.message) || "unknown error"))
                    }
                } else C.warn("cannot delegate event ".concat(e, " to TRTC because trtc instance is undefined"))
            },
            exitMediaRoom: function() {
                var e = this;
                return new Promise((function(t, n) {
                    y.getPusherCtx() ? e.stopPusher().then((function() {
                        y.setPusherURL(""), t("")
                    })).catch((function(e) {
                        v.report(100419)
                    })) : (v.report(100418), y.setPusherURL(""), t(""))
                }))
            },
            updateUserAccessType: function(e) {
                0 === e || 1 === e ? (C.info("[user_status]access_type updated to ".concat(0 === e ? "DC" : "OC")), u.meetingUserCtrl.updateAccessType(e)) : C.error("expected 0 or 1, but got invalid accessType: ".concat(e))
            },
            updateUserAccessTypeAndMediaState: function(e) {
                var t = e.accessType,
                    n = e.videoOn,
                    i = e.audioOn;
                if (0 === t || 1 === t) {
                    var o = {
                        access_type: t
                    };
                    n && (o.video_on = "1", o.video_reason = u.meetingUserCtrl.turnVideoReason), i && (o.audio_on = "1", o.audio_reason = u.meetingUserCtrl.turnAudioReason), C.info("[user_status]access_type updated to ".concat(0 === t ? "DC" : "OC", ". media status is audio: ").concat(i, ", video: ").concat(n)), u.meetingUserCtrl.updateUserInfo(o, u.constants.UserState.UPDATE)
                } else C.error("expected 0 or 1, but got invalid accessType: ".concat(t))
            },
            updateQCloudSign: function(e) {
                e ? this.updateMediaToken(e.media_platform) : C.warn("could not assign null to updateQCloudSign")
            },
            didUpdateMediaToken: function(e) {
                var t = (e || {}).trtc_token;
                return t ? this.isMediaTokenAsSameAsBefore(t) ? (C.warn("media token is expected to be different but it is as same as before"), !1) : (l.getRoomInfo().trtc_token = t, C.info("media token updated to: ".concat(JSON.stringify(t))), !0) : (C.warn("update media token failed since backend did NOT give us"), !1)
            },
            isMediaTokenAsSameAsBefore: function(e) {
                var t = l.getRoomInfo().trtc_token;
                if (!t) return C.assert("previous trtc_token cannot be null."), !1;
                if (!e) return C.assert("incoming trtc_token cannot be null."), !1;
                for (var n = ["group_id", "set_flag", "priv_map", "usr_sig"], i = 0, o = n.length; i < o; i++)
                    if (t[n[i]] !== e[n[i]]) return !1;
                return C.info("trtc_token is as same as before."), !0
            },
            updateTokenAndTurnOnAudioDirectly: function(e) {
                var t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : U.SwitchReason.BYSELF;
                this.didUpdateMediaToken(e.media_platform) ? C.info('通过"主持人同意我的举手操作"途径更新了media token') : C.warn('通过"主持人同意我的举手操作"途径更新media token失败！'), this.turnOnAudioDirectly(t)
            },
            _handleRaiseHandComplete: function(e, t) {
                if (e) l.onHandsUpSucc();
                else {
                    var n = p.getDetailErrmsg(t, "举手/放手操作失败");
                    l.onHandsUpFail(n)
                }
            },
            _handleKickedOut: function(e, t) {
                d.dispatch({
                    type: e ? f.KICKED_OUT_SUCC : f.KICKED_OUT_FAIL,
                    payload: {
                        flag: e,
                        data: t
                    }
                })
            },
            _handleMeetingModified: function(e, t) {
                C.warn("NOT SUPPORTED(SINCE WE CANT BE HOST). flag = ".concat(e, ", data = ").concat(JSON.stringify(t)))
            },
            _handleNotifySwitchMediaStream: function(e, t) {
                d.dispatch({
                    type: f.NOTIFY_SWITCH_MEDIA_STREAM,
                    payload: {
                        flag: e,
                        data: t
                    }
                })
            },
            _handleNotifyMeetingSettingsUpdate: function(e, t) {
                var n = this;
                if (e && t) {
                    var i = t.allow_audience_hands_up,
                        o = t.allow_look_audience_count;
                    l.setAllowHandsUp(i), l.setAllowLookAudienceCount(o);
                    var a = t.request_up_stream_token || "";
                    (t.mediaSettingsList || []).forEach((function(e) {
                        var t = e.type === U.MediaType.AUDIO,
                            i = e.type === U.MediaType.SCREEN_SHARE;
                        t ? n._handleAudioSettingChange(e, a) : i && n._handleScreenShareSettingChange()
                    })), Object.prototype.hasOwnProperty.call(t, "hideMeetingCodePassword") && l.setIsHideMeetingCodeAndPassword(t.hideMeetingCodePassword), Object.prototype.hasOwnProperty.call(t, "meetingLockSettings") && l.setIsMeetingLocked(1 === t.meetingLockSettings.meeting_lock), Object.prototype.hasOwnProperty.call(t, "allow_renaming") && l.emit(f.ALLOW_RENAMING_CHANGE, {
                        data: 1 === t.allow_renaming
                    })
                } else C.error("S2C: meeting_settings_update error: ".concat(e, ", ").concat(t))
            },
            _handleScreenShareSettingChange: function() {
                l.setEnableWatermark(N.isEnableWatermark()), l.setMultipleRowWatermark(N.isMultipleRowWatermark())
            },
            _handleMuteAll: function(e) {
                var t = "";
                e ? (t = "主持人已将全体成员静音", C.info("主持人更改设置：全体静音，但允许成员自我解除静音")) : (t = "主持人已将全体成员静音，并不允许自我解除静音", C.info("主持人更改设置：全体静音，且不允许成员自我解除静音")), l.setAllowTurnOnBySelf(e), l.emit(f.MUTE_ALL, {
                    data: t
                })
            },
            _handleUnmuteAll: function(e) {
                C.info("主持人更改设置：请求解除全体静音"), l.getAudioEnable() ? C.info("本人已开麦，忽略") : (l.setRequestUpStreamToken(e), l.getIsHandsUp() ? (C.info("turn on audio by host when user is handsup since host asked to unmute all members' mic"), this.handsDown(), this.turnOnAudio(U.SwitchReason.BYHOST), l.emit(f.UNMUTE_ALL, {
                    data: !1
                })) : (C.info("未举手状态下解除全体静音，需要询问"), l.emit(f.UNMUTE_ALL, {
                    data: !0
                })))
            },
            _handleAudioSettingChange: function(e, t) {
                var n = e.muteAll,
                    i = e.allowUnmuteBySelf,
                    o = e.muteOnJoin,
                    a = void 0 !== o;
                if (void 0 !== n) n ? this._handleMuteAll(i) : this._handleUnmuteAll(t);
                else if (a) C.info("主持人更改设置：".concat(o ? "勾选" : "反选", "成员入会时静音"));
                else {
                    if (!i) return C.info("主持人更改设置：不允许成员自我解除静音"), void l.setAllowTurnOnBySelf(!1);
                    C.info("主持人更改设置：允许成员自我解除静音"), l.setAllowTurnOnBySelf(!0), l.getIsHandsUp() ? (this.handsDown(), l.getAudioEnable() ? C.warn("状态错误：麦克风开着举个啥手？") : (C.info("正在举手，主持人允许了自行解除静音，直接开麦！"), l.emit(f.UNMUTE_BY_HOST_CHANGE_ALLOW_TURN_ON_BY_SELF, {}), this.turnOnAudio(U.SwitchReason.BYHOST))) : C.info("未举手，不考虑自动解除静音")
                }
            },
            _handleMeetingWillLimited: function(e, t) {
                e ? (C.info("meeting_will_limited: flag=".concat(e, ", data=").concat(JSON.stringify(t))), isNaN(t.expire_time) || t.expire_time < (new Date).getTime() / 1e3 ? isNaN(t.expire_time) ? C.info('meeting_will_limited error: the backend give us an invalid "expire_time": '.concat(t.expire_time)) : (C.warn('meeting_will_limited warn: the backend give us an "expire_time"  which has already expired, we are about to leave. expire_time: '.concat(t.expire_time)), this.stopTimerOfOfMeetingTimeCountdown(), l.freeMeetingIsEnd()) : (l.setPayInfoMeetingExpireTime(t.expire_time), C.info("limite_type is: ".concat(t.limite_type)), this._handleWithLimiteType(t.limite_type))) : C.error("meeting_will_limited error: flag=".concat(e, ", data=").concat(JSON.stringify(t)))
            },
            _handleWithLimiteType: function(e) {
                var t = this,
                    n = "",
                    i = {};
                switch (e) {
                    case u.constants.LimitType.MEMBERS_COUNT_WILL_REACH_LIMIT_SOON:
                        n = f.MEMBERS_COUNT_WILL_REACH_LIMIT_SOON, i = "成员人数即将达到上限";
                        break;
                    case u.constants.LimitType.MEMBERS_COUNT_HAS_REACHED_LIMIT_ALREADY:
                        n = f.MEMBERS_COUNT_HAS_REACHED_LIMIT_ALREADY, i = "成员人数已经达到上限";
                        break;
                    case u.constants.LimitType.MEETING_DURATION_WILL_REACH_LIMIT_SOON:
                        var o = l.getPayInfoMeetingExpireTime() - parseInt((new Date).getTime() / 1e3, 10),
                            a = parseInt(o / 60, 10),
                            r = "";
                        if (a < 0 ? (C.error("[ASSERT] invalid seconds left: ", o), r = "免费会议即将结束") : r = 0 === a ? "免费会议即将在不到1分钟后结束" : 60 < a ? "免费会议还有至少".concat(a, "分钟") : "免费会议即将在".concat(a, "分钟后结束"), 0 < l.getPayInfoCountdownTimer()) C.info("收到会议计费信息push，之前已经有倒计时");
                        else if (C.info("收到会议计费信息push，启动倒计时"), l.getPayInfoCountdownThreshhold()) {
                            var s = setInterval((function() {
                                t.meetingTimeCountDown()
                            }), 1e3);
                            l.setPayInfoCountdownTimer(s)
                        } else C.warn("meeting_will_limited pushed but there's no countdownThreshhold found. You have not initialized it in the query_meeting_pay_info, did you? Or this is the meeting that is not necessary to show countdown for non-personal account according to yaco said on 17th Dec, 2019. ");
                        n = f.MEETING_DURATION_WILL_REACH_LIMIT_SOON, i = r;
                        break;
                    case u.constants.LimitType.PSTN_DURATION_WILL_REACH_LIMIT_SOON:
                        n = f.PSTN_DURATION_WILL_REACH_LIMIT_SOON, i = "PSTN时长即将达到上限";
                        break;
                    case u.constants.LimitType.PSTN_DURATION_HAS_REACHED_LIMIT_ALREADY:
                        n = f.PSTN_DURATION_HAS_REACHED_LIMIT_ALREADY, i = "PSTN时长已经达到上限";
                        break;
                    case u.constants.LimitType.SOMEBODY_TRIED_JOIN_MEETING_AFTER_REACH_LIMIT:
                        n = f.SOMEBODY_TRIED_JOIN_MEETING_AFTER_REACH_LIMIT, i = "达到上限后有人尝试入会";
                        break;
                    case u.constants.LimitType.ENOUGH_RESOURCE:
                        n = f.ENOUGH_RESOURCE, i = "资源充足！", this.stopTimerOfOfMeetingTimeCountdown();
                        break;
                    case u.constants.LimitType.ENOUGH_RESOURCE_ON_MEETING_DURATION:
                        n = f.ENOUGH_RESOURCE_ON_MEETING_DURATION, i = "会议时间资源充足！", this.stopTimerOfOfMeetingTimeCountdown();
                        break;
                    default:
                        C.warn("unexpceted limite_type got from _handleWithLimiteType: ".concat(e))
                }
                l.handleMeetingWillLimited(n, i)
            },
            _handleModifyUserInfo: function(e, t) {
                e && t ? d.dispatch({
                    type: f.MODIFY_USER_INFO_SUCC,
                    payload: {
                        flag: e,
                        data: t
                    }
                }) : d.dispatch({
                    type: f.MODIFY_USER_INFO_FAIL,
                    payload: {
                        flag: e,
                        data: t
                    }
                })
            },
            _handleRefreshMediaAuthInfo: function(e, t) {
                d.dispatch({
                    type: e ? f.REFRESH_MEDIA_AUTH_INFO_SUCC : f.REFRESH_MEDIA_AUTH_INFO_FAIL,
                    payload: {
                        flag: e,
                        data: t
                    }
                })
            },
            isEnterMeetingRoom: function(e) {
                return e === P.MEMBER_MOVED_BY_HOST_FROM_WAITING_ROOM_TO_MEETING_ROOM
            },
            isLeaveWaitingRoom: function(e) {
                return e === P.MEMBER_MOVED_BY_HOST_FROM_WAITING_ROOM_TO_OUTSIDE
            },
            isLeaveMeetingRoomToWaitingRoom: function(e) {
                return e === P.MEMBER_MOVED_BY_HOST_FROM_MEETING_ROOM_TO_WAITING_ROOM
            },
            _handleJoinFromWaitingRoom: function(e, t) {
                d.dispatch({
                    type: f.WAITING_USER_STATUS_JOIN_FROM_WAITING_ROOM,
                    payload: {
                        flag: e,
                        data: t
                    }
                })
            },
            _handleLeaveFromWaitingRoom: function(e, t) {
                d.dispatch({
                    type: f.WAITING_USER_STATUS_LEAVE_FROM_WAITING_ROOM,
                    payload: {
                        flag: e,
                        data: t
                    }
                })
            },
            _handleBackToWaitingRoom: function(e, t) {
                d.dispatch({
                    type: f.BACK_TO_WAITING_ROOM,
                    payload: {
                        flag: e,
                        data: t
                    }
                })
            },
            _handleIamInWaitingRoom: function(t, n) {
                var i = l.getJoinParam();
                i ? l.setJoinParam(e(e({}, i), {}, {
                    nickname: n.nickname
                })) : C.assert("joinParam is null")
            },
            _handleUpdateNicknameInWaitingRoom: function(e, t) {
                d.dispatch({
                    type: f.WAITING_USER_STATUS_I_AM_IN,
                    payload: {
                        flag: e,
                        data: t
                    }
                })
            },
            joinMediaRoomSucc: function() {
                d.dispatch({
                    type: f.LIVE_PUSHER_JOIN_MEDIA_ROOM_SUCC,
                    payload: {}
                })
            },
            needLeaveMediaRoom: function() {
                d.dispatch({
                    type: f.LIVE_PUSHER_NEED_LEAVE_MEDIA_ROOM,
                    payload: {}
                })
            },
            mediaRoomReconnecting: function() {
                d.dispatch({
                    type: f.LIVE_PUSHER_MEDIA_ROOM_RECONNECTING,
                    payload: {}
                })
            },
            mediaRoomRestarting: function() {
                var e = l.getMediaRoomState();
                if (e === R.MediaRoomState.IN) d.dispatch({
                    type: f.LIVE_PUSHER_MEDIA_ROOM_RESTARTING,
                    payload: {}
                });
                else {
                    var t = R.MediaRoomState.getReadableState(e);
                    C.info("restart pusher is ignored because the media room state is ".concat(e, "(").concat(t, ")"))
                }
            },
            mediaRoomInterrupted: function() {
                d.dispatch({
                    type: f.LIVE_PUSHER_MEDIA_ROOM_INTERRUPTED,
                    payload: {}
                })
            },
            setMediaRoomRedirecting: function() {
                l.setMediaRoomState(R.MediaRoomState.REDIRECTING)
            },
            onReceiveUserJoinOfMe: function() {
                this._handleMicAndCam();
                var e = l.getLastQueryMeetingInfo();
                this.queryMeetingInfo(e.getPublicMeetingCode())
            },
            _handleMicAndCam: function() {
                var e = "1" === u.preMeetingService.getSavedAudioOn(),
                    t = "1" === u.preMeetingService.getSavedVideoOn();
                C.info("user_join of me received, I want\n      mic = ".concat(e ? "On" : "Off", ",\n      cam = ").concat(t ? "On" : "Off", ",\n    ")), l.isOnOC() || (e && this.turnOnAudio(), t && this.turnOnVideo())
            },
            fixMemberOntoMainPos: function(e) {
                if (!e) return C.warn("fixMemberOntoMainPos: keyString is expected, but got ".concat(e)), "未能将视频固定在主画面(-1)";
                var t = m.getCommonUser(e);
                return t ? "1" !== t.video_on ? (C.warn("fixMemberOntoMainPos: ".concat(t.nickname, "'s video is off.")), "未能将视频固定在主画面(-2)") : l.getHasScreenShareInMeeting() ? (C.info("fixMemberOntoMainPos: ".concat(t.nickname, "'s video cannot be fixed onto main pos\n      since there's a screen share in meeting right now.")), "正在进行屏幕共享，不允许替换画面") : (d.dispatch({
                    type: f.FIX_MEMBER_ONTO_MAIN_POS,
                    payload: {
                        data: t
                    }
                }), "") : (C.warn("fixMemberOntoMainPos: cannot find ".concat(e, " in members.\n        members: ").concat(JSON.stringify(m.getMembers()), "\n      ")), "未能将视频固定在主画面(-3)")
            },
            modifyNickname: function(e) {
                var t = p.truncateText(e);
                if (C.info("want to modify nickname as: ".concat(e)), t) {
                    var n = u.meetingUserCtrl.getSelfId();
                    n ? u.meetingUserCtrl.modifyNickname(n, t) : C.assert("modifyNickname: failed because cannot get self id from sdk.")
                } else C.error("modifyNickname: failed because input name '".concat(e, "' truncated to '").concat(t, "' which is invalid."))
            },
            canModifyNickname: function() {
                var e = "";
                l.isAnonymousMeeting() ? e = "已开启匿名会议，不允许改名" : u.meetingUserCtrl.getIsAllowRenaming() || (e = u.meetingUserCtrl.getIsWebinar() ? "主持人不允许webinar成员改名" : "主持人不允许成员改名");
                var t = !e;
                return t || l.emit(f.MODIFY_USER_INFO_FAIL, {
                    flag: !1,
                    data: {
                        msg: e
                    }
                }), t
            },
            disableAudioExcitedStrategy: function() {
                d.dispatch({
                    type: f.DISABLE_AUDIO_EXCITED_STRATEGY,
                    payload: {
                        data: {}
                    }
                })
            },
            enableAudioExcitedStrategy: function() {
                d.dispatch({
                    type: f.ENABLE_AUDIO_EXCITED_STRATEGY,
                    payload: {
                        data: {}
                    }
                })
            },
            isAudioExcitedStrategyEnabled: function() {
                return l.getIsAudioExcitedStrategyEnabled()
            },
            setJoinMeetingRespMeta: function(e) {
                l.setJoinMeetingRespMeta(e)
            },
            getJoinRespMeta: function() {
                return l.getJoinRespMeta()
            },
            isInvalidLoad: function(e) {
                var t = p.isNoMorePageInStack(),
                    n = !l.getJoinRespMeta();
                return t || n ? (C.warn("invalid onLoad for ".concat(e, ": isEmptyStack = ").concat(t, ", isNullJoinResp = ").concat(n)), t && n ? v.report("mp_onload_checker", {
                    pageName: e,
                    code: "N1"
                }) : t ? v.report("mp_onload_checker", {
                    pageName: e,
                    code: "N2"
                }) : v.report("mp_onload_checker", {
                    pageName: e,
                    code: "N3"
                }), !0) : (v.report("mp_onload_checker", {
                    pageName: e,
                    code: "Y"
                }), !1)
            },
            getAvRoomID: function() {
                var e = (this.getJoinRespMeta() || {}).roomInfo;
                return (void 0 === e ? {} : e).av_room_id || ""
            },
            getShareObject: function(e) {
                l.setIsSpBackend(!0);
                var t = l.isWebinarMeeting(),
                    n = e.pmiCode || e.meetingCode || "",
                    i = "腾讯会议";
                e.name && (i = "会议邀请：".concat(e.name));
                var o, a = !1;
                e && e.isMeetingCodeFullyVisible && (a = !(null !== (o = e.isMeetingCodeFullyVisible) && void 0 !== o && o.call(e)));
                var r = "/pages/index/index?code=".concat(n, "&hideCode=").concat(a);
                if (t || e.isSignUpMeeting) {
                    var s = null != e && e.signUpUrl ? encodeURIComponent(null == e ? void 0 : e.signUpUrl) : "";
                    return {
                        title: i,
                        path: e.isSignUpMeeting || null != e && e.isActivityOpen ? "/pages/sub-web/auth/auth?url=".concat(s, "&isInJump=1") : r,
                        imageUrl: "/resources/default_webinar_cover.jpg"
                    }
                }
                return {
                    title: i,
                    path: r,
                    imageUrl: "/resources/share_private_meeting.jpg"
                }
            },
            toggleSound: function() {
                var e = !l.getIsSoundAround();
                e ? (console.log("打开免提"), v.report("enable_handsfree"), v.report("e#meeting#open_handsfree#click", {
                    is_on: 1
                }), C.info("打开免提", "turn Sound")) : (console.log("打开听筒"), v.report("disable_handsfree"), v.report("e#meeting#open_handsfree#click", {
                    is_on: 0
                }), C.info("打开听筒", "turn Sound")), l.setIsSoundAround(e)
            },
            fixAndroidSoundModeBug: function() {
                C.warn("did android bug fixe?")
            },
            fixLivePlayerNotPlayedAtBackground: function() {
                var e = T.isAndroid(),
                    t = l.isInMediaRoom(),
                    n = l.isFloatLayout();
                e && t && n && (C.warn("for Android the <live-player> not played in background, we play them in foreground(after 500ms)"), setTimeout((function() {
                    l.emit(f.PLAY_ALL_VIDEO_LIVE_PLAYERS)
                }), 2e3))
            },
            handsUp: function() {
                l.setIsHandsUp(!0), N.raiseHand(!0)
            },
            handsDown: function() {
                l.setIsHandsUp(!1), N.raiseHand(!1)
            },
            turnOnAudio: function() {
                var e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : U.SwitchReason.BYSELF;
                if (l.getIsHandsUp() && !l.isWebinarMeeting()) return l.setIsTurningAudio(!1), void l.emit(f.TURN_AUDIO_BUT_IS_HANDS_UPING, {});
                C.info("turn on audio by ".concat(this.getReadableByWhom(e), ".\n      need switch media mechine: ").concat(l.isOnOC() ? "Y" : "N", ",\n      request_up_stream_token: ").concat(l.getRequestUpStreamToken() ? "xxx" : "", "\n    ")), N.turnAudio({
                    on: !0,
                    reason: e,
                    needRefreshToken: l.isOnOC() ? 1 : 0,
                    requestUpStreamToken: l.getRequestUpStreamToken()
                })
            },
            turnAudio: function(e) {
                var i = arguments,
                    o = this;
                return n(t().mark((function a() {
                    var r, s;
                    return t().wrap((function(a) {
                        for (;;) switch (a.prev = a.next) {
                            case 0:
                                r = i.length > 1 && void 0 !== i[1] ? i[1] : U.SwitchReason.BYSELF, s = o;
                                try {
                                    o.setAudioSwitch(e), o.turnAudioAtCenter(e, r)
                                } catch (i) {
                                    i.includes("49737") && D < 5 ? (D += 1, setTimeout(n(t().mark((function n() {
                                        return t().wrap((function(t) {
                                            for (;;) switch (t.prev = t.next) {
                                                case 0:
                                                    return t.next = 2, s.turnAudio(e, r);
                                                case 2:
                                                    return t.abrupt("return", t.sent);
                                                case 3:
                                                case "end":
                                                    return t.stop()
                                            }
                                        }), n)
                                    }))), 200), C.info("49737次数：".concat(D))) : (C.error("turn ".concat(e ? "on" : "off", " audio failed because: ").concat(i)), l.emit(f.TURN_AUDIO_FAILED, {
                                        data: i
                                    }), o.turnAudioAtCenter(!e, U.SwitchReason.BYSELF))
                                }
                                l.setIsTurningAudio(!1);
                            case 4:
                            case "end":
                                return a.stop()
                        }
                    }), a)
                })))()
            },
            turnAudioAtCenter: function(e) {
                var t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : U.SwitchReason.BYSELF;
                this.notifyServerAudioStatus(e, t)
            },
            notifyServerAudioStatus: function(e, t) {
                N.updateAudioStatus(e, t)
            },
            turnOnAudioDirectly: function() {
                var e = this,
                    t = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : U.SwitchReason.BYSELF;
                C.info("turn on audio directly by ".concat(this.getReadableByWhom(t))), l.getUploadStreamController().addTask({
                    name: "turn-on-audio-directly",
                    action: function() {
                        e.turnAudio(!0, t)
                    },
                    succ: function() {},
                    fail: function(e) {
                        l.setIsTurningAudio(!1), C.error("open mic failed(-1): ".concat(e)), e ? p.showWXToast(e) : p.showWXToast("打开麦克风失败(-1)")
                    },
                    judgeData: "already-updated"
                })
            },
            turnOffAudio: function() {
                var e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : U.SwitchReason.BYSELF;
                N.turnAudio({
                    on: !1,
                    reason: e
                })
            },
            turnOnVideo: function() {
                var e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : U.SwitchReason.BYSELF;
                C.info("turn on video(".concat(e === U.SwitchReason.BYSELF ? "positively" : "passively", ")")), N.turnVideo({
                    on: !0,
                    reason: e,
                    needRefreshToken: l.isOnOC() ? 1 : 0
                })
            },
            turnOffVideo: function() {
                var e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : U.SwitchReason.BYSELF;
                C.info("turn off video(".concat(e === U.SwitchReason.BYSELF ? "positively" : "passively", ")")), this.setCameraSwitch(!1), N.turnVideo({
                    on: !1,
                    reason: e
                })
            },
            switchCamera: function() {
                var e = function() {
                        var e;
                        l.getIsFrontCamera() ? (l.setIsFrontCamera(!1), e = l.getCameraSwitchToBackSuccessText()) : (l.setIsFrontCamera(!0), e = l.getCameraSwitchToFrontSuccessText()), l.emit(l.getIsFrontCamera() ? f.CAMERA_SWITCH_TO_FRONT : f.CAMERA_SWITCH_TO_BACK, {
                            data: e
                        })
                    }.bind(this),
                    t = function() {
                        l.emit(f.CAMERA_SWITCH_FAILED, {
                            data: l.getCameraSwitchFailText()
                        })
                    }.bind(this);
                l.getTRTCInstance().switchCamera({
                    success: e,
                    fail: t
                })
            },
            doPlayOrStopForLivePlayer: function(e, t, n) {
                if (T.isRunningBackground()) return C.warn("running at background, no permission to invoke jsAPI on <live-player>.\n      wanna ".concat(n ? "play" : "stop", " ").concat(e, "(").concat(t, ")")), Promise.reject("#-6");
                var i = wx.createLivePlayerContext("player".concat(t)),
                    o = "playOrStopLivePlayer";
                return i ? T.isDevtools() ? Promise.resolve("") : (C.info("[live-player] ".concat(n ? "play" : "stop", " ").concat(e, "(").concat(t, ")...")), new Promise((function(a, r) {
                    if (n) try {
                        i.play({
                            success: function() {
                                C.info("play ".concat(e, "(").concat(t, ") succeed")), a()
                            },
                            fail: function(n) {
                                C.error("play failed for ".concat(e, "(").concat(t, ") because ").concat(n.errMsg), o), r("#-4")
                            }
                        })
                    } catch (n) {
                        C.error("start playing live-player of user ".concat(e, "(").concat(t, ") failed: ").concat(JSON.stringify(n)), o), r("#-5")
                    } else try {
                        i.stop({
                            success: function() {
                                C.info("stop ".concat(e, "(").concat(t, ") succeed")), a()
                            },
                            fail: function(n) {
                                C.error("stop failed for ".concat(e, "(").concat(t, ") because ").concat(n.errMsg), o), r("#-2")
                            }
                        })
                    } catch (n) {
                        C.error("stop pulling live-player of user ".concat(e, "(").concat(t, ") failed: ").concat(JSON.stringify(n)), o), r("#-3")
                    }
                }))) : (C.warn("no <live-player> context created for this guy: ".concat(e, "(").concat(t, ")"), o), Promise.reject("#-1"))
            },
            stopPusher: function() {
                return T.isDevtools() ? Promise.resolve("") : new Promise((function(e, t) {
                    y.getPusherCtx() ? y.getPusherCtx().stop({
                        success: function() {
                            C.info("stop pushing <live-pusher> succeed"), e()
                        },
                        fail: function(e) {
                            C.warn("stop pushing <live-pusher> failed: ".concat(e.errMsg)), t("#-2")
                        }
                    }) : t("#-1")
                }))
            },
            leaveMeeting: function() {
                var e = arguments,
                    i = this;
                return n(t().mark((function n() {
                    return t().wrap((function(t) {
                        for (;;) switch (t.prev = t.next) {
                            case 0:
                                if (!(!(e.length > 0 && void 0 !== e[0]) || e[0])) {
                                    t.next = 6;
                                    break
                                }
                                return t.next = 4, N.leaveMeetingFully();
                            case 4:
                                t.next = 8;
                                break;
                            case 6:
                                return t.next = 8, N.leaveMediaRoom();
                            case 8:
                                i.logoutImSdk(), l.clear();
                            case 10:
                            case "end":
                                return t.stop()
                        }
                    }), n)
                })))()
            },
            redirectMediaRoom: function() {
                var e = this;
                return n(t().mark((function n() {
                    return t().wrap((function(t) {
                        for (;;) switch (t.prev = t.next) {
                            case 0:
                                return l.setMediaRoomState(R.MediaRoomState.REDIRECTING), t.next = 3, e.leaveMediaRoom();
                            case 3:
                                return t.prev = 3, t.next = 6, e.joinMedia(l.getRoomInfo());
                            case 6:
                                t.next = 12;
                                break;
                            case 8:
                                throw t.prev = 8, t.t0 = t.catch(3), C.reportCls("cls_join_media_fail_redirecting-".concat(t.t0)), t.t0;
                            case 12:
                            case "end":
                                return t.stop()
                        }
                    }), n, null, [
                        [3, 8]
                    ])
                })))()
            },
            recoverMediaRoom: function() {
                var e = this;
                return n(t().mark((function n() {
                    return t().wrap((function(t) {
                        for (;;) switch (t.prev = t.next) {
                            case 0:
                                if (l.isInMeetingRoom()) {
                                    t.next = 3;
                                    break
                                }
                                return C.warn("not in meeting room(".concat(l.getReadableXMPPRoomState(), "), ignore to recover media room")), t.abrupt("return");
                            case 3:
                                return t.prev = 3, t.next = 6, e.joinMedia(l.getRoomInfo());
                            case 6:
                                t.next = 11;
                                break;
                            case 8:
                                t.prev = 8, t.t0 = t.catch(3), C.reportCls("cls_join_media_fail_recovering-".concat(t.t0));
                            case 11:
                            case "end":
                                return t.stop()
                        }
                    }), n, null, [
                        [3, 8]
                    ])
                })))()
            },
            leaveMediaRoom: function() {
                return n(t().mark((function e() {
                    return t().wrap((function(e) {
                        for (;;) switch (e.prev = e.next) {
                            case 0:
                                if (!T.isDevtools()) {
                                    e.next = 4;
                                    break
                                }
                                C.info("devtools, pretend we have left"), e.next = 7;
                                break;
                            case 4:
                                return l.emit(f.STOP_ALL_PLAYERS, {}), e.next = 7, l.getTRTCInstance().leaveMediaRoom();
                            case 7:
                                l.emit(f.MEDIA_ROOM_LEFT, {});
                            case 8:
                            case "end":
                                return e.stop()
                        }
                    }), e)
                })))()
            },
            leaveMediaRoomSpecific: function() {
                var e = this;
                return n(t().mark((function n() {
                    return t().wrap((function(t) {
                        for (;;) switch (t.prev = t.next) {
                            case 0:
                                return l.setMediaRoomState(R.MediaRoomState.LEAVING), t.next = 3, e.leaveMediaRoom();
                            case 3:
                                return l.setMediaRoomState(R.MediaRoomState.OUT), C.info("leave media room succeed"), t.next = 7, e.fixIOSBug();
                            case 7:
                                l.setTRTCInstance(null);
                            case 8:
                            case "end":
                                return t.stop()
                        }
                    }), n)
                })))()
            },
            fixIOSBug: function() {
                var t = this;
                return T.isIOS() && T.isRunningBackground() ? (C.warn("for ios running in background, we need to rejoin the cloudenv=PRO for compatibility."), new Promise((function(n, i) {
                    var o = t.onError,
                        a = 0;
                    t.onError = function(e) {
                        var t = e.data,
                            n = t.code,
                            i = t.message; - 1307 === n ? C.info("(-1307) 认为进媒体房间PRO环境成功，现可销毁pusher") : C.assert("假进房应该收到-1307,但却收到live-pusher error: ".concat(n, "(").concat(i, ")")), clearTimeout(a), r()
                    };
                    var r = function() {
                            t.onError = o, x.updatePusherAttrs({
                                url: ""
                            }), n()
                        },
                        s = l.getRoomInfo(),
                        c = e(e({}, s), {}, {
                            trtc_token: e(e({}, s.trtc_token), {}, {
                                group_id: 4294967295
                            })
                        }),
                        d = l.getTRTCInstance().joinMediaRoom({
                            roomInfo: c,
                            mediaState: {
                                mic: !1,
                                cam: !1
                            },
                            expCloudenv: "PRO"
                        });
                    l.emit(f.PUSHER_CHANGE, {
                        data: d
                    }), T.isDevtools() ? setTimeout((function() {
                        C.warn("运行于IDE中，为方便调试，代码主动触发<live-pusher> -1307以模拟假媒体入会成功。"), t.onError({
                            data: {
                                code: -1307
                            }
                        })
                    }), 2e3) : a = setTimeout((function() {
                        C.assert("假进房超时未能收到pusher error事件"), r()
                    }), 2e3)
                }))) : ""
            },
            leaveXmppRoom: function() {
                var e = arguments.length > 0 && void 0 !== arguments[0] && arguments[0],
                    t = l.isInMeeting();
                return C.info("leave xmpp room".concat(t ? "" : "(but current is outside)")), !!t && u.leaveMeeting({}, e)
            },
            initialJoinMediaRoomFailed: function(e) {
                l.emit(f.INITIAL_JOIN_MEDIA_ROOM_FAILED, {
                    data: e
                })
            },
            getReadableByWhom: function(e) {
                return e === U.SwitchReason.BYSELF ? "SELF" : e === U.SwitchReason.BYHOST ? "HOST" : "UNKNOWN"
            },
            recoverLivePusher: function() {
                var e = arguments.length > 0 && void 0 !== arguments[0] && arguments[0];
                l.recoverLivePusher(e)
            },
            isEnableWatermark: function() {
                return N.isEnableWatermark()
            },
            hasScreenShareInMeeting: function() {
                return l.getHasScreenShareInMeeting()
            },
            isScreenSharePaused: function() {
                return l.isScreenSharePaused()
            },
            getScreenShareMember: function() {
                return l.getScreenShareMember()
            },
            listenScreenCapture: function() {
                var e = this;
                if (!wx.onUserCaptureScreen) return C.warn("wx.onUserCaptureScreen not defined"), void v.reportError("100425");
                wx.onUserCaptureScreen((function() {
                    if (e.isEnableWatermark() && e.hasScreenShareInMeeting() && !e.isScreenSharePaused()) {
                        l.emit(f.SNAPSHOT_TAKEN_ON_SCREEN_SHARE, {});
                        var t = e.getScreenShareMember();
                        if (t) {
                            var n = N.formKeyById(t.id);
                            v.report("mp_screen_share_captured", {
                                shareing_person: n
                            }), C.warn("user takes a snapshot on the screen sharing of ".concat(t.nickname, "(").concat(n, ")"))
                        } else C.error(new Error("cannot get screen share member").stack)
                    }
                }))
            },
            onLivePusherNetStatusChange: function(e) {
                if (!this._isWaiting) {
                    this._isWaiting = !0;
                    var t = e.videoBitrate,
                        n = e.audioBitrate,
                        i = e.netSpeed,
                        o = e.netQualityLevel;
                    try {
                        if (isNaN(t) || isNaN(n) || isNaN(i)) throw C.error("net statistics is invalid:\n          videoBitrate = ".concat(t, ",\n          audioBitrate = ").concat(n, ",\n          netSpeed = ").concat(i, ",\n        ")), !1;
                        var a = n + t,
                            r = a - i,
                            s = 0 === a ? 0 : parseFloat((i / a).toFixed(2)),
                            c = this.getLivePusherNetStatusLevel(r, s),
                            d = l.getNetworkLevel();
                        if (c === d) throw !1;
                        if (l.setNetworkLevel(c), C.info("level值有变化:".concat(d, "==>").concat(c)), C.info("\n      a+v=".concat(a, ",\n      speed=").concat(i, ",\n      diff=").concat(r, ",\n      percent=").concat(s, ",\n      level=").concat(c, ",\n      netQualityLevel= ").concat(o, ",\n    ")), v.report("mp_pusher_netstatus", {
                                totalEncodeSpeed: a,
                                netSpeed: i,
                                absDiff: r,
                                percent: s,
                                level: c
                            }), !l.isInMeetingRoom()) throw !1;
                        N.reportMediaStreamStatus({
                            network_level: c
                        }), l.emit(f.LIVE_PUSHER_NET_STATUS_CHANGE, {
                            data: c
                        })
                    } catch (e) {
                        return void(this._isWaiting = !1)
                    }
                }
            },
            getLivePusherNetStatusLevel: function(e, t) {
                return e < A.EXCELLENT_GAP || A.EXCELLENT_PERCENT <= t ? U.MediaNetworkLevel.Excellent : e < A.GOOD_GAP || A.GOOD_PERCENT <= t ? U.MediaNetworkLevel.Good : e < A.NORMAL_GAP || A.NORMAL_PERCENT <= t ? U.MediaNetworkLevel.Fair : e < A.BAD_GAP || A.BAD_PERCENT <= t ? U.MediaNetworkLevel.Poor : U.MediaNetworkLevel.NoSignal
            },
            queryMeetingNotice: function(e) {
                return n(t().mark((function e() {
                    return t().wrap((function(e) {
                        for (;;) switch (e.prev = e.next) {
                            case 0:
                                N.queryMeetingNotice().then(function() {
                                    var e = n(t().mark((function e(n) {
                                        var i, o, a, r, s, c, d;
                                        return t().wrap((function(e) {
                                            for (;;) switch (e.prev = e.next) {
                                                case 0:
                                                    if (null != n && n.notice_version && l.setNoticeVersion(null == n ? void 0 : n.notice_version), null == n || !n.notice_version) {
                                                        e.next = 14;
                                                        break
                                                    }
                                                    if (null != n && n.notice_content) {
                                                        e.next = 5;
                                                        break
                                                    }
                                                    return l.emit(f.NOTICE_CONTENT_CHANGE, {
                                                        data: {
                                                            isRead: !0,
                                                            customMessage: {
                                                                extension: {
                                                                    notice_content: ""
                                                                }
                                                            }
                                                        }
                                                    }), e.abrupt("return");
                                                case 5:
                                                    o = w.decode(null == n ? void 0 : n.notice_content), a = 1 == (null == n ? void 0 : n.is_read), null == n ? void 0 : n.meeting_id, r = null == n ? void 0 : n.notice_type, s = null == n ? void 0 : n.notice_version, c = w.decode(null == n || null === (i = n.sender) || void 0 === i ? void 0 : i.nickname), n.sender, d = {
                                                        isRead: a,
                                                        customMessage: {
                                                            extension: {
                                                                notice_content: o,
                                                                notice_type: r,
                                                                notice_version: s
                                                            },
                                                            sender_info: {
                                                                nickname: c,
                                                                avatar_url: ""
                                                            }
                                                        },
                                                        defaultText: "更新了公告，请使用最新版本查看。",
                                                        time: n.send_time
                                                    }, l.emit(f.NOTICE_CONTENT_CHANGE, {
                                                        data: d
                                                    });
                                                case 14:
                                                case "end":
                                                    return e.stop()
                                            }
                                        }), e)
                                    })));
                                    return function(t) {
                                        return e.apply(this, arguments)
                                    }
                                }()).catch((function(e) {
                                    console.log(e, "queryMeetingNotice")
                                }));
                            case 1:
                            case "end":
                                return e.stop()
                        }
                    }), e)
                })))()
            },
            readMeetingNotice: function(e) {
                return n(t().mark((function n() {
                    return t().wrap((function(t) {
                        for (;;) switch (t.prev = t.next) {
                            case 0:
                                N.readMeetingNotice(e).then((function(e) {})).catch((function(e) {
                                    console.log(e, "readMeetingNotice")
                                }));
                            case 1:
                            case "end":
                                return t.stop()
                        }
                    }), n)
                })))()
            },
            initImSdk: function() {
                var e, t, n = this;
                if (l.getIsSupportIm()) {
                    var i = l.getLastQueryMeetingInfo(),
                        a = l.getJoinRespMeta().roomInfo,
                        c = null == a || null === (e = a.im) || void 0 === e ? void 0 : e.qcloud_im_sdk.group_id,
                        u = (null == a || null === (t = a.im) || void 0 === t || t.qcloud_im_sdk.attendee_group_id, ""),
                        _ = o.default.getUserSig().find((function(e) {
                            return "W6" === e.sig_type
                        })),
                        m = "";
                    if (null != _ && _.user_sig) {
                        var g = p.base64Decode(null == _ ? void 0 : _.user_sig),
                            h = JSON.parse(g);
                        m = null == h ? void 0 : h.im_token, u = null == h ? void 0 : h.open_id
                    }
                    null == i || i.meetingID;
                    var S = l.getJoinParam().nickname;
                    r.default.init({
                        userId: u,
                        userSig: m,
                        group: c,
                        nickname: S
                    }).then((function(e) {
                        r.default.on("sdkStateReady", (function() {
                            l.isWebinarMeeting() && r.default.instance.joinGroup("".concat(c, "_webinar")).then((function(e) {})), c && n.queryMeetingNotice(!0)
                        })), r.default.on("onMessageReceived", (function(e) {
                            var t = [s.IMChatBizType.Tip],
                                n = e.filter((function(e) {
                                    return !t.includes(e.chatType)
                                }));
                            d.dispatch({
                                type: f.MESSAGE_RECEIVED,
                                payload: n
                            })
                        })), r.default.on("onMessageRevoked", (function(e) {
                            d.dispatch({
                                type: f.MESSAGE_REVOKED,
                                payload: e
                            })
                        }))
                    }))
                }
            },
            logoutImSdk: function() {
                var e, t = l.getJoinRespMeta(),
                    n = null == t ? void 0 : t.roomInfo,
                    i = null == n || null === (e = n.im) || void 0 === e ? void 0 : e.qcloud_im_sdk.group_id;
                l.isWebinarMeeting() && i ? r.default.instance.quitGroup("".concat(i, "_webinar")).then((function(e) {})).finally((function() {
                    r.default.destroy()
                })) : r.default.destroy(), this.clearImMsg()
            },
            clearImMsg: function() {
                l.clearUnreadMsgCount(), l.clearImMessageList()
            }
        };
    d.register((function() {
        var e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {},
            t = e.type;
        if (t) switch (t) {
            case f.RECEIVE_USER_JOIN_OF_ME:
                x.onReceiveUserJoinOfMe()
        }
    })), console.log("MeetingAction.js loaded end"), module.exports = x;
});
define("actions/MembersAction.js", function(require, module, exports, window, document, frames, self, location, navigator, localStorage, history, Caches, screen, alert, confirm, prompt, XMLHttpRequest, WebSocket, Reporter, webkit, WeixinJSCore) {
    "use strict";
    var e = require("../utils/Dispatcher"),
        t = require("../clients/WemeetClient"),
        n = require("../utils/logger"),
        a = require("../constants/MembersType"),
        i = require("../stores/MembersStore"),
        o = new n({
            pageName: "MembersAction",
            aegisLogEnable: !0,
            wxLogEnable: !1
        }),
        s = {
            inited: !1,
            init: function() {
                this.inited || (this._addListener(), this.inited = !0)
            },
            _addListener: function() {
                var e = this,
                    n = {
                        user_join: a.USER_JOIN,
                        user_leave: a.USER_LEAVE,
                        user_offline: a.USER_OFFLINE,
                        user_update: a.USER_UPDATE,
                        user_kicked: a.USER_KICKED
                    };
                Object.keys(n).forEach((function(a) {
                    t.on(a, e._handleUserStatus(a, n[a]))
                })), t.on("notify_join_audio_mix_user_info", this._handleNotifyJoinAudioMixUserInfo), t.on("change_host_push", this._handleHostChange), t.on("change_co_host_push", this._handleCoHostChange), t.on("report_media_stream_status_push", this._handleReportMediaStreamStatusPush, this)
            },
            _handleUserStatus: function(t, n) {
                return function(a, i) {
                    a && i ? e.dispatch({
                        type: n,
                        payload: {
                            flag: a,
                            data: i
                        }
                    }) : o.error("invalid resp for protocol '".concat(t, "': ").concat(a))
                }.bind(this)
            },
            _handleNotifyJoinAudioMixUserInfo: function(t, n) {
                e.dispatch({
                    type: a.NOTIFY_JOIN_AUDIO_MIX_USER_INFO,
                    payload: {
                        flag: t,
                        data: n
                    }
                })
            },
            _handleHostChange: function(t, n) {
                t && n ? e.dispatch({
                    type: a.HOST_CHANGED,
                    payload: {
                        flag: t,
                        data: n
                    }
                }) : o.error("change_host failed: ".concat(t, ", ").concat(JSON.stringify(n)))
            },
            _handleCoHostChange: function(t, n) {
                e.dispatch({
                    type: a.CO_HOST_CHANGED,
                    payload: {
                        flag: t,
                        data: n
                    }
                })
            },
            _handleReportMediaStreamStatusPush: function(e, t) {
                if (e) {
                    var n = (t || {}).user_list,
                        a = void 0 === n ? [] : n;
                    i.onReportMediaStreamStatusPush(a)
                }
            },
            _handleIamInWaitingRoom: function(e, t) {
                e && i.iamInWaitingRoom(t)
            },
            _handleUserInfoChangedBySelf: function(e, t) {
                e && i.myUserInfoChangedByMyself(t)
            },
            _handleUserInfoChangedByHost: function(e, t) {
                e && i.myUserInfoChangedByHost(t)
            },
            clearAudioMvsp: function() {
                e.dispatch({
                    type: a.CLEAR_AUDIO_MVSP,
                    payload: {}
                })
            }
        };
    module.exports = s;
});
define("actions/PrivateMeetingAction.js", function(require, module, exports, window, document, frames, self, location, navigator, localStorage, history, Caches, screen, alert, confirm, prompt, XMLHttpRequest, WebSocket, Reporter, webkit, WeixinJSCore) {
    "use strict";
    require("../@babel/runtime/helpers/Arrayincludes"), require("../@babel/runtime/helpers/Objectvalues");
    var e = require("../utils/Dispatcher"),
        t = require("../constants/PrivateMeetingType"),
        i = require("../stores/PrivateMeetingStore"),
        n = require("../https/PrivateMeetingHttps"),
        o = new(require("../utils/logger"))({
            pageName: "PrivateMeetingAction",
            aegisLogEnable: !0,
            wxLogEnable: !1
        }),
        r = {
            NoLogin: -2e4,
            BannedAccount: -20001,
            MultiEndLoginApp: -200002,
            MultiEndLoginWeb: -200005,
            DisabledAccount: -521e3,
            ExpiredNormalAccount: -521001,
            ExpiredAdminAccount: -521002,
            DeletedAccount: -51008,
            PersonAccountInvalid: -155108
        },
        c = {
            inited: !1,
            init: function() {
                this.inited || (this._addListener(), this.inited = !0)
            },
            _addListener: function() {},
            setMeetingCode: function(i) {
                e.dispatch({
                    type: t.PRIVATE_MEETING_CODE_CHANGE,
                    payload: i
                })
            },
            setMeetingInfo: function(i) {
                e.dispatch({
                    type: t.PRIVATE_MEETING_INFO_CHANGE,
                    payload: i
                })
            },
            setWebShareUrl: function(i) {
                e.dispatch({
                    type: t.PRIVATE_MEETING_WEBSHARE_URL_CHANGE,
                    payload: i
                })
            },
            setIsMeetingCollected: function(i) {
                e.dispatch({
                    type: t.PRIVATE_MEETING_IS_COLLECTED_CHANGE,
                    payload: i
                })
            },
            setRegisterOrLoginAuthCode: function(i) {
                e.dispatch({
                    type: t.PRIVATE_MEETING_REGISTER_OR_LOGIN_AUTH_CODE_CHANGE,
                    payload: i
                })
            },
            setIsCorpUser: function(i) {
                e.dispatch({
                    type: t.PRIVATE_MEETING_IS_CORP_USER_CHANGE,
                    payload: i
                })
            },
            setAccountList: function(i) {
                e.dispatch({
                    type: t.PRIVATE_MEETING_ACCOUNT_LIST_CHANGE,
                    payload: i
                })
            },
            queryIsMeetingCollected: function() {
                var e = this,
                    t = {
                        meeting_code: i.getPrivMeetingCode()
                    };
                return n.isMeetingCollected(t).then((function(t) {
                    var i = ((t || {}).meeting_simple_info || {}).is_collected,
                        n = void 0 !== i && i;
                    o.info("queryIsMeetingCollected: ".concat(n ? "Y" : "N", ", raw resp = ").concat(JSON.stringify(t))), e.setIsMeetingCollected(n)
                })).catch((function(e) {
                    var t = e.errmsg;
                    return Promise.reject(t)
                }))
            },
            collectMeeting: function() {
                var c = this;
                if (!i.getIsGrantToJoin()) return o.error("collectMeeting failed since no permission"), Promise.reject("对不起，您没有添加该特邀会议的权限");
                var a = (i.getPrivMeetingInfo() || {}).meeting_id,
                    s = void 0 === a ? "" : a;
                return s ? n.collectMeeting({
                    meeting_id: s
                }).then((function() {
                    c.setIsMeetingCollected(!0), e.dispatch({
                        type: t.PRIVATE_MEETING_COLLECTED_SUCC,
                        payload: "nothing"
                    })
                })).catch((function(i) {
                    var n = i.errmsg,
                        c = i.code;
                    o.warn("collecMeeting failed: ".concat(n));
                    var a = Object.values(r);
                    c && a.includes(c) ? e.dispatch({
                        type: t.PRIVATE_MEETING_REGISTER_ACCOUNT,
                        payload: c
                    }) : e.dispatch({
                        type: t.PRIVATE_MEETING_COLLECTED_FAIL,
                        payload: n
                    })
                })) : (o.error("collectMeeting failed since no meeting_id got. PrivateMeeting Info: ".concat(i.getPrivMeetingInfo())), Promise.reject("添加会议失败(-1)"))
            }
        };
    module.exports = c;
});
define("actions/RecyclableMemberListAction.js", function(require, module, exports, window, document, frames, self, location, navigator, localStorage, history, Caches, screen, alert, confirm, prompt, XMLHttpRequest, WebSocket, Reporter, webkit, WeixinJSCore) {
    "use strict";
    var e = require("../utils/Dispatcher"),
        t = require("../utils/logger"),
        i = require("../actions/MeetingAction"),
        n = require("../stores/RecyclableMemberListStore"),
        a = require("../constants/RecyclableMemberListType"),
        r = require("../components/miniprogram-recycle-view/index.js"),
        c = new t({
            pageName: "RecyclableMemberListAction",
            aegisLogEnable: !0,
            wxLogEnable: !1
        }),
        o = {
            inited: !1,
            init: function() {
                this.inited || (this._addListener(), this.inited = !0)
            },
            _addListener: function() {},
            _handleUserStatus: function(t, i) {
                return function(n, a) {
                    n && a ? e.dispatch({
                        type: i,
                        payload: {
                            flag: n,
                            data: a
                        }
                    }) : c.error("invalid resp for protocol '".concat(t, "': ").concat(n, ", ").concat(a))
                }.bind(this)
            },
            initRecycleContext: function(e) {
                var t = e || {},
                    i = t.id,
                    n = t.dataKey,
                    a = t.page,
                    o = t.itemSize,
                    s = void 0 === o ? {} : o;
                if (!(i && n && a && s)) return c.error("invalid parameters for initializing recycle context:\n        id=".concat(i, ",\n        dataKey=").concat(n, ",\n        page=").concat(a, ",\n        itemSize=").concat(JSON.stringify(s), ",\n      ")), void this.initRecycleContextFailed("invalid parameters for initializing recycle context");
                var l = null;
                try {
                    l = r({
                        id: i,
                        dataKey: n,
                        page: a,
                        itemSize: s
                    })
                } catch (e) {
                    c.error("createRecycleContext error: ".concat(JSON.stringify(e))), l = null
                }
                l ? this.initRecycleContextSucceed(l) : this.initRecycleContextFailed("API createRecycleContext results in null")
            },
            initRecycleContextSucceed: function(t) {
                e.dispatch({
                    type: a.CREATE_RECYCLE_CONTEXT_SUCC,
                    payload: {
                        data: t
                    }
                })
            },
            initRecycleContextFailed: function(t) {
                e.dispatch({
                    type: a.CREATE_RECYCLE_CONTEXT_FAIL,
                    payload: {
                        data: t
                    }
                })
            },
            destroyRecycleContext: function() {
                e.dispatch({
                    type: a.DESTORY_RECYCLE_CONTEXT,
                    payload: {}
                })
            },
            fixMemberOntoMainPos: function(e) {
                var t = (n.getMemberList() || []).filter((function() {
                    var t = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {};
                    return t.keyString === e
                }))[0];
                if (i.hasScreenShareInMeeting()) return c.warn("fix member at main video position failed because we got a screen share"), void n.emit(a.FIX_MEMBER_ONTO_MAIN_POS_FAIL, {
                    data: "操作失败: 屏幕共享时无法固定"
                });
                if (!t) return c.error("fix member at main video position failed because cannot find him in current members list.\n      maybe he has left meeting. member: ".concat(e)), void n.emit(a.FIX_MEMBER_ONTO_MAIN_POS_FAIL, {
                    data: "操作失败: 未找到成员"
                });
                if ("1" === t.video_on) {
                    var r = i.fixMemberOntoMainPos(e);
                    r && n.emit(a.FIX_MEMBER_ONTO_MAIN_POS_FAIL, {
                        data: r
                    })
                } else n.emit(a.FIX_MEMBER_ONTO_MAIN_POS_FAIL, {
                    data: "操作失败: 该成员未开启视频"
                })
            }
        };
    module.exports = o;
});
define("actions/UserAction.js", function(require, module, exports, window, document, frames, self, location, navigator, localStorage, history, Caches, screen, alert, confirm, prompt, XMLHttpRequest, WebSocket, Reporter, webkit, WeixinJSCore) {
    "use strict";
    var e = require("../@babel/runtime/helpers/typeof");
    require("../@babel/runtime/helpers/Arrayincludes"), require("../@babel/runtime/helpers/Objectvalues");
    var t = require("../@babel/runtime/helpers/objectSpread2"),
        n = require("../@babel/runtime/helpers/regeneratorRuntime"),
        o = require("../@babel/runtime/helpers/asyncToGenerator"),
        r = require("../utils/crypto");
    console.log("UserAction.js loaded start");
    var i = require("../utils/Dispatcher"),
        a = require("../clients/WemeetClient"),
        c = require("../clients/BeaconClient"),
        s = require("../clients/AegisClient"),
        u = require("../clients/RavenClient"),
        g = require("../stores/UserStore"),
        d = require("../utils/logger"),
        p = require("../constants/UserType"),
        l = require("../constants/PrivateMeetingType"),
        _ = require("../utils/util"),
        f = require("../https/UserHttps"),
        h = require("../constants/MultMediaState").AccessState,
        m = new d({
            pageName: "UserAction",
            wxLogEnable: !1,
            aegisLogEnable: !0
        }),
        I = new d({
            pageName: "UserAction::GetUserSubscribeStatus",
            wxLogEnable: !0,
            aegisLogEnable: !0
        }),
        E = {
            DeletedAccount: -51008,
            PersonAccountInvalid: -155108
        },
        C = {
            inited: !1,
            init: function() {
                var e = this;
                return o(n().mark((function t() {
                    return n().wrap((function(t) {
                        for (;;) switch (t.prev = t.next) {
                            case 0:
                                if (!e.inited) {
                                    t.next = 2;
                                    break
                                }
                                return t.abrupt("return");
                            case 2:
                                return e.inited = !0, e.isDoLogining = !1, e.loginHandler = null, e.initAccountInfo(), t.next = 8, e.isLoginStateValid();
                            case 8:
                                t.sent || e.doLogin(), e._addListener();
                            case 11:
                            case "end":
                                return t.stop()
                        }
                    }), t)
                })))()
            },
            initAccountInfo: function() {
                var e = _.getValueFromLocalStorage("openid") || {},
                    t = e.openID,
                    n = void 0 === t ? "" : t,
                    o = e.unionId,
                    r = void 0 === o ? "" : o,
                    a = e.unionIdEXP,
                    g = void 0 === a ? 0 : a,
                    d = e.xmppToken,
                    l = void 0 === d ? "" : d,
                    f = e.xmppTokenEXP,
                    h = void 0 === f ? 0 : f,
                    I = e.cgiToken,
                    E = void 0 === I ? "" : I,
                    C = e.cgiTokenEXP,
                    v = void 0 === C ? 0 : C,
                    w = e.phone,
                    y = void 0 === w ? "" : w,
                    T = _.getValueFromLocalStorage("wemeet_login_state") || {},
                    L = T.wemeetLoginInfo,
                    N = void 0 === L ? null : L,
                    S = T.wemeetLoginInfoEXP,
                    k = void 0 === S ? 0 : S;
                c.setConfig({
                    openID: n
                }), u.setOpenId(n), s.setConfig({
                    uin: n
                });
                var P = !!_.getValueFromLocalStorage("iKnowToKeepInForeground"),
                    A = _.getValueFromLocalStorage("defaultNickname") || "";
                m.info("getting from cache:\n      openID=".concat(n, ",\n      unionId=").concat(r, ",\n      unionIdEXP=").concat(g, ",\n      phone=").concat(y, ",\n      xmppToken=").concat(l, ",\n      xmppTokenEXP=").concat(h, ",\n      cgiToken=").concat(E, ",\n      cgiTokenEXP=").concat(v, ",\n      defaultNickname=").concat(A, ",\n      wemeetLoginInfo=").concat(JSON.stringify(N), ",\n      wemeetLoginInfoEXP=").concat(k, ",\n    "));
                var O = this.isWeMeetLoginStateEffective(N, k);
                i.dispatch({
                    type: p.ACCOUNT_INFO_INIT,
                    payload: {
                        openID: n,
                        unionId: r,
                        unionIdEXP: g,
                        phone: y,
                        xmppToken: l,
                        xmppTokenEXP: h,
                        cgiToken: E,
                        cgiTokenEXP: v,
                        defaultNickname: A,
                        iKnowToKeepInForeground: P,
                        wemeetLoginInfo: O ? N : null,
                        wemeetLoginInfoEXP: O ? k : 0
                    }
                })
            },
            updateWXUserInfo: function() {
                var e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : null;
                i.dispatch({
                    type: p.WX_USER_INFO_CHANGE,
                    payload: {
                        data: e
                    }
                })
            },
            getWXUserInfoFromWeChat: function() {
                var e = this;
                return new Promise((function(t, n) {
                    wx.getUserProfile({
                        lang: "zh_CN",
                        desc: "使用您的微信昵称作为入会名称。",
                        success: function(n) {
                            m.info("wx.getUserProfile success：".concat(JSON.stringify(n))), e.updateWXUserInfo(n.userInfo), t(n)
                        },
                        fail: function(e) {
                            m.warn("wx.getUserProfile failed: ".concat(JSON.stringify(e))), wx.showToast({
                                title: "授权失败",
                                icon: "none"
                            }), n(e)
                        },
                        complete: function() {}
                    })
                }))
            },
            isWeMeetLoginStateEffective: function(e, t) {
                var n = e,
                    o = t;
                n || (n = g.getWeMeetLoginInfo()), o || (o = g.getWeMeetLoginTokenEXP());
                var r = !1;
                return n ? _.isTimeAfterNow(o) ? (console.info("".concat(n.nick_name, "'s session is still effective")), r = !0) : m.warn("".concat(n.nick_name, "'s session has expired(Expired at ").concat(new Date(o), ",\n        but now is ").concat(new Date, ")")) : console.info("no wemeet login state maintained"), r
            },
            setOpenId: function(e) {
                var n = _.getValueFromLocalStorage("openid"),
                    o = t(t({}, n), {}, {
                        openID: e
                    });
                _.setValueInLocalStorage("openid", o), i.dispatch({
                    type: p.OPENID_CHANGE,
                    payload: e
                })
            },
            setUnionId: function(e) {
                var n = _.getValueFromLocalStorage("openid"),
                    o = t(t({}, n), {}, {
                        unionId: e
                    });
                _.setValueInLocalStorage("openid", o), i.dispatch({
                    type: p.UNIONID_CHANGE,
                    payload: e
                })
            },
            setUnionIdExp: function(e) {
                var n = _.getValueFromLocalStorage("openid"),
                    o = t(t({}, n), {}, {
                        unionIdEXP: e
                    });
                _.setValueInLocalStorage("openid", o), i.dispatch({
                    type: p.UNIONIDEXP_CHANGE,
                    payload: e
                })
            },
            doLogin: function() {
                var e = this;
                return this.isDoLogining ? (m.warn("上次登录还未返回，等待并复用上次的登陆请求"), this.loginHandler) : (this.isDoLogining = !0, this.loginHandler = this.wxLogin().then((function(t) {
                    return m.info("this.wxLogin ok, wxAuthCode = ".concat(t)), e.cgiLogin(t)
                })).then((function(n) {
                    m.info("WeMeetLogin succeed"), e.isDoLogining = !1;
                    var o = n.openID,
                        r = n.unionId,
                        a = n.unionIdEXP,
                        g = n.cgiToken,
                        d = n.cgiExp,
                        l = n.countryCode,
                        f = n.phoneNumber,
                        h = n.xmppToken,
                        I = n.xmppExp;
                    c.setConfig({
                        openID: o
                    });
                    var E = _.getValueFromLocalStorage("openid"),
                        C = t(t({}, E), {}, {
                            openID: o,
                            unionId: r,
                            unionIdEXP: a,
                            cgiToken: g,
                            cgiTokenEXP: d
                        });
                    return h && (C.xmppToken = h, C.xmppTokenEXP = I, C.countryCode = l, C.phoneNumber = f, C.phone = f), _.setValueInLocalStorage("openid", C), s.setConfig({
                        uin: o
                    }), u.setOpenId(o), i.dispatch({
                        type: p.CGI_LOGIN_SUCC,
                        payload: {
                            openID: o,
                            unionId: r,
                            unionIdEXP: d,
                            cgiToken: g,
                            cgiExp: d
                        }
                    }), n
                })).catch((function(t) {
                    throw e.isDoLogining = !1, m.error("loginHandler failed: msg = ".concat(t.message, ", stack = ").concat(t.stack)), i.dispatch({
                        type: p.CGI_LOGIN_FAIL,
                        payload: {}
                    }), t
                })), this.loginHandler)
            },
            wxLogin: function() {
                return new Promise((function(e, t) {
                    wx.login({
                        timeout: 1e4,
                        success: function(n) {
                            n && n.code ? (m.info("wx.login succeed: ".concat(JSON.stringify(n))), m.reportCls("cls_cgi_wx_login_success"), c.report("mp_login", {
                                login_type: "wx",
                                ret: "Y"
                            }), e(n.code)) : (m.warn("wx.login success but cannot get code from response. response = ".concat(JSON.stringify(n))), m.reportCls("cls_cgi_wx_login_fail_code"), c.report("mp_login", {
                                login_type: "wx",
                                ret: "N1"
                            }), t("wx.login falied(-1)"))
                        },
                        fail: function(e) {
                            var n = (e || {}).errMsg,
                                o = void 0 === n ? "" : n,
                                r = _.isTimeout(o);
                            m.warn("wx.login failed because: ".concat(o)), r ? m.reportCls("cls_cgi_wx_login_fail_timeout") : m.reportCls("cls_cgi_wx_login_fail_".concat(o)), c.report("mp_login", {
                                login_type: "wx",
                                ret: r ? "timeout" : o
                            }), t("wx.login falied(-2)")
                        }
                    })
                }))
            },
            CGIError: function(e) {
                this.message = "CGI error instance with code: ".concat(e)
            },
            cgiLogin: function(e) {
                var n = this;
                return f.wemeetLogin(e).then((function(t) {
                    var o = t.userid,
                        a = t.wemeet_cgi_token,
                        s = void 0 === a ? "" : a,
                        u = t.unionId,
                        g = void 0 === u ? "" : u,
                        d = t.wemeet_cgi_token_expiretimes,
                        l = void 0 === d ? 0 : d;
                    if (n.setUnionId(g), l = parseInt(l, 10), !o || !s || l <= 0) throw m.warn("It supposed to have some data fields, but found some of them doesn't exist or are invalid.\n            request code = ".concat(e, ",\n            response: ").concat(JSON.stringify(t), "\n          ")), {
                        code: "N1",
                        errmsg: "invalid response"
                    };
                    m.reportCls("cls_cgi_wemeet_login_success"), c.report("mp_login", {
                        login_type: "wemeet",
                        ret: "Y"
                    }), n.setAccountErrorCode(0);
                    var _ = (new Date).getTime() + 1e3 * l,
                        f = t.wemeet_expiretimes,
                        h = void 0 === f ? 0 : f,
                        I = t.encrypt_pure_phone_number,
                        E = void 0 === I ? "" : I,
                        C = t.country_code,
                        v = void 0 === C ? "86" : C,
                        w = t.wemeet_sign,
                        y = void 0 === w ? "" : w;
                    if (y) {
                        if ((h = parseInt(h, 10)) < 1 && (m.warn("expected 'wemeet_expiretimes' from getPhone CGI, but we got invalid: ".concat(h)), h = 3600), h = (new Date).getTime() + 1e3 * h, E) try {
                            E = (0, r.decryptAES)(E)
                        } catch (e) {
                            console.log("解密手机号出错了", e)
                        }
                        i.dispatch({
                            type: p.XMPP_ACCOUNT_INFO_GET_SUCC,
                            payload: {
                                countryCode: v,
                                phoneNumber: E,
                                xmppToken: y,
                                xmppExp: h
                            }
                        })
                    }
                    return {
                        openID: o,
                        unionId: g,
                        unionIdEXP: _,
                        cgiToken: s,
                        cgiExp: _,
                        countryCode: v,
                        phoneNumber: E,
                        xmppToken: y,
                        xmppExp: h
                    }
                })).catch((function(e) {
                    var o = e || {},
                        r = o.code,
                        i = void 0 === r ? -2 : r,
                        a = o.errmsg,
                        s = void 0 === a ? "unknown reason" : a,
                        u = isNaN(i) ? -1 : i;
                    n.setAccountErrorCode(u), m.warn("mini-program/login failed: ".concat(s, "(").concat(i, ")"));
                    var g = _.getValueFromLocalStorage("openid"),
                        d = t(t({}, g), {}, {
                            openID: "",
                            unionId: "",
                            unionIdEXP: "",
                            cgiToken: "",
                            cgiTokenEXP: ""
                        });
                    throw _.setValueInLocalStorage("openid", d), c.report("mp_login", {
                        login_type: "wemeet",
                        ret: i
                    }), m.reportCls("cls_cgi_wemeet_login_fail_".concat(i)), Error("wemeetLogin failed: ".concat(s))
                }))
            },
            isLoginStateValid: function() {
                var e = this;
                return o(n().mark((function t() {
                    var o, r;
                    return n().wrap((function(t) {
                        for (;;) switch (t.prev = t.next) {
                            case 0:
                                return o = e.isCGITokenValid(), t.next = 3, e.isWXSessionValid();
                            case 3:
                                return r = t.sent, t.abrupt("return", o && r);
                            case 5:
                            case "end":
                                return t.stop()
                        }
                    }), t)
                })))()
            },
            makeSureCGILogin: function() {
                var e = arguments,
                    t = this;
                return o(n().mark((function o() {
                    var r, i, a;
                    return n().wrap((function(n) {
                        for (;;) switch (n.prev = n.next) {
                            case 0:
                                return r = e.length > 0 && void 0 !== e[0] && e[0], n.next = 3, t.isLoginStateValid();
                            case 3:
                                return i = n.sent, a = Promise.resolve(), i && !r || (a = t.doLogin()), n.abrupt("return", a.then((function() {
                                    return !0
                                })).catch((function(e) {
                                    throw m.error("checkLoginState Fail: ".concat(e.message, ", ").concat(e.stack)), e
                                })));
                            case 7:
                            case "end":
                                return n.stop()
                        }
                    }), o)
                })))()
            },
            isXMPPTokenValid: function() {
                var e = g.getXMPPToken(),
                    t = g.getXMPPTokenExp();
                return e ? isNaN(t) || t < 0 ? (m.error("invalid xmppTokenEXP: ".concat(t)), !1) : _.isTimeAfterNow(t) : (m.warn("no xmpp token found"), !1)
            },
            isUnionIdValid: function() {
                var e = g.getUnionId(),
                    t = g.getUnionIdEXP();
                return e ? isNaN(t) || t < 0 || "" === t ? (m.error("invalid unionidEXP: ".concat(t)), !1) : _.isTimeAfterNow(t) : (m.warn("no unionid found"), !1)
            },
            isCGITokenValid: function() {
                var e = g.getCGIToken(),
                    t = g.getCGITokenEXP();
                return e ? isNaN(t) || t < 0 ? (m.error("invalid cgiTokenEXP: ".concat(t)), !1) : _.isTimeAfterNow(t) : (m.warn("no cgi token found"), !1)
            },
            isWXSessionValid: function() {
                return new Promise((function(e) {
                    wx.checkSession({
                        success: function() {
                            c.report("mp_login", {
                                login_type: "wx.sessioncheck",
                                ret: "Y"
                            }), e(!0)
                        },
                        fail: function() {
                            c.report("mp_login", {
                                login_type: "wx.sessioncheck",
                                ret: "N"
                            }), m.warn("wx.checkSession fail: session_key expired"), e(!1)
                        }
                    })
                }))
            },
            setAccountErrorCode: function() {
                var e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : 0;
                i.dispatch({
                    type: p.ACCOUNT_ERROR_CODE_CHANGE,
                    payload: e
                })
            },
            getPhoneNumber: function(e, n) {
                var o = this;
                return e && n ? g.getOpenID() ? g.getCGIToken() ? f.getPhoneNumber(e, n).then((function(e) {
                    var n = _.getValueFromLocalStorage("openid");
                    try {
                        var r = e.wemeet_expiretimes,
                            a = void 0 === r ? 0 : r,
                            s = e.country_code,
                            u = void 0 === s ? "86" : s,
                            g = e.phone_number,
                            d = void 0 === g ? "" : g,
                            l = e.wemeet_sign,
                            f = void 0 === l ? "" : l;
                        if (a = parseInt(a, 10), !d || !f || isNaN(a)) throw {
                            code: -1,
                            errmsg: "bad response"
                        };
                        m.reportCls("cls_cgi_getphone_success"), c.report("mp_login", {
                            login_type: "getphone",
                            ret: "Y"
                        }), a < 1 && (m.warn("expected 'wemeet_expiretimes' from getPhone CGI, but we got invalid: ".concat(a)), a = 3600), a = (new Date).getTime() + 1e3 * a, console.log("%cGetPhoneNumber done:\n          phone: ".concat(d, ",\n          xmppToken: ").concat(f, ",\n          xmppToken expires at: ").concat(new Date(a), ",\n          "), "background-color:green;color:white;font-family:consolas;font-weight:bold;"), i.dispatch({
                            type: p.XMPP_ACCOUNT_INFO_GET_SUCC,
                            payload: {
                                countryCode: u,
                                phoneNumber: d,
                                xmppToken: f,
                                xmppExp: a
                            }
                        });
                        var h = t(t({}, n), {}, {
                            xmppToken: f,
                            xmppTokenEXP: a,
                            phone: d
                        });
                        return _.setValueInLocalStorage("openid", h), {
                            countryCode: u,
                            phone: d,
                            xmppToken: f,
                            xmppTokenEXP: a
                        }
                    } catch (e) {
                        var I = e || {},
                            E = I.code,
                            C = void 0 === E ? -2 : E,
                            v = I.errmsg,
                            w = void 0 === v ? "unknown reason" : v;
                        if (-20012 === C) {
                            m.warn("-20012 occurred, try to relogin for making the session_key refreshed");
                            var y = t(t({}, n), {}, {
                                openID: "",
                                unionId: "",
                                cgiToken: "",
                                cgiTokenEXP: ""
                            });
                            _.setValueInLocalStorage("openid", y), o.setCGIToken("")
                        }
                        return m.reportCls("cls_cgi_getphone_fail_".concat(w, "(").concat(C, ")")), m.error("mini-program/get-phone failed: ".concat(w, "(").concat(C, ")")), c.report("mp_login", {
                            login_type: "getphone",
                            ret: C
                        }), i.dispatch({
                            type: p.XMPP_ACCOUNT_INFO_GET_FAIL,
                            payload: {}
                        }), Promise.reject("手机号授权失败，请重试(-5)")
                    }
                })) : (c.assertReport({
                    pageName: "UserAction",
                    errcod: "100203",
                    errmsg: "before getting phone: cgitoken is required"
                }), Promise.reject("手机号授权失败，请重试(-3)")) : (c.assertReport({
                    pageName: "UserAction",
                    errcod: "100202",
                    errmsg: "before getting phone: openid is required"
                }), Promise.reject("手机号授权失败，请重试(-2)")) : (c.assertReport({
                    pageName: "UserAction",
                    errcod: "100201",
                    errmsg: "before getting phone: either encryptedData or iv is null"
                }), Promise.reject("手机号授权失败，请重试(-1)"))
            },
            setPhoneNum: function(e) {
                i.dispatch({
                    type: p.PHONE_NUM_CHANGE,
                    payload: e
                })
            },
            setCGIToken: function() {
                var e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : "",
                    n = _.getValueFromLocalStorage("openid"),
                    o = t(t({}, n), {}, {
                        cgiToken: e
                    });
                _.setValueInLocalStorage("openid", o), i.dispatch({
                    type: p.CGI_TOKEN_CHANGE,
                    payload: e
                })
            },
            setXMPPToken: function(e) {
                i.dispatch({
                    type: p.XMPP_TOKEN_CHANGE,
                    payload: e
                })
            },
            getUserSubscribeStatus: function(e, t, n) {
                if (e && t && n) return f.getUserSubscribeStatus({
                    open_id: e,
                    unionid: t,
                    cgi_token: n
                }).then((function(e) {
                    var t, n;
                    return i.dispatch({
                        type: p.USER_SUBSCRIBE_STATE_SUCC,
                        payload: null == e || null === (t = e.data) || void 0 === t ? void 0 : t.data
                    }), null == e || null === (n = e.data) || void 0 === n ? void 0 : n.data
                })).catch((function(e) {
                    I.error(e)
                }));
                I.info("订阅状态请求参数不足 openid: ".concat(e, ", unionId: ").concat(t, ", cgiToken:").concat(n))
            },
            _addListener: function() {
                a.on("login", this._handleLogin), a.on("logout", this._handleLogout), a.on("waiting_user_status_i_am_in", this._handleIamInWaitingRoom, this), a.on("waiting_user_status_changed_by_self", this._handleUserInfoChangedBySelf, this), a.on("waiting_user_status_changed_by_host", this._handleUserInfoChangedByHost, this)
            },
            _handleLogin: function(e, t) {
                e ? i.dispatch({
                    type: p.XMPP_LOGIN_SUCC,
                    payload: {
                        flag: e,
                        data: t
                    }
                }) : i.dispatch({
                    type: p.XMPP_LOGIN_FAIL,
                    payload: {
                        flag: e,
                        data: t
                    }
                })
            },
            _handleLogout: function(e, t) {
                m.warn("".concat(e, ", ").concat(JSON.stringify(t)), "logout");
                var n = t && t.ecode || "00000";
                c.report("mp_logout", {
                    code: "".concat(n)
                });
                var o = e ? "success" : "fail";
                m.reportCls("cls_xmpp_logout_".concat(o, "_").concat(n));
                var r = "";
                r = e ? p.XMPP_LOGOUT_ON_POSITIVELY : 98888 === t.ecode ? p.XMPP_LOGOUT_ON_ABNORMAL_NETWORK : t.ecode === a.constants.SdkError.WEBSOCKET_ERROR_EVICTED ? p.XMPP_LOGOUT_ON_KICKED_BY_SAME_ACCOUNT : t.ecode === a.constants.SdkError.WEBSOCKET_ERROR_LIMITED ? p.XMPP_LOGOUT_ON_ABNORMAL_ACCOUNT : p.XMPP_LOGOUT_ON_OTHERS_SITUATION, i.dispatch({
                    type: r,
                    payload: {
                        flag: e,
                        data: t
                    }
                })
            },
            _handleIamInWaitingRoom: function(e, t) {
                e && g.iamInWaitingRoom(t)
            },
            _handleUserInfoChangedBySelf: function(e, t) {
                e && g.myUserInfoChangedByMyself(t)
            },
            _handleUserInfoChangedByHost: function(e, t) {
                e && g.myUserInfoChangedByHost(t)
            },
            setWeMeetLoginInfo: function(e) {
                var t = (new Date).getTime() + 1e3 * e.wemeet_cgi_token_expiretimes;
                C.setWeMeetLoginTokenEXP(t), i.dispatch({
                    type: p.WEMEET_ACCOUNT_LOGIN_SUCC,
                    payload: e
                })
            },
            refreshWeMeetLoginInfo: function(e) {
                var t = (new Date).getTime() + 1e3 * e.wemeet_cgi_token_expiretimes;
                C.setWeMeetLoginTokenEXP(t), i.dispatch({
                    type: p.WEMEET_ACCOUNT_LOGIN_INFO_REFRESHED,
                    payload: e
                })
            },
            _setRegisterOrLoginAuthCode: function(e) {
                i.dispatch({
                    type: p.WEMEET_REGISTER_OR_LOGIN_AUTH_CODE_CHANGE,
                    payload: e
                })
            },
            _setRegisterOrLoginIsBindWx: function(e) {
                i.dispatch({
                    type: p.WEMEET_REGISTER_OR_LOGIN_BIND_WX_CHANGE,
                    payload: e
                })
            },
            _setIsCorpUser: function(e) {
                i.dispatch({
                    type: p.WEMEET_IS_CORP_USER_CHANGE,
                    payload: e
                })
            },
            _setAccountList: function(e) {
                i.dispatch({
                    type: p.WEMEET_ACCOUNT_LIST_CHANGE,
                    payload: e
                })
            },
            getAccountList: function() {
                var e = this;
                return f.getAuthCodeForLogin({
                    userid: g.getOpenID(),
                    wemeet_cgi_token: g.getCGIToken()
                }).then((function(t) {
                    var n = t.auth_code,
                        o = t.is_corp_user,
                        r = t.corp_detail,
                        i = t.is_register,
                        a = void 0 !== i && i;
                    return n ? o && (!Array.isArray(r) || r.length < 1) ? (m.error("getAccountList bad response: is copr user, but corpdetail is empty."), Promise.reject("账号查询失败(-2)")) : (e._setRegisterOrLoginAuthCode(n), e._setIsCorpUser(o), e._setAccountList(r), e._setRegisterOrLoginIsBindWx(a), r) : (m.error("getAccountList bad reponse: authCode MUST NOT be empty."), Promise.reject("账号查询失败(-1)"))
                })).catch((function(e) {
                    var t = e.code,
                        n = e.errmsg;
                    m.error("getAccountList error: ".concat(n));
                    var o = Object.values(E);
                    return t && o.includes(t) && i.dispatch({
                        type: l.PRIVATE_MEETING_REGISTER_ACCOUNT,
                        payload: t
                    }), Promise.reject(n)
                }))
            },
            wemeetLogin: function(t) {
                var n = this,
                    o = (t || {}).corp_id,
                    r = void 0 === o ? "" : o,
                    i = {
                        auth_code: g.getRegisterOrLoginAuthCode(),
                        identity_type: r ? 2 : 1,
                        corp_id: r
                    };
                return f.loginUsingAuthCode(i).then((function(e) {
                    var t = e || {},
                        n = t.wemeet_cgi_token,
                        o = void 0 === n ? "" : n,
                        r = t.wemeet_cgi_token_expiretimes,
                        i = void 0 === r ? 0 : r,
                        a = t.activity_ticket,
                        c = void 0 === a ? "" : a;
                    if (!o || isNaN(i) || i < 1) return Promise.reject("wemeet login fatal error: bad response! wemeet_cgi_token=".concat(o, ",\n          wemeet_cgi_token_expiretimes=").concat(i));
                    _.setValueInLocalStorage("ticket", c), C.setWeMeetLoginInfo(e)
                })).then((function() {
                    return n.refreshWeMeetLoginToken(!1)
                })).then((function() {
                    _.setValueInLocalStorage("wemeet_login_state", {
                        wemeetLoginInfo: g.getWeMeetLoginInfo(),
                        wemeetLoginInfoEXP: g.getWeMeetLoginTokenEXP()
                    })
                })).catch((function(t) {
                    var n = "object" === e(t) ? "".concat(t.errmsg, "(").concat(t.code, ")") : t;
                    return Promise.reject(n)
                }))
            },
            refreshWeMeetLoginToken: function() {
                var e = !(arguments.length > 0 && void 0 !== arguments[0]) || arguments[0];
                if (!this.isWeMeetLoginStateEffective()) return m.warn("not logged in, could not fire a refresh token request!"), Promise.resolve("");
                var t = {
                    refresh_token: e ? 1 : 0
                };
                return f.refreshWeMeetLoginToken(t).then((function(t) {
                    var n = t || {},
                        o = n.wemeet_cgi_token,
                        r = void 0 === o ? "" : o,
                        i = n.wemeet_cgi_token_expiretimes,
                        a = void 0 === i ? 0 : i;
                    if (e) {
                        if (!r || isNaN(a) || a < 1) return m.error("wemeet refresh token fatal error: bad response! wemeet_cgi_token=".concat(r, ",\n            wemeet_cgi_token_expiretimes=").concat(a)), ""
                    } else {
                        m.warn("[待评估]不刷新登录token，把原token覆盖到新的res中");
                        var c = g.getWeMeetLoginInfo();
                        r = c.wemeet_cgi_token, a = c.wemeet_cgi_token_expiretimes, t.wemeet_cgi_token = r, t.wemeet_cgi_token_expiretimes = a
                    }
                    m.info("cgi refresh-token after wemeet-login succeed: ", t), C.refreshWeMeetLoginInfo(t)
                })).catch((function(e) {
                    var t = e.errmsg;
                    return m.error("cgi refresh-token after wemeet-login failed since: ".concat(t)), Promise.reject(t)
                }))
            },
            setWeMeetLoginTokenEXP: function(e) {
                i.dispatch({
                    type: p.WEMEET_LOGIN_INFO_EXP_CHANG,
                    payload: e
                })
            },
            getAuthCodeForRegister: function(e) {
                var t = this,
                    n = {
                        raw_data: e.rawData,
                        signature: e.signature,
                        encrypted_data: e.encryptedData,
                        iv: e.iv,
                        userid: g.getOpenID(),
                        wemeet_cgi_token: g.getCGIToken()
                    };
                return f.getAuthCodeForRegister(n).then((function(e) {
                    var n = e.auth_code,
                        o = e.is_register,
                        r = void 0 !== o && o;
                    if (!n) return Promise.reject({
                        code: "999999999",
                        errmsg: "auth-login CGI fatal: auth_code MUST NOT be empty"
                    });
                    t.setIsBindWX(r), m.info("用户信息换取注册auth_code成功"), t.setAuthCodeForRegister(n)
                })).catch((function(e) {
                    var t = e.errmsg,
                        n = e.code;
                    return Promise.reject({
                        errmsg: t,
                        code: n
                    })
                }))
            },
            setAuthCodeForRegister: function(e) {
                i.dispatch({
                    type: p.AUTH_CODE_FOR_REGISTER_GOT,
                    payload: e
                })
            },
            setIsBindWX: function(e) {
                i.dispatch({
                    type: p.USER_BIND_WX_CHANGE,
                    payload: e
                })
            },
            getCaptcha: function(e) {
                var t = e.area,
                    n = e.phone,
                    o = e.ticket,
                    r = e.rand_string;
                return n ? f.getCaptcha({
                    area: t,
                    phone: n,
                    business_id: 4,
                    ticket: o || "",
                    rand_string: r || ""
                }).then((function(e) {
                    return e
                })) : Promise.reject("phone is required")
            },
            startCaptchaCountDown: function(e) {
                i.dispatch({
                    type: p.WEMEET_ACCOUNT_REGISTER_CAPTCHA_COUNT_DOWN_START,
                    payload: e
                })
            },
            setWeMeetRegistered: function() {
                i.dispatch({
                    type: p.WEMEET_ACCOUNT_REGISTER_SUCC,
                    payload: !0
                })
            },
            handleBindSuccess: function(e) {
                var t = e || {},
                    n = t.auth_code,
                    o = t.is_corp_user,
                    r = void 0 !== o && o,
                    i = t.corp_detail,
                    a = t.is_register,
                    c = void 0 !== a && a;
                if (!n) return m.error("UserHttps.registerPhone succeed but got no 'auth_code'! res = ".concat(JSON.stringify(e))), Promise.reject("绑定失败！(-1)");
                r && (!Array.isArray(i) || i.length < 1) && m.error("UserHttps.registerPhone succeed but got no 'corp_detail' for corp user!\n      res = ".concat(JSON.stringify(e))), this._setRegisterOrLoginAuthCode(n), this._setIsCorpUser(r), this._setAccountList(i), this._setRegisterOrLoginIsBindWx(c), this.setWeMeetRegistered()
            },
            registerPhone: function(e) {
                var t = this,
                    n = e.area,
                    o = void 0 === n ? "86" : n,
                    r = e.phone,
                    i = e.code;
                if (!r) return Promise.reject("phone is required");
                if (!i) return Promise.reject("code is required");
                var a = g.getRegisterOrLoginAuthCode();
                return a ? (console.log("开始绑定，in: ".concat(JSON.stringify(e))), f.registerPhone({
                    area: o,
                    phone: r,
                    code: i,
                    auth_code: a
                }).then((function(e) {
                    m.info("".concat(r, "绑定成功！撒花~ ").concat(JSON.stringify(e)));
                    var n = e || {},
                        o = n.auth_code,
                        i = n.is_corp_user,
                        a = void 0 !== i && i,
                        c = n.corp_detail,
                        s = n.is_register,
                        u = void 0 !== s && s;
                    return o ? (a && (!Array.isArray(c) || c.length < 1) && m.error("UserHttps.registerPhone succeed but got no 'corp_detail' for corp user!\n          res = ".concat(JSON.stringify(e))), t._setRegisterOrLoginAuthCode(o), t._setIsCorpUser(a), t._setAccountList(c), t._setRegisterOrLoginIsBindWx(u), t.setWeMeetRegistered(), {
                        authCode: o,
                        isCorpUser: a,
                        corpDetail: c
                    }) : (m.error("UserHttps.registerPhone succeed but got no 'auth_code'! res = ".concat(JSON.stringify(e))), Promise.reject("绑定失败！(-1)"))
                })).catch((function(e) {
                    var t = e.errmsg;
                    return m.error("UserHttps.registerPhone failed: ".concat(t)), Promise.reject(t)
                }))) : Promise.reject("auth_code is required")
            },
            _setLogout: function(e) {
                _.setValueInLocalStorage("wemeet_login_state", {
                    wemeetLoginInfo: "",
                    wemeetLoginInfoEXP: 0
                }), _.setValueInLocalStorage("appLaunchParamList", null), _.setValueInLocalStorage("ticket", null), _.setValueInLocalStorage("bindPhone", null), _.setValueInLocalStorage("virtualExpTime", null), _.setValueInLocalStorage("bindCards", null), i.dispatch({
                    type: p.WEMEET_ACCOUNT_LOGOUT_SUCC,
                    payload: e
                })
            },
            wemeetLogout: function() {
                var e = this;
                return this.isWeMeetLoginStateEffective() ? f.wemeetLogout().then((function() {
                    m.info("登出成功！"), e._setLogout()
                })).catch((function(e) {
                    var t = e.errmsg;
                    return m.error("登出错误：".concat(t)), Promise.reject(t)
                })) : Promise.resolve("not logged in")
            },
            checkAccessState: function(e, t) {
                var n = this;
                wx.getSetting({
                    success: function(t) {
                        Object.prototype.hasOwnProperty.call(t.authSetting, "scope.camera") ? t.authSetting["scope.camera"] ? n.setCameraAccessState(h.Permitted) : n.setCameraAccessState(h.AskedButDenied) : n.setCameraAccessState(h.NeverAsk), Object.prototype.hasOwnProperty.call(t.authSetting, "scope.record") ? t.authSetting["scope.record"] ? n.setMicrophoneAccessState(h.Permitted) : n.setMicrophoneAccessState(h.AskedButDenied) : n.setMicrophoneAccessState(h.NeverAsk), "function" == typeof e && e(t)
                    },
                    fail: function(e) {
                        m.error("wx.getSetting failed: ".concat(JSON.stringify(e))), n.setCameraAccessState(h.NeverAsk), n.setMicrophoneAccessState(h.NeverAsk), e && "getSetting:fail data no response" === e.errMsg && "0" === e.err_code ? (m.error("wx.getSetting failed since frequency mechanism(100/h)"), c.reportError(100014)) : (m.error("wx.getSetting failed not caused by frequency mechanism(100/h)"), c.reportError(100008)), "function" == typeof t && t(e)
                    }
                })
            },
            setCameraAccessState: function(e) {
                i.dispatch({
                    type: p.CAMERA_ACCESS_STATE_CHANGE,
                    payload: e
                })
            },
            setMicrophoneAccessState: function(e) {
                i.dispatch({
                    type: p.MICROPHONE_ACCESS_STATE_CHANGE,
                    payload: e
                })
            }
        };
    console.log("UserAction.js loaded end"), module.exports = C;
});
define("clients/AegisClient.js", function(require, module, exports, window, document, frames, self, location, navigator, localStorage, history, Caches, screen, alert, confirm, prompt, XMLHttpRequest, WebSocket, Reporter, webkit, WeixinJSCore) {
    "use strict";
    var e = require("../utils/aegis/aegis.min.js"),
        i = require("../configs/AppConfig"),
        r = new e({
            id: !i.ENV_SWITCH_ENABLE ? "PJ3zGu1pWgRGmE6qxD" : "Gl3zvsE85K4qnPd99J",
            reportApiSpeed: !0,
            version: i.MP_WEMEET_VERSION
        });
    module.exports = r;
});
define("clients/BeaconClient.js", function(require, module, exports, window, document, frames, self, location, navigator, localStorage, history, Caches, screen, alert, confirm, prompt, XMLHttpRequest, WebSocket, Reporter, webkit, WeixinJSCore) {
    "use strict";
    var e = require("../@babel/runtime/helpers/toConsumableArray");
    require("../@babel/runtime/helpers/Objectentries");
    var r = require("../@babel/runtime/helpers/objectSpread2"),
        t = require("../@babel/runtime/helpers/classCallCheck"),
        i = require("../@babel/runtime/helpers/createClass");
    console.log("BeaconClient.js loaded start");
    var o = require("../stores/AppStore"),
        n = require("../stores/MeetingStore"),
        a = require("./WemeetClient"),
        s = require("../utils/logger"),
        c = require("../configs/AppConfig"),
        u = require("../https/beaconNewHttps"),
        l = require("../utils/util"),
        p = l.getValueFromLocalStorage,
        d = l.setValueInLocalStorage,
        g = l.randomString,
        m = new s({
            pageName: "BeaconClinet",
            aegisLogEnable: !0,
            wxLogEnable: !1
        }),
        v = c.MP_WEMEET_VERSION.replace(/^(\d+\.\d+\.\d+)(\.\d+)*$/, "$1"),
        _ = (c.APPID, function() {
            function s() {
                if (t(this, s), s.prototype.instance) return s.prototype.instance;
                p("device_id") || d("device_id", g(12)), this.init(), s.prototype.instance = this
            }
            return i(s, [{
                key: "init",
                value: function() {
                    var e;
                    this.commParams = {
                        A76: "",
                        meeting_type: "",
                        A1: "",
                        user_type: "",
                        av_room_id: "",
                        role_type: "",
                        background: "N/A",
                        A95: "200000000",
                        env_id: "",
                        wemeet_platform: "miniprogram",
                        unique_report_id: "",
                        os_ver: "",
                        A9: "N/A",
                        A8: "N/A",
                        A67: "N/A",
                        A49: "release",
                        A3: "",
                        A23: "wechat",
                        A106: "N/A",
                        A10: "",
                        wxVersion: "",
                        mpVersion: "",
                        app_main_version: v,
                        version: v,
                        is_overseas: "no",
                        instance_id: "8",
                        openid: "",
                        language: (null === (e = p("wx_user_info")) || void 0 === e ? void 0 : e.language) || "zh_CN",
                        product: "meeting",
                        source_id: 1,
                        device_id: p("device_id") || "",
                        app_uid: "",
                        uid: "",
                        corp_id: "200000000"
                    }
                }
            }, {
                key: "getGuid",
                value: function() {
                    var e = (new Date).getTime();
                    return "xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx".replace(/[xy]/g, (function(r) {
                        var t = (e + 16 * Math.random()) % 16 | 0;
                        return e = Math.floor(e / 16), ("x" === r ? t : 3 & t | 8).toString(16)
                    }))
                }
            }, {
                key: "setConfig",
                value: function() {
                    var e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {},
                        t = e.sysInfo,
                        i = e.openID,
                        o = e.releaseChannel,
                        n = e.appMainVersion,
                        a = t || {},
                        s = a.system,
                        c = a.model,
                        u = a.version,
                        l = a.SDKVersion,
                        p = {};
                    i && (p.A1 = i, p.openid = i, p.app_uid = i, p.uid = i, p.A3 = i), o && (p.A23 = o), n && (p.app_main_version = n), s && (p.os_ver = s), c && (p.A10 = c), u && (p.wxVersion = u), l && (p.mpVersion = l), this.commParams = r(r({}, this.commParams), p)
                }
            }, {
                key: "report",
                value: function(t, i, s) {
                    if (t) {
                        var c, l, p = a.meetingUserCtrl.isInMeeting(),
                            d = n.getMeetingInfo(),
                            g = n.getLastQueryMeetingInfo(),
                            v = o.getSdkAppId(),
                            _ = r(r({}, this.commParams), {}, {
                                env_id: v,
                                A76: p && d.meetingCode || "",
                                meeting_type: p ? n.isWebinarMeeting() ? "webinar" : g.isQuickMeeting : "",
                                meeting_id: p && d.meeting_id || "",
                                user_type: p ? "1" : "",
                                av_room_id: p && n.getAvRoomID() || "",
                                role_type: p ? n.isWebinarMeeting() ? "7" : "3" : "",
                                unique_report_id: this.getGuid()
                            }, i),
                            x = {};
                        c = _, l = function(e, r) {
                            x[e] = String(r)
                        }, Object.entries(c).forEach((function(r) {
                            l.apply(void 0, e(r))
                        }));
                        try {
                            if (s) {
                                var f = 100 * Math.random();
                                f > 0 && f < s && u.report(t, x)
                            } else u.report(t, x);
                            o.isDev() && console.log("%c[%s]", "background-color:#006fff;color:white;", t, _)
                        } catch (e) {
                            m.error("beacon error! eventName: ".concat(t, "\n        data: ").concat(JSON.stringify(_), ". error: ").concat(JSON.stringify(e), "\n      "))
                        }
                    } else console.error("beacon report with empty eventName")
                }
            }, {
                key: "reportError",
                value: function(e) {
                    this.report("mp_error", {
                        errcod: "".concat(e)
                    })
                }
            }, {
                key: "reportMediaGrantStatus",
                value: function() {}
            }, {
                key: "assertReport",
                value: function(e) {
                    var r = e || {},
                        t = r.pageName,
                        i = r.errcod,
                        o = r.errmsg,
                        n = void 0 === o ? "" : o;
                    t || i ? (n && m.error("[ASSERT][".concat(t, "][").concat(i, "] ").concat(n)), this.reportError(i)) : console.warn("[assertReport] pageName and errcod is required, but got ".concat(t, ", ").concat(i))
                }
            }]), s
        }());
    module.exports = new _, console.log("BeaconClient.js loaded end");
});
define("clients/RavenClient.js", function(require, module, exports, window, document, frames, self, location, navigator, localStorage, history, Caches, screen, alert, confirm, prompt, XMLHttpRequest, WebSocket, Reporter, webkit, WeixinJSCore) {
    "use strict";
    var e = require("../@babel/runtime/helpers/classCallCheck"),
        t = require("../@babel/runtime/helpers/createClass"),
        n = require("../utils/raven/raven.min"),
        i = require("../configs/AppConfig"),
        r = "https://cbc2be55ecb34a8f97987595a6db5130@report.url.cn/sentry/2125",
        a = new(function() {
            function a(t) {
                if (e(this, a), a.prototype.instance) return a.prototype.instance;
                a.prototype.instance = this, this.init(t)
            }
            return t(a, [{
                key: "init",
                value: function() {
                    var e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {};
                    this.ravenDsn = r, this.setConfig(e)
                }
            }, {
                key: "setConfig",
                value: function() {
                    var e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {},
                        t = e.release,
                        r = void 0 === t ? i.MP_WEMEET_VERSION : t,
                        a = e.environment,
                        s = void 0 === a ? "production" : a,
                        o = e.allowDuplicates,
                        l = void 0 === o || o,
                        u = e.sampleRate,
                        c = void 0 === u ? .5 : u;
                    n.config(this.ravenDsn, {
                        release: r,
                        environment: s,
                        allowDuplicates: l,
                        sampleRate: c
                    }).install()
                }
            }, {
                key: "setOpenId",
                value: function(e) {
                    n.setUserContext({
                        id: e
                    })
                }
            }, {
                key: "captureMessage",
                value: function() {
                    var e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : "",
                        t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {};
                    e && n.captureMessage(e, t)
                }
            }, {
                key: "captureException",
                value: function(e, t) {
                    n.captureException(e, t)
                }
            }]), a
        }());
    module.exports = a;
});
define("clients/WemeetClient.js", function(require, module, exports, window, document, frames, self, location, navigator, localStorage, history, Caches, screen, alert, confirm, prompt, XMLHttpRequest, WebSocket, Reporter, webkit, WeixinJSCore) {
    "use strict";
    var e = require("../@babel/runtime/helpers/regeneratorRuntime"),
        t = require("../@babel/runtime/helpers/asyncToGenerator"),
        i = require("../@babel/runtime/helpers/typeof"),
        n = require("../@babel/runtime/helpers/classCallCheck"),
        r = require("../@babel/runtime/helpers/createClass"),
        o = require("../@babel/runtime/helpers/possibleConstructorReturn"),
        a = require("../@babel/runtime/helpers/assertThisInitialized"),
        s = require("../@babel/runtime/helpers/inherits"),
        u = require("../@babel/runtime/helpers/createSuper"),
        c = require("../utils/EventEmitter"),
        _ = require("../sdk/wemeet"),
        g = require("../stores/AppStore"),
        l = require("../stores/UserStore"),
        p = require("../utils/meetingTime"),
        d = require("../utils/logger"),
        y = require("../utils/util"),
        h = require("../configs/AppConfig"),
        f = new d({
            pageName: "WeMeetClient",
            aegisLogEnable: !0,
            wxLogEnable: !1
        }),
        m = ["join_meeting", "meeting_modified", "query_meeting_item_list", "query_meeting_pay_info"],
        v = ["user_join", "user_leave", "user_offline", "user_update", "user_status", "turn_video", "turn_audio", "user_kicked", "kickout", "kicked_out", "change_host_push", "change_co_host_push", "leave_meeting", "meeting_will_limited", "modify_user_info", "refresh_media_auth_info", "query_meeting_settings", "query_ui_config", "host_status", "back_to_waiting_room", "waiting_user_status_timeout", "waiting_user_status_bad_response", "waiting_user_status_join_from_waiting_room", "waiting_user_status_leave_from_waiting_room", "waiting_user_status_leave_for_waiting_room", "waiting_user_status_i_am_in", "waiting_user_status_changed_by_self", "waiting_user_status_changed_by_host", "notify_meeting_settings_update", "notify_switch_media_stream", "notify_join_audio_mix_user_info", "waiting_user_status", "switch_user_role", "query_cloud_record_state", "cloud_record_state", "breakout_room_started", "report_media_stream_status", "report_media_stream_status_push", "get_webinar_participants_summary", "apply_permission", "member_raise_hand", "notify_user_be_put_handsdown", "notify_role_group_be_put_handsdown", "notify_permission_result", "directed_push", "query_user_sig", "im_message_events", "meeting_notice"],
        k = ["login", "logout"],
        b = {},
        w = function(d) {
            s(E, c);
            var w, S = u(E);

            function E() {
                var e;
                return n(this, E), E.prototype.instance ? o(e, E.prototype.instance) : ((e = S.call(this)).init(), E.prototype.instance = a(e), e)
            }
            return r(E, [{
                key: "init",
                value: function() {
                    var e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : g.getSdkAppId();
                    this._removeEventLisenner();
                    var t = _.getInstance(e);
                    this.client = t, this.constants = t.constants, this.meetingUserCtrl = t.queryMeetingUserController(), this.preMeetingService = t.queryPreMeetingManager(), this.authService = t.queryAuthService(), this.weMeetSdkLoggerReportor = t.queryLoggerReportor(), this.xmpp = this.authService.xmppService, this._addEventLisenner(), this.setServerUrl(g.getXMPPWSUrl()), f.info("WemeetClient inited")
                }
            }, {
                key: "setServerUrl",
                value: function(e) {
                    f.info("set xmpp ws url: ".concat(e)), this.xmpp.setServerUrl(e)
                }
            }, {
                key: "getVersion",
                value: function() {
                    return this.client.getVersion()
                }
            }, {
                key: "setAppId",
                value: function() {
                    var e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : g.getSdkAppId();
                    this.client.setAppId(e)
                }
            }, {
                key: "isLoggedIn",
                value: function() {
                    return this.constants.LoginState.LOGIN_STATE_LOGIN === this.authService.getLoginState()
                }
            }, {
                key: "isLogging",
                value: function() {
                    return this.constants.LoginState.LOGIN_STATE_LOGGINING === this.authService.getLoginState()
                }
            }, {
                key: "xmppLogout",
                value: function() {
                    console.log("start logout..."), this.isLoggedIn() ? this.authService.logout() : console.warn("not logged in, cannot logout")
                }
            }, {
                key: "sendUserStatusLeave",
                value: function(e) {
                    f.info("send user_status(leave) for ".concat(e)), this.xmpp.sendUserStatusLeave({
                        meeting_id: e
                    }).catch((function() {}))
                }
            }, {
                key: "joinMeeting",
                value: function(e) {
                    this.preMeetingService.joinMeeting(e)
                }
            }, {
                key: "leaveMeeting",
                value: function(e) {
                    var t = arguments.length > 1 && void 0 !== arguments[1] && arguments[1],
                        n = "object" === i(e) ? e : {
                            reason: e
                        },
                        r = n || {},
                        o = r.reason,
                        a = o || this.constants.LeaveReason.SELF;
                    return this.isLoggedIn() ? !t && (this.meetingUserCtrl.isInMeeting() ? (f.info("leaveMeeting invoked", "leave-meeting"), this.endMeetingTime(), n.reason = a, this.meetingUserCtrl.leaveMeeting(n), !0) : (f.warn("not in meeting", "leave-meeting"), !1)) : (f.warn("not logged in", "leave-meeting"), !1)
                }
            }, {
                key: "endMeetingTime",
                value: function() {
                    var e = require("../clients/BeaconClient");
                    p.end();
                    var t = p.getDurationTime(),
                        i = p.getValidDurationTime();
                    f.info("durationTime: ".concat(t, "; validDurTime: ").concat(i), "MeetingTime"), e.report("meeting_av_duration", {
                        duration_sec: t
                    }), e.report("meeting_duration_active", {
                        duration_sec: i
                    }), p.init()
                }
            }, {
                key: "isXMPPTokenValid",
                value: function() {
                    var e = l.getXMPPToken(),
                        t = l.getXMPPTokenExp();
                    return e ? isNaN(t) || t < 0 ? (f.error("invalid xmppTokenEXP: ".concat(t)), !1) : y.isTimeAfterNow(t) : (f.warn("no xmpp token found"), !1)
                }
            }, {
                key: "xmppLogin",
                value: (w = t(e().mark((function t() {
                    var i, n, r, o, a, s, u, c, _, p;
                    return e().wrap((function(e) {
                        for (;;) switch (e.prev = e.next) {
                            case 0:
                                if (i = this.isLoggedIn() || this.isLogging(), n = l.getOpenID(), r = l.getXMPPToken(), console.log("start login... current login status: ", this.authService.getLoginState()), !i) {
                                    e.next = 6;
                                    break
                                }
                                return e.abrupt("return", "");
                            case 6:
                                if (n) {
                                    e.next = 9;
                                    break
                                }
                                throw f.error("no openID, need to requery it before xmpp login"), "登录失败(-1)";
                            case 9:
                                if (this.isXMPPTokenValid()) {
                                    e.next = 12;
                                    break
                                }
                                throw f.error("xmpp token expired, need to requery it before xmpp login"), "登录失败(-2)";
                            case 12:
                                if (o = g.getSdkAppId(), a = this.constants.AuthType.AUTH_TYPE_VISITOR, s = n, u = r, c = this.getVersion(), s) {
                                    e.next = 20;
                                    break
                                }
                                throw f.error("登录失败(-3)"), "登录失败(-3)";
                            case 20:
                                if (_ = {
                                        app_id: o,
                                        app_uid: s,
                                        app_token: u,
                                        token_obj: {
                                            app_id: o,
                                            device_id: "",
                                            network_type: "network_type",
                                            app_version: h.MP_WEMEET_VERSION,
                                            sdk_version: c,
                                            auth_type: a
                                        },
                                        auth_type: a,
                                        instance_id: this.constants.InstanceType.INSTANCE_MP,
                                        sdk_version: c
                                    }, f.info("xmpp login with: ".concat(JSON.stringify(_))), (p = this.authService.login(_)) === this.constants.SdkError.SDK_ERROR_SUCCESS) {
                                    e.next = 26;
                                    break
                                }
                                throw f.error("xmpp login failed: 登录失败(-4) Hint: SDK_ERROR_".concat(p)), "登录失败(-4)";
                            case 26:
                                return e.abrupt("return", "");
                            case 27:
                            case "end":
                                return e.stop()
                        }
                    }), t, this)
                }))), function() {
                    return w.apply(this, arguments)
                })
            }, {
                key: "joinTimeCompare",
                value: function(e, t) {
                    return e.participation_status_stamp < t.participation_status_stamp ? -1 : t.participation_status_stamp < e.participation_status_stamp ? 1 : 0
                }
            }, {
                key: "getRoomTypeName",
                value: function(e) {
                    return e === this.constants.RoomType.MEETING_ROOM ? "Meeting Room" : e === this.constants.RoomType.WAITING_ROOM ? "Waiting Room" : "Unknown Room"
                }
            }, {
                key: "getKickoutReasonBy",
                value: function(e) {
                    var t = "";
                    switch (e) {
                        case 2:
                            t = "会议已结束";
                            break;
                        case 1:
                            t = "您已经被主持人移出会议";
                            break;
                        case 3:
                        case 4:
                        case 5:
                        case 6:
                            t = "";
                            break;
                        case 7:
                            t = "会议已取消";
                            break;
                        case 13:
                            t = "会议时长到达上限";
                            break;
                        default:
                            t = "您已经被主持人移出会议"
                    }
                    return t || (t = "您已离开会议"), t
                }
            }, {
                key: "on",
                value: function(e, t) {
                    var i = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : null;
                    this.subscribe(e, t, i)
                }
            }, {
                key: "_addEventLisenner",
                value: function() {
                    var e = this;
                    m.forEach((function(t) {
                        b[t] = function() {
                            for (var i = arguments.length, n = new Array(i), r = 0; r < i; r++) n[r] = arguments[r];
                            e._handleReceivedMsgLogger(t, n), e.publish.apply(e, [t].concat(n))
                        }, e.preMeetingService.registerEventHandler(t, b[t])
                    })), v.forEach((function(t) {
                        b[t] = function() {
                            for (var i = arguments.length, n = new Array(i), r = 0; r < i; r++) n[r] = arguments[r];
                            e._handleReceivedMsgLogger(t, n), e.publish.apply(e, [t].concat(n))
                        }, e.meetingUserCtrl.registerEventHandler(t, b[t])
                    })), k.forEach((function(t) {
                        b[t] = function() {
                            for (var i = arguments.length, n = new Array(i), r = 0; r < i; r++) n[r] = arguments[r];
                            e._handleReceivedMsgLogger(t, n), e.publish.apply(e, [t].concat(n))
                        }, e.authService.registerEventHandler(t, b[t])
                    }))
                }
            }, {
                key: "_handleReceivedMsgLogger",
                value: function(e, t) {
                    try {
                        if (E.meaninglessProtocols.includes(e)) return;
                        f.info(JSON.stringify(t), e)
                    } catch (t) {
                        f.warn("logger failed with: ".concat(t && t.message || t), e)
                    }
                }
            }, {
                key: "_removeEventLisenner",
                value: function() {
                    var e = this;
                    m.forEach((function(t) {
                        "function" == typeof b[t] && (e.preMeetingService.removeEventHandler(t, b[t]), delete b[t])
                    })), v.forEach((function(t) {
                        "function" == typeof b[t] && (e.meetingUserCtrl.removeEventHandler(t, b[t]), delete b[t])
                    })), k.forEach((function(t) {
                        "function" == typeof b[t] && (e.authService.removeEventHandler(t, b[t]), delete b[t])
                    }))
                }
            }, {
                key: "getReadableAudioStateReason",
                value: function(e) {
                    return this.preMeetingService.getDefaultAudioStateReason(e)
                }
            }, {
                key: "getAVuid",
                value: function(e) {
                    var t = e.id ? this.meetingUserCtrl.getAVRoomUserId(e.id) : "";
                    if (!t) return f.error("invalid itemavid got from this guy: ".concat(JSON.stringify(e))), "";
                    if ("2" === e.id.user_type) {
                        if (!e.id.device_type) return f.error("user is PSTN, but no device_type got."), "";
                        if ("0" === e.id.device_type) t = e.id.av_uid;
                        else {
                            if ("1" !== e.id.device_type) return f.warn("unknown PSTN sub-device type got: ".concat(e.id.device_type)), "";
                            t = "1_".concat(e.id.uid, "_").concat(e.id.app_id)
                        }
                    }
                    return t
                }
            }, {
                key: "getKeyById",
                value: function(e) {
                    return e ? Object.prototype.hasOwnProperty.call(e, "instance_id") ? Object.prototype.hasOwnProperty.call(e, "uid") ? Object.prototype.hasOwnProperty.call(e, "app_id") ? Object.prototype.hasOwnProperty.call(e, "user_type") ? Object.prototype.hasOwnProperty.call(e, "unique_id") ? this.meetingUserCtrl.formKeyById(e) : (f.error("getKeyById failed: no 'unique_id' found in ".concat(JSON.stringify(e), ".\n      ").concat(new Error("getKeyById-6").stack)), "") : (f.error("getKeyById failed: no 'user_type' found in ".concat(JSON.stringify(e), ".\n      ").concat(new Error("getKeyById-5").stack)), "") : (f.error("getKeyById failed: no 'app_id' found in ".concat(JSON.stringify(e), ".\n      ").concat(new Error("getKeyById-4").stack)), "") : (f.error("getKeyById failed: no 'uid' found in ".concat(JSON.stringify(e), ".\n      ").concat(new Error("getKeyById-3").stack)), "") : (f.error("getKeyById failed: no 'instance_id' found in ".concat(JSON.stringify(e), ".\n      ").concat(new Error("getKeyById-2").stack)), "") : (f.error("getKeyById failed: invalid id ".concat(e, ". ").concat(new Error("getKeyById-1").stack)), "")
                }
            }]), E
        }();
    w.meaninglessProtocols = ["notify_join_audio_mix_user_info", "user_status", "user_join", "user_update", "user_leave", "report_media_stream_status", "report_media_stream_status_push", "get_webinar_participants_summary"];
    var S = new w;
    module.exports = S;
});
define("components/miniprogram-recycle-view/index.js", function(require, module, exports, window, document, frames, self, location, navigator, localStorage, history, Caches, screen, alert, confirm, prompt, XMLHttpRequest, WebSocket, Reporter, webkit, WeixinJSCore) {
    "use strict";
    var e = require("../../@babel/runtime/helpers/typeof");
    module.exports = function(t) {
        var r = {};

        function i(e) {
            if (r[e]) return r[e].exports;
            var o = r[e] = {
                i: e,
                l: !1,
                exports: {}
            };
            return t[e].call(o.exports, o, o.exports, i), o.l = !0, o.exports
        }
        return i.m = t, i.c = r, i.d = function(e, t, r) {
            i.o(e, t) || Object.defineProperty(e, t, {
                enumerable: !0,
                get: r
            })
        }, i.r = function(e) {
            "undefined" != typeof Symbol && Symbol.toStringTag && Object.defineProperty(e, Symbol.toStringTag, {
                value: "Module"
            }), Object.defineProperty(e, "__esModule", {
                value: !0
            })
        }, i.t = function(t, r) {
            if (1 & r && (t = i(t)), 8 & r) return t;
            if (4 & r && "object" === e(t) && t && t.__esModule) return t;
            var o = Object.create(null);
            if (i.r(o), Object.defineProperty(o, "default", {
                    enumerable: !0,
                    value: t
                }), 2 & r && "string" != typeof t)
                for (var n in t) i.d(o, n, function(e) {
                    return t[e]
                }.bind(null, n));
            return o
        }, i.n = function(e) {
            var t = e && e.__esModule ? function() {
                return e.default
            } : function() {
                return e
            };
            return i.d(t, "a", t), t
        }, i.o = function(e, t) {
            return Object.prototype.hasOwnProperty.call(e, t)
        }, i.p = "", i(i.s = 2)
    }([function(e, t, r) {
        var i = !1,
            o = void 0,
            n = void 0;
        ! function() {
            var e = wx.getSystemInfoSync();
            i = "ios" === e.platform;
            var t = e.screenWidth || 375,
                r = e.pixelRatio || 2;
            t === o && r === n || (o = t, n = r)
        }();
        var h = /([+-]?\d+(?:\.\d+)?)rpx/gi;
        e.exports = {
            transformRpx: function(e, t) {
                if ("string" != typeof e) return e;
                var r = h;
                return e.replace(r, (function(e, r) {
                    return (0 === (h = Number(r)) ? 0 : (h = h / 750 * o, 0 === (h = Math.floor(h + 1e-4)) ? 1 !== n && i ? .5 : 1 : h)) + (t ? "px" : "");
                    var h
                }))
            }
        }
    }, function(e, t, r) {
        e.exports = {}
    }, function(e, t, r) {
        var i = r(3);
        e.exports = function(e) {
            return new i(e)
        }
    }, function(t, r, i) {
        var o = "function" == typeof Symbol && "symbol" === e(Symbol.iterator) ? function(t) {
                return e(t)
            } : function(t) {
                return t && "function" == typeof Symbol && t.constructor === Symbol && t !== Symbol.prototype ? "symbol" : e(t)
            },
            n = i(1),
            h = i(4),
            a = i(0);

        function s(e) {
            var t = this,
                r = e.id,
                i = e.dataKey,
                n = e.page,
                a = e.itemSize,
                s = e.useInPage,
                c = e.placeholderClass,
                l = e.root;
            if (!(r && i && n && a)) throw new Error("parameter id, dataKey, page, itemSize is required");
            if ("function" != typeof a && "object" !== (void 0 === a ? "undefined" : o(a))) throw new Error("parameter itemSize must be function or object with key width and height");
            if (!("object" !== (void 0 === a ? "undefined" : o(a)) || a.width && a.height || a.props && a.queryClass && a.dataKey)) throw new Error("parameter itemSize must be function or object with key width and height");
            if (this.id = r, this.dataKey = i, this.page = n, this.root = l, this.placeholderClass = c, n._recycleViewportChange = h, this.comp = n.selectComponent("#" + r), this.itemSize = a, this.itemSizeOpt = a, this.useInPage = s || !1, this.comp && (this.comp.context = this, this.comp.setPage(n), this.comp.setUseInPage(this.useInPage)), this.useInPage && !this.root) throw new Error("parameter root is required when useInPage is true");
            this.useInPage && (this.oldPageScroll = this.root.onPageScroll, this.root.onPageScroll = function(e) {
                t.comp && t.comp._scrollViewDidScroll({
                    detail: {
                        scrollLeft: 0,
                        scrollTop: e.scrollTop
                    }
                }), t.oldPageScroll.apply(t.root, [e])
            }, this.oldReachBottom = this.root.onReachBottom, this.root.onReachBottom = function(e) {
                t.comp && t.comp.triggerEvent("scrolltolower", {}), t.oldReachBottom.apply(t.root, [e])
            }, this.oldPullDownRefresh = this.root.onPullDownRefresh, this.root.onPullDownRefresh = function(e) {
                t.comp && t.comp.triggerEvent("scrolltoupper", {}), t.oldPullDownRefresh.apply(t.root, [e])
            })
        }

        function c(e, t) {
            if (!t) return e;
            if (void 0 !== e[t]) return e[t];
            for (var r = t.split("."), i = 0; i < r.length; i++)
                if (void 0 === (e = e[r[i]]) || "object" === (void 0 === e ? "undefined" : o(e)) && !e) return;
            return e
        }

        function l(e, t) {
            "[object Array]" !== Object.prototype.toString.call(t) && (t = [t]);
            for (var r = {}, i = 0; i < t.length; i++) r[t[i]] = c(e, t[i]);
            return r
        }

        function p(e) {
            return "[object Array]" === Object.prototype.toString.call(e)
        }

        function u(e, t) {
            if ((void 0 === e ? "undefined" : o(e)) !== (void 0 === t ? "undefined" : o(t))) return !1;
            if (p(e) && p(t)) {
                if (e.length !== t.length) return !1;
                for (var r = 0; r < e.length; r++)
                    if (e[r] !== t[r]) return !1;
                return !0
            }
            return e === t
        }

        function f(e, t, r) {
            p(r) || (r = [r]);
            for (var i = 0; i < r.length; i++)
                if (!u(c(e, r[i]), c(t, r[i]))) return !1;
            return !0
        }
        s.prototype.checkComp = function() {
            if (!this.comp) {
                if (this.comp = this.page.selectComponent("#" + this.id), !this.comp) throw new Error("the recycle-view correspond to this context is detached, pls create another RecycleContext");
                this.comp.setUseInPage(this.useInPage), this.comp.context = this, this.comp.setPage(this.page)
            }
        }, s.prototype.appendList = function(e, t) {
            this.checkComp();
            var r = this.id,
                i = this.dataKey;
            return n[r] ? (n[r].dataKey = i, n[r].list = n[r].list.concat(e)) : n[r] = {
                key: i,
                id: r,
                list: e,
                sizeMap: {},
                sizeArray: []
            }, this._forceRerender(r, t), this
        }, s.prototype._forceRerender = function(e, t) {
            this.isDataReady = !0;
            var r = this,
                i = null,
                o = null,
                h = 0;

            function a() {
                if (i && o) {
                    for (var e = [], t = 0; t < h; t++) e.push({
                        left: i[t].left - o.left,
                        top: i[t].top - o.top,
                        width: i[t].width,
                        height: i[t].height
                    });
                    r.comp.setPlaceholderImage(e, {
                        width: o.width,
                        height: o.height
                    })
                }
            }

            function s() {
                if (t && t(), r.autoCalculateSize && r.placeholderClass) {
                    var e = [];
                    r.placeholderClass.forEach((function(t) {
                        e.push("." + r.itemSizeOpt.queryClass + " ." + t)
                    })), h = e.length, wx.createSelectorQuery().selectAll(e.join(",")).boundingClientRect((function(e) {
                        e.length < h || (i = e, a())
                    })).exec(), wx.createSelectorQuery().select("." + r.itemSizeOpt.queryClass).boundingClientRect((function(e) {
                        o = e, a()
                    })).exec()
                }
            }
            if ("[object Object]" !== Object.prototype.toString.call(this.itemSizeOpt) || !this.itemSizeOpt || this.itemSizeOpt.width) {
                var c = this._recalculateSize(n[e].list);
                n[e].sizeMap = c.map, n[e].sizeArray = c.array, this.comp.forceUpdate(t)
            } else this._recalculateSizeByProp(n[e].list, (function(t) {
                n[e].sizeMap = t.map, n[e].sizeArray = t.array, r.comp.forceUpdate(s)
            }))
        }, s.prototype._recalculateSizeByProp = function(e, t) {
            var r = this.itemSizeOpt,
                i = this.propValueMap || [],
                o = [],
                n = [];
            r.cacheKey && (i = wx.getStorageSync(r.cacheKey) || []), this.autoCalculateSize = !0;
            for (var h = [], a = 0; a < e.length; a++) {
                var s = i.length;
                if (i.length) {
                    for (var c = !1, p = 0; p < i.length; p++)
                        if (f(i[p], e[a], r.props)) {
                            s = p, c = !0;
                            break
                        }
                    if (!c) {
                        var u = l(e[a], r.props);
                        u.__index__ = a, i.push(u), o.push(e[a]), n.push(s)
                    }
                    h.push({
                        index: a,
                        sizeIndex: s
                    })
                } else {
                    var d = l(e[a], r.props);
                    d.__index__ = a, i.push(d), o.push(e[a]), n.push(s), h.push({
                        index: a,
                        sizeIndex: s
                    })
                }
            }
            this.propValueMap = i, i.length > 10 && console.warn("[recycle-view] get itemSize count exceed maximum of 10, now got", i);
            var g = this;

            function y(e, t) {
                var r = h[t];
                if (!r) throw console.error("[recycle-view] auto calculate size array error, no map size found", e, t, h), new Error("[recycle-view] auto calculate size array error, no map size found");
                var o = i[r.sizeIndex];
                if (!o) throw console.log("[recycle-view] auto calculate size array error, no size found", e, t, r, i), new Error("[recycle-view] auto calculate size array error, no size found");
                return {
                    width: o.width,
                    height: o.height
                }
            }
            if (o.length) {
                var m = {};
                m[r.dataKey] = o, this.page.setData(m, (function() {
                    wx.createSelectorQuery().selectAll("." + r.queryClass).boundingClientRect((function(o) {
                        ! function(o) {
                            o.forEach((function(e, t) {
                                var r = n[t];
                                i[r].width = e.width, i[r].height = e.height
                            })), g.itemSize = y;
                            var h = g._recalculateSize(e);
                            r.cacheKey && wx.setStorageSync(r.cacheKey, i), t && t(h)
                        }(o)
                    })).exec()
                }))
            } else {
                g.itemSize = y;
                var v = g._recalculateSize(e);
                t && t(v)
            }
        }, s.prototype._recalculateSize = function(e) {
            for (var t = {}, r = this.itemSize, i = "function" == typeof r, o = this.comp, n = o.data, h = 0, a = 0, s = 0, c = 0, l = [], p = e.length, u = 0; u < p; u++) {
                e[u].__index__ = u;
                var f = {};
                if (f = i ? r && r.call(this, e[u], u) : {
                        width: r.width,
                        height: r.height
                    }, f = Object.assign({}, f), l.push(f), h + f.width > n.width) {
                    if (c = 0, h = f.width, l.length >= 2 ? a += l[l.length - 2].height || 0 : a += f.height, a >= 200 * (s + 1)) {
                        var d = u - 1,
                            g = s;
                        s += parseInt((a - 200 * s) / 200, 10);
                        for (var y = g; y < s; y++) {
                            var m = y + "." + c;
                            t[m] || (t[m] = []), t[m].push(d)
                        }
                    }
                    if (0 === u) f.beforeHeight = 0;
                    else {
                        var v = l[l.length - 2];
                        f.beforeHeight = v.beforeHeight + v.height
                    }
                } else h >= 200 * (c + 1) && c++, h += f.width, f.beforeHeight = 0 === u ? 0 : l[l.length - 2].beforeHeight;
                var w = s + "." + c;
                if (t[w] || (t[w] = []), t[w].push(u), p - 1 === u && f.height > 200) {
                    var S = s;
                    a += f.height, s += parseInt((a - 200 * s) / 200, 10);
                    for (var b = S; b <= s; b++) {
                        var x = b + "." + c;
                        t[x] || (t[x] = []), t[x].push(u)
                    }
                }
            }
            var z = {
                array: l,
                map: t,
                totalHeight: l.length ? l[l.length - 1].beforeHeight + l[l.length - 1].height : 0
            };
            return o.setItemSize(z), z
        }, s.prototype.deleteList = function(e, t, r) {
            this.checkComp();
            var i = this.id;
            return n[i] ? (n[i].list.splice(e, t), this._forceRerender(i, r), this) : this
        }, s.prototype.updateList = function(e, t, r) {
            this.checkComp();
            var i = this.id;
            if (!n[i]) return this;
            for (var o = n[i].list.length, h = 0; h < t.length && e < o; h++) n[i].list[e++] = t[h];
            return this._forceRerender(i, r), this
        }, s.prototype.update = s.prototype.updateList, s.prototype.splice = function(e, t, r, i) {
            this.checkComp();
            var h = this.id,
                a = this.dataKey;
            if ("object" === (void 0 === e ? "undefined" : o(e)) && e.length && (i = t, r = e), "function" == typeof r && (i = r, r = []), n[h]) {
                n[h].dataKey = a;
                var s = n[h].list;
                r && r.length ? s.splice.apply(s, [e, t].concat(r)) : s.splice(e, t)
            } else n[h] = {
                key: a,
                id: h,
                list: r || [],
                sizeMap: {},
                sizeArray: []
            };
            return this._forceRerender(h, i), this
        }, s.prototype.append = s.prototype.appendList, s.prototype.destroy = function() {
            return this.useInPage && (this.page.onPullDownRefresh = this.oldPullDownRefresh, this.page.onReachBottom = this.oldReachBottom, this.page.onPageScroll = this.oldPageScroll, this.oldPageScroll = this.oldReachBottom = this.oldPullDownRefresh = null), this.page = null, this.comp = null, n[this.id] && delete n[this.id], this
        }, s.prototype.forceUpdate = function(e, t) {
            var r = this;
            return this.checkComp(), t ? this.comp.reRender((function() {
                r._forceRerender(r.id, e)
            })) : this._forceRerender(this.id, e), this
        }, s.prototype.getBoundingClientRect = function(e) {
            if (this.checkComp(), !n[this.id]) return null;
            var t = n[this.id].sizeArray;
            if (!t || !t.length) return null;
            if (void 0 === e) {
                for (var r = [], i = 0; i < t.length; i++) r.push({
                    left: 0,
                    top: t[i].beforeHeight,
                    width: t[i].width,
                    height: t[i].height
                });
                return r
            }
            return (e = parseInt(e, 10)) >= t.length || e < 0 ? null : {
                left: 0,
                top: t[e].beforeHeight,
                width: t[e].width,
                height: t[e].height
            }
        }, s.prototype.getScrollTop = function() {
            return this.checkComp(), this.comp.currentScrollTop || 0
        }, s.prototype.transformRpx = s.transformRpx = function(e, t) {
            return "number" == typeof e && (e += "rpx"), parseFloat(a.transformRpx(e, t))
        }, s.prototype.getViewportItems = function(e) {
            this.checkComp();
            var t = this.comp.getIndexesInViewport(e);
            if (t.length <= 0) return [];
            for (var r = [], i = n[this.id].list, o = 0; o < t.length; o++) r.push(i[t[o]]);
            return r
        }, s.prototype.getTotalHeight = function() {
            return this.checkComp(), this.comp.getTotalHeight()
        }, s.prototype.getList = function() {
            return n[this.id] ? n[this.id].list : []
        }, t.exports = s
    }, function(e, t, r) {
        var i = r(1);
        e.exports = function(e, t) {
            var r = e.detail,
                o = [],
                n = i[r.id];
            if (n && n.list) {
                var h = n.list,
                    a = r.data,
                    s = a.beginIndex,
                    c = a.endIndex;
                if (n.pos = a, void 0 === s || -1 === s || void 0 === c || -1 === c) o = [];
                else {
                    var l = -1;
                    for (l = s; l < h.length && l <= c; l++) l >= a.ignoreBeginIndex && l <= a.ignoreEndIndex || o.push(h[l])
                }
                var p = {};
                p[n.key] = o;
                var u = this.selectComponent("#" + r.id);
                p[u.data.batchKey] = !this.data.batchSetRecycleData, u._setInnerBeforeAndAfterHeight({
                    beforeHeight: a.minTop,
                    afterHeight: a.afterHeight
                }), this.setData(p, (function() {
                    "function" == typeof t && t()
                }))
            }
        }
    }]);
});
define("configs/AppConfig.js", function(require, module, exports, window, document, frames, self, location, navigator, localStorage, history, Caches, screen, alert, confirm, prompt, XMLHttpRequest, WebSocket, Reporter, webkit, WeixinJSCore) {
    "use strict";
    var e = "/openim/jsonvideoapp",
        t = "/openim/rtmpproxydis",
        c = "/websocket/connection",
        n = "https://test.tim.qq.com/v4",
        i = "https://yun.tim.qq.com/v4",
        a = "https://work.medialab.qq.com/test/v2",
        s = "https://work.medialab.qq.com/prerelease/v2",
        m = {
            MP_WEMEET_VERSION: "4.1.6.0",
            APPID: "wx33fd6cdc62520063",
            InstanceID: 8,
            DomainForAccessRtmpProxy: "wemeetgbn.qcloud.com",
            ENV_SWITCH_ENABLE: !1,
            NATIVE_APP_ID_PRO: "wxf80860aa29a91007",
            NATIVE_APP_ID_TEST: "wxb11ccb9588b19dc2",
            NATIVE_PC_APP_ID_PRO: "wxe1097d193e4320fd",
            AvatarURL: "https://meeting-75420.picgzc.qpic.cn",
            MixAudioStreamID: "mt_trtc_sdk",
            streamType: {
                main: "main",
                small: "small",
                aux: "aux"
            },
            backgroundMute: null,
            pusherOrientation: "",
            isSupportSmallVideo: !0,
            trtcEnv: "default",
            minCache: .3,
            maxCache: 1,
            minBitrate: 400,
            maxBitrate: 1e3,
            MAX_LEN_NICKNAME: 36,
            MEETING_CODE_MAX_LEN: 12,
            MaxCustomerDataLength: 256,
            isContain: !1,
            WeMeetReleased: !1,
            WeMeetOfficialSite: "https://meeting.qq.com",
            WeMeetUsageRules: "https://meeting.qq.com/declare.html",
            WeMeetPrivacy: "https://meeting.tencent.com/privacy-policy.html",
            DEFAULT_ENV_KEY: "production",
            ENV_LIST: {
                production: {
                    key: "production",
                    name: "正式环境",
                    sdkappid: "200000000",
                    signurl: "".concat(i).concat(e),
                    micurl: "".concat(i).concat(t),
                    srvurl: "wss://ws.wemeet.tencent.com".concat(c),
                    httpCgi: "https://work.medialab.qq.com/v2",
                    disabled: !1
                },
                meetingCicd199: {
                    key: "meetingCicd199",
                    name: "Ci-199(默认测试)",
                    sdkappid: "200000000",
                    signurl: "".concat(n).concat(e),
                    micurl: "".concat(n).concat(t),
                    srvurl: "wss://ws199.cicd.tencentmeeting.com".concat(c),
                    httpCgi: a,
                    disabled: !1
                },
                meetingCicd200: {
                    key: "meetingCicd200",
                    name: "Ci-200(集成测试)",
                    sdkappid: "200000000",
                    signurl: "".concat(i).concat(e),
                    micurl: "".concat(i).concat(t),
                    srvurl: "wss://ws200.cicd.tencentmeeting.com".concat(c),
                    httpCgi: s,
                    disabled: !1
                },
                meetingPreOpenProd: {
                    key: "meetingPreOpenProd",
                    name: "集成测试(原预发布)",
                    sdkappid: "200000000",
                    signurl: "".concat(i).concat(e),
                    micurl: "".concat(i).concat(t),
                    srvurl: "wss://meetingws.medialab.qq.com".concat(c),
                    httpCgi: s,
                    disabled: !1
                },
                prereleaseSET: {
                    key: "prereleaseSET",
                    name: "预发SET",
                    sdkappid: "200000000",
                    signurl: "".concat(n).concat(e),
                    micurl: "".concat(n).concat(t),
                    srvurl: "wss://prerelease.meetingws.medialab.qq.com".concat(c),
                    httpCgi: s,
                    disabled: !1
                },
                meetingCicd28: {
                    key: "meetingCicd28",
                    name: "Ci-28",
                    sdkappid: "200000000",
                    signurl: "".concat(n).concat(e),
                    micurl: "".concat(n).concat(t),
                    srvurl: "wss://ws028.cicd.tencentmeeting.com".concat(c),
                    httpCgi: "https://work.medialab.qq.com/test/stke10958env/v2",
                    disabled: !1
                },
                meetingCicd2: {
                    key: "meetingCicd2",
                    name: "Ci-2",
                    sdkappid: "200000000",
                    signurl: "".concat(n).concat(e),
                    micurl: "".concat(n).concat(t),
                    srvurl: "wss://ws002.cicd.tencentmeeting.com".concat(c),
                    httpCgi: "https://work.medialab.qq.com/test/stke14620env/v2",
                    disabled: !1
                },
                meetingCicd45: {
                    key: "meetingCicd45",
                    name: "Ci-45",
                    sdkappid: "200000000",
                    signurl: "".concat(n).concat(e),
                    micurl: "".concat(n).concat(t),
                    srvurl: "wss://ws045.cicd.tencentmeeting.com".concat(c),
                    httpCgi: a,
                    disabled: !1
                },
                meetingCicd62: {
                    key: "meetingCicd62",
                    name: "Ci-62",
                    sdkappid: "200000000",
                    signurl: "".concat(n).concat(e),
                    micurl: "".concat(n).concat(t),
                    srvurl: "wss://ws062.cicd.tencentmeeting.com".concat(c),
                    httpCgi: "https://work.medialab.qq.com/test/stke10958env/v2",
                    disabled: !1
                },
                meetingCicd43: {
                    key: "meetingCicd43",
                    name: "Ci-43",
                    sdkappid: "200000000",
                    signurl: "".concat(n).concat(e),
                    micurl: "".concat(n).concat(t),
                    srvurl: "wss://ws043.cicd.tencentmeeting.com".concat(c),
                    httpCgi: "https://work.medialab.qq.com/test/stke10958env/v2",
                    disabled: !1
                },
                meetingCicd29: {
                    key: "meetingCicd29",
                    name: "Ci-29",
                    sdkappid: "200000000",
                    signurl: "".concat(n).concat(e),
                    micurl: "".concat(n).concat(t),
                    srvurl: "wss://ws029.cicd.tencentmeeting.com".concat(c),
                    httpCgi: "https://work.medialab.qq.com/test/stke10958env/v2",
                    disabled: !1
                },
                meetingCicd90: {
                    key: "meetingCicd90",
                    name: "Ci-90",
                    sdkappid: "200000000",
                    signurl: "".concat(n).concat(e),
                    micurl: "".concat(n).concat(t),
                    srvurl: "wss://ws090.cicd.tencentmeeting.com".concat(c),
                    httpCgi: "https://work.medialab.qq.com/test/ci-90/v2",
                    disabled: !1
                },
                externalDebug: {
                    key: "externalDebug",
                    name: "对外联调环境",
                    sdkappid: "1400244218",
                    signurl: "".concat(i).concat(e),
                    micurl: "".concat(i).concat(t),
                    srvurl: "wss://ws2.wemeet.tencent.com".concat(c),
                    httpCgi: "https://work.medialab.qq.com/v2",
                    disabled: !0
                }
            }
        };
    m.WeMeetReleased ? (m.WeMeetOfficialSite = "https://meeting.qq.com", m.WeMeetUsageRules = "https://meeting.qq.com/declare.html") : (m.WeMeetOfficialSite = "https://meeting.tencent.com", m.WeMeetUsageRules = "https://meeting.tencent.com/declare.html"), module.exports = m;
});
define("configs/MsgCfgInMeeting.js", function(require, module, exports, window, document, frames, self, location, navigator, localStorage, history, Caches, screen, alert, confirm, prompt, XMLHttpRequest, WebSocket, Reporter, webkit, WeixinJSCore) {
    "use strict";
    module.exports = {
        exitSpeakDialog: {
            title: "退出发言",
            content: "退出发言后，将无法开启麦克风，但您会继续留在会议中",
            cancelBtn: {
                text: "取消"
            },
            okBtn: {
                text: "退出"
            },
            buttonStyle: "flat"
        },
        handsUpForbiddenDialog: {
            title: "",
            content: "主持人已设置不允许举手",
            okBtn: {
                text: "知道了"
            },
            cancelBtn: null
        },
        allowSpeakDialog: {
            title: "主持人请您发言",
            content: "您可以解除静音开启麦克风发言，也可以继续保持静音",
            cancelBtn: {
                text: "保持静音"
            },
            okBtn: {
                text: "解除静音"
            },
            buttonStyle: "flat"
        },
        allowAudienceMuteDialog: {
            title: "无法开启麦克风",
            content: "主持人设置不允许自己解除静音，您无法开启麦克风，您可以向主持人申请开启",
            cancelBtn: {
                text: "取消"
            },
            okBtn: {
                text: "申请解除静音"
            },
            buttonStyle: "flat"
        },
        applyUnmuteDialog: {
            title: "",
            content: "您正在申请解除静音",
            cancelBtn: {
                text: "取消申请"
            },
            okBtn: {
                text: "保持申请"
            },
            buttonStyle: "flat"
        },
        breakoutRoomDiscussDialog: {
            title: "",
            content: "主持人已发起分组讨论，小程序暂不支持加入，请使用客户端入会。",
            cancelBtn: {
                text: "关闭"
            },
            okBtn: {
                text: "复制链接"
            },
            buttonStyle: "flat"
        },
        turnOnAudioButNotAllowDialog: {
            title: "您已静音",
            content: "您可以举手申请发言。",
            cancelBtn: {
                text: "取消"
            },
            okBtn: {
                text: "举手申请"
            },
            buttonStyle: "flat"
        },
        turnOnAudioButAllHasBeenMutedDialog: {
            title: "全体静音",
            content: "主持人已将全体静音，您可以举手申请发言。",
            cancelBtn: {
                text: "取消"
            },
            okBtn: {
                text: "举手申请"
            },
            buttonStyle: "flat"
        },
        hostAskMeToTurnOnAudioDialog: {
            title: "",
            content: "主持人请求解除您的静音。",
            cancelBtn: {
                text: "解除静音"
            },
            okBtn: {
                text: "保持静音"
            },
            buttonStyle: "flat"
        },
        handsUpAgainDialog: {
            title: "举手申请",
            content: "您已经举手申请发言，是否取消举手申请？",
            cancelBtn: {
                text: "保持举手"
            },
            okBtn: {
                text: "手放下"
            },
            buttonStyle: "flat"
        },
        exitDialog: {
            title: "",
            content: "确认要退出当前会议吗？",
            cancelBtn: {
                text: "退出会议"
            },
            okBtn: {
                text: "取消"
            },
            buttonStyle: "flat"
        },
        errorDialog: {
            title: "网络请求超时",
            content: "加入会议时发生错误，请重试",
            okBtn: {
                text: "知道了"
            },
            cancelBtn: null,
            buttonStyle: "flat"
        },
        meetingTimeWillReachLimitDialog: {
            title: "会议即将到期",
            content: "会议即将结束",
            okBtn: {
                text: "确定"
            },
            cancelBtn: null,
            buttonStyle: "flat"
        },
        keepInForegroundDialog: {
            className: "keep-in-foreground-dialog",
            mainContentClassName: "very-height",
            title: "",
            content: "会议期间请保持小程序运行在前台，否则会议将会异常退出。",
            okBtn: {
                text: "我知道了"
            },
            cancelBtn: null
        },
        snapshotWarningDialog: {
            title: "截图操作已记录",
            className: "keep-in-foreground-dialog",
            mainContentClassName: "very-height-2",
            content: "未经授权的使用、复制、传播屏幕内容的行为都是禁止的。",
            okBtn: {
                text: "知道了"
            },
            cancelBtn: null
        },
        pusherInterruptedDialog: {
            title: "",
            content: "当前会议被其他应用中断，请在通话结束后重新连接。",
            okBtn: {
                text: "重新连接"
            },
            cancelBtn: {
                text: "退出会议"
            }
        },
        restartPusherFailedDialog: {
            title: "",
            content: "重连失败，请重新加入会议",
            okBtn: {
                text: "退出会议"
            },
            cancelBtn: null
        },
        imOverCountDialog: {
            title: "",
            content: "当前消息发送过于频繁，可能会造成画面卡顿。建议您使用腾讯会议APP，开会更稳定。",
            okBtn: {
                text: "我知道了"
            },
            cancelBtn: null
        }
    };
});
define("configs/MsgCfgIndex.js", function(require, module, exports, window, document, frames, self, location, navigator, localStorage, history, Caches, screen, alert, confirm, prompt, XMLHttpRequest, WebSocket, Reporter, webkit, WeixinJSCore) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
        value: !0
    }), exports.android8027BugDialog = void 0;
    exports.android8027BugDialog = {
        title: "",
        content: "当前微信客户端版本较低，影响正常使用，请升级版本后入会。",
        cancelBtn: {
            isOpen: !0,
            "open-type": "exit",
            text: "暂不升级"
        },
        okBtn: {
            text: "前往升级"
        },
        buttonStyle: "flat"
    };
});
define("configs/MsgCfgJoinMeeting.js", function(require, module, exports, window, document, frames, self, location, navigator, localStorage, history, Caches, screen, alert, confirm, prompt, XMLHttpRequest, WebSocket, Reporter, webkit, WeixinJSCore) {
    "use strict";
    module.exports = {
        quitFromRoomg: {
            title: "",
            content: "已退出会议",
            cancelBtn: null,
            okBtn: {
                text: "确定"
            },
            buttonStyle: "flat"
        },
        recoverMeeting: {
            title: "",
            content: "检测到您上次异常退出，是否要恢复会议？",
            cancelBtn: {
                text: "取消"
            },
            okBtn: {
                text: "恢复"
            },
            buttonStyle: "flat"
        },
        accountLimited: {
            title: "",
            content: "账号状态异常",
            cancelBtn: null,
            okBtn: {
                isOpen: !0,
                "open-type": "exit",
                text: "确定"
            }
        },
        goToSignupDialog: {
            title: "",
            content: "请报名，报名成功后即可入会",
            cancelBtn: {
                text: "取消"
            },
            okBtn: {
                text: "前往报名"
            },
            buttonStyle: "flat"
        },
        isGuest: {
            title: "",
            content: "您是研讨会嘉宾，建议通过APP入会获得完整体验。已帮您复制会议号，您可以复制到腾讯会议参会",
            contentIsLeft: !0,
            cancelBtn: {
                text: "取消"
            },
            okBtn: {
                text: "前往小程序"
            },
            buttonStyle: "flat"
        },
        personLimited: {
            title: "",
            content: "小程序入会已达上限，建议通过APP入会，已帮您复制会议号，您可以复制到腾讯会议参会",
            contentIsLeft: !0,
            cancelBtn: {
                text: "取消"
            },
            okBtn: {
                text: "知道了"
            },
            buttonStyle: "flat"
        },
        leaveMeeting: {
            title: "",
            content: "您已退出会议",
            cancelBtn: null,
            okBtn: {
                text: "确定"
            },
            buttonStyle: "flat"
        },
        prompt: {
            title: "",
            content: "",
            cancelBtn: null,
            okBtn: {
                text: "确定"
            },
            buttonStyle: "flat"
        }
    };
});
define("configs/MsgCfgWaitingRoom.js", function(require, module, exports, window, document, frames, self, location, navigator, localStorage, history, Caches, screen, alert, confirm, prompt, XMLHttpRequest, WebSocket, Reporter, webkit, WeixinJSCore) {
    "use strict";
    module.exports = {
        confirmLeaveWaitingRoom: {
            title: "离开会议",
            content: "确认离开此次会议？",
            cancelBtn: {
                text: "取消"
            },
            okBtn: {
                text: "确认"
            },
            buttonStyle: "flat"
        },
        initFailed: {
            title: "",
            content: "加入会议失败，请重试。",
            okBtn: {
                text: "确定"
            },
            cancelBtn: null,
            buttonStyle: "flat"
        }
    };
});
define("constants/AppType.js", function(require, module, exports, window, document, frames, self, location, navigator, localStorage, history, Caches, screen, alert, confirm, prompt, XMLHttpRequest, WebSocket, Reporter, webkit, WeixinJSCore) {
    "use strict";
    var _ = require("../utils/util").mirror;
    module.exports = _({
        INIT_SYSTEM_INFO_SUCC: null,
        INIT_SYSTEM_INFO_FAIL: null,
        QYWX_VERSION_CHANGE: null,
        INIT_ACCOUNT_INFO_SUCC: null,
        INIT_ACCOUNT_INFO_FAIL: null,
        SWITCH_EVN_SUCC: null,
        SWITCH_EVN_FAIL: null,
        CURR_ENV_CHANGE: null,
        APP_SWITCH_TO_FOREGROUND: null,
        APP_SWITCH_TO_BACKGROUND: null
    });
});
define("constants/AudioLayoutMembersType.js", function(require, module, exports, window, document, frames, self, location, navigator, localStorage, history, Caches, screen, alert, confirm, prompt, XMLHttpRequest, WebSocket, Reporter, webkit, WeixinJSCore) {
    "use strict";
    var E = require("../utils/util").mirror;
    module.exports = E({
        GREEN_HAT_PERSON_CHANGE: null,
        MEMBER_COUNT_CHANGE: null,
        NOTIFY_JOIN_AUDIO_MIX_USER_INFO: null,
        UPDATE_MEMBERS: null,
        MEMBERS_LIST_UPDATE: null,
        SLIDE_BLOCK_UPDATE: null,
        SLIDE_RIGHT: null,
        MEDIA_STREAM_STATUS_CHANGE: null
    });
});
define("constants/CGIState.js", function(require, module, exports, window, document, frames, self, location, navigator, localStorage, history, Caches, screen, alert, confirm, prompt, XMLHttpRequest, WebSocket, Reporter, webkit, WeixinJSCore) {
    "use strict";
    module.exports = {
        MEETING_STATE: {
            NON_EXISTENT: -1,
            READY: 0,
            CANCELED: 1,
            ACTIVE: 2,
            DELETED: 3,
            ENDED: 6,
            RECYCLED: 7
        }
    };
});
define("constants/FaceVerify.js", function(require, module, exports, window, document, frames, self, location, navigator, localStorage, history, Caches, screen, alert, confirm, prompt, XMLHttpRequest, WebSocket, Reporter, webkit, WeixinJSCore) {
    "use strict";
    module.exports = {
        FACE_VERIFY_BIZ_MAP: {
            UNKOWN: "-1",
            APP_MOBILE: "1",
            MP_WEBVIEW: "2"
        }
    };
});
define("constants/FloatLayoutMembersType.js", function(require, module, exports, window, document, frames, self, location, navigator, localStorage, history, Caches, screen, alert, confirm, prompt, XMLHttpRequest, WebSocket, Reporter, webkit, WeixinJSCore) {
    "use strict";
    var E = require("../utils/util").mirror;
    module.exports = E({
        MOST_VOICED_PERSON_CHANGE: null,
        USER_JOIN: null,
        USER_UPDATE: null,
        USER_LEAVE: null,
        USER_OFFLINE: null,
        USER_KICKED: null,
        SCREEN_SHARE_START: null,
        SCREEN_SHARE_PAUSE: null,
        SCREEN_SHARE_END: null,
        WEB_SCREEN_SHARE_START: null,
        ASSOCIATOR_DEVICE_ADD: null,
        ASSOCIATOR_DEVICE_UPDATE: null,
        ASSOCIATOR_DEVICE_REMOVE: null,
        NOTIFY_JOIN_AUDIO_MIX_USER_INFO: null,
        UPDATE_MEMBERS: null,
        MEMBER_COUNT_CHANGE: null,
        HIDE_LOADING: null,
        HIDE_LOADING_SUCC: null,
        HIDE_LOADING_FAIL: null,
        MEDIA_USER_LIST_CHANGE: null,
        ASSOCIATOR_PLAYURL_CHANGE: null,
        PLAYURL_CLEARED: null,
        SHOW_LOADING_SINCE_PULLING_BIG_VIDEO: null,
        SHOW_LOADING_SINCE_PULLING_SMALL_VIDEO: null,
        MAIN_VIDEO_PLAYURL_CHANGE: null,
        AUX_VIDEO_PLAYURL_CLEARED: null,
        AUX_VIDEO_PLAYURL_CHANGE: null,
        MEETING_HAS_VIDEO_ON: null,
        MEETING_HAS_NO_VIDEO: null,
        TURN_ON_USER_LIVE_PLAYER: null,
        TURN_OFF_USER_LIVE_PLAYER: null,
        UPDATE_FLOATLAYOUT_MEMBERS: null,
        MEMBER_LOCK_DONE: null,
        MEMBER_UNLOCK_DONE: null,
        FIX_MEMBER_ONTO_MAIN_POS_DONE: null,
        MEMBER_LOCK: null,
        MEMBER_UNLOCK: null,
        UNLOCK_MEMBER_FAILED: null,
        LOCK_MEMBER_FAILED: null,
        MEDIA_STREAM_STATUS_CHANGE: null,
        PAUSE_ALL_VIDEOS: null,
        RESUME_ALL_VIDEOS: null,
        TEST_PLAY_OR_STOP_MAIN_VIDEO: null,
        STOP_ALL_PLAYERS: null,
        STOP_LIVE_PLAYER: null,
        SCREEN_SHARE_MOUSE_UPDATE: null
    });
});
define("constants/LayoutMode.js", function(require, module, exports, window, document, frames, self, location, navigator, localStorage, history, Caches, screen, alert, confirm, prompt, XMLHttpRequest, WebSocket, Reporter, webkit, WeixinJSCore) {
    "use strict";
    module.exports.LayoutMode = {
        defaultLayout: "defaultLayout",
        audioLayout: "audioLayout",
        pusherLayout: "pusherLayout",
        floatLayout: "floatLayout"
    };
});
define("constants/LivepusherNetstatusMeasure.js", function(require, module, exports, window, document, frames, self, location, navigator, localStorage, history, Caches, screen, alert, confirm, prompt, XMLHttpRequest, WebSocket, Reporter, webkit, WeixinJSCore) {
    "use strict";
    module.exports = {
        EXCELLENT_GAP: -20,
        EXCELLENT_PERCENT: 1,
        GOOD_GAP: -0,
        GOOD_PERCENT: .9,
        NORMAL_GAP: 20,
        NORMAL_PERCENT: .8,
        BAD_GAP: 40,
        BAD_PERCENT: .7
    };
});
define("constants/LoadingStatus.js", function(require, module, exports, window, document, frames, self, location, navigator, localStorage, history, Caches, screen, alert, confirm, prompt, XMLHttpRequest, WebSocket, Reporter, webkit, WeixinJSCore) {
    "use strict";
    module.exports = {
        LoadingStatus: {
            Closed: 0,
            Open: 1,
            Paused: 2,
            Pending: 3,
            PausedPending: 4,
            Loading: 2007,
            Playing: 2003,
            Reconnecting: 2103
        },
        getReadableLoadingStatus: function(e) {
            var a = "";
            switch (e) {
                case 0:
                    a = "Closed";
                    break;
                case 1:
                    a = "Open";
                    break;
                case 2:
                    a = "Paused";
                    break;
                case 3:
                    a = "Pending";
                    break;
                case 2007:
                    a = "Loading";
                    break;
                case 2003:
                    a = "Playing";
                    break;
                case 2103:
                    a = "Reconnecting";
                    break;
                default:
                    a = "Unknown Loading Status"
            }
            return a
        }
    };
});
define("constants/MediaMachineType.js", function(require, module, exports, window, document, frames, self, location, navigator, localStorage, history, Caches, screen, alert, confirm, prompt, XMLHttpRequest, WebSocket, Reporter, webkit, WeixinJSCore) {
    "use strict";
    module.exports = {
        Unset: -1,
        InterfaceMachine: 0,
        ProxyMachine: 1
    };
});
define("constants/MediaStateManagerType.js", function(require, module, exports, window, document, frames, self, location, navigator, localStorage, history, Caches, screen, alert, confirm, prompt, XMLHttpRequest, WebSocket, Reporter, webkit, WeixinJSCore) {
    "use strict";
    var r = require("../utils/util").mirror;
    module.exports = r({
        LIVE_PUSHER_URL_CHANGE: null
    });
});
define("constants/MeetingType.js", function(require, module, exports, window, document, frames, self, location, navigator, localStorage, history, Caches, screen, alert, confirm, prompt, XMLHttpRequest, WebSocket, Reporter, webkit, WeixinJSCore) {
    "use strict";
    var _ = require("../utils/util").mirror;
    module.exports = _({
        QUERY_MEETING_ITEM_LIST_SUCC: null,
        QUERY_MEETING_ITEM_LIST_FAIL: null,
        QUERY_MEETING_PAY_INFO_FAIL: null,
        QUERY_MEETING_SETTINGS_SUCC: null,
        QUERY_MEETING_SETTINGS_FAIL: null,
        BREAKOUT_ROOM_SUCC: null,
        BREAKOUT_ROOM_FAIL: null,
        QUERY_WEBINAR_SUMMARY_SUCC: null,
        QUERY_WEBINAR_SUMMARY_FAIL: null,
        APPLY_PERMISSION_SUCC: null,
        APPLY_PERMISSION_FAIL: null,
        APPLY_PERMISSION_AUDIO_SUCC: null,
        JOIN_MEETING_ING: null,
        JOIN_MEETING_SUCC: null,
        JOIN_MEETING_FAIL: null,
        LEAVE_MEETING_ING: null,
        LEAVE_MEETING_SUCC: null,
        LEAVE_MEETING_FAIL: null,
        USER_STATUS_SUCC: null,
        USER_STATUS_FAIL: null,
        HOST_STATUS_SUCC: null,
        HOST_STATUS_FAIL: null,
        HANDS_UP_SUCC: null,
        HANDS_UP_FAIL: null,
        KICKED_OUT_SUCC: null,
        KICKED_OUT_FAIL: null,
        NOTIFY_SWITCH_MEDIA_STREAM: null,
        APPLY_UNMUTE_BYSELF: null,
        APPLY_PERMISSION_CANCEL: null,
        OPEN_USER_OPT_DIALOG: null,
        CHANGE_SELF_HANDUP: null,
        NOTIFY_JOIN_AUDIO_MIX_USER_INFO: null,
        MODIFY_USER_INFO_SUCC: null,
        MODIFY_USER_INFO_FAIL: null,
        REFRESH_MEDIA_AUTH_INFO_SUCC: null,
        REFRESH_MEDIA_AUTH_INFO_FAIL: null,
        WAITING_USER_STATUS_TIMEOUT: null,
        WAITING_USER_STATUS_BAD_RESPONSE: null,
        WAITING_USER_STATUS_JOIN_FROM_WAITING_ROOM: null,
        WAITING_USER_STATUS_LEAVE_FROM_WAITING_ROOM: null,
        WAITING_USER_STATUS_LEAVE_FOR_WAITING_ROOM: null,
        WAITING_USER_STATUS_I_AM_IN: null,
        BACK_TO_WAITING_ROOM: null,
        AUDIO_ENABLE_CHANGE: null,
        CAMERA_ENABLE_CHANGE: null,
        MIX_AUDIO_STREAM_CHANGE: null,
        JOIN_PARAM_UPDATE: null,
        IS_JOINING_FROM_WAITING_ROOM_CHANGE: null,
        IS_LEAVING_FROM_WAITING_ROOM_CHANGE: null,
        IS_LEAVING_FOR_WAITING_ROOM_CHANGE: null,
        SWITCH_USER_ROLE_SUCC: null,
        SWITCH_USER_ROLE_FAIL: null,
        SWITCH_USER_ROLE_TO_DC: null,
        SWITCH_USER_ROLE_TO_OC: null,
        LIVE_PUSHER_JOIN_MEDIA_ROOM_SUCC: null,
        LIVE_PUSHER_NEED_LEAVE_MEDIA_ROOM: null,
        LIVE_PUSHER_MEDIA_ROOM_RECONNECTING: null,
        LIVE_PUSHER_MEDIA_ROOM_RESTARTING: null,
        SET_NICKNAME: null,
        LIVE_PUSHER_MEDIA_ROOM_INTERRUPTED: null,
        LIVE_PUSHER_MEDIA_ROOM_RECOVERD: null,
        CLOUD_RECORD_STATE_STOPPED: null,
        CLOUD_RECORD_STATE_PREPARING: null,
        CLOUD_RECORD_STATE_STARTED: null,
        CLOUD_RECORD_STATE_PAUSED: null,
        LOCAL_RECORD_ON: null,
        LOCAL_RECORD_OFF: null,
        NOTIFY_MY_AUDIO_GRIDS_CHANGE: null,
        RECEIVE_USER_JOIN_OF_ME: null,
        FIX_MEMBER_ONTO_MAIN_POS: null,
        ENABLE_AUDIO_EXCITED_STRATEGY: null,
        DISABLE_AUDIO_EXCITED_STRATEGY: null,
        SET_JOIN_MEETING_RESP_META: null,
        FREE_MEETING_IS_END: null,
        UPDATE_MEETING_TIME_COUNTDOWN: null,
        MEMBERS_COUNT_WILL_REACH_LIMIT_SOON: null,
        MEMBERS_COUNT_HAS_REACHED_LIMIT_ALREADY: null,
        MEETING_DURATION_WILL_REACH_LIMIT_SOON: null,
        PSTN_DURATION_WILL_REACH_LIMIT_SOON: null,
        PSTN_DURATION_HAS_REACHED_LIMIT_ALREADY: null,
        SOMEBODY_TRIED_JOIN_MEETING_AFTER_REACH_LIMIT: null,
        ENOUGH_RESOURCE: null,
        ENOUGH_RESOURCE_ON_MEETING_DURATION: null,
        MEETING_LAYOUT_CHANGE: null,
        COLLAPSE_SMALL_VIDEOS: null,
        EXPAND_SMALL_VIDEOS: null,
        ON_MEDIA_USER_LIST_PUSH: null,
        TURN_AUDIO_BUT_IS_HANDS_UPING: null,
        MEDIA_MECHINE_TYPE_CHANGE: null,
        CAMERA_SWITCH_TO_FRONT: null,
        CAMERA_SWITCH_TO_BACK: null,
        FORBIDDEN_HAND_UP: null,
        OPEN_AUDIO_BUT_ALL_HAS_BEEN_MUTED: null,
        OPEN_AUDIO_BUT_NOT_ALLOWED: null,
        OPEN_MEDIA_FAILED: null,
        INITIAL_JOIN_MEDIA_ROOM_FAILED: null,
        IS_TURNING_AUDIO: null,
        IS_TURNING_VIDEO: null,
        SOUND_AROUND_CHANGE: null,
        LIVE_PUSHER_RESTART_FAILED: null,
        CURRENT_MEETING_HOST_CHANGE: null,
        ON_XMPP_LOGOUT: null,
        SNAPSHOT_TAKEN_ON_SCREEN_SHARE: null,
        HANDS_UP_CHANGE: null,
        ALLOW_SPEAK_CHANGE: null,
        ENABLE_WATERMARK_CHANGE: null,
        ENABLE_WATERMARKROW_CHANGE: null,
        UI_CFG_CHANGE: null,
        MUTE_ALL: null,
        ALLOW_TURN_ON_BY_SELF_CHANGE: null,
        UNMUTE_ALL: null,
        UNMUTE_BY_HOST_CHANGE_ALLOW_TURN_ON_BY_SELF: null,
        IS_HIDE_MEETING_CODE_AND_PASSWORD_CHANGE: null,
        IS_MEETING_LOCKED_CHANGE: null,
        APP_SWITCH_TO_FOREGROUND: null,
        APP_SWITCH_TO_BACKGROUND: null,
        PLAY_ALL_VIDEO_LIVE_PLAYERS: null,
        TURN_AUDIO_FAILED: null,
        LEAVE_MEDIA_ROOM_DONE: null,
        LIVE_PUSHER_MEDIA_ROOM_REDIRECTING_FINISHED: null,
        LIVE_PUSHER_NET_STATUS_CHANGE: null,
        REMOTE_VIDEO_ADD: null,
        REMOTE_VIDEO_REMOVE: null,
        MEDIA_ROOM_LEFT: null,
        PUSHER_CHANGE: null,
        MIX_AUDIO_STREAM_ADD: null,
        MIX_AUDIO_STREAM_REMOVE: null,
        SUBSCRIBE_TO_VIDEO_OF_MIX_AUDIO_STREAM: null,
        ON_PLAY_OF_MIX_AUDIO_STREAM: null,
        ON_PLAY_OF_NORMAL_STREAM: null,
        ON_PUSHER_ERROR: null,
        STOP_ALL_PLAYERS: null,
        ALLOW_RENAMING_CHANGE: null,
        DIRECTED_PUSH_TOAST: null,
        MESSAGE_RECEIVED: null,
        UNREAD_COUNT_CHANGE: null,
        IM_MESSAGE_LIST_UPDATE: null,
        ANNOUNCEMENT_RECEIVED: null,
        MESSAGE_REVOKED: null,
        NOTICE_VERSION_CHANGE: null,
        NOTICE_CLEAR: null,
        NOTICE_RED: null,
        NOTICE_HAS_CONTENT: null,
        NOTICE_CONTENT_CHANGE: null
    });
});
define("constants/MembersType.js", function(require, module, exports, window, document, frames, self, location, navigator, localStorage, history, Caches, screen, alert, confirm, prompt, XMLHttpRequest, WebSocket, Reporter, webkit, WeixinJSCore) {
    "use strict";
    var E = require("../utils/util").mirror;
    module.exports = E({
        USER_JOIN: null,
        USER_UPDATE: null,
        USER_LEAVE: null,
        USER_OFFLINE: null,
        USER_KICKED: null,
        NOTIFY_CURRENT_MVSP: null,
        NOTIFY_JOIN_AUDIO_MIX_USER_INFO: null,
        IAM_MVSP_CHANGE: null,
        AUDIO_MVSP_CHANGE: null,
        TURN_ON_USER_LIVE_PLAYER: null,
        TURN_OFF_USER_LIVE_PLAYER: null,
        SCREEN_SHARE_START: null,
        SCREEN_SHARE_PAUSE: null,
        SCREEN_SHARE_RESUME: null,
        SCREEN_SHARE_END: null,
        ASSOCIATOR_DEVICE_ADD: null,
        ASSOCIATOR_DEVICE_UPDATE: null,
        ASSOCIATOR_DEVICE_REMOVE: null,
        LOCAL_RECORD_ON: null,
        LOCAL_RECORD_OFF: null,
        MEETING_HAS_VIDEO_ON: null,
        MEETING_HAS_NO_VIDEO: null,
        MEMBER_COUNT_CHANGE: null,
        MEMBER_LIST_UPDATED: null,
        USER_OFFLINE_SUCC: null,
        USER_OFFLINE_FAIL: null,
        MEDIA_USER_LIST_CHANGE: null,
        MEETING_MEMBERS_CHANGE: null,
        CLEAR_AUDIO_MVSP: null,
        MEMBER_LOCK_DONE: null,
        MEMBER_UNLOCK_DONE: null,
        HOST_CHANGED: null,
        CO_HOST_CHANGED: null,
        MEMBER_RETIRE_HOST: null,
        MEMBER_BECOME_HOST: null,
        MEETING_HOST_INIT: null,
        MEMBER_RETIRE_COHOST: null,
        MEMBER_BECOME_COHOST: null,
        MEDIA_STREAM_STATUS_CHANGE: null,
        SHOW_WHITEBOARD_SIGNAL_TOAST: null,
        MYSELF_INFO_CHANGE: null
    });
});
define("constants/MultMediaState.js", function(require, module, exports, window, document, frames, self, location, navigator, localStorage, history, Caches, screen, alert, confirm, prompt, XMLHttpRequest, WebSocket, Reporter, webkit, WeixinJSCore) {
    "use strict";
    module.exports = {
        AccessState: {
            NeverAsk: 0,
            AskedButDenied: 1,
            Permitted: 2
        },
        MeetingState: {
            CANCELLED: 1,
            DELETED: 3,
            NOSTATE: 6,
            RECYCLED: 7,
            getReadableMeetingState: function(e) {
                var t = "unknown(".concat(e, ")");
                switch (e) {
                    case this.CANCELLED:
                        t = "已取消";
                        break;
                    case this.DELETED:
                        t = "已删除";
                        break;
                    case this.NOSTATE:
                        t = "无状态";
                        break;
                    case this.RECYCLED:
                        t = "已结束"
                }
                return t
            }
        },
        MediaRoomState: {
            OUT: 0,
            IN: 1,
            RECONNECTING: 2,
            RESTARTING: 3,
            INTERRUPTED: 4,
            REDIRECTING: 5,
            JOINING: 6,
            LEAVING: 7,
            getReadableState: function(e) {
                switch (e) {
                    case 0:
                        return "不在媒体房间中";
                    case 1:
                        return "在媒体房间中";
                    case 2:
                        return "媒体房间重连中...";
                    case 3:
                        return "媒体房间重启推流中";
                    case 4:
                        return "推流被系统来电或者微信VOIP中断";
                    case 5:
                        return "正在重定向中...";
                    case 6:
                        return "正在加入房间...";
                    case 7:
                        return "正在离开房间...";
                    default:
                        return "Unknown media room state: ".concat(e)
                }
            }
        }
    };
});
define("constants/PrivateMeetingType.js", function(require, module, exports, window, document, frames, self, location, navigator, localStorage, history, Caches, screen, alert, confirm, prompt, XMLHttpRequest, WebSocket, Reporter, webkit, WeixinJSCore) {
    "use strict";
    var E = require("../utils/util").mirror;
    module.exports = E({
        PRIVATE_MEETING_INFO_CHANGE: null,
        PRIVATE_MEETING_CODE_CHANGE: null,
        PRIVATE_MEETING_WEBSHARE_URL_CHANGE: null,
        PRIVATE_MEETING_IS_COLLECTED_CHANGE: null,
        PRIVATE_MEETING_REGISTER_OR_LOGIN_AUTH_CODE_CHANGE: null,
        PRIVATE_MEETING_ACCOUNT_LIST_CHANGE: null,
        PRIVATE_MEETING_IS_CORP_USER_CHANGE: null,
        PRIVATE_MEETING_COLLECTED_SUCC: null,
        PRIVATE_MEETING_COLLECTED_FAIL: null,
        PRIVATE_MEETING_REGISTER_ACCOUNT: null
    });
});
define("constants/RecyclableMemberListType.js", function(require, module, exports, window, document, frames, self, location, navigator, localStorage, history, Caches, screen, alert, confirm, prompt, XMLHttpRequest, WebSocket, Reporter, webkit, WeixinJSCore) {
    "use strict";
    var E = require("../utils/util").mirror;
    module.exports = E({
        CREATE_RECYCLE_CONTEXT_SUCC: null,
        CREATE_RECYCLE_CONTEXT_FAIL: null,
        DESTORY_RECYCLE_CONTEXT: null,
        SCREEN_SHARE_START: null,
        SCREEN_SHARE_END: null,
        MEMBER_COUNT_CHANGE: null,
        MEMBER_LOCK_DONE: null,
        MEMBER_UNLOCK_DONE: null,
        FIX_MEMBER_ONTO_MAIN_POS_DONE: null,
        CLOUD_RECORD_STATE_CHANGE: null,
        LOCAL_RECORD_CHANGE: null,
        AUDIO_ENABLE_CHANGE: null,
        HANDS_UP_CHANGE: null,
        IS_MEETING_LOCKED_CHANGE: null,
        ALLOW_TURN_ON_BY_SELF_CHANGE: null,
        FIX_MEMBER_ONTO_MAIN_POS_FAIL: null
    });
});
define("constants/UserType.js", function(require, module, exports, window, document, frames, self, location, navigator, localStorage, history, Caches, screen, alert, confirm, prompt, XMLHttpRequest, WebSocket, Reporter, webkit, WeixinJSCore) {
    "use strict";
    var _ = require("../utils/util").mirror;
    module.exports = _({
        CGI_LOGIN_SUCC: null,
        CGI_LOGIN_FAIL: null,
        XMPP_LOGIN_SUCC: null,
        XMPP_LOGIN_FAIL: null,
        XMPP_LOGOUT_ON_POSITIVELY: null,
        XMPP_LOGOUT_ON_ABNORMAL_NETWORK: null,
        XMPP_LOGOUT_ON_KICKED_BY_SAME_ACCOUNT: null,
        XMPP_LOGOUT_ON_ABNORMAL_ACCOUNT: null,
        XMPP_LOGOUT_ON_OTHERS_SITUATION: null,
        XMPP_ACCOUNT_INFO_GET_SUCC: null,
        XMPP_ACCOUNT_INFO_GET_FAIL: null,
        ACCOUNT_INFO_INIT: null,
        USER_BIND_WX_CHANGE: null,
        WX_USER_INFO_CHANGE: null,
        OPENID_CHANGE: null,
        UNIONID_CHANGE: null,
        UNIONIDEXP_CHANGE: null,
        PHONE_NUM_CHANGE: null,
        CGI_TOKEN_CHANGE: null,
        XMPP_TOKEN_CHANGE: null,
        WEMEET_ACCOUNT_LOGIN_SUCC: null,
        WEMEET_ACCOUNT_LOGOUT_SUCC: null,
        WEMEET_REGISTER_OR_LOGIN_AUTH_CODE_CHANGE: null,
        WEMEET_REGISTER_OR_LOGIN_BIND_WX_CHANGE: null,
        WEMEET_IS_CORP_USER_CHANGE: null,
        WEMEET_ACCOUNT_LIST_CHANGE: null,
        AUTH_CODE_FOR_REGISTER_GOT: null,
        WEMEET_LOGIN_INFO_EXP_CHANG: null,
        WEMEET_ACCOUNT_LOGIN_INFO_REFRESHED: null,
        WEMEET_ACCOUNT_REGISTER_CAPTCHA_COUNT_DOWN_START: null,
        WEMEET_ACCOUNT_REGISTER_CAPTCHA_COUNT_DOWN_CHANGE: null,
        WEMEET_ACCOUNT_REGISTER_SUCC: null,
        CAMERA_ACCESS_STATE_CHANGE: null,
        MICROPHONE_ACCESS_STATE_CHANGE: null,
        LEAVE_MEETING_REASON_CHANGE: null,
        ABTEST_EXP_PARAMS_CHANGE: null,
        USER_SUBSCRIBE_STATE_SUCC: null,
        MYSELF_INFO_CHANGE: null,
        HISTORY_NAMES_CHANGE: null
    });
});
define("constants/WaveAudio.js", function(require, module, exports, window, document, frames, self, location, navigator, localStorage, history, Caches, screen, alert, confirm, prompt, XMLHttpRequest, WebSocket, Reporter, webkit, WeixinJSCore) {
    "use strict";
    module.exports = {
        WaveAudioLasts: 200,
        WaveAudioSlices: 1,
        WaveAudioMaxDB: 100,
        WaveAudioMinDB: 0,
        WaveAudioMaxValidDB: 100,
        WaveAudioMinValidDB: 20,
        WaveAudioGrids: 10,
        get WaveAudioGridDB() {
            return Number(((this.WaveAudioMaxValidDB - this.WaveAudioMinValidDB) / this.WaveAudioGrids).toFixed(1))
        }
    };
});
define("https/CGI.js", function(require, module, exports, window, document, frames, self, location, navigator, localStorage, history, Caches, screen, alert, confirm, prompt, XMLHttpRequest, WebSocket, Reporter, webkit, WeixinJSCore) {
    "use strict";
    var e = require("../@babel/runtime/helpers/objectSpread2"),
        t = require("../stores/AppStore"),
        c = require("../stores/UserStore"),
        n = require("../utils/sha256.js"),
        o = require("../utils/util"),
        i = require("../utils/base64.js").Base64,
        a = require("../utils/logger"),
        r = require("../clients/BeaconClient"),
        s = new a({
            pageName: "https/CGI",
            aegisLogEnable: !0,
            wxLogEnable: !1
        }),
        m = "d4z3yF2Q0e7UEfKNuSxHPmvWrObLTIGa",
        g = {get: function(t) {
                var c = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {};
                return this.cgiRequest(t, e({
                    method: "GET"
                }, c))
            },
            post: function(t) {
                var c = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {};
                return this.cgiRequest(t, e({
                    method: "POST"
                }, c))
            },
            cgiRequest: function(c, n) {
                var o = this,
                    a = c;
                /^https?/.test(a) || (a = t.getHttpCgi() + c);
                var m = n.method,
                    g = void 0 === m ? "GET" : m,
                    p = n.data,
                    d = void 0 === p ? {} : p,
                    _ = n.header,
                    u = void 0 === _ ? {} : _,
                    l = n.__NEED_LOG__,
                    h = void 0 === l || l,
                    v = {
                        "content-type": "application/json"
                    },
                    E = {};
                return new Promise((function(t, c) {
                    var n = a.replace(/^.*\/(.*?)\?.*$|^.*\/(.*)$/, "$1$2"),
                        m = a.replace(/^https?\:\/\/.*?(\/[^?]*).*$/, "$1"),
                        p = "cgi<".concat(m, ">"),
                        _ = (new Date).getTime();
                    h && s.info("[".concat(g, "][").concat(n, "][req] url = ").concat(a, ", data = ").concat(JSON.stringify(d))), wx.request({
                        url: a,
                        method: g,
                        data: e(e({}, E), d),
                        header: e(e({}, v), u),
                        success: function(e) {
                            var a = (e || {}).data || {},
                                m = a.code,
                                d = a.message,
                                u = a.nonce,
                                l = (new Date).getTime() - _;
                            if (0 !== m) {
                                var v = m || "N1",
                                    E = "";
                                if (Object.prototype.hasOwnProperty.call(a, "message")) E = d || "CGI(-1)";
                                else if (Object.prototype.hasOwnProperty.call(a, "msg")) {
                                    if (E = a.msg ? a.msg : "CGI(-2)", a.msg && 1 === a.msg_encoded) try {
                                        E = i.decode(a.msg)
                                    } catch (e) {
                                        s.error("decode base64 failed. exception: ".concat(JSON.stringify(e), ", msg to decode: ").concat(a.msg)), E = "CGI(-3)"
                                    }
                                } else E = "CGI(-4)";
                                return s.error("[".concat(g, "][").concat(n, "][failed][").concat(l, "ms] CGI error.\n              code = ").concat(v, ",\n              message = ").concat(E, ",\n              nonce = ").concat(u, ".\n              raw response = ").concat(JSON.stringify(a), "\n            ")), void o.handleRequestFailed(c, {
                                    code: m,
                                    errMsg: E
                                }, h, _, g, n, p)
                            }
                            if (h) try {
                                s.info("[".concat(g, "][").concat(n, "][succeed][").concat(l, "ms] ").concat(JSON.stringify(a.data))), s.reportCls("cls_".concat(p, "_success_0_").concat(l)), r.report("mp_cgi", {
                                    cgi: n,
                                    time_cost: l,
                                    ret: 0
                                })
                            } catch (e) {
                                s.error("[".concat(g, "][").concat(n, "][succeed][").concat(l, "ms] print success resp failed: ").concat(e.message))
                            }
                            t(a.data)
                        },
                        fail: function(e) {
                            o.handleRequestFailed(c, e, h, _, g, n, p)
                        }
                    })
                }))
            },
            handleRequestFailed: function(e, t, c, n, i, a, m) {
                var g = t || {},
                    p = g.code,
                    d = void 0 === p ? -9999 : p,
                    _ = g.errMsg,
                    u = void 0 === _ ? "unknown error" : _;
                if (o.isTimeout(u) && (u = "timeout", d = -1), c) {
                    var l = (new Date).getTime() - n;
                    try {
                        s.error("[".concat(i, "][").concat(a, "][failed][").concat(l, "ms] ").concat(JSON.stringify(t))), s.reportCls("cls_".concat(m, "_fail_").concat(d, "_").concat(l, "_").concat(u)), r.report("mp_cgi", {
                            cgi: a,
                            time_cost: l,
                            ret: d
                        })
                    } catch (e) {
                        s.error("[".concat(i, "][").concat(a, "][failed][").concat(l, "ms] print err failed: ").concat(e.message))
                    }
                }
                e({
                    errmsg: u,
                    code: d
                })
            },
            APIS: {
                IS_VIRTUAL_CARD_OBTAINED: "https://meeting.tencent.com/wemeet-tapi/v2/welfare-center/cards/is-obtained",
                GET_VIRTUAL_CARD: "https://meeting.tencent.com/wemeet-tapi/v2/welfare-center/cards/get-virtual-card",
                WEMEET_GET_MEETING_INFO: "https://meeting.tencent.com/wemeet-tapi/v2/wemeet/wechat-private-meet/get-meeting-info",
                AUTH_LOGIN: "https://meeting.tencent.com/wemeet-tapi/v2/account/mini-program/auth-login",
                GET_PHONE: "/wemeet-tapi/v2/login-logic/mini-program/get-phone",
                WECHAT_BIND_PHONE: "https://meeting.tencent.com/wemeet-tapi/v2/account/register/wechat-bind-phone",
                AUTH_CODE: "https://meeting.tencent.com/wemeet-tapi/v2/account/login/auth-code",
                REFRESH_TOKEN: "https://meeting.tencent.com/wemeet-tapi/v2/account/login/refresh-token",
                SEND_PHONE_CODE: "/common/msg/send-phone-code",
                COLLECT_MEETING: "https://meeting.tencent.com/wemeet-tapi/wemeet/manage_service/comm/v1/collect_meeting",
                WEMEET_LOGOUT: "https://meeting.tencent.com/wemeet-tapi/v2/account/logout",
                MP_LOGIN: "/wemeet-tapi/v2/login-logic/mini-program/login",
                QUERY_MEETING_SIMPLE_INFO: "https://meeting.tencent.com/wemeet-tapi/wemeet/manage_service_not_auth/comm/v1/query_meeting_simple_info",
                GET_PRIVATE_MEETING_INFO: "https://meeting.tencent.com/wemeet-tapi/v2/account/mini-program/get-private-meeting-info",
                GET_RED_DOT: "/reddot/reddot/pull",
                RESET_RED_DOT: "/reddot/reddot/reset",
                CHECK_STUDENT: "https://meeting.tencent.com/wemeet-tapi/v2/activity-logic/wechat/check-is-student",
                CHECK_STUDENT_ACTIVITY: "https://meeting.tencent.com/wemeet-tapi/v2/activity-logic/check-student-activity",
                CHECK_STUDENT_IDENTITY_LIMIT: "https://meeting.tencent.com/wemeet-tapi/v2/activity-logic/check-student-identity-limit",
                ABILITY_CONFIG: "https://meeting.tencent.com/wemeet-tapi/v2/wemeet-ability-logic/query-ability-config"
            },
            getReuqestCommonParams: function() {
                var e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {},
                    i = arguments.length > 1 ? arguments[1] : void 0,
                    a = c.getWeMeetLoginToken(),
                    r = c.getAppID() || t.getSdkAppId(),
                    s = t.getSysInfo() || {},
                    g = (s.system || "").replace(/(.*?)\s.*/, "$1"),
                    p = (s.system || "").replace(/.*?\s(.*)/, "$1"),
                    d = s.model || "",
                    _ = t.getVersion(),
                    u = {
                        c_app_id: r || "",
                        c_os: g,
                        c_os_version: p,
                        c_os_model: d,
                        c_timestamp: Math.floor((new Date).getTime() / 1e3),
                        c_nonce: o.randomString(8),
                        c_app_version: _,
                        c_instance_id: t.getInstanceId(),
                        c_app_uid: c.getUserID() || "",
                        c_token: a || "",
                        c_device_id: ""
                    };
                if (i) {
                    var l = c.getOpenID(),
                        h = c.getCGIToken();
                    u.c_token = u.c_token || h || "", u.c_app_uid = u.c_app_uid || l || ""
                }
                var v = [];
                Object.keys(u).forEach((function(e) {
                    v.push({
                        key: e,
                        value: o.fixedEncodeURIComponent(u[e])
                    })
                }));
                var E = [];
                v.forEach((function(e) {
                    E.push("".concat(e.key, "=").concat(e.value))
                }));
                var f = E.join("&");
                Object.assign(u, e), Object.keys(e).forEach((function(t) {
                    v.push({
                        key: t,
                        value: o.fixedEncodeURIComponent(e[t])
                    })
                })), v.sort((function(e, t) {
                    return e.key < t.key ? -1 : 1
                })), E = [], v.forEach((function(e) {
                    E.push("".concat(e.key, "=").concat(e.value))
                }));
                var T = E.join("&"),
                    I = w(T);

                function w(e) {
                    return n("".concat(e).concat(m))
                }
                return "".concat(f, "&c_signature=").concat(I)
            }
        };
    module.exports = g;
});
define("https/HttpBase.js", function(require, module, exports, window, document, frames, self, location, navigator, localStorage, history, Caches, screen, alert, confirm, prompt, XMLHttpRequest, WebSocket, Reporter, webkit, WeixinJSCore) {
    "use strict";
    var e = require("../@babel/runtime/helpers/objectSpread2");
    require("../@babel/runtime/helpers/Arrayincludes");
    var t = new(require("../utils/logger"))({
            pageName: "HTTP",
            emonitorLogEnable: !0,
            wxLogEnable: !0,
            aegisLogEnable: !0
        }),
        r = ["https://report.meeting.tencent.com/api/data-report", "https://report-test.meeting.tencent.com/api/data-report"],
        n = {get: function(t) {
                var r = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {};
                return this.request(t, e(e({}, r), {}, {
                    method: "GET"
                }))
            },
            post: function(t, r) {
                return this.request(t, e(e({}, r), {}, {
                    method: "POST"
                }))
            },
            request: function(n, o) {
                var a = o.method,
                    i = void 0 === a ? "GET" : a,
                    c = o.data,
                    s = void 0 === c ? {} : c,
                    u = o.header,
                    d = void 0 === u ? {} : u,
                    p = {
                        "content-type": "application/json"
                    },
                    l = {};
                return new Promise((function(o, a) {
                    var c = function(e) {
                        return !r.includes(e)
                    }(n);
                    c && t.info("[".concat(i, "][request] url = ").concat(n, ", data = ").concat(JSON.stringify(s))), wx.request({
                        url: n,
                        method: i,
                        data: e(e({}, l), s),
                        header: e(e({}, p), d),
                        success: function(e) {
                            if (c) try {
                                t.info("[".concat(i, "][response][succeed] ").concat(JSON.stringify(e)))
                            } catch (e) {
                                t.error("print success resp failed: ".concat(e.message))
                            }
                            o(e)
                        },
                        fail: function(e) {
                            if (c) try {
                                t.error("[".concat(i, "][response][failed] ").concat(JSON.stringify(e)))
                            } catch (e) {
                                t.error("print err failed: ".concat(e.message))
                            }
                            a(e)
                        }
                    })
                }))
            }
        };
    module.exports = n;
});
define("https/PrivateMeetingHttps.js", function(require, module, exports, window, document, frames, self, location, navigator, localStorage, history, Caches, screen, alert, confirm, prompt, XMLHttpRequest, WebSocket, Reporter, webkit, WeixinJSCore) {
    "use strict";
    var e = require("./CGI"),
        t = {
            getMeetingInfo: function() {
                var t = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {},
                    n = t.cgiToken,
                    o = t.openId,
                    r = t.meetingCode;
                if (!r) return Promise.reject(Error("meetingCode is undefined"));
                var i = {
                        open_id: o,
                        meeting_code: r,
                        cgi_token: n
                    },
                    c = "".concat(e.APIS.GET_PRIVATE_MEETING_INFO, "?").concat(e.getReuqestCommonParams());
                return e.post(c, {
                    data: i
                })
            },
            isMeetingCollected: function(t) {
                if (!(t || {}).meeting_code) return Promise.reject({
                    code: "999999999",
                    errmsg: "isMeetingCollected failed: meetingCode is required"
                });
                var n = "".concat(e.APIS.WEMEET_GET_MEETING_INFO, "?").concat(e.getReuqestCommonParams(t));
                return e.post(n, {
                    data: t
                })
            },
            collectMeeting: function(t) {
                if (!(t || {}).meeting_id) return Promise.reject({
                    code: "999999999",
                    errmsg: "collectMeeting failed: meetingID is required"
                });
                var n = "".concat(e.APIS.COLLECT_MEETING, "?").concat(e.getReuqestCommonParams(t));
                return e.post(n, {
                    data: t
                })
            }
        };
    module.exports = t;
});
define("https/UserHttps.js", function(require, module, exports, window, document, frames, self, location, navigator, localStorage, history, Caches, screen, alert, confirm, prompt, XMLHttpRequest, WebSocket, Reporter, webkit, WeixinJSCore) {
    "use strict";
    var e = require("../@babel/runtime/helpers/objectSpread2"),
        t = require("./HttpBase"),
        r = require("../stores/UserStore"),
        o = require("../stores/AppStore"),
        n = require("./CGI"),
        a = require("../utils/base64").Base64,
        c = {
            wemeetLogin: function(e) {
                var t = "".concat(o.getWeMeetDomain()).concat(n.APIS.MP_LOGIN);
                return e ? n.get(t, {
                    data: {
                        auth_code: e,
                        wx_appid: o.getWeixinMiniprogramAppId(),
                        instance_id: o.getInstanceId()
                    }
                }) : Promise.reject({
                    code: "999999999",
                    errmsg: "code is undefined"
                })
            },
            getPhoneNumber: function(e, t) {
                var a = r.getOpenID(),
                    c = r.getCGIToken(),
                    i = "".concat(o.getWeMeetDomain()).concat(n.APIS.GET_PHONE);
                return n.post(i, {
                    data: {
                        userid: a,
                        wemeet_cgi_token: c,
                        encrypted_data: e,
                        iv: t,
                        wx_appid: o.getWeixinMiniprogramAppId(),
                        instance_id: o.getInstanceId()
                    }
                })
            },
            getAuthCodeForLogin: function(e) {
                var t = "".concat(n.APIS.AUTH_LOGIN, "?").concat(n.getReuqestCommonParams(e));
                return n.post(t, {
                    data: e
                })
            },
            getAuthCodeForRegister: function(t) {
                var r = "".concat(n.APIS.AUTH_LOGIN, "?").concat(n.getReuqestCommonParams(t));
                return n.post(r, {
                    data: e({}, t)
                })
            },
            registerPhone: function(e) {
                var t = e.area,
                    r = e.phone,
                    o = e.code,
                    a = e.auth_code;
                if (t || (console.warn('no "area" provided, set to 86 as default'), e.area = "86"), !a) return Promise.reject({
                    code: "999999999",
                    errmsg: "auth_code is required"
                });
                if (!r || !o) return Promise.reject({
                    code: "999999999",
                    errmsg: "phone&code is required"
                });
                var c = "".concat(n.APIS.WECHAT_BIND_PHONE, "?").concat(n.getReuqestCommonParams(e));
                return n.post(c, {
                    data: e
                })
            },
            loginUsingAuthCode: function(e) {
                var t = e.auth_code,
                    r = e.identity_type,
                    o = e.corp_id;
                if (!t) return Promise.reject({
                    code: "999999999",
                    errmsg: "auth_code is required"
                });
                if (1 !== r && 2 !== r) return Promise.reject({
                    code: "999999999",
                    errmsg: "identity_type is illegal: ".concat(r)
                });
                if (2 === r && !o) return Promise.reject({
                    code: "999999999",
                    errmsg: "corp_id is required when enterprise account is choosen"
                });
                var a = "".concat(n.APIS.AUTH_CODE, "?").concat(n.getReuqestCommonParams(e));
                return n.post(a, {
                    data: e
                })
            },
            refreshWeMeetLoginToken: function(e) {
                var t = e.refresh_token;
                if (0 !== t && 1 !== t) return Promise.reject({
                    code: "999999999",
                    errmsg: "refreshToken is supposed to be 1 or 2, but got ".concat(t)
                });
                var r = "".concat(n.APIS.REFRESH_TOKEN, "?").concat(n.getReuqestCommonParams(e));
                return n.post(r, {
                    data: e
                })
            },
            getCaptcha: function(e) {
                var t = "".concat(n.APIS.SEND_PHONE_CODE, "?").concat(n.getReuqestCommonParams(e));
                return n.post(t, {
                    data: e
                })
            },
            wemeetLogout: function() {
                var e = "".concat(n.APIS.WEMEET_LOGOUT, "?").concat(n.getReuqestCommonParams());
                return n.get(e)
            },
            getVirtualCard: function(e) {
                var t = "".concat(n.APIS.GET_VIRTUAL_CARD, "?").concat(n.getReuqestCommonParams(e));
                return n.post(t, {
                    data: e
                })
            },
            getUserSubscribeStatus: function(e) {
                var r = "".concat(o.getHttpCgi(), "/account/mini-program/subscribe-status");
                return e ? t.post(r, {
                    data: e
                }) : Promise.reject({
                    code: "999999999",
                    errmsg: "data is undefined"
                })
            },
            queryMeetingSimpleInfo: function(e) {
                if (!e) return Promise.reject({
                    code: "999999999",
                    errmsg: "meetingInfo is required"
                });
                var t = {
                    access_url: a.encode(e.url),
                    meeting_code: e.meetingCode
                };
                return n.post(n.APIS.QUERY_MEETING_SIMPLE_INFO, {
                    data: t
                })
            },
            isVirtualCardObtained: function(e) {
                return n.post(n.APIS.IS_VIRTUAL_CARD_OBTAINED, {
                    data: e
                })
            },
            getUserReddot: function(e) {
                var t = "".concat(n.APIS.GET_RED_DOT, "?").concat(n.getReuqestCommonParams(e, !0));
                return e ? n.post(t, {
                    data: e
                }) : Promise.reject({
                    code: "999999999",
                    errmsg: "data is undefined"
                })
            },
            resetUserReddot: function(e) {
                var t = "".concat(n.APIS.RESET_RED_DOT, "?").concat(n.getReuqestCommonParams(e, !0));
                return e ? n.post(t, {
                    data: e
                }) : Promise.reject({
                    code: "999999999",
                    errmsg: "data is undefined"
                })
            },
            checkStudent: function(e) {
                var t = "".concat(n.APIS.CHECK_STUDENT, "?").concat(n.getReuqestCommonParams(e, !0));
                return n.post(t, {
                    data: e
                })
            },
            checkStudentActivity: function(e) {
                var t = "".concat(n.APIS.CHECK_STUDENT_ACTIVITY, "?").concat(n.getReuqestCommonParams(e, !0));
                return n.post(t, {
                    data: e
                })
            },
            checkStudentIdentityLimit: function(e) {
                var t = "".concat(n.APIS.CHECK_STUDENT_IDENTITY_LIMIT, "?").concat(n.getReuqestCommonParams(e, !0));
                return n.post(t, {
                    data: e
                })
            },
            getAbilityConfig: function(e) {
                var t = "".concat(n.APIS.ABILITY_CONFIG, "?").concat(n.getReuqestCommonParams(e, !0));
                return n.post(t, {
                    data: e
                })
            }
        };
    module.exports = c;
});
define("https/beaconNewHttps.js", function(require, module, exports, window, document, frames, self, location, navigator, localStorage, history, Caches, screen, alert, confirm, prompt, XMLHttpRequest, WebSocket, Reporter, webkit, WeixinJSCore) {
    "use strict";
    var e = require("./HttpBase"),
        t = require("../stores/AppStore"),
        r = new(require("../utils/logger"))({
            pageName: "BeaconNewHttps",
            aegisLogEnable: !0,
            wxLogEnable: !0
        }),
        n = "https://report.meeting.tencent.com/api/data-report",
        o = "https://report-test.meeting.tencent.com/api/data-report",
        a = {
            report: function() {
                var a = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : "",
                    i = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {},
                    p = (new Date).getTime(),
                    c = {
                        event_code: a,
                        event_value: i,
                        event_time: p
                    },
                    s = "production" === t.getCurrEnvKey() ? n : o;
                return e.post(s, {
                    data: {
                        event_params: [c],
                        report_flag: 3,
                        report_cmd: "cmd_prod_old_atta",
                        request_time: p,
                        client_ip: null
                    }
                }).then((function() {
                    var e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {},
                        t = e.data;
                    if (0 !== t.ret_code) throw t
                })).catch((function(e) {
                    r.warn("BeaconNewHttps report err: ".concat(JSON.stringify(e))), r.reportEvent("BeaconNewHttps report err", {
                        ext1: "err: ".concat(JSON.stringify(e))
                    })
                }))
            }
        };
    module.exports = a;
});
define("miniprogram_npm/@tencentcloud/chat/index.js", function(require, module, exports, window, document, frames, self, location, navigator, localStorage, history, Caches, screen, alert, confirm, prompt, XMLHttpRequest, WebSocket, Reporter, webkit, WeixinJSCore) {
    "use strict";
    require("../../../@babel/runtime/helpers/Objectvalues"), require("../../../@babel/runtime/helpers/Arrayincludes");
    var e, t, n = require("../../../@babel/runtime/helpers/typeof");
    module.exports = (e = {}, t = function(t, o) {
        if (!e[t]) return require(o);
        if (!e[t].status) {
            var i = e[t].m;
            i._exports = i._tempexports;
            var a = Object.getOwnPropertyDescriptor(i, "exports");
            a && a.configurable && Object.defineProperty(i, "exports", {set: function(e) {
                    "object" === n(e) && e !== i._exports && (i._exports.__proto__ = e.__proto__, Object.keys(e).forEach((function(t) {
                        i._exports[t] = e[t]
                    }))), i._tempexports = e
                },
                get: function() {
                    return i._tempexports
                }
            }), e[t].status = 1, e[t].func(e[t].req, i, i.exports)
        }
        return e[t].m.exports
    }, function(t, n, o) {
        e[t] = {
            status: 0,
            func: n,
            req: o,
            m: {
                exports: {},
                _tempexports: {}
            }
        }
    }(1735023415013, (function(e, t, o) {
        ! function(e, i) {
            "object" == n(o) && void 0 !== t ? t.exports = i() : "function" == typeof define && define.amd ? define(i) : (e = "undefined" != typeof globalThis ? globalThis : e || self).TencentCloudChat = i()
        }(this, (function() {
            function e(e, t) {
                var n, o = Object.keys(e);
                return Object.getOwnPropertySymbols && (n = Object.getOwnPropertySymbols(e), t && (n = n.filter((function(t) {
                    return Object.getOwnPropertyDescriptor(e, t).enumerable
                }))), o.push.apply(o, n)), o
            }

            function t(t) {
                for (var n = 1; n < arguments.length; n++) {
                    var o = null != arguments[n] ? arguments[n] : {};
                    n % 2 ? e(Object(o), !0).forEach((function(e) {
                        r(t, e, o[e])
                    })) : Object.getOwnPropertyDescriptors ? Object.defineProperties(t, Object.getOwnPropertyDescriptors(o)) : e(Object(o)).forEach((function(e) {
                        Object.defineProperty(t, e, Object.getOwnPropertyDescriptor(o, e))
                    }))
                }
                return t
            }

            function o(e) {
                return (o = "function" == typeof Symbol && "symbol" == n(Symbol.iterator) ? function(e) {
                    return n(e)
                } : function(e) {
                    return e && "function" == typeof Symbol && e.constructor === Symbol && e !== Symbol.prototype ? "symbol" : n(e)
                })(e)
            }

            function i(e, t) {
                if (!(e instanceof t)) throw new TypeError("Cannot call a class as a function")
            }

            function a(e, t) {
                for (var n = 0; n < t.length; n++) {
                    var o = t[n];
                    o.enumerable = o.enumerable || !1, o.configurable = !0, "value" in o && (o.writable = !0), Object.defineProperty(e, o.key, o)
                }
            }

            function s(e, t, n) {
                return t && a(e.prototype, t), n && a(e, n), Object.defineProperty(e, "prototype", {
                    writable: !1
                }), e
            }

            function r(e, t, n) {
                return t in e ? Object.defineProperty(e, t, {
                    value: n,
                    enumerable: !0,
                    configurable: !0,
                    writable: !0
                }) : e[t] = n, e
            }

            function c(e, t) {
                if ("function" != typeof t && null !== t) throw new TypeError("Super expression must either be null or a function");
                e.prototype = Object.create(t && t.prototype, {
                    constructor: {
                        value: e,
                        writable: !0,
                        configurable: !0
                    }
                }), Object.defineProperty(e, "prototype", {
                    writable: !1
                }), t && l(e, t)
            }

            function u(e) {
                return (u = Object.setPrototypeOf ? Object.getPrototypeOf : function(e) {
                    return e.__proto__ || Object.getPrototypeOf(e)
                })(e)
            }

            function l(e, t) {
                return (l = Object.setPrototypeOf || function(e, t) {
                    return e.__proto__ = t, e
                })(e, t)
            }

            function d() {
                if ("undefined" == typeof Reflect || !Reflect.construct) return !1;
                if (Reflect.construct.sham) return !1;
                if ("function" == typeof Proxy) return !0;
                try {
                    return Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], (function() {}))), !0
                } catch (e) {
                    return !1
                }
            }

            function p(e, t, n) {
                return (p = d() ? Reflect.construct : function(e, t, n) {
                    var o = [null];
                    return o.push.apply(o, t), t = new(Function.bind.apply(e, o)), n && l(t, n.prototype), t
                }).apply(null, arguments)
            }

            function _(e, t) {
                if (null == e) return {};
                var n, o = function(e, t) {
                    if (null == e) return {};
                    for (var n, o = {}, i = Object.keys(e), a = 0; a < i.length; a++) n = i[a], 0 <= t.indexOf(n) || (o[n] = e[n]);
                    return o
                }(e, t);
                if (Object.getOwnPropertySymbols)
                    for (var i = Object.getOwnPropertySymbols(e), a = 0; a < i.length; a++) n = i[a], 0 <= t.indexOf(n) || Object.prototype.propertyIsEnumerable.call(e, n) && (o[n] = e[n]);
                return o
            }

            function h(e) {
                if (void 0 === e) throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
                return e
            }

            function g(e) {
                var t = d();
                return function() {
                    var o, i = u(e);
                    if (o = t ? (o = u(this).constructor, Reflect.construct(i, arguments, o)) : i.apply(this, arguments), i = this, o && ("object" == n(o) || "function" == typeof o)) return o;
                    if (void 0 !== o) throw new TypeError("Derived constructors may only return object or undefined");
                    return h(i)
                }
            }

            function f(e, t) {
                return v(e) || function(e, t) {
                    var n = null == e ? null : "undefined" != typeof Symbol && e[Symbol.iterator] || e["@@iterator"];
                    if (null != n) {
                        var o, i, a = [],
                            s = !0,
                            r = !1;
                        try {
                            for (n = n.call(e); !(s = (o = n.next()).done) && (a.push(o.value), !t || a.length !== t); s = !0);
                        } catch (e) {
                            r = !0, i = e
                        } finally {
                            try {
                                s || null == n.return || n.return()
                            } finally {
                                if (r) throw i
                            }
                        }
                        return a
                    }
                }(e, t) || M(e, t) || C()
            }

            function m(e) {
                return function(e) {
                    if (Array.isArray(e)) return y(e)
                }(e) || I(e) || M(e) || function() {
                    throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")
                }()
            }

            function v(e) {
                if (Array.isArray(e)) return e
            }

            function I(e) {
                if ("undefined" != typeof Symbol && null != e[Symbol.iterator] || null != e["@@iterator"]) return Array.from(e)
            }

            function M(e, t) {
                if (e) {
                    if ("string" == typeof e) return y(e, t);
                    var n = Object.prototype.toString.call(e).slice(8, -1);
                    return "Map" === (n = "Object" === n && e.constructor ? e.constructor.name : n) || "Set" === n ? Array.from(e) : "Arguments" === n || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n) ? y(e, t) : void 0
                }
            }

            function y(e, t) {
                (null == t || t > e.length) && (t = e.length);
                for (var n = 0, o = new Array(t); n < t; n++) o[n] = e[n];
                return o
            }

            function C() {
                throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")
            }

            function T(e, t) {
                var n, o = "undefined" != typeof Symbol && e[Symbol.iterator] || e["@@iterator"];
                if (!o) {
                    if (Array.isArray(e) || (o = M(e)) || t && e && "number" == typeof e.length) return o && (e = o), n = 0, {
                        s: t = function() {},
                        n: function() {
                            return n >= e.length ? {
                                done: !0
                            } : {
                                done: !1,
                                value: e[n++]
                            }
                        },
                        e: function(e) {
                            throw e
                        },
                        f: t
                    };
                    throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")
                }
                var i, a = !0,
                    s = !1;
                return {
                    s: function() {
                        o = o.call(e)
                    },
                    n: function() {
                        var e = o.next();
                        return a = e.done, e
                    },
                    e: function(e) {
                        s = !0, i = e
                    },
                    f: function() {
                        try {
                            a || null == o.return || o.return()
                        } finally {
                            if (s) throw i
                        }
                    }
                }
            }
            var D = {
                    SDK_READY: "sdkStateReady",
                    SDK_NOT_READY: "sdkStateNotReady",
                    SDK_DESTROY: "sdkDestroy",
                    MESSAGE_RECEIVED: "onMessageReceived",
                    ROOM_CUSTOM_DATA_RECEIVED: "onRoomCustomDataReceived",
                    MESSAGE_MODIFIED: "onMessageModified",
                    MESSAGE_REVOKED: "onMessageRevoked",
                    MESSAGE_READ_BY_PEER: "onMessageReadByPeer",
                    MESSAGE_READ_RECEIPT_RECEIVED: "onMessageReadReceiptReceived",
                    MESSAGE_EXTENSIONS_UPDATED: "onMessageExtensionsUpdated",
                    MESSAGE_EXTENSIONS_DELETED: "onMessageExtensionsDeleted",
                    MESSAGE_REACTIONS_UPDATED: "onMessageReactionsUpdated",
                    CONVERSATION_LIST_UPDATED: "onConversationListUpdated",
                    TOTAL_UNREAD_MESSAGE_COUNT_UPDATED: "onTotalUnreadMessageCountUpdated",
                    CONVERSATION_GROUP_LIST_UPDATED: "onConversationGroupListUpdated",
                    CONVERSATION_IN_GROUP_UPDATED: "onConversationInGroupUpdated",
                    GROUP_LIST_UPDATED: "onGroupListUpdated",
                    GROUP_ATTRIBUTES_UPDATED: "groupAttributesUpdated",
                    GROUP_COUNTER_UPDATED: "onGroupCounterUpdated",
                    TOPIC_CREATED: "onTopicCreated",
                    TOPIC_DELETED: "onTopicDeleted",
                    TOPIC_UPDATED: "onTopicUpdated",
                    PROFILE_UPDATED: "onProfileUpdated",
                    USER_STATUS_UPDATED: "onUserStatusUpdated",
                    BLACKLIST_UPDATED: "blacklistUpdated",
                    FRIEND_LIST_UPDATED: "onFriendListUpdated",
                    FRIEND_GROUP_LIST_UPDATED: "onFriendGroupListUpdated",
                    FRIEND_APPLICATION_LIST_UPDATED: "onFriendApplicationListUpdated",
                    MY_FOLLOWERS_LIST_UPDATED: "onMyFollowersListUpdated",
                    MY_FOLLOWING_LIST_UPDATED: "onMyFollowingListUpdated",
                    MUTUAL_FOLLOWERS_LIST_UPDATED: "onMutualFollowersListUpdated",
                    KICKED_OUT: "kickedOut",
                    ERROR: "error",
                    NET_STATE_CHANGE: "netStateChange",
                    ALL_RECEIVE_MESSAGE_OPT_UPDATED: "onAllReceiveMessageOptUpdated"
                },
                E = {
                    MSG_TEXT: "TIMTextElem",
                    MSG_IMAGE: "TIMImageElem",
                    MSG_SOUND: "TIMSoundElem",
                    MSG_AUDIO: "TIMSoundElem",
                    MSG_FILE: "TIMFileElem",
                    MSG_FACE: "TIMFaceElem",
                    MSG_VIDEO: "TIMVideoFileElem",
                    MSG_GEO: "TIMLocationElem",
                    MSG_LOCATION: "TIMLocationElem",
                    MSG_GRP_TIP: "TIMGroupTipElem",
                    MSG_GRP_SYS_NOTICE: "TIMGroupSystemNoticeElem",
                    MSG_CUSTOM: "TIMCustomElem",
                    MSG_MERGER: "TIMRelayElem",
                    MSG_PRIORITY_HIGH: "High",
                    MSG_PRIORITY_NORMAL: "Normal",
                    MSG_PRIORITY_LOW: "Low",
                    MSG_PRIORITY_LOWEST: "Lowest",
                    CONV_C2C: "C2C",
                    CONV_GROUP: "GROUP",
                    CONV_TOPIC: "TOPIC",
                    CONV_SYSTEM: "@TIM#SYSTEM",
                    CONV_AT_ME: 1,
                    CONV_AT_ALL: 2,
                    CONV_AT_ALL_AT_ME: 3,
                    CONV_MARK_TYPE_STAR: 1,
                    CONV_MARK_TYPE_UNREAD: 2,
                    CONV_MARK_TYPE_FOLD: 4,
                    CONV_MARK_TYPE_HIDE: 8,
                    GRP_PRIVATE: "Private",
                    GRP_WORK: "Private",
                    GRP_PUBLIC: "Public",
                    GRP_CHATROOM: "ChatRoom",
                    GRP_MEETING: "ChatRoom",
                    GRP_AVCHATROOM: "AVChatRoom",
                    GRP_COMMUNITY: "Community",
                    GRP_ROOM: "Room",
                    GRP_LIVE: "Live",
                    GRP_MBR_ROLE_OWNER: "Owner",
                    GRP_MBR_ROLE_ADMIN: "Admin",
                    GRP_MBR_ROLE_MEMBER: "Member",
                    GRP_MBR_ROLE_CUSTOM: "Custom",
                    GRP_TIP_MBR_JOIN: 1,
                    GRP_TIP_MBR_QUIT: 2,
                    GRP_TIP_MBR_KICKED_OUT: 3,
                    GRP_TIP_MBR_SET_ADMIN: 4,
                    GRP_TIP_MBR_CANCELED_ADMIN: 5,
                    GRP_TIP_GRP_PROFILE_UPDATED: 6,
                    GRP_TIP_MBR_PROFILE_UPDATED: 7,
                    GRP_TIP_BAN_AVCHATROOM_MEMBER: 10,
                    GRP_TIP_UNBAN_AVCHATROOM_MEMBER: 11,
                    MSG_REMIND_ACPT_AND_NOTE: "AcceptAndNotify",
                    MSG_REMIND_ACPT_NOT_NOTE: "AcceptNotNotify",
                    MSG_REMIND_DISCARD: "Discard",
                    RECEIVE_WITH_OFFLINE_PUSH_EXCEPT_AT: "AcceptNotNotifyExceptAt",
                    NOT_RECEIVE_OFFLINE_PUSH_EXCEPT_AT: "AcceptNotNotifyExceptAt",
                    NOT_RECEIVE_MSG_EXCEPT_AT: "NotReceiveMsgExceptAt",
                    GENDER_UNKNOWN: "Gender_Type_Unknown",
                    GENDER_FEMALE: "Gender_Type_Female",
                    GENDER_MALE: "Gender_Type_Male",
                    KICKED_OUT_MULT_ACCOUNT: "multipleAccount",
                    KICKED_OUT_MULT_DEVICE: "multipleDevice",
                    KICKED_OUT_USERSIG_EXPIRED: "userSigExpired",
                    KICKED_OUT_REST_API: "REST_API_Kick",
                    ALLOW_TYPE_ALLOW_ANY: "AllowType_Type_AllowAny",
                    ALLOW_TYPE_NEED_CONFIRM: "AllowType_Type_NeedConfirm",
                    ALLOW_TYPE_DENY_ANY: "AllowType_Type_DenyAny",
                    FORBID_TYPE_NONE: "AdminForbid_Type_None",
                    FORBID_TYPE_SEND_OUT: "AdminForbid_Type_SendOut",
                    JOIN_OPTIONS_FREE_ACCESS: "FreeAccess",
                    JOIN_OPTIONS_NEED_PERMISSION: "NeedPermission",
                    JOIN_OPTIONS_DISABLE_APPLY: "DisableApply",
                    JOIN_STATUS_SUCCESS: "JoinedSuccess",
                    JOIN_STATUS_ALREADY_IN_GROUP: "AlreadyInGroup",
                    JOIN_STATUS_WAIT_APPROVAL: "WaitAdminApproval",
                    INVITE_OPTIONS_DISABLE_INVITE: "DisableInvite",
                    INVITE_OPTIONS_NEED_PERMISSION: "NeedPermission",
                    INVITE_OPTIONS_FREE_ACCESS: "FreeAccess",
                    GRP_PROFILE_OWNER_ID: "ownerID",
                    GRP_PROFILE_CREATE_TIME: "createTime",
                    GRP_PROFILE_LAST_INFO_TIME: "lastInfoTime",
                    GRP_PROFILE_MEMBER_NUM: "memberNum",
                    GRP_PROFILE_MAX_MEMBER_NUM: "maxMemberNum",
                    GRP_PROFILE_JOIN_OPTION: "joinOption",
                    GRP_PROFILE_INVITE_OPTION: "inviteOption",
                    GRP_PROFILE_INTRODUCTION: "introduction",
                    GRP_PROFILE_NOTIFICATION: "notification",
                    GRP_PROFILE_MUTE_ALL_MBRS: "muteAllMembers",
                    SNS_ADD_TYPE_SINGLE: "Add_Type_Single",
                    SNS_ADD_TYPE_BOTH: "Add_Type_Both",
                    SNS_DELETE_TYPE_SINGLE: "Delete_Type_Single",
                    SNS_DELETE_TYPE_BOTH: "Delete_Type_Both",
                    SNS_APPLICATION_TYPE_BOTH: "Pendency_Type_Both",
                    SNS_APPLICATION_SENT_TO_ME: "Pendency_Type_ComeIn",
                    SNS_APPLICATION_SENT_BY_ME: "Pendency_Type_SendOut",
                    SNS_APPLICATION_AGREE: "Response_Action_Agree",
                    SNS_APPLICATION_AGREE_AND_ADD: "Response_Action_AgreeAndAdd",
                    SNS_CHECK_TYPE_BOTH: "CheckResult_Type_Both",
                    SNS_CHECK_TYPE_SINGLE: "CheckResult_Type_Single",
                    SNS_TYPE_NO_RELATION: "CheckResult_Type_NoRelation",
                    SNS_TYPE_A_WITH_B: "CheckResult_Type_AWithB",
                    SNS_TYPE_B_WITH_A: "CheckResult_Type_BWithA",
                    SNS_TYPE_BOTH_WAY: "CheckResult_Type_BothWay",
                    NET_STATE_CONNECTED: "connected",
                    NET_STATE_CONNECTING: "connecting",
                    NET_STATE_DISCONNECTED: "disconnected",
                    MSG_AT_ALL: "__kImSDK_MesssageAtALL__",
                    READ_ALL_C2C_MSG: "readAllC2CMessage",
                    READ_ALL_GROUP_MSG: "readAllGroupMessage",
                    READ_ALL_MSG: "readAllMessage",
                    USER_STATUS_UNKNOWN: 0,
                    USER_STATUS_ONLINE: 1,
                    USER_STATUS_OFFLINE: 2,
                    USER_STATUS_UNLOGINED: 3,
                    IOS_OFFLINE_PUSH_NO_SOUND: "push.no_sound",
                    IOS_OFFLINE_PUSH_DEFAULT_SOUND: "default"
                },
                L = {
                    NEW_INVITATION_RECEIVED: "newInvitationReceived",
                    INVITEE_ACCEPTED: "ts_invitee_accepted",
                    INVITEE_REJECTED: "ts_invitee_rejected",
                    INVITATION_CANCELLED: "ts_invitation_cancelled",
                    INVITATION_TIMEOUT: "ts_invitation_timeout",
                    INVITATION_MODIFIED: "ts_invitation_modified",
                    ACTION_TYPE_UNKNOWN: 0,
                    ACTION_TYPE_INVITE: 1,
                    ACTION_TYPE_CANCEL_INVITE: 2,
                    ACTION_TYPE_ACCEPT_INVITE: 3,
                    ACTION_TYPE_REJECT_INVITE: 4,
                    ACTION_TYPE_INVITE_TIMEOUT: 5
                },
                S = (s(x, [{
                    key: "use",
                    value: function(e) {
                        if ("function" != typeof e) throw "middleware must be a function";
                        return this.cache.push(e), this
                    }
                }, {
                    key: "next",
                    value: function(e) {
                        if (this.middlewares && 0 < this.middlewares.length) return this.middlewares.shift().call(this, this.options, this.next.bind(this))
                    }
                }, {
                    key: "run",
                    value: function(e) {
                        return this.middlewares = this.cache.map((function(e) {
                            return e
                        })), this.options = e, this.next()
                    }
                }]), x),
                k = (s(q, [{
                    key: "equal",
                    value: function(e) {
                        return null !== e && this.low === e.low && this.high === e.high
                    }
                }, {
                    key: "toString",
                    value: function() {
                        var e = Number(this.high).toString(16),
                            t = Number(this.low).toString(16);
                        if (t.length < 8)
                            for (var n = 8 - t.length; n;) t = "0" + t, n--;
                        return e + t
                    }
                }]), q),
                A = {
                    TEST: {
                        CHINA: {
                            DEFAULT: "wss://wss-dev.tim.qq.com"
                        },
                        OVERSEA: {
                            DEFAULT: "wss://wss-dev.tim.qq.com"
                        },
                        SINGAPORE: {
                            DEFAULT: "wss://wsssgp-dev.im.qcloud.com"
                        },
                        KOREA: {
                            DEFAULT: "wss://wsskr-dev.im.qcloud.com"
                        },
                        GERMANY: {
                            DEFAULT: "wss://wssger-dev.im.qcloud.com"
                        },
                        IND: {
                            DEFAULT: "wss://wssind-dev.im.qcloud.com"
                        },
                        JPN: {
                            DEFAULT: "wss://wssjpn-dev.im.qcloud.com"
                        },
                        USA: {
                            DEFAULT: "wss://wssusa-dev.im.qcloud.com"
                        },
                        INDONESIA: {
                            DEFAULT: "wss://wssidn-dev.im.qcloud.com"
                        }
                    },
                    PRODUCTION: {
                        CHINA: {
                            DEFAULT: "wss://wss.im.qcloud.com",
                            BACKUP: "wss://wss.tim.qq.com",
                            STAT: "https://events.im.qcloud.com",
                            ANYCAST: "wss://162.14.13.203"
                        },
                        OVERSEA: {
                            DEFAULT: "wss://wss.im.qcloud.com",
                            BACKUP: "wss://wss.my-imcloud.com",
                            STAT: "https://api.my-imcloud.com"
                        },
                        SINGAPORE: {
                            DEFAULT: "wss://wsssgp.im.qcloud.com",
                            BACKUP: "wss://wsssgp.my-imcloud.com",
                            STAT: "https://apisgp.my-imcloud.com",
                            ANYCAST: "wss://162.14.19.159"
                        },
                        KOREA: {
                            DEFAULT: "wss://wsskr.im.qcloud.com",
                            BACKUP: "wss://wsskr.my-imcloud.com",
                            STAT: "https://apikr.my-imcloud.com",
                            ANYCAST: "wss://162.14.13.104"
                        },
                        GERMANY: {
                            DEFAULT: "wss://wssger.im.qcloud.com",
                            BACKUP: "wss://wssger.my-imcloud.com",
                            STAT: "https://apiger.my-imcloud.com",
                            ANYCAST: "wss://162.14.3.17"
                        },
                        IND: {
                            DEFAULT: "wss://wssind.my-imcloud.com",
                            BACKUP: "wss://wssind.im.qcloud.com",
                            STAT: "https://apiind.my-imcloud.com",
                            ANYCAST: "wss://162.14.18.188"
                        },
                        JPN: {
                            DEFAULT: "wss://wssjpn.im.qcloud.com",
                            BACKUP: "wss://wssjpn.my-imcloud.com",
                            STAT: "https://apijpn.my-imcloud.com"
                        },
                        USA: {
                            DEFAULT: "wss://wssusa.im.qcloud.com",
                            BACKUP: "wss://wssusa.my-imcloud.com",
                            STAT: "https://apiusa.my-imcloud.com",
                            ANYCAST: "wss://162.14.10.42"
                        },
                        INDONESIA: {
                            DEFAULT: "wss://wssidn.im.qcloud.com",
                            BACKUP: "wss://wssidn.my-imcloud.com",
                            STAT: "https://apiidn.my-imcloud.com",
                            ANYCAST: "wss://43.129.34.169"
                        }
                    }
                },
                R = {
                    ANDROID: 2,
                    IOS: 3,
                    MAC: 4,
                    WEB: 7,
                    WX_MP: 8,
                    QQ_MP: 9,
                    TT_MP: 10,
                    BAIDU_MP: 11,
                    ALI_MP: 12,
                    IPAD: 13,
                    UNI_NATIVE_APP: 15,
                    DONUT_NATIVE_APP: 19,
                    NS_NATIVE_APP: 20,
                    RN_NATIVE_APP: 21
                },
                O = "1.7.3",
                N = 537048168,
                G = "CHINA",
                P = {
                    HOST: {
                        CURRENT: {
                            DEFAULT: "wss://wss.im.qcloud.com",
                            STAT: "https://events.im.qcloud.com"
                        },
                        setCurrent: function() {
                            this.CURRENT = A.PRODUCTION[0 < arguments.length && void 0 !== arguments[0] ? arguments[0] : G]
                        }
                    },
                    NAME: {
                        OPEN_IM: "openim",
                        OPEN_IM_MSG_EXT: "openim_msg_ext_http_svc",
                        GRP: "group_open_http_svc",
                        GRP_AV: "group_open_avchatroom_http_svc",
                        GRP_COMMUNITY: "million_group_open_http_svc",
                        GRP_ATTR: "group_open_attr_http_svc",
                        FD: "sns",
                        PROFILE: "profile",
                        RECENT_CONTACT: "recentcontact",
                        PIC: "openpic",
                        BIG_GRP_NO_AUTH: "group_open_http_noauth_svc",
                        BIG_GRP_POLLING: "group_open_long_polling_http_svc",
                        BIG_GRP_POLLING_NO_AUTH: "group_open_long_polling_http_noauth_svc",
                        IM_OPEN_STAT: "imopenstat",
                        WEB_IM: "webim",
                        IM_COS_SIGN: "im_cos_sign_svr",
                        CUSTOM_UPLOAD: "im_cos_msg",
                        HEARTBEAT: "heartbeat",
                        IM_OPEN_PUSH: "im_open_push",
                        IM_OPEN_STATUS: "im_open_status",
                        IM_LONG_MSG: "im_long_msg",
                        IM_CONFIG_MANAGER: "im_sdk_config_mgr",
                        STAT_SERVICE: "StatSvc",
                        OVERLOAD_PUSH: "OverLoadPush",
                        IM_MSG_AUDIT_MGR: "im_msg_audit_mgr",
                        TUIROOM_SVR: "tui_room_svr",
                        IM_OPEN_TRANSLATE: "im_open_translate",
                        IM_OPEN_SPEECH: "im_open_speech",
                        MSG_SEARCH: "message_search",
                        FOLLOW: "follow",
                        OFFLINE_PUSH_REPORT: "offline_push_report",
                        IM_MSG_LOGIC: "im_msg_db_logic"
                    }
                },
                U = {
                    SEARCH_GRP_SNS: new k(0, Math.pow(2, 1)).toString(),
                    AV_HISTORY_MSG: new k(0, Math.pow(2, 2)).toString(),
                    GRP_COMMUNITY: new k(0, Math.pow(2, 3)).toString(),
                    MSG_TO_SPECIFIED_GRP_MBR: new k(0, Math.pow(2, 4)).toString(),
                    AV_MBR_LIST: new k(0, Math.pow(2, 6)).toString(),
                    USER_STATUS: new k(0, Math.pow(2, 7)).toString(),
                    CONV_MARK: new k(0, Math.pow(2, 9)).toString(),
                    CONV_GROUP: new k(0, Math.pow(2, 10)).toString(),
                    AV_BAN_MBR: new k(0, Math.pow(2, 11)).toString(),
                    MSG_EXT: new k(0, Math.pow(2, 13)).toString(),
                    GRP_COUNTER: new k(0, Math.pow(2, 15)).toString(),
                    PLUGIN_TRANSLATE: new k(Math.pow(2, 6)).toString(),
                    PLUGIN_VOICE_TO_TEXT: new k(Math.pow(2, 7)).toString(),
                    PLUGIN_CS: new k(Math.pow(2, 8)).toString(),
                    PLUGIN_PUSH: new k(Math.pow(2, 9)).toString(),
                    PLUGIN_BOT: new k(Math.pow(2, 10)).toString(),
                    MSG_REACTION: new k(Math.pow(2, 16)).toString(),
                    FOLLOW: new k(Math.pow(2, 20)).toString()
                },
                b = "group_profile",
                w = ["Type", "Name", "Introduction", "Notification", "FaceUrl", "Owner_Account", "CreateTime", "InfoSeq", "LastInfoTime", "LastMsgTime", "MemberNum", "MaxMemberNum", "ApplyJoinOption", "NextMsgSeq", "ShutUpAllMember", "InviteJoinOption"],
                F = ["Role", "JoinTime", "MsgSeq", "MsgFlag"];

            function q() {
                var e = 0 < arguments.length && void 0 !== arguments[0] ? arguments[0] : 0,
                    t = 1 < arguments.length && void 0 !== arguments[1] ? arguments[1] : 0;
                i(this, q), this.high = e, this.low = t
            }

            function x() {
                i(this, x), this.cache = [], this.options = null
            }
            P.HOST.setCurrent(G);
            for (var V, H = "undefined" != typeof wx && "function" == typeof wx.getSystemInfoSync && Boolean(wx.getSystemInfoSync().fontSizeSetting), B = H && "function" == typeof wx.createGamePortal, K = "undefined" != typeof qq && "function" == typeof qq.getSystemInfoSync && Boolean(qq.getSystemInfoSync().fontSizeSetting), Y = "undefined" != typeof tt && "function" == typeof tt.getSystemInfoSync && Boolean(tt.getSystemInfoSync().fontSizeSetting), W = "undefined" != typeof swan && "function" == typeof swan.getSystemInfoSync && Boolean(swan.getSystemInfoSync().fontSizeSetting), j = "undefined" != typeof my && "function" == typeof my.getSystemInfoSync && Boolean(my.getSystemInfoSync().fontSizeSetting), J = "undefined" != typeof jd && "function" == typeof jd.getSystemInfoSync, z = "undefined" != typeof uni && "undefined" == typeof window && "function" == typeof uni.requireNativePlugin, X = H && "object" === o(wx.miniapp), Z = "undefined" != typeof uni, Q = H || K || Y || W || j || z || J, $ = "undefined" == typeof window && !Q && "undefined" != typeof global && void 0 !== global.NativeScriptGlobals, ee = "undefined" != typeof global && void 0 !== global.nativeModuleProxy, te = "undefined" != typeof uni ? !Q : "undefined" != typeof window && !Q && !ee, ne = K ? qq : Y ? tt : W ? swan : j ? my : H ? wx : z ? uni : J ? jd : {}, oe = te && window && window.navigator && window.navigator.userAgent || "", ie = (J = "WEB", /(micromessenger|webbrowser)/i.test(oe) ? J = "WEB" : K ? J = "QQ_MP" : Y ? J = "TT_MP" : W ? J = "BAIDU_MP" : j ? J = "ALI_MP" : H ? J = X ? "DONUT_NATIVE_APP" : "WX_MP" : z ? J = "UNI_NATIVE_APP" : $ ? J = "NS_NATIVE_APP" : ee && (J = "RN_NATIVE_APP"), R[J]), ae = (X = /iPad/i.test(oe), $ = /iPhone/i.test(oe) && !X, J = /iPod/i.test(oe), $ || X || J), se = ($ = oe.match(/OS (\d+)_/i)) && $[1] ? $[1] : null, re = /Android/i.test(oe), ce = function() {
                    var e = oe.match(/Android (\d+)(?:\.(\d+))?(?:\.(\d+))*/i);
                    if (!e) return null;
                    var t = e[1] && parseFloat(e[1]),
                        n = e[2] && parseFloat(e[2]);
                    return t && n ? parseFloat(e[1] + "." + e[2]) : t || null
                }(), ue = (J = !(X = /Edge/i.test(oe)) && /Chrome/i.test(oe), /MSIE/.test(oe) || -1 < oe.indexOf("Trident") && -1 < oe.indexOf("rv:11.0")), le = $ = !($ = ($ = /MSIE\s(\d+)\.\d/.exec(oe)) && parseFloat($[1])) && /Trident\/7.0/i.test(oe) && /rv:11.0/.test(oe) ? 11 : $, de = /Safari/i.test(oe) && !J && !re && !X, pe = /Windows/i.test(oe), _e = /MAC OS X/i.test(oe), he = te && "undefined" != typeof Worker && !ue, ge = re || ae, fe = te && void 0 !== window.tencent_cloud_im_csig_flutter_for_web_25F_cy, me = function() {
                    if ("undefined" == typeof window || void 0 === window.navigator) return !1;
                    var e = window.navigator.standalone;
                    return !(!ae || e || de)
                }(), ve = "undefined" != typeof console ? console : "undefined" != typeof global && global.console ? global.console : "undefined" != typeof window && window.console ? window.console : {}, Ie = function() {}, Me = ["assert", "clear", "count", "debug", "dir", "dirxml", "error", "group", "groupCollapsed", "groupEnd", "info", "log", "profile", "profileEnd", "table", "time", "timeEnd", "timeStamp", "trace", "warn"], ye = Me.length; ye--;) V = Me[ye], console[V] || (ve[V] = Ie);

            function Ce() {
                var e = new Date;
                return e.setTime(Se()), e
            }

            function Te() {
                Le = 0
            }

            function De() {
                return Math.floor(Se() / 1e3)
            }
            var Ee = ve,
                Le = 0,
                Se = function() {
                    return (new Date).getTime() + Le
                },
                ke = 0;

            function Ae() {
                return Vt() ? "%c Chat %c" : "Chat"
            }

            function Re() {
                var e = Ce();
                return e.toLocaleTimeString("en-US", {
                    hour12: !1
                }) + "." + function(e) {
                    var t;
                    switch (e.toString().length) {
                        case 1:
                            t = "00" + e;
                            break;
                        case 2:
                            t = "0" + e;
                            break;
                        default:
                            t = e
                    }
                    return t
                }(e.getMilliseconds())
            }
            var Oe = {
                    arguments2String: function(e) {
                        var t = "";
                        if (1 === e.length) t = e[0];
                        else
                            for (var n = 0, o = e.length; n < o; n++) lt(e[n]) ? dt(e[n]) ? t += _t(e[n]) : t += JSON.stringify(e[n]) : t += e[n], t += " ";
                        return t
                    },
                    _exec: function(e, t) {
                        Vt() ? Ee[e](Ae(), "background:#0abf5b; padding:1px; border-radius:3px; color: #fff", "background:transparent", Re(), t) : Ee[e]("".concat(Ae(), " ").concat(Re(), " ").concat(t))
                    },
                    d: function() {
                        var e;
                        ke <= -1 && (e = this.arguments2String(arguments), this._exec("debug", e))
                    },
                    l: function() {
                        var e;
                        ke <= 0 && (e = this.arguments2String(arguments), this._exec("log", e))
                    },
                    log: function() {
                        var e;
                        ke <= 0 && (e = this.arguments2String(arguments), this._exec("log", e))
                    },
                    i: function() {
                        var e;
                        ke <= 1 && (e = this.arguments2String(arguments), this._exec("info", e))
                    },
                    w: function() {
                        var e;
                        ke <= 2 && (e = this.arguments2String(arguments), this._exec("warn", e))
                    },
                    e: function() {
                        var e;
                        ke <= 3 && (e = this.arguments2String(arguments), this._exec("error", e))
                    },
                    setLevel: function(e) {
                        e < 4 && this._exec("log", "set level from " + ke + " to " + e), ke = e
                    },
                    getLevel: function() {
                        return ke
                    }
                },
                Ne = {
                    JPG: 1,
                    JPEG: 1,
                    GIF: 2,
                    PNG: 3,
                    BMP: 4,
                    UNKNOWN: 255
                },
                Ge = {
                    NICK: "".concat($ = "Tag_Profile_IM_", "Nick"),
                    GENDER: "".concat($, "Gender"),
                    BIRTHDAY: "".concat($, "BirthDay"),
                    LOCATION: "".concat($, "Location"),
                    SELFSIGNATURE: "".concat($, "SelfSignature"),
                    ALLOWTYPE: "".concat($, "AllowType"),
                    LANGUAGE: "".concat($, "Language"),
                    AVATAR: "".concat($, "Image"),
                    MESSAGESETTINGS: "".concat($, "MsgSettings"),
                    ADMINFORBIDTYPE: "".concat($, "AdminForbidType"),
                    LEVEL: "".concat($, "Level"),
                    ROLE: "".concat($, "Role")
                },
                Pe = {
                    GROUP: "".concat("Tag_SNS_IM_", "Group"),
                    REMARK: "".concat("Tag_SNS_IM_", "Remark"),
                    ADDSOURCE: "".concat("Tag_SNS_IM_", "AddSource"),
                    ADDWORDING: "".concat("Tag_SNS_IM_", "Wording"),
                    ADDTIME: "".concat("Tag_SNS_IM_", "AddTime")
                },
                Ue = {
                    UNKNOWN: "".concat(J = "Gender_Type_", "Unknown"),
                    FEMALE: "".concat(J, "Female"),
                    MALE: "".concat(J, "Male")
                },
                be = {
                    NONE: "".concat("AdminForbid_Type_", "None"),
                    SEND_OUT: "".concat("AdminForbid_Type_", "SendOut")
                },
                we = {
                    NEED_CONFIRM: "".concat("AllowType_Type_", "NeedConfirm"),
                    ALLOW_ANY: "".concat("AllowType_Type_", "AllowAny"),
                    DENY_ANY: "".concat("AllowType_Type_", "DenyAny")
                },
                Fe = "JoinedSuccess",
                qe = "WaitAdminApproval",
                xe = "@TOPIC#_",
                Ve = Object.prototype.hasOwnProperty;

            function He(e) {
                if (null == e) return !0;
                if ("boolean" == typeof e) return !1;
                if ("number" == typeof e) return 0 === e;
                if ("string" == typeof e) return 0 === e.length;
                if ("function" == typeof e) return 0 === e.length;
                if (Array.isArray(e)) return 0 === e.length;
                if (e instanceof Error) return "" === e.message;
                if (je(e)) {
                    for (var t in e)
                        if (Ve.call(e, t)) return !1;
                    return !0
                }
                return !!(Be(e) || function(e) {
                    return "set" === pt(e)
                }(e) || Ke(e)) && 0 === e.size
            }

            function Be(e) {
                return "map" === pt(e)
            }

            function Ke(e) {
                return "file" === pt(e)
            }

            function Ye(e) {
                return null !== e && ("number" == typeof e && !isNaN(+e) || "object" === o(e) && e.constructor === Number)
            }

            function We(e) {
                return null !== e && "object" === o(e)
            }

            function je(e) {
                if ("object" === o(e) && null !== e) {
                    if (null === (e = Object.getPrototypeOf(e))) return 1;
                    for (var t = e; null !== Object.getPrototypeOf(t);) t = Object.getPrototypeOf(t);
                    return e === t
                }
            }

            function Je(e) {
                return "function" == typeof Array.isArray ? Array.isArray(e) : "array" === pt(e)
            }

            function ze(e) {
                return "function" == typeof e
            }

            function Xe(e) {
                return "filelist" === pt(e)
            }

            function Ze(e) {
                return "string" == typeof e && (e = e[0], !/[^a-zA-Z0-9]/.test(e))
            }

            function Qe(e, t, n, o) {
                if (!lt(e) || !lt(t)) return 0;
                for (var i, a = 0, s = Object.keys(t), r = 0, c = s.length; r < c; r++)
                    if (i = s[r], !(ut(t[i]) || n && n.includes(i)))
                        if (lt(e[i]) && lt(t[i])) a += Qe(e[i], t[i], n, o);
                        else {
                            if (o && o.includes(t[i])) continue;
                            e[i] !== t[i] && (e[i] = t[i], a += 1)
                        }
                return a
            }

            function $e(e, t) {
                var n, o = new Map,
                    i = T(e.entries());
                try {
                    for (i.s(); !(n = i.n()).done;) {
                        var a = f(n.value, 2),
                            s = a[0],
                            r = a[1];
                        o.set(s, t ? JSON.stringify(r) : JSON.parse(JSON.stringify(r)))
                    }
                } catch (e) {
                    i.e(e)
                } finally {
                    i.f()
                }
                return o
            }

            function et(e) {
                if (0 === e.length) return 0;
                for (var t = 0, n = 0, o = "undefined" != typeof document && void 0 !== document.characterSet ? document.characterSet : "UTF-8"; void 0 !== e[t];) n += e[t++].charCodeAt[t] <= 255 ? 1 : !1 === o ? 3 : 2;
                return n
            }

            function nt(e) {
                return e = e || 99999999, Math.round(Math.random() * e)
            }

            function ot() {
                for (var e = "", t = 32; 0 < t; --t) e += ht[Math.floor(Math.random() * gt)];
                return e
            }

            function it(e, t) {
                for (var n in e)
                    if (e[n] === t) return 1
            }

            function at(e) {
                return -1 === e.indexOf("http://") || -1 === e.indexOf("https://") ? "https://" + e : e.replace(/https|http/, "https")
            }

            function st(e) {
                if (0 === Object.getOwnPropertyNames(e).length) return Object.create(null);
                var t, n, i = Array.isArray(e) ? [] : Object.create(null);
                for (n in e) null !== e[n] ? void 0 !== e[n] ? (t = o(e[n]), 0 <= ["string", "number", "function", "boolean"].indexOf(t) ? i[n] = e[n] : i[n] = st(e[n])) : i[n] = void 0 : i[n] = null;
                return i
            }
            var rt = ["url"],
                ct = function(e) {
                    return "string" == typeof e
                },
                ut = function(e) {
                    return void 0 === e
                },
                lt = function(e) {
                    return Je(e) || We(e)
                },
                dt = function(e) {
                    return e instanceof Error
                },
                pt = function(e) {
                    return Object.prototype.toString.call(e).match(/^\[object (.*)\]$/)[1].toLowerCase()
                },
                _t = (Date.now || (Date.now = function() {
                    return (new Date).getTime()
                }), function(e) {
                    return JSON.stringify(e, ["message", "code"])
                }),
                ht = "0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ",
                gt = ht.length,
                ft = {};

            function mt(e, t) {
                if (!Je(e) || !Je(t)) return !1;
                var n = !1;
                return t.forEach((function(t) {
                    var o = t.key,
                        i = (t = t.value, e.find((function(e) {
                            return e.key === o
                        })));
                    i ? i.value !== t && (i.value = t, n = !0) : (e.push({
                        key: o,
                        value: t
                    }), n = !0)
                })), n
            }

            function vt(e) {
                return He(e) ? [] : e.filter((function(e) {
                    return !0 === e.isModified
                }))
            }

            function It(e) {
                return He(e) ? [] : e.filter((function(e) {
                    return !1 === e.isModified
                }))
            }

            function Mt(e) {
                return e === E.GRP_AVCHATROOM
            }

            function yt(e) {
                var t = e.type;
                return e = e.groupID, t === E.GRP_COMMUNITY || "".concat(e).startsWith("@TGS#_") && !"".concat(e).includes(xe)
            }

            function Ct(e) {
                return "".concat(e).startsWith("@TGS#_") && "".concat(e).includes(xe)
            }

            function Tt(e) {
                return ct(e) && e.slice(0, 3) === E.CONV_C2C
            }

            function Dt(e) {
                return ct(e) && e.slice(0, 5) === E.CONV_GROUP
            }

            function Et(e) {
                return ct(e) && e === E.CONV_SYSTEM
            }

            function Lt(e, t) {
                var n = {};
                return Object.keys(e).forEach((function(o) {
                    n[o] = t(e[o], o)
                })), n
            }

            function St(e) {
                return ee ? Promise.resolve({
                    width: 0,
                    height: 0
                }) : Q ? new Promise((function(t, n) {
                    ne.getImageInfo({
                        src: e,
                        success: function(e) {
                            t({
                                width: e.width,
                                height: e.height
                            })
                        },
                        fail: function() {
                            t({
                                width: 0,
                                height: 0
                            })
                        }
                    })
                })) : ue && 9 === le ? Promise.resolve({
                    width: 0,
                    height: 0
                }) : new Promise((function(t, n) {
                    var o = new Image;
                    o.onload = function() {
                        t({
                            width: this.width,
                            height: this.height
                        }), o = null
                    }, o.onerror = function() {
                        t({
                            width: 0,
                            height: 0
                        }), o = null
                    }, o.src = e
                }))
            }

            function kt() {
                function e() {
                    return (65536 * (1 + Math.random()) | 0).toString(16).substring(1)
                }
                return "".concat(e() + e()).concat(e()).concat(e()).concat(e()).concat(e()).concat(e()).concat(e())
            }

            function At() {
                var e = re ? "android" : ae ? "ios" : pe ? "windows" : _e ? "mac" : "unknown";
                if (Q) try {
                    var t = ne.getSystemInfoSync().platform;
                    void 0 !== t && (e = t)
                } catch (e) {}
                return e
            }

            function Rt(e, t) {
                e = e.split("."), t = t.split(".");
                for (var n = Math.max(e.length, t.length); e.length < n;) e.push("0");
                for (; t.length < n;) t.push("0");
                for (var o = 0; o < n; o++) {
                    var i = parseInt(e[o]),
                        a = parseInt(t[o]);
                    if (a < i) return 1;
                    if (i < a) return -1
                }
                return 0
            }

            function Ot(e) {
                var t = void 0 === (t = e.originUrl) ? void 0 : t,
                    n = e.originWidth,
                    o = e.originHeight,
                    i = (e = void 0 === (e = e.min) ? 198 : e, {
                        url: void 0,
                        width: 0,
                        height: 0
                    });
                return ((n = parseInt(n)) <= (o = parseInt(o)) ? n : o) <= e ? (i.url = t, i.width = n, i.height = o) : (o <= n ? (i.width = Math.ceil(n * e / o), i.height = e) : (i.width = e, i.height = Math.ceil(o * e / n)), o = t && -1 < t.indexOf("?") ? "".concat(t, "&") : "".concat(t, "?"), i.url = "".concat(o, 198 === e ? "imageView2/3/w/198/h/198" : "imageView2/3/w/720/h/720")), ut(t) ? (i.url, _(i, rt)) : i
            }

            function Nt(e) {
                var t = e[2];
                e[2] = e[1], e[1] = t;
                for (var n = 0; n < e.length; n++) e[n].setType(n)
            }

            function Gt(e) {
                return (e = e.servcmd).slice(e.indexOf(".") + 1)
            }

            function Pt(e, t) {
                return Math.round(Number(e) * Math.pow(10, t)) / Math.pow(10, t)
            }

            function Ut(e, t) {
                return e.includes(t)
            }

            function bt(e, t) {
                return e.includes(t)
            }

            function wt(e) {
                return e.split(xe)[0]
            }
            var Ft = function(e, t, n) {
                if (ut(t)) return "";
                switch (e) {
                    case E.MSG_TEXT:
                        return t.text;
                    case E.MSG_IMAGE:
                        return n ? "[Image]" : "[图片]";
                    case E.MSG_LOCATION:
                        return n ? "[Location]" : "[位置]";
                    case E.MSG_AUDIO:
                        return n ? "[Voice]" : "[语音]";
                    case E.MSG_VIDEO:
                        return n ? "[Video]" : "[视频]";
                    case E.MSG_FILE:
                        return n ? "[File]" : "[文件]";
                    case E.MSG_CUSTOM:
                        return n ? "[Custom Messages]" : "[自定义消息]";
                    case E.MSG_GRP_TIP:
                        return n ? "[Group Notification]" : "[群提示消息]";
                    case E.MSG_GRP_SYS_NOTICE:
                        return n ? "[Group System Message]" : "[群系统通知]";
                    case E.MSG_FACE:
                        return n ? "[Animated Sticker]" : "[动画表情]";
                    case E.MSG_MERGER:
                        return n ? "[Chat Record]" : "[聊天记录]";
                    default:
                        return ""
                }
            };

            function qt(e) {
                return e === E.MSG_TEXT || e === E.MSG_CUSTOM || e === E.MSG_LOCATION || e === E.MSG_FACE
            }

            function xt(e) {
                var t = [];
                if (!ct(e)) return t;
                var n = e.length;
                if (0 === n) return t;
                for (var o = n - 1; 0 <= o; o--) "1" === e[o] && t.push(Math.pow(2, n - o - 1));
                return t
            }

            function Vt() {
                return !ue && !Q
            }

            function Ht(e) {
                return "the length of userIDList cannot exceed ".concat(e)
            }

            function Bt(e) {
                var t;
                if (Je(e) && 0 !== e.length) return t = 0, e.forEach((function(e) {
                    t += e
                })), t.toFixed(0)
            }

            function Kt(e) {
                var t;
                if (Je(e) && 0 !== e.length) return t = 0, e.forEach((function(e) {
                    t += e
                })), (t / e.length).toFixed(0)
            }

            function Yt(e, t, n) {
                t = !(1 < arguments.length && void 0 !== t) || t, n = !(2 < arguments.length && void 0 !== n) || n;
                var o = Date.now();
                return t ? n ? "".concat(o - e, " ms") : "".concat(Math.round((o - e) / 1e3), " s") : n ? o - e : Math.round((o - e) / 1e3)
            }

            function Wt(e) {
                return !!(e && 1 < e)
            }

            function jt(e, t, n, o) {
                if (void 0 === t) return 1;
                var i, a, s = !0;
                return t.required && He(e) && (Oe.e("[".concat(n, '] Missing required params: "').concat(o, '".')), s = !1), He(e) || (i = pt(e)) !== (a = t.type.toLowerCase()) && ("asyncfunction" === i && "function" === a || (Oe.e("[".concat(n, '] Invalid params: type check failed for "').concat(o, '". Expected ').concat(t.type, ".")), s = !1)), t.validator && !t.validator(e, n, o) && (Oe.e("[".concat(n, '] Invalid params: custom validator check failed for "').concat(o, '".')), s = !1), s
            }

            function Jt(e) {
                return !(!e || !(Tt(e) || Dt(e) || Et(e)) && ((e = On("InvalidConversationID", e)) && Oe.w(e), 1))
            }

            function zt(e) {
                "" !== e.desc && "" !== On("API_REFER") && Oe.w("[".concat(e.api, "] | ").concat(e.paramName, " | ").concat(e.desc, ", ").concat(On("API_REFER")).concat(e.api))
            }

            function Xt() {
                return On("StringRequiredLog")
            }

            function Zt(e) {
                return On("NonEmptyStringRequiredLog", e)
            }

            function Qt() {
                return On("NumberRequiredLog")
            }

            function $t() {
                return On("UndefinedNotAllowedLog")
            }

            function en() {
                return On("FileRequiredLog")
            }

            function tn() {
                return On("FunctionRequiredLog")
            }

            function nn() {
                return On("ArrayRequiredLog")
            }

            function on() {
                return On("NonEmptyArrayLog")
            }

            function an() {
                return On("CallbackMissingLog")
            }

            function sn() {
                return On("PositiveIntegerRequiredLog")
            }

            function rn(e, t) {
                return On("StringNotLongerThanLog", e, t)
            }

            function cn(e, t) {
                return On("NumberGreaterOrEqualLog", e, t)
            }

            function un(e) {
                return On("KeyValueStringRequiredLog", e)
            }

            function ln() {
                return On("PlainObjectRequiredLog")
            }

            function dn() {
                return On("NonEmptyContentRequiredLog")
            }

            function pn() {
                return On("FileNotSelectedLog")
            }

            function _n() {
                return On("MessageInstanceRequiredLog")
            }

            function hn() {
                return On("NonAnonymousFunctionLog")
            }

            function gn() {
                return On("MessageExtensionNotAvailableLog")
            }

            function fn() {
                return On("MessageReactionRequiredLog")
            }

            function mn(e, t) {
                return On("MaximumArrayLengthLog", e, t)
            }

            function vn(e) {
                return {
                    code: 0,
                    data: e || {}
                }
            }

            function In(e) {
                return Promise.resolve(vn(e))
            }

            function Mn(e) {
                var t = 1 < arguments.length && void 0 !== arguments[1] && arguments[1];
                if (e instanceof Pn) return t && null !== bn && bn.emit(D.ERROR, e), Promise.reject(e);
                if (e instanceof Error) return n = new Pn({
                    code: Un.UNCAUGHT_ERROR
                }), t && null !== bn && bn.emit(D.ERROR, n), Promise.reject(n);
                if (ut(e) || ut(e.code)) return Promise.reject(new Pn({
                    code: Un.UNCAUGHT_ERROR
                }));
                var n = new Pn(e);
                return t && null !== bn && bn.emit(D.ERROR, n), Promise.reject(n)
            }
            var yn, Cn = "unSend",
                Tn = "success",
                Dn = "fail",
                En = "notStart",
                Ln = "pending",
                Sn = "resolved",
                kn = "rejected",
                An = {
                    type: "Boolean",
                    required: !0
                },
                Rn = {
                    type: "number",
                    required: !0
                },
                On = null,
                Nn = {
                    hookGetAPITips: function(e) {
                        On = e
                    },
                    login: {
                        userID: X = {
                            type: "String",
                            required: !0
                        },
                        userSig: X
                    },
                    addToBlacklist: {
                        userIDList: $ = {
                            type: "Array",
                            required: !0
                        }
                    },
                    removeFromBlacklist: {
                        userIDList: $
                    },
                    on: [{
                        name: "eventName",
                        type: "String",
                        validator: function(e, t, n) {
                            return "string" == typeof e && 0 !== e.length || (zt({
                                api: t,
                                paramName: n,
                                desc: Zt(n)
                            }), !1)
                        }
                    }, {
                        name: "handler",
                        type: "Function",
                        validator: function(e, t, n) {
                            return "function" != typeof e ? (zt({
                                api: t,
                                paramName: n,
                                desc: tn()
                            }), !1) : ("" === e.name && zt({
                                api: t,
                                paramName: n,
                                desc: hn()
                            }), !0)
                        }
                    }],
                    once: [{
                        name: "eventName",
                        type: "String",
                        validator: function(e, t, n) {
                            return "string" == typeof e && 0 !== e.length || (zt({
                                api: t,
                                paramName: n,
                                desc: Zt(n)
                            }), !1)
                        }
                    }, {
                        name: "handler",
                        type: "Function",
                        validator: function(e, t, n) {
                            return "function" != typeof e ? (zt({
                                api: t,
                                paramName: n,
                                desc: tn()
                            }), !1) : ("" === e.name && zt({
                                api: t,
                                paramName: n,
                                desc: hn()
                            }), !0)
                        }
                    }],
                    off: [{
                        name: "eventName",
                        type: "String",
                        validator: function(e, t, n) {
                            return "string" == typeof e && 0 !== e.length || (zt({
                                api: t,
                                paramName: n,
                                desc: Zt(n)
                            }), !1)
                        }
                    }, {
                        name: "handler",
                        type: "Function",
                        validator: function(e, t, n) {
                            return "function" != typeof e ? (zt({
                                api: t,
                                paramName: n,
                                desc: tn()
                            }), !1) : ("" === e.name && zt({
                                api: t,
                                paramName: n,
                                desc: hn()
                            }), !0)
                        }
                    }],
                    sendMessage: [t({
                        name: "message"
                    }, J = {
                        type: "Object",
                        required: !0
                    })],
                    setMessageExtensions: [t(t({
                        name: "message"
                    }, J), {}, {
                        validator: function(e, t, n) {
                            return e.status === Tn && !0 === e.isSupportExtension || (zt({
                                api: t,
                                paramName: n,
                                desc: gn()
                            }), !1)
                        }
                    }), t({
                        name: "extensions"
                    }, $)],
                    getMessageExtensions: [t(t({
                        name: "message"
                    }, J), {}, {
                        validator: function(e, t, n) {
                            return e.status === Tn && !0 === e.isSupportExtension || (zt({
                                api: t,
                                paramName: n,
                                desc: gn()
                            }), !1)
                        }
                    })],
                    deleteMessageExtensions: [t(t({
                        name: "message"
                    }, J), {}, {
                        validator: function(e, t, n) {
                            return e.status === Tn && !0 === e.isSupportExtension || (zt({
                                api: t,
                                paramName: n,
                                desc: gn()
                            }), !1)
                        }
                    })],
                    addMessageReaction: [t(t({
                        name: "message"
                    }, J), {}, {
                        validator: function(e, t, n) {
                            return e.status === Tn || (zt({
                                api: t,
                                paramName: n,
                                desc: fn()
                            }), !1)
                        }
                    }), t({
                        name: "reactionID"
                    }, X)],
                    removeMessageReaction: [t(t({
                        name: "message"
                    }, J), {}, {
                        validator: function(e, t, n) {
                            return e.status === Tn || (zt({
                                api: t,
                                paramName: n,
                                desc: fn()
                            }), !1)
                        }
                    }), t({
                        name: "reactionID"
                    }, X)],
                    getMessageReactions: {
                        messageList: t({}, $)
                    },
                    getAllUserListOfMessageReaction: {
                        message: t(t({}, J), {}, {
                            validator: function(e, t, n) {
                                return e.status === Tn || (zt({
                                    api: t,
                                    paramName: n,
                                    desc: fn()
                                }), !1)
                            }
                        }),
                        reactionID: t({}, X),
                        nextSeq: {
                            type: "Number"
                        },
                        count: {
                            type: "Number"
                        }
                    },
                    getMessageList: {
                        conversationID: t(t({}, X), {}, {
                            validator: Jt
                        }),
                        nextReqMessageID: {
                            type: "String"
                        },
                        count: {
                            type: "Number",
                            validator: function(e, t, n) {
                                return !(!ut(e) && !/^[1-9][0-9]*$/.test(e) && (zt({
                                    api: t,
                                    paramName: n,
                                    desc: sn()
                                }), 1))
                            }
                        }
                    },
                    getMessageListHopping: {
                        conversationID: t(t({}, X), {}, {
                            validator: Jt
                        }),
                        sequence: {
                            type: "Number"
                        },
                        time: {
                            type: "Number"
                        },
                        direction: {
                            type: "Number",
                            validator: function(e, t, n) {
                                return !(!ut(e) && 0 !== e && 1 !== e && (zt({
                                    api: t,
                                    paramName: n,
                                    desc: On("0Or1RequiredLog")
                                }), 1))
                            }
                        },
                        count: {
                            type: "Number",
                            validator: function(e, t, n) {
                                return !(!ut(e) && !/^[1-9][0-9]*$/.test(e) && (zt({
                                    api: t,
                                    paramName: n,
                                    desc: sn
                                }), 1))
                            }
                        }
                    },
                    setMessageRead: {
                        conversationID: t(t({}, X), {}, {
                            validator: Jt
                        })
                    },
                    setAllMessageRead: {
                        scope: {
                            type: "String",
                            required: !1,
                            validator: function(e, t, n) {
                                return !e || -1 !== [E.READ_ALL_C2C_MSG, E.READ_ALL_GROUP_MSG, E.READ_ALL_MSG].indexOf(e) || (zt({
                                    api: t,
                                    paramName: n,
                                    desc: On("ValidScopeRequired")
                                }), !1)
                            }
                        }
                    },
                    getConversationProfile: [t(t({
                        name: "conversationID"
                    }, X), {}, {
                        validator: Jt
                    })],
                    clearHistoryMessage: [t(t({
                        name: "conversationID"
                    }, X), {}, {
                        validator: Jt
                    })],
                    pinConversation: {
                        conversationID: t(t({}, X), {}, {
                            validator: Jt
                        }),
                        isPinned: t({}, An)
                    },
                    setConversationDraft: {
                        conversationID: t(t({}, X), {}, {
                            validator: Jt
                        }),
                        draftText: {
                            type: "String",
                            validator: function(e, t, n) {
                                return !!ct(e) || (zt({
                                    api: t,
                                    paramName: n,
                                    desc: Xt()
                                }), !1)
                            }
                        }
                    },
                    setConversationCustomData: {
                        conversationIDList: t({}, $),
                        customData: {
                            type: "String",
                            validator: function(e, t, n) {
                                return ct(e) ? !(256 < e.length && (zt({
                                    api: t,
                                    paramName: n,
                                    desc: rn(n, 256)
                                }), 1)) : (zt({
                                    api: t,
                                    paramName: n,
                                    desc: Xt()
                                }), !1)
                            }
                        }
                    },
                    markConversation: {
                        conversationIDList: t({}, $),
                        markType: {
                            type: "number",
                            validator: function(e, t, n) {
                                return Ye(e) ? e <= 0 ? (zt({
                                    api: t,
                                    paramName: n,
                                    desc: On("NumberGreaterThanLog", n, 0)
                                }), !1) : !(e >= Math.pow(2, 64) && (zt({
                                    api: t,
                                    paramName: n,
                                    desc: On("NumberLessThanLog", n, "Math.pow(2,64)")
                                }), 1)) : (zt({
                                    api: t,
                                    paramName: n,
                                    desc: Qt()
                                }), !1)
                            }
                        },
                        enableMark: t({}, An)
                    },
                    createConversationGroup: {
                        conversationIDList: t({}, $),
                        groupName: t(t({}, X), {}, {
                            validator: function(e, t, n) {
                                return !(!e || 32 < e.length && (zt({
                                    api: t,
                                    paramName: n,
                                    desc: rn(n, 32)
                                }), 1))
                            }
                        })
                    },
                    deleteConversationGroup: [t({
                        name: "groupName"
                    }, X)],
                    renameConversationGroup: {
                        oldName: t({}, X),
                        newName: t(t({}, X), {}, {
                            validator: function(e, t, n) {
                                return !(!e || 32 < e.length && (zt({
                                    api: t,
                                    paramName: n,
                                    desc: rn(n, 32)
                                }), 1))
                            }
                        })
                    },
                    addConversationsToGroup: {
                        conversationIDList: t({}, $),
                        groupName: t({}, X)
                    },
                    deleteConversationsFromGroup: {
                        conversationIDList: t({}, $),
                        groupName: t({}, X)
                    },
                    getGroupList: {
                        groupProfileFilter: {
                            type: "Array"
                        }
                    },
                    getGroupProfile: {
                        groupID: X,
                        groupCustomFieldFilter: {
                            type: "Array"
                        },
                        memberCustomFieldFilter: {
                            type: "Array"
                        }
                    },
                    getGroupProfileAdvance: {
                        groupIDList: $
                    },
                    createGroup: {
                        name: X
                    },
                    joinGroup: {
                        groupID: X,
                        type: {
                            type: "String"
                        },
                        applyMessage: {
                            type: "String"
                        }
                    },
                    quitGroup: [t({
                        name: "groupID"
                    }, X)],
                    handleApplication: {
                        message: J,
                        handleAction: X,
                        handleMessage: {
                            type: "String"
                        }
                    },
                    changeGroupOwner: {
                        groupID: X,
                        newOwnerID: X
                    },
                    updateGroupProfile: {
                        groupID: X,
                        muteAllMembers: {
                            type: "Boolean"
                        }
                    },
                    dismissGroup: [t({
                        name: "groupID"
                    }, X)],
                    searchGroupByID: [t({
                        name: "groupID"
                    }, X)],
                    getGroupOnlineMemberCount: [t({
                        name: "groupID"
                    }, X)],
                    initGroupAttributes: {
                        groupID: X,
                        groupAttributes: t(t({}, J), {}, {
                            validator: function(e, t, n) {
                                var o = !0;
                                return Object.keys(e).forEach((function(i) {
                                    if (!ct(e[i])) return zt({
                                        api: t,
                                        paramName: n,
                                        desc: un("value")
                                    }), o = !1
                                })), o
                            }
                        })
                    },
                    setGroupAttributes: {
                        groupID: X,
                        groupAttributes: t(t({}, J), {}, {
                            validator: function(e, t, n) {
                                var o = !0;
                                return Object.keys(e).forEach((function(i) {
                                    if (!ct(e[i])) return zt({
                                        api: t,
                                        paramName: n,
                                        desc: un("value")
                                    }), o = !1
                                })), o
                            }
                        })
                    },
                    deleteGroupAttributes: {
                        groupID: X,
                        keyList: {
                            type: "Array",
                            validator: function(e, t, n) {
                                return ut(e) || !Je(e) ? (zt({
                                    api: t,
                                    paramName: n,
                                    desc: nn()
                                }), !1) : !!He(e) || (o = !0, e.forEach((function(e) {
                                    if (!ct(e)) return zt({
                                        api: t,
                                        paramName: n,
                                        desc: On("StringArrayRequiredLog")
                                    }), o = !1
                                })), o);
                                var o
                            }
                        }
                    },
                    getGroupAttributes: {
                        groupID: X,
                        keyList: {
                            type: "Array",
                            validator: function(e, t, n) {
                                return ut(e) || !Je(e) ? (zt({
                                    api: t,
                                    paramName: n,
                                    desc: nn()
                                }), !1) : !!He(e) || (o = !0, e.forEach((function(e) {
                                    if (!ct(e)) return zt({
                                        api: t,
                                        paramName: n,
                                        desc: un("key")
                                    }), o = !1
                                })), o);
                                var o
                            }
                        }
                    },
                    setGroupCounters: {
                        groupID: X,
                        counters: J
                    },
                    increaseGroupCounter: {
                        groupID: X,
                        key: X,
                        value: Rn
                    },
                    decreaseGroupCounter: {
                        groupID: X,
                        key: X,
                        value: Rn
                    },
                    getGroupCounters: {
                        groupID: X
                    },
                    getGroupMemberList: {
                        groupID: X,
                        count: {
                            type: "Number"
                        }
                    },
                    getGroupMemberProfile: {
                        groupID: X,
                        userIDList: $,
                        memberCustomFieldFilter: {
                            type: "Array"
                        }
                    },
                    addGroupMember: {
                        groupID: X,
                        userIDList: $
                    },
                    setGroupMemberRole: {
                        groupID: X,
                        userID: X,
                        role: X
                    },
                    setGroupMemberMuteTime: {
                        groupID: X,
                        userID: X,
                        muteTime: {
                            type: "Number",
                            validator: function(e) {
                                return 0 <= e
                            }
                        }
                    },
                    setGroupMemberNameCard: {
                        groupID: X,
                        userID: {
                            type: "String"
                        },
                        nameCard: {
                            type: "String",
                            validator: function(e, t, n) {
                                return ct(e) ? (e.length, !0) : (zt({
                                    api: t,
                                    paramName: n,
                                    desc: Xt()
                                }), !1)
                            }
                        }
                    },
                    setGroupMemberCustomField: {
                        groupID: X,
                        userID: {
                            type: "String"
                        },
                        memberCustomField: $
                    },
                    deleteGroupMember: {
                        groupID: X
                    },
                    markGroupMemberList: {
                        groupID: X,
                        markType: {
                            type: "number",
                            validator: function(e, t, n) {
                                return Ye(e) ? !(e < 1e3 && (zt({
                                    api: t,
                                    paramName: n,
                                    desc: cn(n, 1e3)
                                }), 1)) : (zt({
                                    api: t,
                                    paramName: n,
                                    desc: Qt()
                                }), !1)
                            }
                        },
                        userIDList: t({}, $),
                        enableMark: t({}, An)
                    },
                    createTextMessage: {
                        to: X,
                        conversationType: X,
                        payload: t(t({}, J), {}, {
                            validator: function(e, t, n) {
                                return je(e) ? ct(e.text) ? 0 !== e.text.length || (zt({
                                    api: t,
                                    paramName: "payload.text",
                                    desc: dn()
                                }), !1) : (zt({
                                    api: t,
                                    paramName: "payload.text",
                                    desc: Xt()
                                }), !1) : (zt({
                                    api: t,
                                    paramName: n,
                                    desc: ln()
                                }), !1)
                            }
                        })
                    },
                    createTextAtMessage: {
                        to: X,
                        conversationType: X,
                        payload: t(t({}, J), {}, {
                            validator: function(e, t, n) {
                                return je(e) ? ct(e.text) ? 0 === e.text.length ? (zt({
                                    api: t,
                                    paramName: "payload.text",
                                    desc: dn()
                                }), !1) : !(e.atUserList && !Je(e.atUserList) && (zt({
                                    api: t,
                                    paramName: "payload.atUserList",
                                    desc: nn()
                                }), 1)) : (zt({
                                    api: t,
                                    paramName: "payload.text",
                                    desc: Xt()
                                }), !1) : (zt({
                                    api: t,
                                    paramName: n,
                                    desc: ln()
                                }), !1)
                            }
                        })
                    },
                    createCustomMessage: {
                        to: X,
                        conversationType: X,
                        payload: t(t({}, J), {}, {
                            validator: function(e, t, n) {
                                return je(e) ? e.data && !ct(e.data) ? (zt({
                                    api: t,
                                    paramName: "payload.data",
                                    desc: Xt()
                                }), !1) : e.description && !ct(e.description) ? (zt({
                                    api: t,
                                    paramName: "payload.description",
                                    desc: Xt()
                                }), !1) : !(e.extension && !ct(e.extension) && (zt({
                                    api: t,
                                    paramName: "payload.extension",
                                    desc: Xt()
                                }), 1)) : (zt({
                                    api: t,
                                    paramName: "payload",
                                    desc: ln()
                                }), !1)
                            }
                        })
                    },
                    createImageMessage: {
                        to: X,
                        conversationType: X,
                        payload: t(t({}, J), {}, {
                            validator: function(e, t, n) {
                                if (!je(e)) return zt({
                                    api: t,
                                    paramName: n,
                                    desc: ln()
                                }), !1;
                                if (ut(e.file)) return zt({
                                    api: t,
                                    paramName: "payload.file",
                                    desc: $t()
                                }), !1;
                                if (te) {
                                    if (!(e.file instanceof HTMLInputElement || Ke(e.file))) return je(e.file) && "undefined" != typeof uni ? 0 !== e.file.tempFilePaths.length && 0 !== e.file.tempFiles.length || (zt({
                                        api: t,
                                        paramName: "payload.file",
                                        desc: pn()
                                    }), !1) : (zt({
                                        api: t,
                                        paramName: "payload.file",
                                        desc: en()
                                    }), !1);
                                    if (e.file instanceof HTMLInputElement && 0 === e.file.files.length) return zt({
                                        api: t,
                                        paramName: "payload.file",
                                        desc: pn()
                                    }), !1
                                }
                                return !0
                            },
                            onProgress: {
                                type: "Function",
                                required: !1,
                                validator: function(e, t, n) {
                                    return ut(e) && zt({
                                        api: t,
                                        paramName: n,
                                        desc: an()
                                    }), !0
                                }
                            }
                        })
                    },
                    createAudioMessage: {
                        to: X,
                        conversationType: X,
                        payload: t(t({}, J), {}, {
                            validator: function(e, t, n) {
                                return !!je(e) || (zt({
                                    api: t,
                                    paramName: n,
                                    desc: ln()
                                }), !1)
                            }
                        }),
                        onProgress: {
                            type: "Function",
                            required: !1,
                            validator: function(e, t, n) {
                                return ut(e) && zt({
                                    api: t,
                                    paramName: n,
                                    desc: an()
                                }), !0
                            }
                        }
                    },
                    createVideoMessage: {
                        to: X,
                        conversationType: X,
                        payload: t(t({}, J), {}, {
                            validator: function(e, t, n) {
                                if (!je(e)) return zt({
                                    api: t,
                                    paramName: n,
                                    desc: ln()
                                }), !1;
                                if (ut(e.file)) return zt({
                                    api: t,
                                    paramName: "payload.file",
                                    desc: $t()
                                }), !1;
                                if (te) {
                                    if (!(e.file instanceof HTMLInputElement || Ke(e.file))) return je(e.file) && "undefined" != typeof uni ? !!Ke(e.file.tempFile) || (zt({
                                        api: t,
                                        paramName: "payload.file",
                                        desc: pn()
                                    }), !1) : (zt({
                                        api: t,
                                        paramName: "payload.file",
                                        desc: en()
                                    }), !1);
                                    if (e.file instanceof HTMLInputElement && 0 === e.file.files.length) return zt({
                                        api: t,
                                        paramName: "payload.file",
                                        desc: pn()
                                    }), !1
                                }
                                return !0
                            }
                        }),
                        onProgress: {
                            type: "Function",
                            required: !1,
                            validator: function(e, t, n) {
                                return ut(e) && zt({
                                    api: t,
                                    paramName: n,
                                    desc: an()
                                }), !0
                            }
                        }
                    },
                    createFaceMessage: {
                        to: X,
                        conversationType: X,
                        payload: t(t({}, J), {}, {
                            validator: function(e, t, n) {
                                return je(e) ? Ye(e.index) ? !!ct(e.data) || (zt({
                                    api: t,
                                    paramName: "payload.data",
                                    desc: Xt()
                                }), !1) : (zt({
                                    api: t,
                                    paramName: "payload.index",
                                    desc: Qt()
                                }), !1) : (zt({
                                    api: t,
                                    paramName: n,
                                    desc: ln()
                                }), !1)
                            }
                        })
                    },
                    createFileMessage: {
                        to: X,
                        conversationType: X,
                        payload: t(t({}, J), {}, {
                            validator: function(e, t, n) {
                                if (!je(e)) return zt({
                                    api: t,
                                    paramName: n,
                                    desc: ln()
                                }), !1;
                                if (ut(e.file)) return zt({
                                    api: t,
                                    paramName: "payload.file",
                                    desc: $t()
                                }), !1;
                                if (te) {
                                    if (!(e.file instanceof HTMLInputElement || Ke(e.file))) return je(e.file) && "undefined" != typeof uni ? 0 !== e.file.tempFilePaths.length && 0 !== e.file.tempFiles.length || (zt({
                                        api: t,
                                        paramName: "payload.file",
                                        desc: pn()
                                    }), !1) : (zt({
                                        api: t,
                                        paramName: "payload.file",
                                        desc: en()
                                    }), !1);
                                    if (e.file instanceof HTMLInputElement && 0 === e.file.files.length) return zt({
                                        api: t,
                                        paramName: "payload.file",
                                        desc: pn()
                                    }), !1
                                }
                                return !0
                            }
                        }),
                        onProgress: {
                            type: "Function",
                            required: !1,
                            validator: function(e, t, n) {
                                return ut(e) && zt({
                                    api: t,
                                    paramName: n,
                                    desc: an()
                                }), !0
                            }
                        }
                    },
                    createLocationMessage: {
                        to: X,
                        conversationType: X,
                        payload: t(t({}, J), {}, {
                            validator: function(e, t, n) {
                                return je(e) ? ct(e.description) ? Ye(e.longitude) ? !!Ye(e.latitude) || (zt({
                                    api: t,
                                    paramName: "payload.latitude",
                                    desc: Qt()
                                }), !1) : (zt({
                                    api: t,
                                    paramName: "payload.longitude",
                                    desc: Qt()
                                }), !1) : (zt({
                                    api: t,
                                    paramName: "payload.description",
                                    desc: Xt()
                                }), !1) : (zt({
                                    api: t,
                                    paramName: n,
                                    desc: ln()
                                }), !1)
                            }
                        })
                    },
                    createMergerMessage: {
                        to: X,
                        conversationType: X,
                        payload: t(t({}, J), {}, {
                            validator: function(e, t, n) {
                                if (He(e.messageList)) return zt({
                                    api: t,
                                    paramName: "payload.messageList",
                                    desc: on()
                                }), !1;
                                if (He(e.compatibleText)) return zt({
                                    api: t,
                                    paramName: "payload.compatibleText",
                                    desc: Zt("compatibleText")
                                }), !1;
                                var o = !1;
                                return e.messageList.forEach((function(e) {
                                    e.status === Dn && (o = !0)
                                })), !o || (zt({
                                    api: t,
                                    paramName: "payload.messageList",
                                    desc: On("MergeFailedMessageLog")
                                }), !1)
                            }
                        })
                    },
                    revokeMessage: [t(t({
                        name: "message"
                    }, J), {}, {
                        validator: function(e, t, n) {
                            return He(e) ? (zt({
                                api: t,
                                paramName: n,
                                desc: _n()
                            }), !1) : e.conversationType === E.CONV_SYSTEM ? (zt({
                                api: t,
                                paramName: n,
                                desc: On("MessageCanBeRevokedDesc")
                            }), !1) : !0 !== e.isRevoked || (zt({
                                api: t,
                                paramName: n,
                                desc: On("MessageRevokedLog")
                            }), !1)
                        }
                    })],
                    deleteMessage: [t(t({
                        name: "messageList"
                    }, $), {}, {
                        validator: function(e, t, n) {
                            return !He(e) || (zt({
                                api: t,
                                paramName: n,
                                desc: on()
                            }), !1)
                        }
                    })],
                    translateText: {
                        sourceTextList: $,
                        sourceLanguage: X,
                        targetLanguage: X
                    },
                    convertVoiceToText: {
                        message: t(t({}, J), {}, {
                            validator: function(e, t, n) {
                                return He(e) ? (zt({
                                    api: t,
                                    paramName: n,
                                    desc: _n()
                                }), !1) : e.type === E.MSG_AUDIO && e.status === Tn || (zt({
                                    api: t,
                                    paramName: n,
                                    desc: On("AudioMessageRequiredLog")
                                }), !1)
                            }
                        })
                    },
                    modifyMessage: [t(t({
                        name: "message"
                    }, J), {}, {
                        validator: function(e, t, n) {
                            return He(e) ? (zt({
                                api: t,
                                paramName: n,
                                desc: _n()
                            }), !1) : e.conversationType === E.CONV_SYSTEM ? (zt({
                                api: t,
                                paramName: n,
                                desc: On("MessageCanBeModifiedLog")
                            }), !1) : !0 !== e._onlineOnlyFlag || (zt({
                                api: t,
                                paramName: n,
                                desc: On("OnlineMessageNotSupportLog")
                            }), !1)
                        }
                    })],
                    searchCloudMessages: {
                        keywordList: {
                            type: "Array",
                            required: !1,
                            validator: function(e, t, n) {
                                return !(e && (Je(e) ? 0 === e.length ? (zt({
                                    api: t,
                                    paramName: n,
                                    desc: on()
                                }), 1) : 5 < e.length && (zt({
                                    api: t,
                                    paramName: n,
                                    desc: mn(n, 5)
                                }), 1) : (zt({
                                    api: t,
                                    paramName: n,
                                    desc: nn()
                                }), 1)))
                            }
                        },
                        keywordListMatchType: {
                            type: "String",
                            required: !1,
                            validator: function(e, t, n) {
                                return !e || "or" === e || "and" === e || zt({
                                    api: t,
                                    paramName: n,
                                    desc: "".concat(e, " is invalid match type")
                                })
                            }
                        },
                        senderUserIDList: {
                            type: "Array",
                            required: !1,
                            validator: function(e, t, n) {
                                return !(e && (Je(e) ? (0 === e.length && zt({
                                    api: t,
                                    paramName: n,
                                    desc: on()
                                }), 5 < e.length && (zt({
                                    api: t,
                                    paramName: n,
                                    desc: mn(n, 5)
                                }), 1)) : (zt({
                                    api: t,
                                    paramName: n,
                                    desc: nn()
                                }), 1)))
                            }
                        },
                        messageTypeList: {
                            type: "Array",
                            required: !1,
                            validator: function(e, t, n) {
                                if (!e) return !0;
                                if (!Je(e)) return zt({
                                    api: t,
                                    paramName: n,
                                    desc: nn()
                                }), !1;
                                0 === e.length && zt({
                                    api: t,
                                    paramName: n,
                                    desc: on()
                                });
                                var o = [E.MSG_TEXT, E.MSG_IMAGE, E.MSG_AUDIO, E.MSG_FILE, E.MSG_VIDEO, E.MSG_LOCATION, E.MSG_CUSTOM, E.MSG_MERGER];
                                return !(0 < e.filter((function(e) {
                                    return -1 === o.indexOf(e)
                                })).length && (zt({
                                    api: t,
                                    paramName: n,
                                    desc: On("ContainsUnsupportedMessageTypeLog", n)
                                }), 1))
                            }
                        },
                        conversationID: {
                            type: "String",
                            required: !1,
                            validator: function(e) {
                                return !e || Jt(e)
                            }
                        },
                        timePosition: {
                            type: "number",
                            required: !1,
                            validator: function(e, t, n) {
                                return !(e && e < 0 && (zt({
                                    api: t,
                                    paramName: n,
                                    desc: cn(n, 0)
                                }), 1))
                            }
                        },
                        timePeriod: {
                            type: "number",
                            required: !1,
                            validator: function(e, t, n) {
                                return !(e && e < 0 && (zt({
                                    api: t,
                                    paramName: n,
                                    desc: cn(n, 0)
                                }), 1))
                            }
                        },
                        cursor: {
                            type: "String",
                            required: !1
                        }
                    },
                    getUserProfile: {
                        userIDList: {
                            type: "Array",
                            validator: function(e, t, n) {
                                return Je(e) ? (0 === e.length && zt({
                                    api: t,
                                    paramName: n,
                                    desc: on()
                                }), !0) : (zt({
                                    api: t,
                                    paramName: n,
                                    desc: nn()
                                }), !1)
                            }
                        }
                    },
                    updateMyProfile: {
                        profileCustomField: {
                            type: "Array",
                            validator: function(e, t, n) {
                                return !!ut(e) || !!Je(e) || (zt({
                                    api: t,
                                    paramName: n,
                                    desc: nn()
                                }), !1)
                            }
                        }
                    },
                    setSelfStatus: {
                        customStatus: {
                            type: "String",
                            validator: function(e, t, n) {
                                return !!ct(e) || (zt({
                                    api: t,
                                    paramName: n,
                                    desc: Xt()
                                }), !1)
                            }
                        }
                    },
                    getUserStatus: {
                        userIDList: {
                            type: "Array",
                            validator: function(e, t, n) {
                                return Je(e) ? 0 !== e.length || (zt({
                                    api: t,
                                    paramName: n,
                                    desc: on()
                                }), !1) : (zt({
                                    api: t,
                                    paramName: n,
                                    desc: nn()
                                }), !1)
                            }
                        }
                    },
                    subscribeUserStatus: {
                        userIDList: {
                            type: "Array",
                            validator: function(e, t, n) {
                                return Je(e) ? 0 !== e.length || (zt({
                                    api: t,
                                    paramName: n,
                                    desc: on()
                                }), !1) : (zt({
                                    api: t,
                                    paramName: n,
                                    desc: nn()
                                }), !1)
                            }
                        }
                    },
                    unsubscribeUserStatus: {
                        userIDList: {
                            type: "Array",
                            validator: function(e, t, n) {
                                return !e || !!Je(e) || (zt({
                                    api: t,
                                    paramName: n,
                                    desc: nn()
                                }), !1)
                            }
                        }
                    },
                    addFriend: {
                        to: X,
                        source: {
                            type: "String",
                            required: !0,
                            validator: function(e, t, n) {
                                return !(!e || (e.startsWith("AddSource_Type_") ? 8 < e.replace("AddSource_Type_", "").length && (zt({
                                    api: t,
                                    paramName: n,
                                    desc: rn("keyword", 8)
                                }), 1) : (zt({
                                    api: t,
                                    paramName: n,
                                    desc: On("SourcePrefixLog")
                                }), 1)))
                            }
                        },
                        remark: {
                            type: "String",
                            required: !1,
                            validator: function(e, t, n) {
                                return !(ct(e) && 96 < e.length && (zt({
                                    api: t,
                                    paramName: n,
                                    desc: rn(n, 96)
                                }), 1))
                            }
                        }
                    },
                    deleteFriend: {
                        userIDList: $
                    },
                    checkFriend: {
                        userIDList: $
                    },
                    getFriendProfile: {
                        userIDList: $
                    },
                    updateFriend: {
                        userID: X,
                        remark: {
                            type: "String",
                            required: !1,
                            validator: function(e, t, n) {
                                return !(ct(e) && 96 < e.length && (zt({
                                    api: t,
                                    paramName: n,
                                    desc: rn(n, 96)
                                }), 1))
                            }
                        },
                        friendCustomField: {
                            type: "Array",
                            required: !1,
                            validator: function(e, t, n) {
                                if (e) {
                                    if (!Je(e)) return zt({
                                        api: t,
                                        paramName: n,
                                        desc: nn()
                                    }), !1;
                                    var o = !0;
                                    return e.forEach((function(e) {
                                        return ct(e.key) && -1 !== e.key.indexOf("Tag_SNS_Custom") ? ct(e.value) ? 8 < e.key.replace("Tag_SNS_Custom_", "").length ? (zt({
                                            api: t,
                                            paramName: n,
                                            desc: rn("keyword", 8)
                                        }), o = !1) : void 0 : (zt({
                                            api: t,
                                            paramName: n,
                                            desc: un("value")
                                        }), o = !1) : (zt({
                                            api: t,
                                            paramName: n,
                                            desc: On("FriendCustomFieldPrefixLog")
                                        }), o = !1)
                                    })), o
                                }
                                return !0
                            }
                        }
                    },
                    acceptFriendApplication: {
                        userID: X
                    },
                    refuseFriendApplication: {
                        userID: X
                    },
                    deleteFriendApplication: {
                        userID: X
                    },
                    createFriendGroup: {
                        name: X
                    },
                    deleteFriendGroup: {
                        name: X
                    },
                    addToFriendGroup: {
                        name: X,
                        userIDList: $
                    },
                    removeFromFriendGroup: {
                        name: X,
                        userIDList: $
                    },
                    renameFriendGroup: {
                        oldName: X,
                        newName: X
                    },
                    sendMessageReadReceipt: [{
                        name: "messageList",
                        type: "Array",
                        validator: function(e, t, n) {
                            return Je(e) ? 0 !== e.length || (zt({
                                api: t,
                                paramName: n,
                                desc: on()
                            }), !1) : (zt({
                                api: t,
                                paramName: n,
                                desc: nn()
                            }), !1)
                        }
                    }],
                    getMessageReadReceiptList: [{
                        name: "messageList",
                        type: "Array",
                        validator: function(e, t, n) {
                            return Je(e) ? 0 !== e.length || (zt({
                                api: t,
                                paramName: n,
                                desc: on()
                            }), !1) : (zt({
                                api: t,
                                paramName: n,
                                desc: nn()
                            }), !1)
                        }
                    }],
                    createTopicInCommunity: {
                        groupID: X,
                        topicName: X
                    },
                    deleteTopicFromCommunity: {
                        groupID: X,
                        topicIDList: {
                            type: "Array",
                            validator: function(e, t, n) {
                                return !e || !!Je(e) || (zt({
                                    api: t,
                                    paramName: n,
                                    desc: nn()
                                }), !1)
                            }
                        }
                    },
                    updateTopicProfile: {
                        groupID: X,
                        topicID: X
                    },
                    getTopicList: {
                        groupID: X,
                        topicIDList: {
                            type: "Array",
                            validator: function(e, t, n) {
                                return !e || !!Je(e) || (zt({
                                    api: t,
                                    paramName: n,
                                    desc: nn()
                                }), !1)
                            }
                        }
                    },
                    followUser: [t({
                        name: "userIDList"
                    }, $)],
                    unfollowUser: [t({
                        name: "userIDList"
                    }, $)],
                    getMyFollowingList: [t(t({
                        name: "startIndex"
                    }, X), {}, {
                        required: !1
                    })],
                    getMyFollowersList: [t(t({
                        name: "startIndex"
                    }, X), {}, {
                        required: !1
                    })],
                    getMutualFollowersList: [t(t({
                        name: "startIndex"
                    }, X), {}, {
                        required: !1
                    })],
                    getUserFollowInfo: [t(t({
                        name: "userIDList"
                    }, $), {}, {
                        required: !1
                    })],
                    checkFollowType: [t({
                        name: "userIDList"
                    }, $)],
                    addSignalingListener: [{
                        name: "eventName",
                        type: "String",
                        validator: function(e, t, n) {
                            return "string" == typeof e && 0 !== e.length || (zt({
                                api: t,
                                paramName: n,
                                desc: Zt(n)
                            }), !1)
                        }
                    }, {
                        name: "handler",
                        type: "Function",
                        validator: function(e, t, n) {
                            return "function" != typeof e ? (zt({
                                api: t,
                                paramName: n,
                                desc: tn()
                            }), !1) : ("" === e.name && zt({
                                api: t,
                                paramName: n,
                                desc: hn()
                            }), !0)
                        }
                    }],
                    removeSignalingListener: [{
                        name: "eventName",
                        type: "String",
                        validator: function(e, t, n) {
                            return "string" == typeof e && 0 !== e.length || (zt({
                                api: t,
                                paramName: n,
                                desc: Zt(n)
                            }), !1)
                        }
                    }, {
                        name: "handler",
                        type: "Function",
                        validator: function(e, t, n) {
                            return "function" != typeof e ? (zt({
                                api: t,
                                paramName: n,
                                desc: tn()
                            }), !1) : ("" === e.name && zt({
                                api: t,
                                paramName: n,
                                desc: hn()
                            }), !0)
                        }
                    }],
                    invite: {
                        userID: X
                    },
                    inviteSync: [t(t({}, J), {}, {
                        validator: function(e, t, n) {
                            return je(e) ? !!ct(e.userID) || (zt({
                                api: t,
                                paramName: "options.userID",
                                desc: Xt()
                            }), !1) : (zt({
                                api: t,
                                paramName: "options",
                                desc: ln()
                            }), !1)
                        }
                    }), {
                        name: "successCb",
                        type: "Function",
                        required: !1,
                        validator: function(e, t, n) {
                            return ut(e) && zt({
                                api: t,
                                paramName: n,
                                desc: tn()
                            }), !0
                        }
                    }, {
                        name: "errorCb",
                        type: "Function",
                        required: !1,
                        validator: function(e, t, n) {
                            return ut(e) && zt({
                                api: t,
                                paramName: n,
                                desc: tn()
                            }), !0
                        }
                    }],
                    inviteInGroup: {
                        groupID: X,
                        inviteeList: $
                    },
                    inviteInGroupSync: [t(t({}, J), {}, {
                        validator: function(e, t, n) {
                            return je(e) ? ct(e.groupID) ? !!Je(e.inviteeList) || (zt({
                                api: t,
                                paramName: "options.inviteeList",
                                desc: nn()
                            }), !1) : (zt({
                                api: t,
                                paramName: "options.groupID",
                                desc: Xt()
                            }), !1) : (zt({
                                api: t,
                                paramName: "options",
                                desc: ln()
                            }), !1)
                        }
                    }), {
                        name: "successCb",
                        type: "Function",
                        required: !1,
                        validator: function(e, t, n) {
                            return ut(e) && zt({
                                api: t,
                                paramName: n,
                                desc: tn()
                            }), !0
                        }
                    }, {
                        name: "errorCb",
                        type: "Function",
                        required: !1,
                        validator: function(e, t, n) {
                            return ut(e) && zt({
                                api: t,
                                paramName: n,
                                desc: tn()
                            }), !0
                        }
                    }],
                    accept: {
                        inviteID: X
                    },
                    reject: {
                        inviteID: X
                    },
                    getSignalingInfo: [t(t({
                        name: "message"
                    }, J), {}, {
                        validator: function(e, t, n) {
                            return !He(e) || (zt({
                                api: t,
                                paramName: n,
                                desc: _n()
                            }), !1)
                        }
                    })],
                    modifyInvitation: {
                        inviteID: X,
                        data: X
                    }
                },
                Gn = {
                    login: 1,
                    logout: 1,
                    getLoginUser: 1,
                    on: 1,
                    once: 1,
                    off: 1,
                    setLogLevel: 1,
                    registerPlugin: 1,
                    destroy: 1,
                    isReady: 1,
                    createTextMessage: 1,
                    createTextAtMessage: 1,
                    createImageMessage: 1,
                    createAudioMessage: 1,
                    createVideoMessage: 1,
                    createCustomMessage: 1,
                    createFaceMessage: 1,
                    createFileMessage: 1,
                    createLocationMessage: 1,
                    createMergerMessage: 1,
                    downloadMergerMessage: 1,
                    createForwardMessage: 1,
                    sendMessage: 1,
                    resendMessage: 1,
                    revokeMessage: 1,
                    deleteMessage: 1,
                    translateText: 1,
                    convertVoiceToText: 1,
                    modifyMessage: 1,
                    searchCloudMessages: 1,
                    sendMessageReadReceipt: 1,
                    getGroupMessageReadMemberList: 1,
                    getMessageReadReceiptList: 1,
                    setMessageExtensions: 1,
                    getMessageExtensions: 1,
                    deleteMessageExtensions: 1,
                    addMessageReaction: 1,
                    removeMessageReaction: 1,
                    getMessageReactions: 1,
                    getAllUserListOfMessageReaction: 1,
                    getMessageList: 1,
                    findMessage: 1,
                    getMessageListHopping: 1,
                    setMessageRead: 1,
                    setAllMessageRead: 1,
                    getConversationList: 1,
                    getConversationProfile: 1,
                    deleteConversation: 1,
                    setConversationDraft: 1,
                    pinConversation: 1,
                    getTotalUnreadMessageCount: 1,
                    setConversationCustomData: 1,
                    markConversation: 1,
                    createConversationGroup: 1,
                    getConversationGroupList: 1,
                    deleteConversationGroup: 1,
                    renameConversationGroup: 1,
                    addConversationsToGroup: 1,
                    deleteConversationsFromGroup: 1,
                    clearHistoryMessage: 1,
                    setMessageRemindType: 1,
                    setAllReceiveMessageOpt: 1,
                    getAllReceiveMessageOpt: 1,
                    getGroupList: 1,
                    getGroupProfile: 1,
                    createGroup: 1,
                    joinGroup: 1,
                    updateGroupProfile: 1,
                    quitGroup: 1,
                    dismissGroup: 1,
                    changeGroupOwner: 1,
                    searchGroupByID: 1,
                    getGroupApplicationList: 1,
                    handleGroupApplication: 1,
                    initGroupAttributes: 1,
                    setGroupAttributes: 1,
                    deleteGroupAttributes: 1,
                    getGroupAttributes: 1,
                    setGroupCounters: 1,
                    increaseGroupCounter: 1,
                    decreaseGroupCounter: 1,
                    getGroupCounters: 1,
                    getJoinedCommunityList: 1,
                    createTopicInCommunity: 1,
                    deleteTopicFromCommunity: 1,
                    updateTopicProfile: 1,
                    getTopicList: 1,
                    getGroupMemberProfile: 1,
                    getGroupMemberList: 1,
                    addGroupMember: 1,
                    deleteGroupMember: 1,
                    setGroupMemberNameCard: 1,
                    setGroupMemberMuteTime: 1,
                    setGroupMemberRole: 1,
                    setGroupMemberCustomField: 1,
                    getGroupOnlineMemberCount: 1,
                    markGroupMemberList: 1,
                    getMyProfile: 1,
                    getUserProfile: 1,
                    updateMyProfile: 1,
                    setSelfStatus: 1,
                    getUserStatus: 1,
                    subscribeUserStatus: 1,
                    unsubscribeUserStatus: 1,
                    getBlacklist: 1,
                    addToBlacklist: 1,
                    removeFromBlacklist: 1,
                    getFriendList: 1,
                    addFriend: 1,
                    deleteFriend: 1,
                    checkFriend: 1,
                    updateFriend: 1,
                    getFriendProfile: 1,
                    getFriendApplicationList: 1,
                    refuseFriendApplication: 1,
                    deleteFriendApplication: 1,
                    acceptFriendApplication: 1,
                    setFriendApplicationRead: 1,
                    getFriendGroupList: 1,
                    createFriendGroup: 1,
                    renameFriendGroup: 1,
                    deleteFriendGroup: 1,
                    addToFriendGroup: 1,
                    removeFromFriendGroup: 1,
                    followUser: 1,
                    unfollowUser: 1,
                    getMyFollowingList: 1,
                    getMyFollowersList: 1,
                    getMutualFollowersList: 1,
                    getUserFollowInfo: 1,
                    checkFollowType: 1,
                    callExperimentalAPI: 1,
                    addSignalingListener: 1,
                    removeSignalingListener: 1,
                    invite: 1,
                    inviteSync: 1,
                    inviteInGroup: 1,
                    inviteInGroupSync: 1,
                    cancel: 1,
                    accept: 1,
                    reject: 1,
                    getSignalingInfo: 1,
                    modifyInvitation: 1
                },
                Pn = (c(oo, function(e) {
                    var t = "function" == typeof Map ? new Map : void 0;
                    return function(e) {
                        if (null === e || -1 === Function.toString.call(e).indexOf("[native code]")) return e;
                        if ("function" != typeof e) throw new TypeError("Super expression must either be null or a function");
                        if (void 0 !== t) {
                            if (t.has(e)) return t.get(e);
                            t.set(e, n)
                        }

                        function n() {
                            return p(e, arguments, u(this).constructor)
                        }
                        return n.prototype = Object.create(e.prototype, {
                            constructor: {
                                value: n,
                                enumerable: !1,
                                writable: !0,
                                configurable: !0
                            }
                        }), l(n, e)
                    }(e)
                }(Error)), yn = g(oo), s(oo)),
                Un = {
                    NO_SDKAPPID: 2e3,
                    NO_ACCOUNT_TYPE: 2001,
                    NO_IDENTIFIER: 2002,
                    NO_USERSIG: 2003,
                    NO_TINYID: 2022,
                    NO_A2KEY: 2023,
                    USER_NOT_LOGGED_IN: 2024,
                    REPEAT_LOGIN: 2025,
                    COS_UNDETECTED: 2040,
                    COS_GET_SIG_FAIL: 2041,
                    MSG_SEND_FAIL: 2100,
                    MSG_SEND_FAIL_NOT_IN_AV: 2101,
                    MSG_INSTANCE_REQUIRED: 2105,
                    MSG_INVALID_CONV_TYPE: 2106,
                    MSG_F_IS_EMPTY: 2108,
                    MSG_ONPROGRESS_ERR: 2109,
                    MSG_REVOKE_FAIL: 2110,
                    MSG_DELETE_FAIL: 2111,
                    MSG_UNREAD_ALL_FAIL: 2112,
                    READ_RECEIPT_MSG_LIST_EMPTY: 2114,
                    MSG_SEND_GRP_WITH_TOPIC_FAIL: 2115,
                    CANNOT_DELETE_GRP_SYSTEM_NOTICE: 2116,
                    TRANSLATE_TEXT_FAIL: 2117,
                    VOICE_TO_TEXT_FAIL: 2118,
                    UNSUPPORTED_VOICE_FORMAT: 2119,
                    MSG_I_SELECT_F_FIRST: 2251,
                    MSG_I_TYPES_LIMIT: 2252,
                    MSG_I_SIZE_LIMIT: 2253,
                    MSG_A_UPLOAD_FAIL: 2300,
                    MSG_A_SIZE_LIMIT: 2301,
                    MSG_V_UPLOAD_FAIL: 2350,
                    MSG_V_SIZE_LIMIT: 2351,
                    MSG_V_TYPES_LIMIT: 2352,
                    MSG_F_UPLOAD_FAIL: 2400,
                    MSG_F_SELECT_F_FIRST: 2401,
                    MSG_F_SIZE_LIMIT: 2402,
                    MSG_F_URL_IS_EMPTY: 2403,
                    MSG_MERGER_TYPE_INVALID: 2450,
                    MSG_MERGER_KEY_INVALID: 2451,
                    MSG_MERGER_DOWNLOAD_FAIL: 2452,
                    MSG_FORWARD_TYPE_INVALID: 2453,
                    MSG_FORWARD_INVALID_ELEMENTS: 2454,
                    MSG_MODIFY_CONFLICT: 2480,
                    MSG_MODIFY_DISABLED_IN_AV: 2481,
                    CONV_NOT_FOUND: 2500,
                    USER_OR_GRP_NOT_FOUND: 2501,
                    CONV_UN_RECORDED_TYPE: 2502,
                    INVALID_CONV_ID: 2503,
                    ILLEGAL_GRP_TYPE: 2600,
                    ILLEGAL_GRP_ID: 2602,
                    CANNOT_FIND_GRP: 2603,
                    CANNOT_CHANGE_OWNER_IN_AV: 2620,
                    CANNOT_CHANGE_OWNER_TO_SELF: 2621,
                    MEMBER_NOT_IN_GRP: 2623,
                    JOIN_GRP_FAIL: 2660,
                    CANNOT_ADD_MEMBER_IN_AV: 2661,
                    CANNOT_JOIN_NON_AV_WITHOUT_LOGIN: 2662,
                    NOT_OWNER: 2681,
                    CANNOT_SET_MEMBER_ROLE_IN_WORK_AND_AV: 2682,
                    INVALID_MEMBER_ROLE: 2683,
                    CANNOT_SET_SELF_MEMBER_ROLE: 2684,
                    CANNOT_MUTE_SELF: 2685,
                    BAN_DURATION_INVALID: 2686,
                    OPERATION_NOT_SUPPORTED_IN_AV: 2687,
                    NOT_MY_FRIEND: 2700,
                    ALREADY_MY_FRIEND: 2701,
                    FRIEND_GRP_EXISTED: 2710,
                    FRIEND_GRP_NOT_EXIST: 2711,
                    FRIEND_APPLICATION_NOT_EXIST: 2716,
                    UPDATE_PROFILE_INVALID_PARAM: 2721,
                    UPDATE_PROFILE_NO_KEY: 2722,
                    CANNOT_ADD_SELF_TO_BLACKLIST: 2742,
                    NETWORK_ERROR: 2800,
                    NETWORK_TIMEOUT: 2801,
                    NO_NETWORK: 2805,
                    UNCAUGHT_ERROR: 2903,
                    INVALID_OPERATION: 2905,
                    INVALID_TRTC_CMD: 2995,
                    OVER_FREQUENCY_LIMIT: 2996,
                    NO_PROTOCOL: 2997,
                    NO_MODULE: 2998,
                    SDK_IS_NOT_READY: 2999,
                    LOGGING_IN: 3e3,
                    LOGIN_FAILED: 3001,
                    KICKED_OUT_MULT_DEVICE: 3002,
                    KICKED_OUT_MULT_ACCOUNT: 3003,
                    KICKED_OUT_USERSIG_EXPIRED: 3004,
                    LOGGED_OUT: 3005,
                    KICKED_OUT_REST_API: 3006,
                    ILLEGAL_TOPIC_ID: 3021,
                    NO_USE: 3122,
                    PROFANITY_FOUND: 3123,
                    OPTIONS_IS_EMPTY: 3153,
                    MSG_A2KEY_EXPIRED: 20002,
                    ACCOUNT_A2KEY_EXPIRED: 70001,
                    HELLO_ANSWER_KICKED_OUT: 1002,
                    OPEN_SERVICE_OVERLOAD_ERROR: 60022,
                    SIGNALING_INVALID_INVITE_ID: 8010,
                    SIGNALING_NO_PERMISSION: 8011,
                    SIGNALING_ALREADY_EXISTS: 8012,
                    INVALID_CANCEL_MESSAGE: 8020,
                    MSG_SEARCH_CURSOR_INVALID: 27002,
                    MSG_SEARCH_CURSOR_EXPIRED: 27003
                },
                bn = null,
                wn = (s(no, [{
                    key: "isLoggedIn",
                    value: function() {
                        return this._m.get(12).isLoggedIn()
                    }
                }, {
                    key: "isOversea",
                    value: function() {
                        return this._m.get(12).isOversea()
                    }
                }, {
                    key: "isPrivateNetWork",
                    value: function() {
                        var e = this._m.get(12);
                        return e.isPrivateNetWork() && !e.getFileDownloadProxy()
                    }
                }, {
                    key: "getFileDownloadProxy",
                    value: function() {
                        return this._m.get(12).getFileDownloadProxy()
                    }
                }, {
                    key: "getDowloadFileAuthKey",
                    value: function() {
                        return this._m.get(12).getDowloadFileAuthKey()
                    }
                }, {
                    key: "getMyUserID",
                    value: function() {
                        return this._m.get(12).getUserID()
                    }
                }, {
                    key: "getMyTinyID",
                    value: function() {
                        return this._m.get(12).getTinyID()
                    }
                }, {
                    key: "getSDKAppID",
                    value: function() {
                        return this._m.get(12).getSDKAppID()
                    }
                }, {
                    key: "isIntl",
                    value: function() {
                        return this._m.get(12).isIntl()
                    }
                }, {
                    key: "isUsingChatCore",
                    value: function() {
                        return this._m.get(12).isUsingChatCore()
                    }
                }, {
                    key: "isDevMode",
                    value: function() {
                        return this._m.get(12).isDevMode()
                    }
                }, {
                    key: "get",
                    value: function(e) {
                        return this._m.get(e)
                    }
                }, {
                    key: "getPlatform",
                    value: function() {
                        return ie
                    }
                }, {
                    key: "getCloudConfig",
                    value: function(e) {
                        return this._m.get(23).getCloudConfig(e)
                    }
                }, {
                    key: "emitOEvt",
                    value: function(e, t) {
                        this._m.getOEmitInst().emit(e, t)
                    }
                }, {
                    key: "emitIEvt",
                    value: function(e, t) {
                        this._m.getIEmitInst().emit(e, t)
                    }
                }, {
                    key: "getIEmitInst",
                    value: function() {
                        return this._m.getIEmitInst()
                    }
                }, {
                    key: "generateTjgID",
                    value: function(e) {
                        return this._m.get(12).getTinyID() + "-" + e.random
                    }
                }, {
                    key: "req",
                    value: function(e) {
                        return this._m.get(20).req(e)
                    }
                }, {
                    key: "canIUse",
                    value: function(e) {
                        return this._m.get(27).canIUse(e)
                    }
                }, {
                    key: "getErrMsg",
                    value: function(e, t, n) {
                        return this._m.getErrMsg(e, t, n)
                    }
                }, {
                    key: "warn",
                    value: function(e, t, n) {
                        (e = this.getErrMsg(e, t, n)) && Oe.w(e)
                    }
                }, {
                    key: "noUse",
                    value: function(e) {
                        var t = Un.NO_USE;
                        return Mn({
                            code: t,
                            message: this.getErrMsg(t, e)
                        })
                    }
                }]), Rn = no, {
                    LOGIN: "wslogin",
                    LOGOUT: "wslogout",
                    HELLO: "wshello",
                    KICK_OTHER: "KickOther",
                    SYNC_UNREAD_MSG: "getmsg",
                    SEND_C2C_MSG: "sendmsg",
                    SEND_GRP_MSG: "send_group_msg",
                    GET_USER_PROFILE: "portrait_get_all",
                    UPDATE_MY_PROFILE: "portrait_set",
                    GET_BL: "black_list_get",
                    ADD_TO_BL: "black_list_add",
                    RM_FROM_BL: "black_list_delete",
                    GET_FD_LIST: "friend_get",
                    GET_FD_PROFILE: "friend_get_specified",
                    CHECK_FD: "friend_check",
                    DEL_FD: "friend_delete",
                    ADD_FD: "friend_add",
                    UPDATE_FD: "friend_update",
                    RESPOND_FD_APPLICATION: "friend_response",
                    GET_FD_APPLICATION_LIST: "pendency_get",
                    DEL_FD_APPLICATION: "pendency_delete",
                    REFUSE_FD_APPLICATION: "pendency_refuse",
                    REPORT_FD_APPLICATION: "pendency_report",
                    GET_FD_GRP_LIST: "group_get",
                    CREATE_FD_GRP: "group_add",
                    DEL_FD_GRP: "group_delete",
                    UPDATE_FD_GRP: "group_update",
                    REVOKE_C2C_MSG: "msgwithdraw",
                    SET_C2C_MSG_READ: "msgreaded",
                    SET_C2C_PEER_MUTE_NOTIFICATIONS: "set_c2c_peer_mute_notifications",
                    GET_C2C_PEER_MUTE_NOTIFICATIONS: "get_c2c_peer_mute_notifications",
                    GET_C2C_ROAMING_MSG: "getroammsg",
                    GET_C2C_PEER_READ_TIME: "get_peer_read_time",
                    DEL_C2C_MSG: "delete_c2c_msg_ramble",
                    MODIFY_C2C_MSG: "modify_c2c_msg",
                    MODIFY_C2C_MSG_EXT: "set_key_values",
                    GET_C2C_MSG_EXT: "get_key_values",
                    ADD_C2C_MSG_REACTION: "reaction_add",
                    RM_C2C_MSG_REACTION: "reaction_del",
                    GET_C2C_MSG_REACTIONS: "reaction_multi_stat",
                    GET_C2C_MSG_REACTION_USER_LIST: "reaction_iterate",
                    PAGING_GET_CONV_LIST: "page_get",
                    DEL_CONV: "batch_delete",
                    CLEAR_HISTORY_MSG: "clear_msg",
                    PIN_CONV: "top",
                    DEL_GROUP_AT_TIPS: "deletemsg",
                    SET_CONV_CUSTOM_DATA: "set_conv_custom_data",
                    MARK_CONV: "mark_contact",
                    CREATE_CONV_GRP: "create_contact_group",
                    DEL_CONV_GRP: "del_contact_group",
                    RENAME_CONV_GRP: "update_contact_group",
                    ADD_CONV_TO_GRP: "add_conv_to_group",
                    DEL_CONV_FROM_GRP: "del_conv_from_group",
                    GET_CONV_GRP_LIST: "get_contact_group",
                    SEARCH_CONV_GRP_MARK: "search_contact_group",
                    GET_GRP_LIST: "get_joined_group_list",
                    GET_GRP_PROFILE: "get_group_self_member_info",
                    CREATE_GRP: "create_group",
                    DISMISS_GRP: "destroy_group",
                    UPDATE_GRP_PROFILE: "modify_group_base_info",
                    APPLY_JOIN_GRP: "apply_join_group",
                    APPLY_JOIN_GRP_NOAUTH: "apply_join_group_noauth",
                    QUIT_GRP: "quit_group",
                    SEARCH_GRP: "get_group_public_info",
                    CHANGE_GRP_OWNER: "change_group_owner",
                    HANDLE_GRP_APPLICATION: "handle_apply_join_group",
                    HANDLE_INVITE_JOIN_GRP: "handle_invite_join_permission_group",
                    HANDLE_GRP_INVITATION: "handle_invite_join_group",
                    REVOKE_GRP_MSG: "group_msg_recall",
                    SET_GRP_MSG_READ: "msg_read_report",
                    SET_ALL_MSG_READ: "read_all_unread_msg",
                    GET_GRP_ROAMING_MSG: "group_msg_get",
                    GET_READ_RECEIPT: "get_group_msg_receipt",
                    SEND_READ_RECEIPT: "group_msg_receipt",
                    SEND_C2C_READ_RECEIPT: "c2c_msg_read_receipt",
                    GET_READ_RECEIPT_DETAIL: "get_group_msg_receipt_detail",
                    GET_GRP_PENDENCY: "get_pendency",
                    DEL_GRP_SYSTEM_NOTICE: "deletemsg",
                    AV_POLLING: "get_msg",
                    AV_NOAUTH_POLLING: "get_msg_noauth",
                    GET_ONLINE_MBR_NUM: "get_online_member_num",
                    DEL_GRP_MSG: "delete_group_ramble_msg_by_seq",
                    MODIFY_GRP_MSG: "modify_group_msg",
                    SET_GRP_ATTR: "set_group_attr",
                    MODIFY_GRP_ATTR: "modify_group_attr",
                    DEL_GRP_ATTR: "delete_group_attr",
                    CLEAR_GRP_ATTR: "clear_group_attr",
                    GET_GRP_ATTR: "get_group_attr",
                    MODIFY_GRP_MSG_EXT: "group_set_key_values",
                    GET_GRP_MSG_EXT: "group_get_key_values",
                    GET_GRP_NOTIFY: "batch_get_group_notify",
                    UPDATE_GRP_COUNTER: "update_group_counter",
                    GET_GRP_COUNTER: "get_group_counter",
                    ADD_GRP_MSG_REACTION: "group_reaction_add",
                    RM_GRP_MSG_REACTION: "group_reaction_del",
                    GET_GRP_MSG_REACTIONS: "group_reaction_multi_stat",
                    GET_GRP_MSG_REACTION_USER_LIST: "group_reaction_iterate",
                    GET_GRP_MBR_LIST: "get_group_member_info",
                    GET_AV_MBR_LIST: "get_members",
                    GET_GRP_MBR_PROFILE: "get_specified_group_member_info",
                    ADD_GRP_MBR: "add_group_member",
                    DEL_GRP_MBR: "delete_group_member",
                    BAN_AV_MBR: "ban_group_member",
                    MODIFY_GRP_MBR_INFO: "modify_group_member_info",
                    MARK_AV_MBR_INFO: "modify_user_info",
                    COS_SIGN: "cos",
                    COS_PRE_SIG: "pre_sig",
                    SIMPLE_COS_PRE_SIG: "simple_sig",
                    GET_IMAGE_INFO: "get_imageinfo",
                    GET_IP: "get_final_ip",
                    VIDEO_COVER: "video_cover",
                    SSO_STAT: "tim_web_report_v2",
                    PING: "alive",
                    MSG_PUSH: "msg_push",
                    MSG_CLOUD_SEARCH: "query",
                    MULTI_MSG_PUSH: "multi_msg_push_ws",
                    MSG_PUSH_ACK: "ws_msg_push_ack",
                    STATUS_FORCE_OFFLINE: "stat_forceoffline",
                    UPLOAD_MERGER_MSG: "save_relay_json_msg",
                    DOWNLOAD_MERGER_MSG: "get_relay_json_msg",
                    FETCH_CLOUD_CTRL_CONFIG: "fetch_config",
                    PUSHED_CLOUD_CTRL_CONFIG: "push_configv2",
                    FETCH_COMMERCIAL_CONFIG: "fetch_imsdk_purchase_bitsv2",
                    PUSHED_COMMERCIAL_CONFIG: "push_imsdk_purchase_bitsv2",
                    OVERLOAD_NOTIFY: "notify2",
                    CREATE_TOPIC: "create_topic",
                    DEL_TOPIC: "destroy_topic",
                    UPDATE_TOPIC_PROFILE: "modify_topic",
                    GET_TOPIC_LIST: "get_topic",
                    SET_SELF_STATUS: "ws_set_custom_status",
                    GET_USER_STATUS: "ws_get_user_status",
                    SUB_USER_STATUS: "ws_status_subscribe",
                    UNSUB_USER_STATUS: "ws_status_unsubscribe",
                    STAT_BACKGROUND: "ws_stat_background",
                    STAT_FOREGROUND: "ws_stat_foreground",
                    SET_TOKEN: "ws_stat_settoken",
                    PUSH_REPORT: "uniapp_sdk_report",
                    GET_PROFANITY_LIST: "get_local_words",
                    TRANSLATE_TEXT: "ws_batch_trans_text",
                    VOICE_TO_TEXT: "ws_sentence_recognition",
                    FOLLOW: "follow_add",
                    UNFOLLOW: "follow_delete",
                    GET_FOLLOW: "follow_get",
                    GET_FOLLOW_INFO: "follow_get_info",
                    CHECK_FOLLOW_TYPE: "follow_check",
                    SET_ALL_RECEIVE_MSG_OPT: "ws_set_do_not_disturb",
                    GET_ALL_RECEIVE_MSG_OPT: "ws_get_do_not_disturb"
                }),
                Fn = "networkRTT",
                qn = "messageE2EDelay",
                xn = "sendMessageC2C",
                Vn = "sendMessageGroup",
                Hn = "sendMessageGroupAV",
                Bn = "sendMessageRichMedia",
                Kn = "cosUpload",
                Yn = "messageReceivedGroup",
                Wn = "messageReceivedGroupAVPush",
                jn = "messageReceivedGroupAVPull",
                Jn = (r(An = {}, Fn, 2), r(An, qn, 3), r(An, xn, 4), r(An, Vn, 5), r(An, Hn, 6), r(An, Bn, 7), r(An, Yn, 8), r(An, Wn, 9), r(An, jn, 10), r(An, Kn, 11), An),
                zn = {
                    info: 4,
                    warning: 5,
                    error: 6
                },
                Xn = {
                    wifi: 1,
                    "2g": 2,
                    "3g": 3,
                    "4g": 4,
                    "5g": 5,
                    unknown: 6,
                    none: 7,
                    online: 8
                },
                Zn = {
                    login: 4,
                    plugin_search: 16,
                    plugin_translate: 16,
                    plugin_voice_to_text: 16,
                    plugin_cs: 16,
                    plugin_push: 16,
                    plugin_bot: 16,
                    plugin_emoji_reaction: 16
                },
                Qn = (s(to, [{
                    key: "updateTimeStamp",
                    value: function() {
                        this.timestamp = Se()
                    }
                }, {
                    key: "start",
                    value: function(e) {
                        return this._startts = e, this
                    }
                }, {
                    key: "end",
                    value: function() {
                        var e, t = this,
                            n = 0 < arguments.length && void 0 !== arguments[0] && arguments[0];
                        this._sentFlag || (this._netMonitorModule && (e = this._netMonitorModule.getNetworkType(), this.setNetworkType(e)), e = Se(), 0 === this.costTime && (this.costTime = e - this._startts), this.setMoreMessage("startts:".concat(this._startts, " endts:").concat(e)), n ? (this._sentFlag = !0, this._eventStatModule && this._eventStatModule.pushIn(this)) : setTimeout((function() {
                            t._sentFlag = !0, t._eventStatModule && t._eventStatModule.pushIn(t)
                        }), 0))
                    }
                }, {
                    key: "setError",
                    value: function(e) {
                        if (!(e instanceof Error)) return Oe.w("".concat(this._n, ".setError value not instanceof Error, please check!")), this;
                        if (this._sentFlag) return this;
                        var t = !0;
                        return (t = this._netMonitorModule ? this._netMonitorModule.isOnline() : t) ? (e.code && this.setCode(e.code), e.message && this.setMoreMessage(e.message)) : this.setCode(Un.NO_NETWORK), this.setLevel("error"), this
                    }
                }, {
                    key: "setCode",
                    value: function(e) {
                        return ut(e) || this._sentFlag || ("ECONNABORTED" === e && (this.code = 103), Ye(e) ? this.code = e : Oe.w("".concat(this._n, ".setCode value not a number, please check!"), e, o(e))), this
                    }
                }, {
                    key: "setMessage",
                    value: function(e) {
                        return ut(e) || this._sentFlag || (Ye(e) && (this.message = e.toString()), ct(e) && (this.message = e)), this
                    }
                }, {
                    key: "setCostTime",
                    value: function(e) {
                        return this.costTime = e, this
                    }
                }, {
                    key: "setLevel",
                    value: function(e) {
                        return ut(e) || this._sentFlag || (this.level = zn[e]), this
                    }
                }, {
                    key: "setMoreMessage",
                    value: function(e) {
                        return He(this.moreMessage) ? this.moreMessage = "".concat(e) : this.moreMessage += " ".concat(e), this
                    }
                }, {
                    key: "setNetworkType",
                    value: function(e) {
                        return ut(e) ? Oe.w("".concat(this._n, ".setNetworkType value is undefined, please check!")) : (e = Xn[e.toLowerCase()], ut(e) || (this.networkType = e)), this
                    }
                }, {
                    key: "getStartTs",
                    value: function() {
                        return this._startts
                    }
                }, {
                    key: "setUIPlatform",
                    value: function(e) {
                        return this.uiPlatform = e, this
                    }
                }, {
                    key: "setExtension",
                    value: function(e) {
                        return this.extension = e, this
                    }
                }, {
                    key: "setEventType",
                    value: function(e) {
                        return this.eventType = e, this
                    }
                }], [{
                    key: "bindEventStatModule",
                    value: function(e) {
                        to.prototype._eventStatModule = e
                    }
                }, {
                    key: "bindNetMonitorModule",
                    value: function(e) {
                        to.prototype._netMonitorModule = e
                    }
                }]), to),
                $n = (s(eo, [{
                    key: "setText",
                    value: function(e) {
                        this.content.text = e
                    }
                }, {
                    key: "sendable",
                    value: function() {
                        return 0 !== this.content.text.length
                    }
                }]), eo);

            function eo(e) {
                i(this, eo), this.type = E.MSG_TEXT, this.content = {
                    text: e.text || ""
                }
            }

            function to(e) {
                i(this, to), this._n = "SSOLogData", this.eventType = Zn[e] || 0, this.timestamp = 0, this.networkType = 8, this.code = 0, this.message = "", this.moreMessage = "", this.extension = e, this.costTime = 0, this.duplicate = !1, this.level = 4, this.uiPlatform = void 0, this._sentFlag = !1, this._startts = Se()
            }

            function no(e) {
                i(this, no), this._m = e, this._n = ""
            }

            function oo(e) {
                i(this, oo), t = yn.call(this);
                var t, n = e.code,
                    o = e.message;
                return e = e.data, t.code = n, o ? t.message = o : t._getErrMsg && (t.message = t._getErrMsg(t.code)), t.data = e || {}, t
            }

            function io(e, t, n, o) {
                var i;
                if (o = 3 < arguments.length && void 0 !== o ? o : [], e) return i = e, t && (e.startsWith("http://") ? i = e.replace(/^http:\/\/[^/]+/, t) : e.startsWith("https://") && (i = e.replace(/^https:\/\/[^/]+/, t))), n && -1 === e.indexOf("authKey=") && ro(e, o) ? (-1 < e.indexOf("?") ? "".concat(e, "&authKey=") : "".concat(e, "?authKey=")).concat(n) : i
            }

            function ao(e, t, n) {
                return n = 2 < arguments.length && void 0 !== n ? n : [], e === E.MSG_VIDEO ? ro((t[0].content || t[0].payload).snapshotUrl, n) && (t[0].content ? (t[0].content.snapshotUrl = so(t[0].content.snapshotUrl), t[0].content.thumbUrl = so(t[0].content.thumbUrl)) : (t[0].payload.snapshotUrl = so(t[0].payload.snapshotUrl), t[0].payload.thumbUrl = so(t[0].payload.thumbUrl))) : e === E.MSG_FILE ? ro((t[0].content || t[0].payload).fileUrl, n) && (t[0].content ? t[0].content.fileUrl = so(t[0].content.fileUrl) : t[0].payload.fileUrl = so(t[0].payload.fileUrl)) : e === E.MSG_MERGER && (e = (n = t[0].content || t[0].payload).downloadKey, n = void 0 === (n = n.messageList) ? [] : n, He(void 0 === e ? "" : e) && n.forEach((function(e) {
                    ao(e.messageBody[0].type, e.messageBody)
                }))), t
            }

            function so(e) {
                if (!e) return e;
                if (-1 === e.indexOf("authKey=")) return e;
                for (var t = (e = e.split("?"))[1].split("&"), n = 0, o = 0; o < t.length; o++)
                    if (-1 < t[o].indexOf("authKey=")) {
                        n = o;
                        break
                    }
                return t.splice(n, 1), 0 < t.length ? "".concat(e[0], "?").concat(t.join("&")) : e[0]
            }

            function ro(e, t) {
                var n = !1;
                if (e) {
                    var o = (e = e.match(/:\/\/([0-9]?\.)?(.[^/:]+)/)) && e[2] || "";
                    if (o.includes("rich-dev")) return 1;
                    for (var i = 0; i < t.length; i++)
                        if (o.endsWith(t[i])) {
                            n = !0;
                            break
                        }
                }
                return n
            }
            s(Uo, [{
                key: "_initImageInfoModel",
                value: function() {
                    var e = this;
                    this._ImageInfoModel = function(t) {
                        this.instanceID = nt(9999999), this.sizeType = t.type || 0, this.type = 0, this.size = t.size || 0, this.width = t.width || 0, this.height = t.height || 0, this.imageUrl = t.imageUrl || t.url || "", this.url = io(t.url || e._imageMemoryURL, e._fileDownloadProxy, e._authKey, e._fileDNList)
                    }, this._ImageInfoModel.prototype = {
                        setSizeType: function(e) {
                            this.sizeType = e
                        },
                        setType: function(e) {
                            this.type = e
                        },
                        setImageUrl: function(e) {
                            e && (this.imageUrl = e)
                        },
                        getImageUrl: function() {
                            return this.imageUrl
                        }
                    }
                }
            }, {
                key: "initImageInfoArray",
                value: function(e) {
                    for (var t, n = 0, o = null; n <= 2;) t = ut(e) || ut(e[n]) ? {
                        type: 0,
                        size: 0,
                        width: 0,
                        height: 0,
                        url: ""
                    } : e[n], (o = new this._ImageInfoModel(t)).setSizeType(n + 1), o.setType(n), this.addImageInfo(o), n++;
                    this.updateAccessSideImageInfoArray()
                }
            }, {
                key: "updateImageInfoArray",
                value: function(e) {
                    for (var t, n = this.content.imageInfoArray.length, o = 0; o < n; o++) t = this.content.imageInfoArray[o], e[o].size && (t.size = e[o].size), e[o].url && t.setImageUrl(e[o].url), e[o].width && (t.width = e[o].width), e[o].height && (t.height = e[o].height)
                }
            }, {
                key: "_autoFixUrl",
                value: function() {
                    for (var e = this.content.imageInfoArray.length, t = "", n = "", o = ["http", "https"], i = null, a = 0; a < e; a++) this.content.imageInfoArray[a].url && "" !== (i = this.content.imageInfoArray[a]).imageUrl && (n = i.imageUrl.slice(0, i.imageUrl.indexOf("://") + 1), t = i.imageUrl.slice(i.imageUrl.indexOf("://") + 1), o.indexOf(n) < 0 && (n = "https:"), this.content.imageInfoArray[a].setImageUrl([n, t].join("")))
                }
            }, {
                key: "updatePercent",
                value: function(e) {
                    this._percent = e, 1 < this._percent && (this._percent = 1)
                }
            }, {
                key: "updateImageFormat",
                value: function(e) {
                    this.content.imageFormat = Ne[e.toUpperCase()] || Ne.UNKNOWN
                }
            }, {
                key: "createImageDataASURLInWeb",
                value: function(e) {
                    void 0 !== e && 0 < e.files.length && (this._imageMemoryURL = window.URL.createObjectURL(e.files[0]))
                }
            }, {
                key: "createImageDataASURL",
                value: function(e) {
                    e && e.url && (this._imageMemoryURL = e.url)
                }
            }, {
                key: "replaceImageInfo",
                value: function(e, t) {
                    this.content.imageInfoArray[t] instanceof this._ImageInfoModel || (this.content.imageInfoArray[t] = e)
                }
            }, {
                key: "addImageInfo",
                value: function(e) {
                    3 <= this.content.imageInfoArray.length || this.content.imageInfoArray.push(e)
                }
            }, {
                key: "updateAccessSideImageInfoArray",
                value: function() {
                    var e = this.content.imageInfoArray,
                        t = void 0 === (t = (n = e[0]).width) ? 0 : t,
                        n = void 0 === (n = n.height) ? 0 : n;
                    0 !== t && 0 !== n && (Nt(e), Object.assign(e[2], Ot({
                        originWidth: t,
                        originHeight: n,
                        min: 720
                    })))
                }
            }, {
                key: "sendable",
                value: function() {
                    return 0 !== this.content.imageInfoArray.length && "" !== this.content.imageInfoArray[0].imageUrl && 0 !== this.content.imageInfoArray[0].size
                }
            }]);
            var co = Uo,
                uo = (s(Po, [{
                    key: "sendable",
                    value: function() {
                        return null !== this.content
                    }
                }]), Po),
                lo = (s(Go, [{
                    key: "updatePercent",
                    value: function(e) {
                        this._percent = e, 1 < this._percent && (this._percent = 1)
                    }
                }, {
                    key: "updateAudioUrl",
                    value: function(e) {
                        this.content.remoteAudioUrl = e
                    }
                }, {
                    key: "sendable",
                    value: function() {
                        return "" !== this.content.remoteAudioUrl
                    }
                }]), Go),
                po = {
                    from: !0,
                    groupID: !0,
                    groupName: !0,
                    to: !0
                },
                _o = (s(No, [{
                    key: "_initContent",
                    value: function(e) {
                        var t = this;
                        Object.keys(e).forEach((function(n) {
                            switch (n) {
                                case "remarkInfo":
                                    break;
                                case "groupProfile":
                                    t.content.groupProfile = {}, t._initGroupProfile(e[n]);
                                    break;
                                case "operatorInfo":
                                    t.content.operatorInfo = {}, t._initOperatorInfo(e[n]);
                                    break;
                                case "memberInfoList":
                                case "msgMemberInfo":
                                    t._updateMemberList(e[n]);
                                    break;
                                case "memberExtraInfo":
                                case "onlineMemberInfo":
                                    break;
                                case "memberNum":
                                    t.content[n] = e[n], t.content.memberCount = e[n];
                                    break;
                                case "newGroupProfile":
                                    t.content.newGroupProfile = {}, t._initNewGroupProfile(e[n]);
                                    break;
                                default:
                                    t.content[n] = e[n]
                            }
                        })), this.content.userIDList || (this.content.userIDList = [this.content.operatorID])
                    }
                }, {
                    key: "_initGroupProfile",
                    value: function(e) {
                        for (var t = Object.keys(e), n = 0; n < t.length; n++) {
                            var o = t[n];
                            po[o] && (this.content.groupProfile[o] = e[o])
                        }
                    }
                }, {
                    key: "_initOperatorInfo",
                    value: function(e) {
                        for (var t = Object.keys(e), n = 0; n < t.length; n++) {
                            var o = t[n];
                            this.content.operatorInfo[o] = e[o]
                        }
                    }
                }, {
                    key: "_updateMemberList",
                    value: function(e) {
                        He(this.content.memberList) ? this.content.memberList = e : this.content.memberList.forEach((function(t) {
                            e.forEach((function(e) {
                                t.userID === e.userID && Object.assign(t, e)
                            }))
                        }))
                    }
                }, {
                    key: "_initNewGroupProfile",
                    value: function(e) {
                        for (var t = Object.keys(e), n = 0; n < t.length; n++) {
                            var o = t[n];
                            this.content.newGroupProfile[o] = "muteAllMembers" !== o ? e[o] : 1 === e[o]
                        }
                    }
                }]), No),
                ho = {
                    from: !0,
                    groupID: !0,
                    groupName: !0,
                    to: !0,
                    groupType: !0
                },
                go = (s(Oo, [{
                    key: "_initContent",
                    value: function(e) {
                        var t = this;
                        Object.keys(e).forEach((function(n) {
                            switch (n) {
                                case "memberInfoList":
                                    break;
                                case "remarkInfo":
                                    t.content.handleMessage = e[n];
                                    break;
                                case "groupProfile":
                                    t.content.groupProfile = {}, t._initGroupProfile(e[n]);
                                    break;
                                default:
                                    t.content[n] = e[n]
                            }
                        }))
                    }
                }, {
                    key: "_initGroupProfile",
                    value: function(e) {
                        for (var t = Object.keys(e), n = 0; n < t.length; n++) {
                            var o = t[n];
                            ho[o] && ("groupName" === o ? this.content.groupProfile.name = e[o] : this.content.groupProfile[o] = e[o])
                        }
                    }
                }]), Oo),
                fo = (s(Ro, [{
                    key: "_getFileInfo",
                    value: function(e) {
                        return ut(e.fileName) || ut(e.fileSize) ? (e = e.file.files[0], z && (e.path && -1 !== e.path.indexOf(".") && (t = e.path.slice(e.path.lastIndexOf(".") + 1).toLowerCase(), e.type = t, e.name || (e.name = "".concat(nt(999999), ".").concat(t))), e.name || (e.type = "", e.name = e.path.slice(e.path.lastIndexOf("/") + 1).toLowerCase()), e.suffix && (e.type = e.suffix), e.url || (e.url = e.path)), {
                            size: e.size,
                            name: e.name
                        }) : {
                            size: e.fileSize,
                            name: e.fileName
                        };
                        var t
                    }
                }, {
                    key: "updatePercent",
                    value: function(e) {
                        this._percent = e, 1 < this._percent && (this._percent = 1)
                    }
                }, {
                    key: "updateFileUrl",
                    value: function(e) {
                        this.content.fileUrl = e
                    }
                }, {
                    key: "sendable",
                    value: function() {
                        return "" !== this.content.fileUrl && "" !== this.content.fileName && 0 !== this.content.fileSize
                    }
                }]), Ro),
                mo = (s(Ao, [{
                    key: "setData",
                    value: function(e) {
                        return this.content.data = e, this
                    }
                }, {
                    key: "setDescription",
                    value: function(e) {
                        return this.content.description = e, this
                    }
                }, {
                    key: "setExtension",
                    value: function(e) {
                        return this.content.extension = e, this
                    }
                }, {
                    key: "sendable",
                    value: function() {
                        return 0 !== this.content.data.length || 0 !== this.content.description.length || 0 !== this.content.extension.length
                    }
                }]), Ao),
                vo = (s(ko, [{
                    key: "updatePercent",
                    value: function(e) {
                        this._percent = e, 1 < this._percent && (this._percent = 1)
                    }
                }, {
                    key: "updateVideoUrl",
                    value: function(e) {
                        e && (this.content.remoteVideoUrl = e)
                    }
                }, {
                    key: "updateSnapshotInfo",
                    value: function(e) {
                        var t = e.snapshotUrl,
                            n = e.snapshotWidth;
                        e = e.snapshotHeight, He(t) || (this.content.thumbUrl = this.content.snapshotUrl = t), He(n) || (this.content.thumbWidth = this.content.snapshotWidth = Number(n)), He(e) || (this.content.thumbHeight = this.content.snapshotHeight = Number(e))
                    }
                }, {
                    key: "sendable",
                    value: function() {
                        return "" !== this.content.remoteVideoUrl
                    }
                }]), ko),
                Io = (s(So, [{
                    key: "sendable",
                    value: function() {
                        return !0
                    }
                }]), So),
                Mo = (s(Lo, [{
                    key: "_patchRichMediaPayload",
                    value: function(e, t) {
                        e === E.MSG_IMAGE ? t.imageInfoArray.forEach((function(e) {
                            !e.imageUrl && e.url && (e.imageUrl = e.url, e.sizeType = e.type, 1 === e.type ? e.type = 0 : 3 === e.type && (e.type = 1))
                        })) : e === E.MSG_VIDEO ? !t.remoteVideoUrl && t.videoUrl && (t.remoteVideoUrl = t.videoUrl) : e === E.MSG_AUDIO ? !t.remoteAudioUrl && t.url && (t.remoteAudioUrl = t.url) : e === E.MSG_FILE && !t.fileUrl && t.url && (t.fileUrl = t.url, t.url = void 0)
                    }
                }, {
                    key: "_updateRichMediaDownloadUrl",
                    value: function(e, t, n, o, i) {
                        (n || o) && (e === E.MSG_IMAGE ? t.imageInfoArray.forEach((function(e) {
                            e.url = io(e.url, n, o, i)
                        })) : e === E.MSG_VIDEO ? (t.videoUrl = io(t.videoUrl, n, o, i), t.snapshotUrl = io(t.thumbUrl, n, o, i), t.snapshotHeight = t.thumbHeight, t.snapshotWidth = t.thumbWidth) : e === E.MSG_AUDIO ? t.url = io(t.url, n, o, i) : e === E.MSG_FILE && (t.fileUrl = io(t.fileUrl, n, o, i)))
                    }
                }]), Lo),
                yo = (s(Eo, [{
                    key: "sendable",
                    value: function() {
                        return !He(this.content.messageList) || !He(this.content.downloadKey)
                    }
                }]), Eo),
                Co = {
                    1: E.MSG_PRIORITY_HIGH,
                    2: E.MSG_PRIORITY_NORMAL,
                    3: E.MSG_PRIORITY_LOW,
                    4: E.MSG_PRIORITY_LOWEST
                },
                To = (s(Do, [{
                    key: "elements",
                    get: function() {
                        return this._elements
                    }
                }, {
                    key: "getElements",
                    value: function() {
                        return this._elements
                    }
                }, {
                    key: "extractGroupInfo",
                    value: function(e) {
                        null !== e && (ct(e.nick) && (this.nick = e.nick), ct(e.avatar) && (this.avatar = e.avatar), je(e = e.messageFromAccountExtraInformation) && ct(e.nameCard) && (this.nameCard = e.nameCard))
                    }
                }, {
                    key: "handleGroupAtInfo",
                    value: function(e) {
                        var t = this;
                        e.payload && e.payload.atUserList && e.payload.atUserList.forEach((function(e) {
                            e !== E.MSG_AT_ALL ? (t._groupAtInfoList.push({
                                groupAtAllFlag: 0,
                                groupAtUserID: e
                            }), t.atUserList.push(e)) : (t._groupAtInfoList.push({
                                groupAtAllFlag: 1
                            }), t.atUserList.push(E.MSG_AT_ALL))
                        })), Je(e.groupAtInfo) && e.groupAtInfo.forEach((function(e) {
                            0 === e.groupAtAllFlag ? t.atUserList.push(e.groupAtUserID) : 1 === e.groupAtAllFlag && t.atUserList.push(E.MSG_AT_ALL)
                        }))
                    }
                }, {
                    key: "getGroupAtInfoList",
                    value: function() {
                        return this._groupAtInfoList
                    }
                }, {
                    key: "_initProxy",
                    value: function() {
                        this._elements[0] && (this.payload = this._elements[0].content, this.type = this._elements[0].type)
                    }
                }, {
                    key: "reInitialize",
                    value: function(e) {
                        e && (this.status = this.from ? Tn : Cn, this.from || (this.from = e)), this._initFlow(e), this._initSequence(e), this._concatConversationID(e), this.generateMessageID()
                    }
                }, {
                    key: "isSendable",
                    value: function() {
                        return 0 !== this._elements.length && (!0 === this._relayFlag || "function" == typeof this._elements[0].sendable && this._elements[0].sendable())
                    }
                }, {
                    key: "_initTo",
                    value: function(e) {
                        this.conversationType === E.CONV_GROUP && (this.to = e.groupID)
                    }
                }, {
                    key: "_initSequence",
                    value: function(e) {
                        var t, n, o;
                        0 === this.clientSequence && e && (this.clientSequence = !!(e = e) && (void 0 === ft[e] && (o = new Date, t = "3".concat(o.getHours()).slice(-2), n = "0".concat(o.getMinutes()).slice(-2), o = "0".concat(o.getSeconds()).slice(-2), ft[e] = parseInt([t, n, o, "0001"].join("")), o = n = t = null, Oe.l("autoIncrementIndex start index:".concat(ft[e]))), ft[e] ++)), 0 === this.sequence && this.conversationType === E.CONV_C2C && (this.sequence = this.clientSequence)
                    }
                }, {
                    key: "generateMessageID",
                    value: function() {
                        this.from === E.CONV_SYSTEM && (this.senderTinyID = "144115198244471703"), this.ID = "".concat(this.senderTinyID, "-").concat(this.clientTime, "-").concat(this.random)
                    }
                }, {
                    key: "_initFlow",
                    value: function(e) {
                        "" !== e && (e === this.from ? (this.flow = "out", this.isRead = !0) : this.flow = "in")
                    }
                }, {
                    key: "_concatConversationID",
                    value: function(e) {
                        var t = this.to,
                            n = this.conversationType;
                        n !== E.CONV_SYSTEM ? (e = n === E.CONV_C2C ? e === this.from ? t : this.from : this.to, this.conversationID = e ? "".concat(n).concat(e) : null) : this.conversationID = E.CONV_SYSTEM
                    }
                }, {
                    key: "isElement",
                    value: function(e) {
                        return e instanceof $n || e instanceof co || e instanceof uo || e instanceof lo || e instanceof fo || e instanceof vo || e instanceof _o || e instanceof go || e instanceof mo || e instanceof Io || e instanceof yo
                    }
                }, {
                    key: "setElement",
                    value: function(e, t, n, o) {
                        var i = this;
                        if (this.isElement(e)) return this._elements = [e], void this._initProxy();

                        function a(e) {
                            if (e.type && e.content) switch (e.type) {
                                case E.MSG_TEXT:
                                    i.setTextElement(e.content);
                                    break;
                                case E.MSG_IMAGE:
                                    i.setImageElement(e.content, t, n, o);
                                    break;
                                case E.MSG_AUDIO:
                                    i.setAudioElement(e.content, t, n, o);
                                    break;
                                case E.MSG_FILE:
                                    i.setFileElement(e.content, t, n, o);
                                    break;
                                case E.MSG_VIDEO:
                                    i.setVideoElement(e.content, t, n, o);
                                    break;
                                case E.MSG_CUSTOM:
                                    i.setCustomElement(e.content);
                                    break;
                                case E.MSG_LOCATION:
                                    i.setLocationElement(e.content);
                                    break;
                                case E.MSG_GRP_TIP:
                                    i.setGroupTipElement(e.content);
                                    break;
                                case E.MSG_GRP_SYS_NOTICE:
                                    i.setGroupSystemNoticeElement(e.content);
                                    break;
                                case E.MSG_FACE:
                                    i.setFaceElement(e.content);
                                    break;
                                case E.MSG_MERGER:
                                    i.setMergerElement(e.content, t, n, o)
                            }
                        }
                        if (Je(e))
                            for (var s = 0; s < e.length; s++) a(e[s]);
                        else a(e);
                        this._initProxy()
                    }
                }, {
                    key: "clearElement",
                    value: function() {
                        this._elements.length = 0
                    }
                }, {
                    key: "setTextElement",
                    value: function(e) {
                        e = "string" == typeof e ? e : e.text, e = new $n({
                            text: e
                        }), this._elements.push(e)
                    }
                }, {
                    key: "setImageElement",
                    value: function(e, t, n, o) {
                        e = new co(e, t, n, o), this._elements.push(e)
                    }
                }, {
                    key: "setAudioElement",
                    value: function(e, t, n, o) {
                        e = new lo(e, t, n, o), this._elements.push(e)
                    }
                }, {
                    key: "setFileElement",
                    value: function(e, t, n, o) {
                        e = new fo(e, t, n, o), this._elements.push(e)
                    }
                }, {
                    key: "setVideoElement",
                    value: function(e, t, n, o) {
                        e = new vo(e, t, n, o), this._elements.push(e)
                    }
                }, {
                    key: "setLocationElement",
                    value: function(e) {
                        e = new Io(e), this._elements.push(e)
                    }
                }, {
                    key: "setCustomElement",
                    value: function(e) {
                        e = new mo(e), this._elements.push(e)
                    }
                }, {
                    key: "setGroupTipElement",
                    value: function(e) {
                        var t, n = {},
                            o = e.operationType;
                        He(e.memberInfoList) ? e.operatorInfo && (n = e.operatorInfo) : o !== E.GRP_TIP_MBR_JOIN && o !== E.GRP_TIP_MBR_KICKED_OUT && o !== E.GRP_TIP_MBR_SET_ADMIN && o !== E.GRP_TIP_MBR_CANCELED_ADMIN || (n = e.memberInfoList[0]), He(e.memberExtraInfo) || (t = e.memberExtraInfo.reason, e.msgMemberInfo.forEach((function(e) {
                            e.reason = t
                        }))), o = n.nick, n = n.avatar, ct(o) && (this.nick = o), ct(n) && (this.avatar = n), o = new _o(e), this._elements.push(o)
                    }
                }, {
                    key: "setGroupSystemNoticeElement",
                    value: function(e) {
                        e = new go(e), this._elements.push(e)
                    }
                }, {
                    key: "setFaceElement",
                    value: function(e) {
                        e = new uo(e), this._elements.push(e)
                    }
                }, {
                    key: "setMergerElement",
                    value: function(e, t, n, o) {
                        e = new yo(e, t, n, o), this._elements.push(e)
                    }
                }, {
                    key: "setIsRead",
                    value: function(e) {
                        this.isRead = e
                    }
                }, {
                    key: "setRelayFlag",
                    value: function(e) {
                        this._relayFlag = e
                    }
                }, {
                    key: "_computePriority",
                    value: function(e) {
                        return ut(e) ? E.MSG_PRIORITY_NORMAL : ct(e) && -1 !== Object.values(Co).indexOf(e) ? e : Ye(e) && (e = "" + e, -1 !== Object.keys(Co).indexOf(e)) ? Co[e] : E.MSG_PRIORITY_NORMAL
                    }
                }, {
                    key: "setNickAndAvatar",
                    value: function(e) {
                        var t = e.nick;
                        e = e.avatar, ct(t) && (this.nick = t), ct(e) && (this.avatar = e)
                    }
                }, {
                    key: "setNameCard",
                    value: function(e) {
                        ct(e) && (this.nameCard = e)
                    }
                }, {
                    key: "initC2CReadReceiptInfo",
                    value: function(e) {
                        var t = e.readReceiptSentByPeer;
                        e = void 0 === (e = e.timestamp) ? 0 : e, this.conversationType === E.CONV_C2C && !0 === this.needReadReceipt && (this.readReceiptInfo.isPeerRead = 1 === (void 0 === t ? void 0 : t), this.readReceiptInfo.timestamp = e)
                    }
                }]), Do);

            function Do(e) {
                i(this, Do), this.ID = "", this.conversationID = e.conversationID || null, this.conversationType = e.conversationType || E.CONV_C2C, this.conversationSubType = e.conversationSubType, this.time = e.time || Math.ceil(Date.now() / 1e3), this.sequence = e.sequence || 0, this.clientSequence = e.clientSequence || e.sequence || 0, this.random = e.random || 0 === e.random ? e.random : nt(), this.priority = this._computePriority(e.priority), this.nick = e.nick || "", this.avatar = e.avatar || "", this.isPeerRead = !1, this.nameCard = "", this.hasRiskContent = Wt(e.checkResult), this._elements = [], this.isPlaceMessage = e.isPlaceMessage || 0, this.isRevoked = 2 === e.isPlaceMessage || 8 === e.msgFlagBits, this.from = e.from || null, this.to = e.to || null, this.flow = "", this.isSystemMessage = e.isSystemMessage || !1, this.protocol = e.protocol || "JSON", this.isResend = !1, this.isRead = !1, this.status = e.status || Tn, this._onlineOnlyFlag = !1, this._groupAtInfoList = [], this._relayFlag = !1, this.atUserList = [], this.cloudCustomData = e.cloudCustomData || "", this.isDeleted = !1, this.isModified = !!e.messageVersion, this._isExcludedFromUnreadCount = !(!e.messageControlInfo || 1 !== e.messageControlInfo.excludedFromUnreadCount), this._isExcludedFromLastMessage = !(!e.messageControlInfo || 1 !== e.messageControlInfo.excludedFromLastMessage), this.clientTime = e.clientTime || De() || 0, this.senderTinyID = e.senderTinyID || e.tinyID || "", this.readReceiptInfo = e.readReceiptInfo || {
                    readCount: void 0,
                    unreadCount: void 0,
                    isPeerRead: void 0,
                    timestamp: 0
                }, this.needReadReceipt = !0 === e.needReadReceipt || 1 === e.needReadReceipt, this.version = e.messageVersion || 0, this.isBroadcastMessage = e.isBroadcastMessage || !1, this._receiverList = e.receiverList || void 0, this.isSupportExtension = !0 === e.isSupportExtension || 1 === e.isSupportExtension, this._cmConfigID = e.customModerationConfigurationID, this.revoker = e.revokerInfo && e.revokerInfo.revoker || "", this.revokerInfo = e.revokerInfo || {
                    userID: "",
                    nick: "",
                    avatar: ""
                }, this.revokeReason = e.revokeReason || "", this.reInitialize(e.currentUser), this.extractGroupInfo(e.groupProfile || null), this.handleGroupAtInfo(e), this.initC2CReadReceiptInfo(e)
            }

            function Eo(e, t, n, o) {
                var a, s, r, c, u, l, d;
                i(this, Eo), this.type = E.MSG_MERGER, this.content = {
                    downloadKey: "",
                    pbDownloadKey: "",
                    messageList: [],
                    title: "",
                    abstractList: [],
                    compatibleText: "",
                    version: 0,
                    layersOverLimit: !1
                }, e.downloadKey ? (s = e.downloadKey, r = e.pbDownloadKey, c = e.title, u = e.abstractList, l = e.compatibleText, a = e.version, this.content.downloadKey = s, this.content.pbDownloadKey = r, this.content.title = c, this.content.abstractList = u, this.content.compatibleText = l, this.content.version = a || 0) : He(e.messageList) ? 1 === e.layersOverLimit && (this.content.layersOverLimit = !0) : (s = e.messageList, r = e.title, c = e.abstractList, u = e.compatibleText, l = e.version, d = [], s.forEach((function(e) {
                    He(e) || (e = new Mo(e, t, n, o), d.push(e))
                })), this.content.messageList = d, this.content.title = r, this.content.abstractList = c, this.content.compatibleText = u, this.content.version = l || 0)
            }

            function Lo(e, t, n, o) {
                var a, s;
                i(this, Lo), this.from = e.from, this.messageSender = e.from, this.time = e.time, this.messageSequence = e.sequence, this.clientSequence = e.clientSequence || e.sequence, this.messageRandom = e.random, this.cloudCustomData = e.cloudCustomData || "", this.clientTime = e.clientTime || void 0, e.ID ? (this.ID = e.ID || "", this.nick = e.nick || "", this.avatar = e.avatar || "", e.messageBody ? this.messageBody = JSON.parse(JSON.stringify(e.messageBody)) : this.messageBody = [{
                    type: e.type,
                    payload: e.payload
                }], e.conversationType ? e.conversationType.startsWith(E.CONV_C2C) ? this.receiverUserID = e.to : e.conversationType.startsWith(E.CONV_GROUP) && (this.receiverGroupID = e.to) : e.receiverGroupID ? this.receiverGroupID = e.receiverGroupID : e.receiverUserID && (this.receiverUserID = e.receiverUserID), this.messageReceiver = e.to || e.messageReceiver) : (this.nick = e.nick || "", this.avatar = e.avatar || "", this.messageBody = [], a = e.elements[0].type, s = e.elements[0].content, this._patchRichMediaPayload(a, s), this._updateRichMediaDownloadUrl(a, s, t, n, o), a === E.MSG_MERGER ? this.messageBody.push({
                    type: a,
                    payload: new yo(s, t, n, o).content
                }) : this.messageBody.push({
                    type: a,
                    payload: s
                }), e.groupID && (this.receiverGroupID = e.groupID, this.messageReceiver = e.groupID), e.to && (this.receiverUserID = e.to, this.messageReceiver = e.to), this.ID = "".concat(e.tinyID, "-").concat(e.clientTime, "-").concat(e.random))
            }

            function So(e) {
                i(this, So), this.type = E.MSG_LOCATION;
                var t = e.description,
                    n = e.longitude;
                e = e.latitude, this.content = {
                    description: t,
                    longitude: n,
                    latitude: e
                }
            }

            function ko(e, t, n, o) {
                i(this, ko), this.type = E.MSG_VIDEO, this._percent = 0, this.content = {
                    remoteVideoUrl: e.remoteVideoUrl || e.videoUrl || "",
                    videoFormat: e.videoFormat,
                    videoSecond: parseInt(e.videoSecond, 10),
                    videoSize: e.videoSize,
                    videoUrl: io(e.videoUrl, t, n, o),
                    videoDownloadFlag: 2,
                    videoUUID: e.videoUUID,
                    thumbUUID: e.thumbUUID,
                    thumbFormat: e.thumbFormat,
                    thumbWidth: e.thumbWidth,
                    snapshotWidth: e.thumbWidth,
                    thumbHeight: e.thumbHeight,
                    snapshotHeight: e.thumbHeight,
                    thumbSize: e.thumbSize,
                    snapshotSize: e.thumbSize,
                    thumbDownloadFlag: 2,
                    thumbUrl: io(e.thumbUrl, t, n, o),
                    snapshotUrl: io(e.thumbUrl, t, n, o)
                }
            }

            function Ao(e) {
                i(this, Ao), this.type = E.MSG_CUSTOM, this.content = {
                    data: e.data || "",
                    description: e.description || "",
                    extension: e.extension || ""
                }
            }

            function Ro(e, t, n, o) {
                i(this, Ro), this.type = E.MSG_FILE, this._percent = 0;
                var a = this._getFileInfo(e);
                this.content = {
                    downloadFlag: 2,
                    fileUrl: io(e.url || e.fileUrl, t, n, o) || "",
                    uuid: e.uuid,
                    fileName: a.name || "",
                    fileSize: a.size || 0
                }
            }

            function Oo(e) {
                i(this, Oo), this.type = E.MSG_GRP_SYS_NOTICE, this.content = {}, this._initContent(e)
            }

            function No(e) {
                i(this, No), this.type = E.MSG_GRP_TIP, this.content = {}, this._initContent(e)
            }

            function Go(e, t, n, o) {
                i(this, Go), this.type = E.MSG_AUDIO, this._percent = 0, this.content = {
                    downloadFlag: 2,
                    second: e.second,
                    size: e.size,
                    url: io(e.url, t, n, o),
                    remoteAudioUrl: e.url || "",
                    uuid: e.uuid
                }
            }

            function Po(e) {
                i(this, Po), this.type = E.MSG_FACE, this.content = e || null
            }

            function Uo(e, t, n, o) {
                i(this, Uo), this._imageMemoryURL = "", this._fileDownloadProxy = t, this._authKey = n, this._fileDNList = o, Q || ee ? this.createImageDataASURL(e.file) : this.createImageDataASURLInWeb(e.file), this._initImageInfoModel(), this.type = E.MSG_IMAGE, this._percent = 0, this.content = {
                    imageFormat: e.imageFormat || Ne.UNKNOWN,
                    uuid: e.uuid,
                    imageInfoArray: []
                }, this.initImageInfoArray(e.imageInfoArray), this._autoFixUrl()
            }

            function bo(e) {
                if (je(e)) return {
                    pushFlag: !0 === e.disablePush ? 1 : 0,
                    title: e.title || "",
                    desc: e.description || "",
                    ext: e.extension || "",
                    apnsInfo: (o = void 0 === (o = (n = e).apnsInfo) ? {} : o, i = n.ignoreIOSBadge, n = n.disableVoipPush, i = !0 === o.ignoreIOSBadge || !0 === (void 0 !== i && i) ? 1 : 0, a = void 0, ut(n) || (a = !1 === n ? 1 : 0), ut(o.disableVoipPush) || (a = !1 === o.disableVoipPush ? 1 : 0), t(t({}, o), {}, {
                        badgeMode: i,
                        isVoipPush: a
                    })),
                    androidInfo: (o = void 0 === (o = (n = e).androidInfo) ? {} : o, n = n.androidOPPOChannelID, n = o.OPPOChannelID || (void 0 === n ? "" : n), t(t({}, o), {}, {
                        Sound: -1 === (a = (i = o.sound || "").lastIndexOf(".")) ? i : i.slice(0, a),
                        OPPOChannelID: n,
                        GoogleChannelID: o.FCMChannelID || ""
                    }))
                };
                var n, o, i, a
            }
            c(Ho, Rn), wo = g(Ho), s(Ho, [{
                key: "onNewMessage",
                value: function(e) {
                    var t = e.dataList,
                        n = e.isInstantMessage,
                        o = e.C2CRemainingUnreadList,
                        i = e.C2CPairUnreadList,
                        a = (e = e.isSyncingEnded, o = (n || Oe.l("".concat(this._n, ".onNewMessage C2CPairUnreadList:"), i, "C2CRemainingUnreadList:", o), t = this._assembly({
                            dataList: t,
                            C2CRemainingUnreadList: o,
                            C2CPairUnreadList: i,
                            isInstantMessage: n
                        })).conversationOptionsList, i = t.messageList, t = t.isUnreadC2CMessage, 0 < (a = vt(i)).length && this.emitOEvt(D.MESSAGE_MODIFIED, a), this.get(11).onNewMessage({
                            conversationOptionsList: o,
                            isInstantMessage: n,
                            isUnreadC2CMessage: t,
                            isSyncingEnded: e
                        }), It(i));
                    n && 0 < a.length && this.emitOEvt(D.MESSAGE_RECEIVED, a), i.length = 0
                }
            }, {
                key: "_assembly",
                value: function(e) {
                    for (var t = e.dataList, n = e.C2CRemainingUnreadList, o = e.C2CPairUnreadList, i = e.isInstantMessage, a = null, s = [], r = [], c = {}, u = this.get(26), l = !1, d = this.get(11), p = this.get(4), _ = (e = this.get(17), this.getFileDownloadProxy()), h = this.getDowloadFileAuthKey(), g = e.getFileDNList(), f = 0, m = t.length; f < m; f++)
                        if (this._isC2CNotice(t[f])) this._noticeFromUnreadDBList.push(t[f].eventArray[0].c2CNotifyMsgArray[0]);
                        else {
                            var v = t[f],
                                I = (v.currentUser = this.getMyUserID(), v.conversationType = E.CONV_C2C, v.isSystemMessage = !!v.isSystemMessage, (ut(v.nick) || ut(v.avatar)) && (l = !0), (a = new To(v)).setElement(v.elements, _, h, g), a.setNickAndAvatar({
                                    nick: v.nick,
                                    avatar: v.avatar
                                }), a.conversationID);
                            if (i) {
                                if (this._msgFromUnreadDBMap.get(a.ID)) continue;
                                var M, y, C = !1,
                                    T = (a.from !== this.getMyUserID() ? (y = d.getLatestMessageSentByPeer(I)) && (M = y.nick, y = y.avatar, l ? a.setNickAndAvatar({
                                        nick: M,
                                        avatar: y
                                    }) : M === a.nick && y === a.avatar || (C = !0)) : (M = d.getLatestMessageSentByMe(I)) && (y = M.nick, T = M.avatar, y === a.nick && T === a.avatar || (d.modifyMessageSentByMe({
                                        conversationID: I,
                                        latestNick: a.nick,
                                        latestAvatar: a.avatar
                                    }), p.mockOnNickAvatarModified(a.nick, a.avatar))), 1 === t[f].isModified);
                                if (d.isMessageSentByCurrentInstance(a) ? a.isModified = T : T = !1, 0 === v.msgLifeTime) a._onlineOnlyFlag = !0, d.isMessageSentByCurrentInstance(a) || r.push(a);
                                else {
                                    if (!d.pushIntoMessageList(r, a, T)) continue;
                                    C && (d.modifyMessageSentByPeer({
                                        conversationID: I,
                                        latestNick: a.nick,
                                        latestAvatar: a.avatar
                                    }), d.updateUserProfileSpecifiedKey({
                                        conversationID: I,
                                        nick: a.nick,
                                        avatar: a.avatar
                                    }))
                                }
                                i && 0 < a.clientTime && u.addMessageDelay(a.clientTime)
                            } else this._msgFromUnreadDBMap.set(a.ID, a);
                            if (0 !== v.msgLifeTime) {
                                if (!1 === a._onlineOnlyFlag) {
                                    if (Ye(C = d.getLastMessageTime(I)) && a.time < C) continue;
                                    i && (ut(c[I]) ? (v = 0, "in" === a.flow && (a._isExcludedFromUnreadCount || (v = 1)), c[I] = s.push({
                                        conversationID: I,
                                        unreadCount: v,
                                        type: a.conversationType,
                                        subType: a.conversationSubType,
                                        lastMessage: a._isExcludedFromLastMessage ? "" : a
                                    }) - 1) : (v = c[I], s[v].type = a.conversationType, s[v].subType = a.conversationSubType, s[v].lastMessage = a._isExcludedFromLastMessage ? "" : a, "in" === a.flow && (a._isExcludedFromUnreadCount || s[v].unreadCount++)))
                                }
                            } else a._onlineOnlyFlag = !0
                        }
                    this._handleNoticeFromUnreadDB();
                    var D = !1;
                    if (Je(o) && 0 < o.length)
                        for (var L = 0, S = o.length; L < S; L++) ! function(e) {
                            if (o[e].from !== E.CONV_SYSTEM) {
                                D = !0;
                                var t = s.find((function(t) {
                                    return t.conversationID === "".concat(E.CONV_C2C).concat(o[e].from)
                                }));
                                t ? t.unreadCount = o[e].unreadCount : s.push({
                                    conversationID: "".concat(E.CONV_C2C).concat(o[e].from),
                                    unreadCount: o[e].unreadCount,
                                    type: E.CONV_C2C
                                })
                            }
                        }(L);
                    if (Je(n))
                        for (var k = 0, A = n.length; k < A; k++) ! function(e) {
                            s.find((function(t) {
                                return t.conversationID === "".concat(E.CONV_C2C).concat(n[e].from)
                            })) || s.push({
                                conversationID: "".concat(E.CONV_C2C).concat(n[e].from),
                                type: E.CONV_C2C,
                                lastMsgTime: n[e].lastMsgTime
                            })
                        }(k);
                    return {
                        conversationOptionsList: s,
                        messageList: r,
                        isUnreadC2CMessage: D
                    }
                }
            }, {
                key: "getMessageListFromUnreadDB",
                value: function() {
                    return m(this._msgFromUnreadDBMap.values())
                }
            }, {
                key: "_isC2CNotice",
                value: function(e) {
                    return !(!Je(e = e.eventArray) || 10 !== e[0].event)
                }
            }, {
                key: "_handleNoticeFromUnreadDB",
                value: function() {
                    var e, t = this._noticeFromUnreadDBList.length;
                    0 !== t && (Oe.l("".concat(this._n, "._handleNoticeFromUnreadDB count:").concat(t)), e = [], this._noticeFromUnreadDBList.forEach((function(t) {
                        t.hasOwnProperty("c2cMessageRevokedNotify") && e.push(t)
                    })), this.onMsgRevoked({
                        dataList: e
                    }), this._noticeFromUnreadDBList.length = 0, e.length = 0)
                }
            }, {
                key: "onMsgRevoked",
                value: function(e) {
                    var t, n = this,
                        o = this.get(11),
                        i = [];
                    e.dataList.forEach((function(e) {
                        e.c2cMessageRevokedNotify && (e = e.c2cMessageRevokedNotify.revokedInfos, ut(e) || e.forEach((function(e) {
                            var a = n.getMyUserID() === e.from ? "".concat(E.CONV_C2C).concat(e.to) : "".concat(E.CONV_C2C).concat(e.from);
                            t = o.revoke(a, e.sequence, e.random);
                            var s, r = e.revokerInfo && e.revokerInfo.revoker,
                                c = e.revokerInfo && e.revokerInfo.reason || "";
                            t ? s = t : (s = {
                                conversationID: a,
                                sequence: e.sequence
                            }, e.tinyID && e.clientTime && e.random && (s.ID = "".concat(e.tinyID, "-").concat(e.clientTime, "-").concat(e.random)), e.time && (s.time = e.time)), s && (s.revoker = r, s.revokeReason = c, s.revokerInfo = {
                                userID: r,
                                nick: "",
                                avatar: ""
                            }, i.push(s))
                        })))
                    })), 0 !== i.length && (o.onMessageRevoked(i), Oe.l("".concat(this._n, ".onMsgRevoked count:").concat(i.length)), o.updateRevokerInfo(i).then((function(e) {
                        n.emitOEvt(D.MESSAGE_REVOKED, e)
                    })))
                }
            }, {
                key: "onMsgReadReceipt",
                value: function(e) {
                    var t = this;
                    e.dataList.forEach((function(e) {
                        var n;
                        He(e.c2cMessageReadReceipt) || (n = e.c2cMessageReadReceipt.to, e.c2cMessageReadReceipt.uinPairReadArray.forEach((function(e) {
                            e = e.peerReadTime;
                            var o = (Oe.l("".concat(t._n, ".onMsgReadReceipt to:").concat(n, " peerReadTime:").concat(e)), "".concat(E.CONV_C2C).concat(n)),
                                i = t.get(11);
                            i.recordPeerReadTime(o, e), i.updateMsgIsPeerReadProp(o, e)
                        })))
                    }))
                }
            }, {
                key: "onMsgReadNotice",
                value: function(e) {
                    var t = this;
                    e.dataList.forEach((function(e) {
                        var n;
                        He(e.c2cMessageReadNotice) || (n = t.get(11), e.c2cMessageReadNotice.uinPairReadArray.forEach((function(e) {
                            var o = e.from;
                            e = e.peerReadTime, Oe.l("".concat(t._n, ".onMsgReadNotice from:").concat(o, " lastReadTime:").concat(e)), o = "".concat(E.CONV_C2C).concat(o), n.updateIsReadAfterReadReport({
                                conversationID: o,
                                lastMessageTime: e
                            }), n.updateUnreadCount(o)
                        })))
                    }))
                }
            }, {
                key: "onMsgModified",
                value: function(e) {
                    Oe.l("".concat(this._n, ".onMsgModified options:"), e);
                    var n = this.get(11);
                    e.dataList.forEach((function(e) {
                        n.onMessageModified(t(t({}, e), {}, {
                            conversationType: E.CONV_C2C
                        }))
                    }))
                }
            }, {
                key: "onReadReceiptList",
                value: function(e) {
                    Oe.l("".concat(this._n, ".onReadReceiptList options:"), e), this.get(11).updateReadReceiptInfo(e.dataList)
                }
            }, {
                key: "sendMessage",
                value: function(e, t) {
                    return e = this._createC2CMessagePack(e, t), this.req(e)
                }
            }, {
                key: "_createC2CMessagePack",
                value: function(e, t) {
                    var n = null,
                        o = (t && (t.offlinePushInfo && (n = t.offlinePushInfo), !0 === t.onlineUserOnly && (n ? n.disablePush = !0 : n = {
                            disablePush: !0
                        })), ""),
                        i = (ct(e.cloudCustomData) && 0 < e.cloudCustomData.length && (o = e.cloudCustomData), []),
                        a = (je(t) && je(t.messageControlInfo) && (a = (r = t.messageControlInfo).excludedFromUnreadCount, s = r.excludedFromLastMessage, r = r.excludedFromContentModeration, !0 === a && i.push("NoUnread"), !0 === s && i.push("NoLastMsg"), !0 === r && i.push("NoMsgCheck")), this.isOnlineMessage(e, t) ? 0 : void 0),
                        s = JSON.parse(JSON.stringify(e.getElements())),
                        r = this.get(17).getFileDNList();
                    return {
                        P: wn.SEND_C2C_MSG,
                        tjgID: this.generateTjgID(e),
                        data: {
                            fromAccount: this.getMyUserID(),
                            toAccount: e.to,
                            msgBody: ao(e.type, s, r),
                            cloudCustomData: o,
                            msgSeq: e.sequence,
                            msgRandom: e.random,
                            msgLifeTime: a,
                            nick: e.nick,
                            avatar: e.avatar,
                            offlinePushInfo: bo(n),
                            messageControlInfo: 0 !== a ? i : void 0,
                            clientTime: e.clientTime,
                            needReadReceipt: !0 === e.needReadReceipt ? 1 : 0,
                            isSupportExtension: !0 === e.isSupportExtension ? 1 : 0,
                            isRelayMessage: !0 === e._relayFlag ? 1 : 0,
                            cmConfigID: e._cmConfigID
                        }
                    }
                }
            }, {
                key: "isOnlineMessage",
                value: function(e, t) {
                    return !(!t || !0 !== t.onlineUserOnly)
                }
            }, {
                key: "revokeMessage",
                value: function(e) {
                    return this.req({
                        P: wn.REVOKE_C2C_MSG,
                        data: {
                            msgInfo: {
                                fromAccount: e.from,
                                toAccount: e.to,
                                msgSeq: e.sequence,
                                msgRandom: e.random,
                                msgTimeStamp: e.time
                            }
                        }
                    })
                }
            }, {
                key: "deleteMessage",
                value: function(e) {
                    var t = e.to;
                    return e = e.keyList, Oe.l("".concat(this._n, ".deleteMessage toAccount:").concat(t, " count:").concat(e.length)), this.req({
                        P: wn.DEL_C2C_MSG,
                        data: {
                            fromAccount: this.getMyUserID(),
                            to: t,
                            keyList: e
                        }
                    })
                }
            }, {
                key: "modifyRemoteMessage",
                value: function(e) {
                    var t = e.from,
                        n = e.to,
                        o = void 0 === (o = e.version) ? 0 : o,
                        i = e.sequence,
                        a = e.random,
                        s = e.time,
                        r = e.payload,
                        c = e.type,
                        u = void(e = e.cloudCustomData);
                    return qt(c) && (u = []).push({
                        type: c,
                        content: r
                    }), this.req({
                        P: wn.MODIFY_C2C_MSG,
                        data: {
                            from: t,
                            to: n,
                            version: o,
                            sequence: i,
                            random: a,
                            time: s,
                            elements: u,
                            cloudCustomData: e
                        }
                    })
                }
            }, {
                key: "setMessageRead",
                value: function(e) {
                    var t = this,
                        n = e.conversationID,
                        o = e.lastMessageTime,
                        i = "".concat(this._n, ".").concat("setMessageRead"),
                        a = (e = "convID:".concat(n, " lastMessageTime:").concat(o), Oe.l("".concat(i, " ").concat(e)), Ye(o) || this.warn("DoNotModifyLastTime"), new Qn("setMessageRead"));
                    return a.setMessage(e), this.req({
                        P: wn.SET_C2C_MSG_READ,
                        data: {
                            C2CMsgReaded: {
                                cookie: "",
                                C2CMsgReadedItem: [{
                                    toAccount: n.replace("C2C", ""),
                                    lastMessageTime: o,
                                    receipt: 1
                                }]
                            }
                        }
                    }).then((function() {
                        a.end(), Oe.l("".concat(i, " ok"));
                        var e = t.get(11);
                        return e.updateIsReadAfterReadReport({
                            conversationID: n,
                            lastMessageTime: o
                        }), e.updateUnreadCount(n), vn()
                    })).catch((function(e) {
                        return a.setError(e).end(), Oe.l("".concat(i, " failed. error:"), e), Mn(e)
                    }))
                }
            }, {
                key: "getRoamingMessage",
                value: function(e) {
                    var t = this,
                        n = "".concat(this._n, ".").concat("getRoamingMessage"),
                        o = e.peerAccount,
                        i = e.conversationID,
                        a = e.count,
                        s = e.lastMessageTime,
                        r = (e = e.messageKey, "peerAccount:".concat(o, " count:").concat(a || 15, " lastMessageTime:").concat(s || 0, " messageKey:").concat(e)),
                        c = (Oe.l("".concat(n, " ").concat(r)), new Qn("getRoamingMessage"));
                    return this.req({
                        P: wn.GET_C2C_ROAMING_MSG,
                        data: {
                            peerAccount: o,
                            count: a || 15,
                            lastMessageTime: s || 0,
                            messageKey: e
                        }
                    }).then((function(e) {
                        var o = (e = e.data).complete,
                            a = e.messageList,
                            s = e.messageKey,
                            u = (e = e.lastMessageTime, ut(a) ? Oe.l("".concat(n, " ok. complete:").concat(o, " but messageList is undefined!")) : Oe.l("".concat(n, " ok. complete:").concat(o, " count:").concat(a.length)), c.setMessage("".concat(r, " complete:").concat(o, " length:").concat(a.length)).end(), t.get(11));
                        return 1 === o && u.setCompleted(i), o = u.onRoamingMessage(a, i), u.modifyMessageList(i), u.updateIsRead(i), u.updateRoamingMsgKeyAndTime(i, s, e), a = u.getPeerReadTime(i), Oe.l("".concat(n, " update isPeerRead property. convID:").concat(i, " peerReadTime:").concat(a)), a ? u.updateMsgIsPeerReadProp(i, a) : (s = i.replace(E.CONV_C2C, ""), t.getRemotePeerReadTime([s]).then((function() {
                            u.updateMsgIsPeerReadProp(i, u.getPeerReadTime(i))
                        }))), e = "", 0 < o.length ? e = o[0].ID : (a = u.getLocalOldestMessage(i)) && (e = a.ID), Oe.l("".concat(n, " nextReqID:").concat(e, " storedMsgCount:").concat(o.length)), {
                            nextReqID: e,
                            storedMessageList: o
                        }
                    })).catch((function(e) {
                        return c.setMessage(r).setError(e).end(), Oe.w("".concat(n, " failed. error:"), e), Mn(e)
                    }))
                }
            }, {
                key: "getRoamingMessagesHopping",
                value: function(e) {
                    var t = this,
                        n = "".concat(this._n, ".").concat("getRoamingMessagesHopping"),
                        o = e.peerAccount,
                        i = void 0 === (i = e.time) ? 0 : i,
                        a = e.count,
                        s = e.direction,
                        r = "".concat(E.CONV_C2C).concat(o),
                        c = "peerAccount:".concat(o, " count:").concat(a, " time:").concat(i, " direction:").concat(s),
                        u = (Oe.l("".concat(n, " ").concat(c)), new Qn("getRoamingMessagesHopping"));
                    return this.req({
                        P: wn.GET_C2C_ROAMING_MSG,
                        data: {
                            peerAccount: o,
                            count: a + 1,
                            lastMessageTime: i,
                            direction: s
                        }
                    }).then((function(e) {
                        var o = (e = e.data).complete,
                            i = void 0 === (i = e.messageList) ? [] : i,
                            a = (e = e.lastMessageTime, "complete:".concat(o, " count:").concat(i.length)),
                            l = (Oe.l("".concat(n, " ok. ").concat(a)), u.setMessage("".concat(c, " ").concat(a)).end(), 1 !== o && (1 === s ? i.pop() : i.shift()), t.get(11));
                        return a = l.onRoamingMessage(i, r, !1), t._modifyMessageList(r, a), i = t._computeResult({
                            complete: o,
                            lastMessageTime: e,
                            resultList: a
                        }), l.storeHoppingMessageList(i.messageList), o = l.getPeerReadTime(r), Oe.l("".concat(n, " update isPeerRead property. convID:").concat(r, " peerReadTime:").concat(o)), o ? l.updateMsgIsPeerReadProp(r, o) : (e = r.replace(E.CONV_C2C, ""), t.getRemotePeerReadTime([e]).then((function() {
                            l.updateMsgIsPeerReadProp(r, l.getPeerReadTime(r))
                        }))), vn(i)
                    })).catch((function(e) {
                        return u.setMessage(c).setError(e).end(), Oe.w("".concat(n, " failed. error:"), e), Mn(e)
                    }))
                }
            }, {
                key: "_computeResult",
                value: function(e) {
                    var t = void 0 === (t = e.complete) ? 0 : t,
                        n = e.lastMessageTime;
                    return e = {
                        messageList: m(void 0 === (e = e.resultList) ? [] : e),
                        isCompleted: !1,
                        nextMessageTime: ""
                    }, 1 === t ? e.isCompleted = !0 : e.nextMessageTime = n, e
                }
            }, {
                key: "_modifyMessageList",
                value: function(e, t) {
                    if (e = this.get(11).getLocalConversation(e))
                        for (var n = e.userProfile.nick, o = e.userProfile.avatar, i = (e = this.get(4).getNickAndAvatarByUserID(this.getMyUserID())).nick, a = e.avatar, s = t.length - 1; 0 <= s; s--) {
                            var r = t[s];
                            "in" === r.flow && (r.nick !== n && r.setNickAndAvatar({
                                nick: n
                            }), r.avatar !== o && r.setNickAndAvatar({
                                avatar: o
                            })), "out" === r.flow && (r.nick !== i && r.setNickAndAvatar({
                                nick: i
                            }), r.avatar !== a && r.setNickAndAvatar({
                                avatar: a
                            }))
                        }
                }
            }, {
                key: "getRemotePeerReadTime",
                value: function(e) {
                    var t = this,
                        n = "".concat(this._n, ".").concat("getRemotePeerReadTime");
                    if (He(e)) return Promise.resolve();
                    var o = new Qn("getRemotePeerReadTime");
                    return Oe.l("".concat(n, " userIDList:").concat(e)), this.req({
                        P: wn.GET_C2C_PEER_READ_TIME,
                        data: {
                            userIDList: e
                        }
                    }).then((function(i) {
                        var a = i.data.peerReadTimeList;
                        Oe.l("".concat(n, " ok. peerReadTimeList:").concat(a));
                        for (var s = "", r = t.get(11), c = 0; c < e.length; c++) s += "".concat(e[c], "-").concat(a[c], " "), 0 < a[c] && r.recordPeerReadTime("".concat(E.CONV_C2C).concat(e[c]), a[c]);
                        o.setMessage(s).end()
                    })).catch((function(e) {
                        o.setError(e).end(), Oe.w("".concat(n, " failed. error:"), e)
                    }))
                }
            }, {
                key: "sendReadReceipt",
                value: function(e) {
                    var t = e[0].conversationID.replace(E.CONV_C2C, ""),
                        n = new Qn("sendReadReceipt"),
                        o = (n.setMessage("peerAccount:".concat(t)), this.getMyUserID());
                    if (0 === (e = e.filter((function(e) {
                            return e.from !== o && !0 === e.needReadReceipt
                        })).map((function(e) {
                            return {
                                fromAccount: e.from,
                                toAccount: e.to,
                                sequence: e.sequence,
                                random: e.random,
                                time: e.time,
                                clientTime: e.clientTime
                            }
                        }))).length) return Mn({
                        code: Un.READ_RECEIPT_MSG_LIST_EMPTY
                    });
                    var i = "".concat(this._n, ".").concat("sendReadReceipt");
                    return Oe.l("".concat(i, ". peerAccount:").concat(t, " length:").concat(e.length)), this.req({
                        P: wn.SEND_C2C_READ_RECEIPT,
                        data: {
                            peerAccount: t,
                            messageInfoList: e
                        }
                    }).then((function(e) {
                        return n.end(), Oe.l("".concat(i, " ok")), vn()
                    })).catch((function(e) {
                        return n.setError(e).end(), Oe.w("".concat(i, " failed. error:"), e), Mn(e)
                    }))
                }
            }, {
                key: "getReadReceiptList",
                value: function(e) {
                    var t = e[0].conversationID.replace(E.CONV_C2C, "");
                    return Oe.l("".concat(this._n, ".getReadReceiptList peerAccount:").concat(t, " msgCount:").concat(e.length)), In({
                        messageList: e
                    })
                }
            }, {
                key: "getMessageExtensions",
                value: function(e, t) {
                    return Oe.l("".concat(this._n, ".getMessageExtensions startSequence:").concat(t)), this.req({
                        P: wn.GET_C2C_MSG_EXT,
                        data: {
                            from: e.from,
                            to: e.to,
                            messageKey: this.getMessageKey(e),
                            startSequence: t
                        }
                    })
                }
            }, {
                key: "modifyMsgExts",
                value: function(e, t) {
                    var n = 2 < arguments.length && void 0 !== arguments[2] ? arguments[2] : 1;
                    return Oe.l("".concat(this._n, ".modifyMsgExts operateType:").concat(n)), this.req({
                        P: wn.MODIFY_C2C_MSG_EXT,
                        data: {
                            from: e.from,
                            to: e.to,
                            messageKey: this.getMessageKey(e),
                            extensionList: t,
                            operateType: n
                        }
                    })
                }
            }, {
                key: "getMessageKey",
                value: function(e) {
                    var t = e.clientSequence,
                        n = e.random;
                    return e = e.time, "".concat(t, "_").concat(n, "_").concat(e)
                }
            }, {
                key: "reset",
                value: function() {
                    Oe.l("".concat(this._n, ".reset")), this._msgFromUnreadDBMap.clear(), this._noticeFromUnreadDBList.length = 0
                }
            }]);
            var wo, Fo = Ho,
                qo = {
                    A2KEY_AND_TINYID_UPDATED: "_inner".concat(1),
                    CLOUD_CONFIG: "_inner".concat(2),
                    PROFILE_UPDATED: "_inner".concat(3),
                    CONV_SYNC_COMPLETED: "_inner".concat(4),
                    C2C_UNREAD_HANDLE_COMPLETED: "_inner".concat(5)
                },
                xo = (s(Vo, [{
                    key: "_onCloudConfig",
                    value: function() {
                        var e = this._convM.getCloudConfig("topic_msg_limit");
                        ut(e) || (this.TOPIC_MSG_LIMIT = Number(e)), Oe.l("".concat(this._n, "._onCloudConfig topicMsgLimit:").concat(this.TOPIC_MSG_LIMIT))
                    }
                }, {
                    key: "onCheckTimer",
                    value: function(e) {
                        if (e % 20 == 0 && 0 < this._map.size) {
                            var t, n = T(this._map);
                            try {
                                for (n.s(); !(t = n.n()).done;) {
                                    var o = f(t.value, 2),
                                        i = o[0],
                                        a = o[1];
                                    i.includes(xe) && a.size >= this.TOPIC_MSG_LIMIT && this._convM.clearMemMsg(i, !0)
                                }
                            } catch (e) {
                                n.e(e)
                            } finally {
                                n.f()
                            }
                        }
                    }
                }, {
                    key: "pushIn",
                    value: function(e) {
                        var t = 1 < arguments.length && void 0 !== arguments[1] && arguments[1],
                            n = e.conversationID,
                            o = !0,
                            i = (this._map.has(n) || this._map.set(n, new Map), this._getUniqueIDOfMsg(e));
                        if (this._map.get(n).has(i)) {
                            var a = this._map.get(n).get(i);
                            if (!t || !0 === a.isModified) return !1
                        }
                        return this._map.get(n).set(i, e), this._setLatestMsgSentByPeer(n, e), this._setLatestMsgSentByMe(n, e), o
                    }
                }, {
                    key: "unshift",
                    value: function(e, t) {
                        var n;
                        if (Je(e) ? 0 < e.length && (n = e[0].conversationID, this._unshiftMultipleMsgs(e, t)) : (n = e.conversationID, this._unshiftSingleMsg(e, t)), n) {
                            var o = Array.from(this._map.get(n).values());
                            if (0 !== (e = o.length)) {
                                for (var i = e - 1; 0 <= i; i--)
                                    if ("out" === o[i].flow) {
                                        this._setLatestMsgSentByMe(n, o[i]);
                                        break
                                    }
                                if (n.startsWith(E.CONV_C2C))
                                    for (var a = e - 1; 0 <= a; a--)
                                        if ("in" === o[a].flow) {
                                            this._setLatestMsgSentByPeer(n, o[a]);
                                            break
                                        }
                            }
                        }
                    }
                }, {
                    key: "_unshiftSingleMsg",
                    value: function(e, t) {
                        var n = e.conversationID,
                            o = this._getUniqueIDOfMsg(e);
                        if (!this._map.has(n)) return this._map.set(n, new Map), this._map.get(n).set(o, e), void t.push(e);
                        var i = this._map.get(n),
                            a = Array.from(i);
                        i.has(o) || (a.unshift([o, e]), this._map.set(n, new Map(a)), t.push(e))
                    }
                }, {
                    key: "_unshiftMultipleMsgs",
                    value: function(e, t) {
                        for (var n = e.length, o = [], i = e[0].conversationID, a = this._map.get(i), s = this._map.has(i) ? Array.from(a) : [], r = 0; r < n; r++) {
                            var c = this._getUniqueIDOfMsg(e[r]);
                            a && a.has(c) || (o.push([c, e[r]]), t.push(e[r]))
                        }
                        this._map.set(i, new Map(o.concat(s)))
                    }
                }, {
                    key: "remove",
                    value: function(e) {
                        var t = e.conversationID;
                        e = this._getUniqueIDOfMsg(e), this._map.has(t) && this._map.get(t).delete(e)
                    }
                }, {
                    key: "revoke",
                    value: function(e, t, n) {
                        var o;
                        return this._map.has(e) ? (o = this._map.get(e), this._updateMsgIsRevoked(o, t, n)) : this._hoppingMsgMap.has(e) ? (o = this._hoppingMsgMap.get(e), this._updateMsgIsRevoked(o, t, n)) : null
                    }
                }, {
                    key: "_updateMsgIsRevoked",
                    value: function(e, t, n) {
                        var o, i = T(e);
                        try {
                            for (i.s(); !(o = i.n()).done;) {
                                var a = f(o.value, 2)[1];
                                if (a.sequence === t && (ut(n) || a.random === n)) return a.isRevoked || (a.isRevoked = !0), a
                            }
                        } catch (e) {
                            i.e(e)
                        } finally {
                            i.f()
                        }
                    }
                }, {
                    key: "removeByConvID",
                    value: function(e) {
                        var t = this._map.has(e);
                        Oe.l("".concat(this._n, ".removeByConvID convID:").concat(e, " has:").concat(t)), t && (this._map.delete(e), this._latestMsgSentByPeerMap.delete(e), this._latestMsgSentByMeMap.delete(e))
                    }
                }, {
                    key: "findMessage",
                    value: function(e) {
                        var t = null;
                        return (t = this._findMsg(e, this._map)) ? t : this._findMsg(e, this._hoppingMsgMap)
                    }
                }, {
                    key: "_findMsg",
                    value: function(e, t) {
                        var n, o = null,
                            i = T(t);
                        try {
                            for (i.s(); !(n = i.n()).done;)
                                for (var a = m(f(n.value, 2)[1].values()), s = a.length, r = 0; r < s; r++)
                                    if (a[r].ID === e) {
                                        o = a[r];
                                        break
                                    }
                        } catch (e) {
                            i.e(e)
                        } finally {
                            i.f()
                        }
                        return o
                    }
                }, {
                    key: "updateMsgIsPeerReadProp",
                    value: function(e, t) {
                        var n, o = [];
                        return this._map.has(e) ? (n = this._map.get(e), o = this._updateMsgIsPeerReadProp(n, t)) : this._hoppingMsgMap.has(e) && (n = this._hoppingMsgMap.get(e), o = this._updateMsgIsPeerReadProp(n, t)), Oe.l("".concat(this._n, ".updateMsgIsPeerReadProp convID:").concat(e, " peerReadTime:").concat(t, " count:").concat(o.length)), o
                    }
                }, {
                    key: "_updateMsgIsPeerReadProp",
                    value: function(e, t) {
                        var n, o = [],
                            i = T(e);
                        try {
                            for (i.s(); !(n = i.n()).done;) {
                                var a = f(n.value, 2)[1];
                                a.time <= t && !a.isPeerRead && "out" === a.flow && (a.isPeerRead = !0, o.push(a))
                            }
                        } catch (e) {
                            i.e(e)
                        } finally {
                            i.f()
                        }
                        return o
                    }
                }, {
                    key: "updateMsgIsModifiedProp",
                    value: function(e) {
                        var t = e.conversationID;
                        this._map.has(t) && (e = this._getUniqueIDOfMsg(e), (t = this._map.get(t).get(e)) && (t.isModified = !0))
                    }
                }, {
                    key: "hasLocalMsgList",
                    value: function(e) {
                        return this._map.has(e)
                    }
                }, {
                    key: "getLocalMsgList",
                    value: function(e) {
                        return this.hasLocalMsgList(e) ? m(this._map.get(e).values()) : []
                    }
                }, {
                    key: "getLocalMaxSeq",
                    value: function(e) {
                        return this.hasLocalMsgList(e) ? (e = m(this._map.get(e).values()).map((function(e) {
                            return e.sequence
                        })), Math.max.apply(Math, m(e))) : 0
                    }
                }, {
                    key: "getLocalMaxTime",
                    value: function(e) {
                        return this.hasLocalMsgList(e) ? (e = m(this._map.get(e).values()).map((function(e) {
                            return e.time
                        })), Math.max.apply(Math, m(e))) : 0
                    }
                }, {
                    key: "hasLocalMsg",
                    value: function(e, t) {
                        for (var n = !1, o = this.getLocalMsgList(e), i = o.length, a = 0; a < i; a++) o[a].ID === t && (n = !0);
                        return n
                    }
                }, {
                    key: "getLocalMsg",
                    value: function(e, t) {
                        for (var n = null, o = this.getLocalMsgList(e), i = o.length, a = 0; a < i; a++)
                            if (o[a].ID === t) {
                                n = o[a];
                                break
                            }
                        return n
                    }
                }, {
                    key: "getLocalLastMsg",
                    value: function(e) {
                        return (e = this.getLocalMsgList(e))[e.length - 1]
                    }
                }, {
                    key: "getLocalSecondLastMsg",
                    value: function(e) {
                        return (e = this.getLocalMsgList(e))[e.length - 2]
                    }
                }, {
                    key: "getLocalOldestMsg",
                    value: function(e) {
                        return this.getLocalMsgList(e)[0]
                    }
                }, {
                    key: "_setLatestMsgSentByPeer",
                    value: function(e, t) {
                        e.startsWith(E.CONV_C2C) && "in" === t.flow && this._latestMsgSentByPeerMap.set(e, t)
                    }
                }, {
                    key: "_setLatestMsgSentByMe",
                    value: function(e, t) {
                        "out" === t.flow && this._latestMsgSentByMeMap.set(e, t)
                    }
                }, {
                    key: "getLatestMsgSentByPeer",
                    value: function(e) {
                        return this._latestMsgSentByPeerMap.get(e)
                    }
                }, {
                    key: "getLatestMsgSentByMe",
                    value: function(e) {
                        return this._latestMsgSentByMeMap.get(e)
                    }
                }, {
                    key: "modifyMsgSentByPeer",
                    value: function(e) {
                        var t = e.conversationID,
                            n = e.latestNick,
                            o = e.latestAvatar;
                        if (!He(e = this._map.get(t))) {
                            var i = Array.from(e.values());
                            if (0 !== (e = i.length)) {
                                for (var a = null, s = 0, r = !1, c = e - 1; 0 <= c; c--) "in" === i[c].flow && ((a = i[c]).nick !== n && (a.setNickAndAvatar({
                                    nick: n
                                }), r = !0), a.avatar !== o && (a.setNickAndAvatar({
                                    avatar: o
                                }), r = !0), r && (s += 1));
                                Oe.l("".concat(this._n, ".modifyMsgSentByPeer convID:").concat(t, " count:").concat(s))
                            }
                        }
                    }
                }, {
                    key: "modifyMsgSentByMe",
                    value: function(e) {
                        var t = e.conversationID,
                            n = e.latestNick,
                            o = e.latestAvatar;
                        if (!He(e = this._map.get(t))) {
                            var i = Array.from(e.values());
                            if (0 !== (e = i.length)) {
                                for (var a = null, s = 0, r = !1, c = e - 1; 0 <= c; c--) "out" === i[c].flow && ((a = i[c]).nick !== n && (a.setNickAndAvatar({
                                    nick: n
                                }), r = !0), a.avatar !== o && (a.setNickAndAvatar({
                                    avatar: o
                                }), r = !0), r && (s += 1));
                                Oe.l("".concat(this._n, ".modifyMsgSentByMe convID:").concat(t, " count:").concat(s))
                            }
                        }
                    }
                }, {
                    key: "getTopicConvIDList",
                    value: function(e) {
                        return m(this._map.keys()).filter((function(t) {
                            return t.startsWith("".concat(E.CONV_GROUP).concat(e))
                        }))
                    }
                }, {
                    key: "onMsgModified",
                    value: function(e, t) {
                        if (!this._map.has(e) && !this._hoppingMsgMap.has(e)) return {
                            isUpdated: !1,
                            message: null
                        };
                        var n = "".concat(this._n, ".onMsgModified"),
                            o = this._getUniqueIDOfMsg(t),
                            i = this._getTargetMsg(e, o),
                            a = !!i;
                        return Oe.l("".concat(n, " convID:").concat(e, " uniqueID:").concat(o, " has:").concat(a)), a ? (e = t.messageVersion, o = t.elements, a = t.cloudCustomData, t = t.checkResult, Oe.l("".concat(n, " localVersion:").concat(i.version, " remoteVersion:").concat(e)), i.version < e ? (i.version = e, i._elements = JSON.parse(JSON.stringify(o)), i.payload = JSON.parse(JSON.stringify(o[0].content)), i.type = o[0].type, i.cloudCustomData = a, i.isModified = !0, i.hasRiskContent = Wt(t), {
                            isUpdated: !0,
                            message: i
                        }) : {
                            isUpdated: !1,
                            message: i
                        }) : {
                            isUpdated: !1,
                            message: null
                        }
                    }
                }, {
                    key: "_getUniqueIDOfMsg",
                    value: function(e) {
                        var t = e.from,
                            n = e.to,
                            o = e.random,
                            i = e.sequence;
                        return e = e.time, "".concat(t, "-").concat(n, "-").concat(o, "-").concat(i, "-").concat(e)
                    }
                }, {
                    key: "_getTargetMsg",
                    value: function(e, t) {
                        if (this._map.has(e)) return this._map.get(e).get(t);
                        var n = void 0;
                        if (this._hoppingMsgMap.has(e))
                            for (var o = m(this._hoppingMsgMap.get(e).values()), i = 0; i < o.length; i++)
                                if (this._getUniqueIDOfMsg(o[i]) === t) {
                                    n = o[i];
                                    break
                                }
                        return n
                    }
                }, {
                    key: "storeHoppingMsgList",
                    value: function(e) {
                        if (0 !== e.length) {
                            var t = e[0].conversationID,
                                n = e.length;
                            this._hoppingMsgMap.has(t) || this._hoppingMsgMap.set(t, new Map);
                            for (var o = this._hoppingMsgMap.get(t), i = 0; i < n; i++) {
                                var a = e[i];
                                o.has(a.ID) || o.set(a.ID, a)
                            }
                        }
                    }
                }, {
                    key: "getHoppingMsg",
                    value: function(e, t) {
                        if (this._hoppingMsgMap.has(e)) return this._hoppingMsgMap.get(e).get(t)
                    }
                }, {
                    key: "reset",
                    value: function() {
                        this._map.clear(), this._latestMsgSentByPeerMap.clear(), this._latestMsgSentByMeMap.clear(), this._hoppingMsgMap.clear()
                    }
                }]), Vo);

            function Vo(e) {
                i(this, Vo), this._convM = e, this._map = new Map, this._n = "MsgListHandler", this._latestMsgSentByPeerMap = new Map, this._latestMsgSentByMeMap = new Map, this._hoppingMsgMap = new Map, this.TOPIC_MSG_LIMIT = 1e3, this._convM.getIEmitInst().on(qo.CLOUD_CONFIG, this._onCloudConfig, this)
            }

            function Ho(e) {
                return i(this, Ho), (e = wo.call(this, e))._n = "C2CModule", e._msgFromUnreadDBMap = new Map, e._noticeFromUnreadDBList = [], e
            }

            function Bo(e) {
                this.mixin(e)
            }

            function Ko(e, n, o) {
                return ut(e) ? {
                    lastTime: 0,
                    lastSequence: 0,
                    fromAccount: "",
                    messageForShow: "",
                    payload: null,
                    type: "",
                    isRevoked: !1,
                    cloudCustomData: "",
                    onlineOnlyFlag: !1,
                    nick: "",
                    nameCard: "",
                    version: 0,
                    isPeerRead: !1,
                    revoker: null
                } : o && e.ID || e instanceof To ? {
                    lastTime: e.time || 0,
                    lastSequence: e.sequence || 0,
                    fromAccount: e.from || "",
                    messageForShow: Ft(e.type, e.payload, n),
                    payload: e.payload || null,
                    type: e.type || null,
                    isRevoked: e.isRevoked || !1,
                    cloudCustomData: e.cloudCustomData || "",
                    onlineOnlyFlag: e._onlineOnlyFlag || !1,
                    nick: e.nick || "",
                    nameCard: e.nameCard || "",
                    version: e.version || 0,
                    isPeerRead: e.isPeerRead || !1,
                    revoker: e.revoker || null
                } : t(t({}, e), {}, {
                    messageForShow: Ft(e.type, e.payload, n)
                })
            }

            function Yo(e, t) {
                return He(e) ? {
                    lastTime: 0,
                    lastSequence: 0,
                    fromAccount: "",
                    payload: null,
                    type: "",
                    messageForShow: "",
                    nick: "",
                    avatar: "",
                    version: 0,
                    cloudCustomData: "",
                    isRevoked: !1,
                    revoker: null
                } : {
                    lastTime: e.time || 0,
                    lastSequence: e.sequence || 0,
                    fromAccount: e.from || "",
                    payload: e.payload || null,
                    type: e.type || "",
                    messageForShow: Ft(e.type, e.payload, t),
                    nick: e.nick || "",
                    avatar: e.avatar || "",
                    version: e.version || 0,
                    cloudCustomData: e.cloudCustomData || "",
                    isRevoked: e.isRevoked || !1,
                    revoker: e.revoker || null
                }
            }

            function Wo(e) {
                var t = String(e).replace(/[=]+$/, ""),
                    n = "";
                if (t.length % 4 == 1) return "";
                for (var o, i, a = 0, s = 0; i = t.charAt(s++); ~i && (o = a % 4 ? 64 * o + i : i, a++ % 4) && (n += String.fromCharCode(255 & o >> (-2 * a & 6)))) i = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=".indexOf(i);
                try {
                    return decodeURIComponent(escape(n))
                } catch (e) {
                    return ""
                }
            }
            Bo.mixin = function(e) {
                (e = e.prototype || e)._isReady = !1, e.ready = function(e) {
                    if (e) return this._isReady ? void(1 < arguments.length && void 0 !== arguments[1] && arguments[1] ? e.call(this) : setTimeout(e, 1)) : (this._readyQueue = this._readyQueue || [], void this._readyQueue.push(e))
                }, e.triggerReady = function() {
                    var e = this;
                    this._isReady = !0, setTimeout((function() {
                        var t = e._readyQueue;
                        e._readyQueue = [], t && 0 < t.length && t.forEach((function(e) {
                            e.call(this)
                        }), e)
                    }), 1)
                }, e.resetReady = function() {
                    this._isReady = !1, this._readyQueue = []
                }, e.isReady = function() {
                    return this._isReady
                }
            };
            var jo, Jo, zo, Xo, Zo, Qo = ["jpg", "jpeg", "gif", "png", "bmp", "image", "webp"],
                $o = ["mp4", "quicktime", "mov"],
                ei = (s(oa, [{
                    key: "validate",
                    value: function(e) {
                        var t, n = !0,
                            o = "";
                        if (He(e)) return {
                            valid: !1,
                            tips: "empty options"
                        };
                        if (e.profileCustomField)
                            for (var i = e.profileCustomField.length, a = null, s = 0; s < i; s++) {
                                if (a = e.profileCustomField[s], !ct(a.key) || -1 === a.key.indexOf("Tag_Profile_Custom")) return {
                                    valid: !1,
                                    tips: "The prefix of keys of the custom profile key-value pairs (which is profileCustomField) must be Tag_Profile_Custom"
                                };
                                if (!ct(a.value)) return {
                                    valid: !1,
                                    tips: "The type of values of the custom profile key-value pairs (which is profileCustomField) must be String"
                                }
                            }
                        for (t in e)
                            if (Object.prototype.hasOwnProperty.call(e, t)) {
                                if ("profileCustomField" === t) continue;
                                if (He(e[t]) && !ct(e[t]) && !Ye(e[t])) {
                                    o = "key:" + t + ", invalid value:" + e[t], n = !1;
                                    continue
                                }
                                switch (t) {
                                    case "nick":
                                        ct(e[t]) || (n = !(o = "nick must be a string")), 500 < et(e[t]) && (o = "nick name limited: must less than or equal to ".concat(500, " bytes, current size: ").concat(et(e[t]), " bytes"), n = !1);
                                        break;
                                    case "gender":
                                        it(Ue, e.gender) || (o = "key:gender, invalid value:" + e.gender, n = !1);
                                        break;
                                    case "birthday":
                                        Ye(e.birthday) || (n = !(o = "birthday must be a number"));
                                        break;
                                    case "location":
                                        ct(e.location) || (n = !(o = "location must be a string"));
                                        break;
                                    case "selfSignature":
                                        ct(e.selfSignature) || (n = !(o = "selfSignature must be a string"));
                                        break;
                                    case "allowType":
                                        it(we, e.allowType) || (o = "key:allowType, invalid value:" + e.allowType, n = !1);
                                        break;
                                    case "language":
                                        Ye(e.language) || (n = !(o = "language must be a number"));
                                        break;
                                    case "avatar":
                                        ct(e.avatar) || (n = !(o = "avatar must be a string"));
                                        break;
                                    case "messageSettings":
                                        0 !== e.messageSettings && 1 !== e.messageSettings && (n = !(o = "messageSettings must be 0 or 1"));
                                        break;
                                    case "adminForbidType":
                                        it(be, e.adminForbidType) || (o = "key:adminForbidType, invalid value:" + e.adminForbidType, n = !1);
                                        break;
                                    case "level":
                                        Ye(e.level) || (n = !(o = "level must be a number"));
                                        break;
                                    case "role":
                                        Ye(e.role) || (n = !(o = "role must be a number"));
                                        break;
                                    default:
                                        o = "unknown key:" + t + "  " + e[t], n = !1
                                }
                            }
                        return {
                            valid: n,
                            tips: o
                        }
                    }
                }]), oa),
                ti = (s(na, [{
                    key: "set",
                    value: function(e) {
                        var t;
                        this.map.size >= this.MAX_LENGTH && (t = this.map.entries().next().value[0], this.map.delete(t)), this.map.set(e, 1)
                    }
                }, {
                    key: "has",
                    value: function(e) {
                        return this.map.has(e)
                    }
                }, {
                    key: "delete",
                    value: function(e) {
                        this.has(e) && this.map.delete(e)
                    }
                }, {
                    key: "reset",
                    value: function() {
                        this.map.clear()
                    }
                }]), na),
                ni = ["groupID", "name", "avatar", "type", "introduction", "notification", "ownerID", "selfInfo", "createTime", "infoSequence", "lastInfoTime", "lastMessage", "nextMessageSeq", "memberNum", "maxMemberNum", "memberList", "joinOption", "groupCustomField", "muteAllMembers", "isSupportTopic", "inviteOption", "_lastRevokedTime"],
                oi = (s(ta, [{
                    key: "memberNum",
                    get: function() {
                        return this.memberCount
                    },
                    set: function(e) {}
                }, {
                    key: "maxMemberNum",
                    get: function() {
                        return this.maxMemberCount
                    },
                    set: function(e) {}
                }, {
                    key: "_initGroup",
                    value: function(e) {
                        for (var t in e) ni.indexOf(t) < 0 || ("selfInfo" !== t ? ("memberNum" === t && (this.memberCount = e[t]), "maxMemberNum" === t && (this.maxMemberCount = e[t]), "isSupportTopic" !== t ? this[t] = e[t] : this.isSupportTopic = 1 === e[t]) : this.updateSelfInfo(e[t]))
                    }
                }, {
                    key: "updateGroup",
                    value: function(e) {
                        var t = this;
                        (e.appid = void 0, e.grossTopicNextMsgSeq = void 0, e.selfInfo && (e.selfInfo.grossTopicReadSeq = void 0), e = JSON.parse(JSON.stringify(e))).lastMsgTime && (this.lastMessage.lastTime = e.lastMsgTime), ut(e.muteAllMembers) || ("On" === e.muteAllMembers ? e.muteAllMembers = !0 : e.muteAllMembers = !1), e.groupCustomField && mt(this.groupCustomField, e.groupCustomField), ut(e.memberNum) || (this.memberCount = e.memberNum), ut(e.maxMemberNum) || (this.maxMemberCount = e.maxMemberNum), ut(e.isSupportTopic) || (this.isSupportTopic = Ye(e.isSupportTopic) ? 1 === e.isSupportTopic : e.isSupportTopic), Qe(this, e, ["members", "errorCode", "lastMsgTime", "groupCustomField", "memberNum", "maxMemberNum", "isSupportTopic"]), Je(e.members) && 0 < e.members.length && e.members.forEach((function(e) {
                            e.userID === t.selfInfo.userID && Qe(t.selfInfo, e, ["sequence"])
                        }))
                    }
                }, {
                    key: "updateSelfInfo",
                    value: function(e) {
                        e = {
                            nameCard: e.nameCard,
                            joinTime: e.joinTime,
                            role: e.role,
                            messageRemindType: e.messageRemindType,
                            readedSequence: e.readedSequence,
                            excludedUnreadSequenceList: e.excludedUnreadSequenceList
                        }, Qe(this.selfInfo, t({}, e), [], ["", null, void 0, 0, NaN])
                    }
                }, {
                    key: "setSelfNameCard",
                    value: function(e) {
                        this.selfInfo.nameCard = e
                    }
                }]), ta),
                ii = (s(ea, [{
                    key: "toAccount",
                    get: function() {
                        return this.conversationID.startsWith(E.CONV_C2C) ? this.conversationID.replace(E.CONV_C2C, "") : this.conversationID.startsWith(E.CONV_GROUP) ? this.conversationID.replace(E.CONV_GROUP, "") : ""
                    }
                }, {
                    key: "_initProfile",
                    value: function(e) {
                        var t = this;
                        Object.keys(e).forEach((function(n) {
                            switch (n) {
                                case "userProfile":
                                    t.userProfile = e.userProfile;
                                    break;
                                case "groupProfile":
                                    t.groupProfile = e.groupProfile
                            }
                        })), ut(this.userProfile) && this.type === E.CONV_C2C ? this.userProfile = new ei({
                            userID: e.conversationID.replace("C2C", "")
                        }) : ut(this.groupProfile) && this.type === E.CONV_GROUP && (this.groupProfile = new oi({
                            groupID: e.conversationID.replace("GROUP", "")
                        }))
                    }
                }, {
                    key: "updateUnreadCount",
                    value: function(e) {
                        var t = e.nextUnreadCount,
                            n = e.isFromGetConversations;
                        e = e.isUnreadC2CMessage, ut(t) || (Mt(this.subType) ? this.unreadCount = 0 : n && this.type === E.CONV_GROUP || n && this.type === E.CONV_TOPIC || e && this.type === E.CONV_C2C ? this.unreadCount = t : this.unreadCount = this.unreadCount + t)
                    }
                }, {
                    key: "updateLastMessage",
                    value: function(e) {
                        this.lastMessage = Ko(e)
                    }
                }, {
                    key: "updateGroupAtInfoList",
                    value: function(e) {
                        var t;
                        this._isNeedMergeGroupAtInfo(e) || (-1 !== (t = (v(t = e.groupAtType) || I(t) || M(t) || C()).slice(0)).indexOf(E.CONV_AT_ME) && -1 !== t.indexOf(E.CONV_AT_ALL) && (t = [E.CONV_AT_ALL_AT_ME]), t = {
                            from: e.from,
                            groupID: e.groupID,
                            topicID: e.topicID,
                            messageSequence: e.sequence,
                            atTypeArray: t,
                            __random: e.__random,
                            __sequence: e.__sequence
                        }, this.groupAtInfoList.push(t))
                    }
                }, {
                    key: "_isNeedMergeGroupAtInfo",
                    value: function(e) {
                        var t = e.groupID,
                            n = e.sequence;
                        if (!yt({
                                groupID: t
                            })) return !1;
                        var o = !1;
                        return this.groupAtInfoList.forEach((function(t) {
                            t.messageSequence === n && (-1 < t.atTypeArray.indexOf(E.CONV_AT_ME) && -1 < e.groupAtType.indexOf(E.CONV_AT_ALL) && (t.atTypeArray = [E.CONV_AT_ALL_AT_ME]), -1 < t.atTypeArray.indexOf(E.CONV_AT_ALL) && -1 < e.groupAtType.indexOf(E.CONV_AT_ME) && (t.atTypeArray = [E.CONV_AT_ALL_AT_ME], t.__random = e.__random, t.__sequence = e.__sequence), o = !0)
                        })), o
                    }
                }, {
                    key: "clearGroupAtInfoList",
                    value: function() {
                        this.groupAtInfoList.length = 0
                    }
                }, {
                    key: "reduceUnreadCount",
                    value: function() {
                        return 1 <= this.unreadCount && (--this.unreadCount, !0)
                    }
                }, {
                    key: "isLastMessageRevoked",
                    value: function(e) {
                        var t = e.sequence;
                        return e = e.time, this.type === E.CONV_C2C && t === this.lastMessage.lastSequence && e === this.lastMessage.lastTime || this.type === E.CONV_GROUP && t === this.lastMessage.lastSequence
                    }
                }, {
                    key: "setLastMessageRevoked",
                    value: function(e) {
                        this.lastMessage.isRevoked = e
                    }
                }, {
                    key: "setLastMessageRevoker",
                    value: function(e) {
                        this.lastMessage.revoker = e
                    }
                }, {
                    key: "setDraftText",
                    value: function(e) {
                        this.draftText = e
                    }
                }]), ea),
                ai = (r($ = {}, E.MSG_REMIND_ACPT_AND_NOTE, 0), r($, E.MSG_REMIND_DISCARD, 1), r($, E.MSG_REMIND_ACPT_NOT_NOTE, 2), $),
                si = (s($i, [{
                    key: "onAllRcvMsgOptNotify",
                    value: function(e) {
                        e = this._handleResult(e), this._convM.emitOEvt(D.ALL_RECEIVE_MESSAGE_OPT_UPDATED, e)
                    }
                }, {
                    key: "getC2CMsgRemindType",
                    value: function(e) {
                        var t = this,
                            n = "".concat(this._n, ".getC2CMsgRemindType");
                        return this._convM.req({
                            P: wn.GET_C2C_PEER_MUTE_NOTIFICATIONS,
                            data: {
                                toAccount: this._convM.getMyUserID(),
                                userIDList: e
                            }
                        }).then((function(o) {
                            Oe.l("".concat(n, " ok. userIDList:").concat(e)), o = o.data.muteFlagList, t._convM.onC2CMsgRemindTypeFetched(o)
                        })).catch((function(e) {
                            Oe.e("".concat(n, " failed. error:"), e)
                        }))
                    }
                }, {
                    key: "set",
                    value: function(e) {
                        return e.groupID ? this._setGroupMsgRemindType(e) : Je(e.userIDList) ? this._setC2CMsgRemindType(e) : void 0
                    }
                }, {
                    key: "_setGroupMsgRemindType",
                    value: function(e) {
                        var t = this,
                            n = "".concat(this._n, ".").concat("_setGroupMsgRemindType"),
                            o = e.groupID,
                            i = e.messageRemindType,
                            a = "groupID:".concat(o, " messageRemindType:").concat(i),
                            s = new Qn("_setGroupMsgRemindType"),
                            r = (s.setMessage(a), this._get(7));
                        return r ? r.modifyGroupMemberInfo({
                            groupID: o,
                            messageRemindType: i,
                            userID: this._convM.getMyUserID()
                        }).then((function() {
                            s.end(), Oe.l("".concat(n, " ok. ").concat(a));
                            var o = t.onGroupMsgRemindTypeUpdated(e);
                            return t._convM.onTotalUnreadCountUpdate(), vn(o)
                        })).catch((function(e) {
                            return s.setError(e).end(), Oe.e("".concat(n, " failed. error:"), e), Mn(e)
                        })) : Mn({
                            code: Un.NO_MODULE
                        })
                    }
                }, {
                    key: "onGroupMsgRemindTypeUpdated",
                    value: function(e) {
                        var t, n, o = e.groupID,
                            i = (e = e.messageRemindType, Oe.l("".concat(this._n, ".onGroupMsgRemindTypeUpdated groupID:").concat(o, " messageRemindType:").concat(e)), this._get(7).getLocalGroupProfile(o));
                        return i && (i.selfInfo.messageRemindType = e), Ct(o) ? (t = wt(n = o), (n = this._get(10).getLocalTopic(t, n)) && n.updateSelfInfo({
                            messageRemindType: e
                        }) && this._convM.emitOEvt(D.TOPIC_UPDATED, {
                            groupID: t,
                            topic: n
                        }), {
                            topic: n
                        }) : (this._convM.patchMsgRemindType({
                            ID: o,
                            isC2CConversation: !1,
                            messageRemindType: e
                        }) && this._emitConvUpdate(), {
                            group: i
                        })
                    }
                }, {
                    key: "_setC2CMsgRemindType",
                    value: function(e) {
                        var t = this,
                            n = "".concat(this._n, ".").concat("_setC2CMsgRemindType"),
                            o = e.userIDList,
                            i = e.messageRemindType,
                            a = o.slice(0, 30),
                            s = (e = ai[i] || 0, "userIDList:".concat(a, " messageRemindType:").concat(i)),
                            r = new Qn("_setC2CMsgRemindType");
                        return r.setMessage(s), this._convM.req({
                            P: wn.SET_C2C_PEER_MUTE_NOTIFICATIONS,
                            data: {
                                userIDList: a,
                                muteFlag: e
                            }
                        }).then((function(e) {
                            r.end(), e = e.data.errorList;
                            var o = [],
                                c = [],
                                u = (Je(e) && e.forEach((function(e) {
                                    o.push(e.userID), c.push({
                                        userID: e.userID,
                                        code: e.errorCode
                                    })
                                })), e = a.filter((function(e) {
                                    return -1 === o.indexOf(e)
                                })), Oe.l("".concat(n, " ok. ").concat(s, " successUserIDList:").concat(e, " failureUserIDList:").concat(JSON.stringify(c))), 0);
                            return e.forEach((function(e) {
                                t._convM.patchMsgRemindType({
                                    ID: e,
                                    isC2CConversation: !0,
                                    messageRemindType: i
                                }) && (u += 1)
                            })), 1 <= u && t._emitConvUpdate(), a.length = o.length = 0, t._convM.onTotalUnreadCountUpdate(), In({
                                successUserIDList: e.map((function(e) {
                                    return {
                                        userID: e
                                    }
                                })),
                                failureUserIDList: c
                            })
                        })).catch((function(e) {
                            return r.setError(e).end(), Oe.e("".concat(n, " failed. error:"), e), Mn(e)
                        }))
                    }
                }, {
                    key: "_get",
                    value: function(e) {
                        return this._convM.get(e)
                    }
                }, {
                    key: "_emitConvUpdate",
                    value: function() {
                        this._convM.emitConvUpdate(!0, !1)
                    }
                }, {
                    key: "setAllRcvMsgOpt",
                    value: function(e) {
                        var t = "".concat(this._n, ".").concat("setAllRcvMsgOpt"),
                            n = void 0 === (n = e.messageRemindType) ? E.MSG_REMIND_ACPT_NOT_NOTE : n,
                            o = void 0 === (o = e.isRepeated) || o,
                            i = void 0 === (i = (a = this._calcStartAndEndTime(e)).startTime) ? 0 : i,
                            a = void 0 === (a = a.endTime) ? 0 : a,
                            s = (e = JSON.stringify(e), new Qn("setAllRcvMsgOpt"));
                        return s.setMessage(e), Oe.l("".concat(t, " options:").concat(e)), this._convM.req({
                            P: wn.SET_ALL_RECEIVE_MSG_OPT,
                            data: {
                                messageRemindType: ai[n],
                                startTime: i,
                                endTime: a,
                                isRepeated: o ? 1 : 0
                            }
                        }).then((function(e) {
                            return s.end(), Oe.l("".concat(t, " ok.")), vn(e)
                        })).catch((function(e) {
                            return s.setError(e).end(), Oe.e("".concat(t, " failed. error:"), e), Mn(e)
                        }))
                    }
                }, {
                    key: "_calcStartAndEndTime",
                    value: function(e) {
                        var t = void 0 === (t = e.startHour) ? 0 : t,
                            n = void 0 === (n = e.startMinute) ? 0 : n,
                            o = void 0 === (o = e.startSecond) ? 0 : o,
                            i = void 0 === (i = e.duration) ? 0 : i,
                            a = (e = void 0 === (e = e.isRepeated) || e, (r = new Date).getFullYear()),
                            s = r.getMonth(),
                            r = r.getDate();
                        return {
                            startTime: a = Math.round(new Date(a, s, r, t, n, o).getTime() / 1e3),
                            endTime: e && 86400 <= i ? a + 86400 : a + i
                        }
                    }
                }, {
                    key: "getAllRcvMsgOpt",
                    value: function() {
                        var e = this,
                            t = "".concat(this._n, ".").concat("getAllRcvMsgOpt"),
                            n = new Qn("getAllRcvMsgOpt");
                        return this._convM.req({
                            P: wn.GET_ALL_RECEIVE_MSG_OPT,
                            data: {
                                toAccount: this._convM.getMyUserID()
                            }
                        }).then((function(o) {
                            return o = o.data, n.setMessage(JSON.stringify(o)).end(), Oe.l("".concat(t, " ok. data:").concat(JSON.stringify(o))), vn(o = e._handleResult(o))
                        })).catch((function(e) {
                            return n.setError(e).end(), Oe.e("".concat(t, " failed. error:"), e), Mn(e)
                        }))
                    }
                }, {
                    key: "_handleResult",
                    value: function(e) {
                        var t = e.messageRemindType,
                            n = e.startTime,
                            o = e.endTime,
                            i = (e = e.isRepeated, E.MSG_REMIND_ACPT_AND_NOTE);
                        return 1 === t && (i = E.MSG_REMIND_DISCARD), {
                            messageRemindType: i = 2 === t ? E.MSG_REMIND_ACPT_NOT_NOTE : i,
                            startTime: n,
                            endTime: o,
                            isRepeated: 1 === e
                        }
                    }
                }, {
                    key: "reset",
                    value: function() {
                        Oe.l("".concat(this._n, ".reset"))
                    }
                }]), $i),
                ri = (s(Qi, [{
                    key: "setConvCustomData",
                    value: function(e) {
                        var t = this,
                            n = "".concat(this._n, ".").concat("setConvCustomData"),
                            o = e.conversationIDList,
                            i = e.customData,
                            a = (Oe.l("".concat(n, " options:"), e), new Qn("setConvCustomData")),
                            s = (a.setMessage(JSON.stringify(e)), {
                                fromAccount: this._getMyUserID(),
                                itemList: []
                            }),
                            r = [],
                            c = [];
                        return o.forEach((function(e) {
                            if (!t._hasLocalConv(e)) return t._onConvNotFound(c, e), !0;
                            if (!Tt(e) && !Dt(e)) return t._onConvIDInvalid(c, e), !0;
                            var n = {
                                operationType: 2,
                                contactItem: void 0,
                                customMark: i
                            };
                            Tt(e) ? n.contactItem = {
                                type: 1,
                                toAccount: e.replace(E.CONV_C2C, "")
                            } : Dt(e) && (n.contactItem = {
                                type: 2,
                                groupID: e.replace(E.CONV_GROUP, "")
                            }), s.itemList.push(n)
                        })), c.length === o.length ? In({
                            successConversationIDList: r,
                            failureConversationIDList: c
                        }) : this._convM.req({
                            P: wn.SET_CONV_CUSTOM_DATA,
                            data: s
                        }).then((function(e) {
                            var o, s, u;
                            return a.end(), Oe.l("".concat(n, " ok")), Je(e = e.data.resultItem) && (u = !1, e.forEach((function(e) {
                                o = t._concatConvID(e.contactItem), 0 === e.resultCode ? (r.push(o), (s = t._getLocalConv(o)) && s.customData !== i && (s.customData = i, u = !0)) : c.push({
                                    conversationID: o,
                                    code: e.resultCode,
                                    message: e.resultInfo
                                })
                            })), !0 === u && t._emitConvUpdate()), vn({
                                successConversationIDList: r,
                                failureConversationIDList: c
                            })
                        })).catch((function(e) {
                            return a.setError(e).end(), Oe.e("".concat(n, " failed. error:"), e), Mn(e)
                        }))
                    }
                }, {
                    key: "markConv",
                    value: function(e) {
                        var t = this;
                        if (!this._convM.canIUse(U.CONV_MARK)) return this._convM.noUse("markConv");
                        var n = "".concat(this._n, ".").concat("markConv"),
                            o = e.conversationIDList,
                            i = e.markType,
                            a = e.enableMark,
                            s = (Oe.l("".concat(n, " options:"), e), new Qn("markConv")),
                            r = void s.setMessage(JSON.stringify(e)),
                            c = void 0,
                            u = (e = this._getFlagBit(i), !0 === a ? c = [e] : r = [e], {
                                fromAccount: this._getMyUserID(),
                                itemList: []
                            }),
                            l = [],
                            d = [];
                        return o.forEach((function(e) {
                            if (!t._hasLocalConv(e)) return t._onConvNotFound(d, e), !0;
                            if (!Tt(e) && !Dt(e)) return t._onConvIDInvalid(d, e), !0;
                            var n = {
                                operationType: 1,
                                contactItem: void 0,
                                clearMark: r,
                                setMark: c
                            };
                            Tt(e) ? n.contactItem = {
                                type: 1,
                                toAccount: e.replace(E.CONV_C2C, "")
                            } : Dt(e) && (n.contactItem = {
                                type: 2,
                                groupID: e.replace(E.CONV_GROUP, "")
                            }), u.itemList.push(n)
                        })), d.length === o.length ? In({
                            successConversationIDList: l,
                            failureConversationIDList: d
                        }) : this._convM.req({
                            P: wn.MARK_CONV,
                            data: u
                        }).then((function(e) {
                            var o, r, c;
                            return s.end(), Oe.l("".concat(n, " ok")), Je(e = e.data.resultItem) && (c = !1, e.forEach((function(e) {
                                var n;
                                o = t._concatConvID(e.contactItem), 0 === e.resultCode ? (l.push(o), (r = t._getLocalConv(o)) && (n = r.markList.indexOf(i), !0 === a ? -1 === n && (r.markList.push(i), c = !0) : -1 !== n && (r.markList.splice(n, 1), c = !0))) : d.push({
                                    conversationID: o,
                                    code: e.resultCode,
                                    message: e.resultInfo
                                })
                            })), !0 === c && t._emitConvUpdate()), vn({
                                successConversationIDList: l,
                                failureConversationIDList: d
                            })
                        })).catch((function(e) {
                            return s.setError(e).end(), Oe.e("".concat(n, " failed. error:"), e), Mn(e)
                        }))
                    }
                }, {
                    key: "getLocalConvGroupList",
                    value: function() {
                        var e = this;
                        return Oe.l("".concat(this._n, ".getLocalConvGroupList pagingStatus:").concat(this._pagingStatus)), this._pagingStatus === kn ? this.getRemoteConvGroupList().then((function() {
                            return vn(m(e._convGroupMap.values()))
                        })) : In(m(this._convGroupMap.values()))
                    }
                }, {
                    key: "searchConvGroupAndMark",
                    value: function(e, t) {
                        var n = this,
                            o = "".concat(this._n, ".searchConvGroupAndMark"),
                            i = [];
                        return e.forEach((function(e) {
                            1 === t ? i.push({
                                type: 1,
                                toAccount: e
                            }) : 2 === t && i.push({
                                type: 2,
                                groupID: e
                            })
                        })), Oe.l("".concat(o, " type:").concat(t, " list:"), e), this._convM.req({
                            P: wn.SEARCH_CONV_GRP_MARK,
                            data: {
                                fromAccount: this._getMyUserID(),
                                contactItem: i
                            }
                        }).then((function(e) {
                            var t = (e = e.data).contactItem;
                            e = e.groupItem, Oe.l("".concat(o, " ok. contactItem:"), t, "groupItem:", e), n._fillConvGroupMap(e), n._handleContactItem(t), n._emitConvUpdate()
                        })).catch((function(e) {
                            Oe.w("".concat(o, " failed. error:"), e)
                        }))
                    }
                }, {
                    key: "_fillConvGroupMap",
                    value: function(e) {
                        var t = this;
                        Je(e) && e.forEach((function(e) {
                            var n = e.convGroupID;
                            e = e.groupName, t._convGroupMap.set(n, e)
                        }))
                    }
                }, {
                    key: "_handleContactItem",
                    value: function(e) {
                        var t, n = this;
                        Je(e) && e.forEach((function(e) {
                            var o = [],
                                i = e.standardMark,
                                a = e.customData,
                                s = e.convGroupIDList;
                            Je(s) && s.forEach((function(e) {
                                n._convGroupMap.has(e) && o.push(n._convGroupMap.get(e))
                            })), t = n._concatConvID(e), (t = n._getLocalConv(t)) && (t.markList = xt(i), t.customData = a || "", t.conversationGroupList = [].concat(o))
                        }))
                    }
                }, {
                    key: "getRemoteConvGroupList",
                    value: function() {
                        var e = this,
                            t = "".concat(this._n, ".getRemoteConvGroupList");
                        return this._pagingStatus = Ln, this._convM.req({
                            P: wn.GET_CONV_GRP_LIST,
                            data: {
                                fromAccount: this._getMyUserID(),
                                startIndex: this._startIndex
                            }
                        }).then((function(n) {
                            var o = (n = n.data).completeFlag,
                                i = n.contactItem,
                                a = void 0 === (a = n.nextStartIndex) ? 0 : a;
                            if (n = n.groupItem, e._startIndex = a, Oe.l("".concat(t, " completeFlag:").concat(o, " nextStartIndex:").concat(a, ", groupItem:"), n, "contactItem:", i), e._fillConvGroupMap(n), e._handleContactItem(i), 0 === o) return e.getRemoteConvGroupList();
                            1 === o && (e._pagingStatus = Sn, e._emitConvUpdate(), e._emitConvGroupListUpdate())
                        })).catch((function(n) {
                            e._pagingStatus = kn, Oe.w("".concat(t, " failed. error:"), n)
                        }))
                    }
                }, {
                    key: "createConvGroup",
                    value: function(e) {
                        var t = this;
                        if (!this._convM.canIUse(U.CONV_GROUP)) return this._convM.noUse("createConvGroup");
                        var n = "".concat(this._n, ".").concat("createConvGroup"),
                            o = (Oe.l("".concat(n, " options:"), e), new Qn("createConvGroup")),
                            i = (o.setMessage(JSON.stringify(e)), e.groupName),
                            a = (e = e.conversationIDList, {
                                fromAccount: this._getMyUserID(),
                                itemList: [{
                                    groupName: i,
                                    contactItem: []
                                }]
                            }),
                            s = [],
                            r = [];
                        return e.forEach((function(e) {
                            return t._hasLocalConv(e) ? Tt(e) || Dt(e) ? void(Tt(e) ? a.itemList[0].contactItem.push({
                                type: 1,
                                toAccount: e.replace(E.CONV_C2C, "")
                            }) : Dt(e) && a.itemList[0].contactItem.push({
                                type: 2,
                                groupID: e.replace(E.CONV_GROUP, "")
                            })) : (t._onConvIDInvalid(r, e), !0) : (t._onConvNotFound(r, e), !0)
                        })), r.length === e.length ? In({
                            successConversationIDList: s,
                            failureConversationIDList: r
                        }) : this._convM.req({
                            P: wn.CREATE_CONV_GRP,
                            data: a
                        }).then((function(e) {
                            o.end(), Oe.l("".concat(n, " ok"));
                            var a, c, u, l = (e = e.data.groupResultItem[0]).groupItem;
                            return e = e.resultItem, je(l) && (t._convGroupMap.set(l.convGroupID, l.groupName), t._emitConvGroupListUpdate()), Je(e) && (u = !1, e.forEach((function(e) {
                                a = t._concatConvID(e.contactItem), 0 === e.resultCode ? (s.push(a), (c = t._getLocalConv(a)) && -1 === c.conversationGroupList.indexOf(i) && (c.conversationGroupList.push(i), u = !0)) : r.push({
                                    conversationID: a,
                                    code: e.resultCode,
                                    message: e.resultInfo
                                })
                            })), !0 === u && (t._emitConvUpdate(), t._emitConvGroupListUpdate())), vn({
                                successConversationIDList: s,
                                failureConversationIDList: r
                            })
                        })).catch((function(e) {
                            return o.setError(e).end(), Oe.e("".concat(n, " failed. error:"), e), Mn(e)
                        }))
                    }
                }, {
                    key: "deleteConvGroup",
                    value: function(e) {
                        var t = this;
                        if (!this._convM.canIUse(U.CONV_GROUP)) return this._convM.noUse("deleteConvGroup");
                        var n = "".concat(this._n, ".").concat("deleteConvGroup"),
                            o = (Oe.l("".concat(n, " groupName:").concat(e)), new Qn("deleteConvGroup"));
                        return o.setMessage(e), this._convM.req({
                            P: wn.DEL_CONV_GRP,
                            data: {
                                fromAccount: this._getMyUserID(),
                                groupName: [e]
                            }
                        }).then((function(i) {
                            var a;
                            o.end(), Oe.l("".concat(n, " ok")), Je(i = i.data.groupItem) && (a = !1, i.forEach((function(e) {
                                t._convGroupMap.has(e.convGroupID) && (t._convGroupMap.delete(e.convGroupID), a = !0)
                            })), !0 === a && t._emitConvGroupListUpdate()), t._eraseFromConversationGroupList([e])
                        })).catch((function(e) {
                            return o.setError(e).end(), Oe.e("".concat(n, " failed. error:"), e), Mn(e)
                        }))
                    }
                }, {
                    key: "renameConvGroup",
                    value: function(e) {
                        var t = this;
                        if (!this._convM.canIUse(U.CONV_GROUP)) return this._convM.noUse("renameConvGroup");
                        var n = "".concat(this._n, ".").concat("renameConvGroup"),
                            o = (Oe.l("".concat(n, " options:"), e), new Qn("renameConvGroup")),
                            i = (o.setMessage(JSON.stringify(e)), e.oldName),
                            a = e.newName;
                        return this._convM.req({
                            P: wn.RENAME_CONV_GRP,
                            data: {
                                fromAccount: this._getMyUserID(),
                                updateType: 1,
                                updateGroup: {
                                    updateGroupType: 1,
                                    oldName: i,
                                    newName: a
                                }
                            }
                        }).then((function(e) {
                            o.end(), Oe.l("".concat(n, " ok")), e = e.data.updateGroupResult.convGroupID, t._convGroupMap.set(e, a), t._emitConvGroupListUpdate(), e = t._convM.getLocalConvList();
                            var s, r, c = !1;
                            e.forEach((function(e) {
                                s = e.conversationGroupList, -1 !== (r = s.indexOf(i)) && (s.splice(r, 1, a), c = !0)
                            })), !0 === c && t._emitConvUpdate()
                        })).catch((function(e) {
                            return o.setError(e).end(), Oe.e("".concat(n, " failed. error:"), e), Mn(e)
                        }))
                    }
                }, {
                    key: "addConvsToGroup",
                    value: function(e) {
                        var t = this;
                        if (!this._convM.canIUse(U.CONV_GROUP)) return this._convM.noUse("addConvsToGroup");
                        var n = "".concat(this._n, ".").concat("addConvsToGroup"),
                            o = (Oe.l("".concat(n, " options:"), e), new Qn("addConvsToGroup")),
                            i = (o.setMessage(JSON.stringify(e)), e.conversationIDList),
                            a = e.groupName,
                            s = {
                                fromAccount: this._getMyUserID(),
                                updateType: 1,
                                updateGroup: {
                                    updateGroupType: 2,
                                    groupName: a,
                                    updateItem: []
                                }
                            },
                            r = [],
                            c = [];
                        return i.forEach((function(e) {
                            return t._hasLocalConv(e) ? Tt(e) || Dt(e) ? void(Tt(e) ? s.updateGroup.updateItem.push({
                                operationType: 1,
                                contactItem: {
                                    type: 1,
                                    toAccount: e.replace(E.CONV_C2C, "")
                                }
                            }) : Dt(e) && s.updateGroup.updateItem.push({
                                operationType: 1,
                                contactItem: {
                                    type: 2,
                                    groupID: e.replace(E.CONV_GROUP, "")
                                }
                            })) : (t._onConvIDInvalid(c, e), !0) : (t._onConvNotFound(c, e), !0)
                        })), c.length === i.length ? In({
                            successConversationIDList: r,
                            failureConversationIDList: c
                        }) : this._convM.req({
                            P: wn.ADD_CONV_TO_GRP,
                            data: s
                        }).then((function(e) {
                            var i, s, u;
                            return o.end(), Oe.l("".concat(n, " ok")), Je(e = e.data.updateGroupResult.contactResultItem) && (u = !1, e.forEach((function(e) {
                                i = t._concatConvID(e.contactItem), 0 === e.resultCode ? (s = t._getLocalConv(i)) && -1 === s.conversationGroupList.indexOf(a) && (s.conversationGroupList.push(a), r.push(i), u = !0) : c.push({
                                    conversationID: i,
                                    code: e.resultCode,
                                    message: e.resultInfo
                                })
                            })), !0 === u && (t._emitConvUpdate(), t._emitConvInGroupUpdate(a))), vn({
                                successConversationIDList: r,
                                failureConversationIDList: c
                            })
                        })).catch((function(e) {
                            return o.setError(e).end(), Oe.e("".concat(n, " failed. error:"), e), Mn(e)
                        }))
                    }
                }, {
                    key: "deleteConvsFromGroup",
                    value: function(e) {
                        var t = this,
                            n = "deleteConvsFromGroup";
                        if (!this._convM.canIUse(U.CONV_GROUP)) return this._convM.noUse(n);
                        var o = "".concat(this._n, ".").concat(n),
                            i = (Oe.l("".concat(o, " options:"), e), new Qn(n)),
                            a = (i.setMessage(JSON.stringify(e)), n = e.conversationIDList, e.groupName),
                            s = {
                                fromAccount: this._getMyUserID(),
                                updateType: 1,
                                updateGroup: {
                                    updateGroupType: 2,
                                    groupName: a,
                                    updateItem: []
                                }
                            },
                            r = [],
                            c = [];
                        return n.forEach((function(e) {
                            return t._hasLocalConv(e) ? Tt(e) || Dt(e) ? void(Tt(e) ? s.updateGroup.updateItem.push({
                                operationType: 2,
                                contactItem: {
                                    type: 1,
                                    toAccount: e.replace(E.CONV_C2C, "")
                                }
                            }) : Dt(e) && s.updateGroup.updateItem.push({
                                operationType: 2,
                                contactItem: {
                                    type: 2,
                                    groupID: e.replace(E.CONV_GROUP, "")
                                }
                            })) : (t._onConvIDInvalid(c, e), !0) : (t._onConvNotFound(c, e), !0)
                        })), c.length === n.length ? In({
                            successConversationIDList: r,
                            failureConversationIDList: c
                        }) : this._convM.req({
                            P: wn.DEL_CONV_FROM_GRP,
                            data: s
                        }).then((function(e) {
                            var n, s, u;
                            return i.end(), Oe.l("".concat(o, " ok")), Je(e = e.data.updateGroupResult.contactResultItem) && (u = !1, e.forEach((function(e) {
                                var o;
                                n = t._concatConvID(e.contactItem), 0 === e.resultCode ? !(s = t._getLocalConv(n)) || -1 !== (o = s.conversationGroupList.indexOf(a)) && (s.conversationGroupList.splice(o, 1), r.push(n), u = !0) : c.push({
                                    conversationID: n,
                                    code: e.resultCode,
                                    message: e.resultInfo
                                })
                            })), !0 === u && (t._emitConvUpdate(), t._emitConvInGroupUpdate(a))), vn({
                                successConversationIDList: r,
                                failureConversationIDList: c
                            })
                        })).catch((function(e) {
                            return i.setError(e).end(), Oe.e("".concat(o, " failed. error:"), e), Mn(e)
                        }))
                    }
                }, {
                    key: "onConvMarkUpdated",
                    value: function(e) {
                        var t, n, o = this;
                        He(e) || (Oe.l("".concat(this._n, ".onConvMarkUpdated markItemList:"), e), n = !1, e.forEach((function(e) {
                            var i = e.recentContactItem,
                                a = e.optType,
                                s = e.standardMark;
                            e = e.customMark, t = o._concatConvID(i), (t = o._getLocalConv(t)) && (1 === a ? n = o._diffStandardMark(t, s) : 2 === a ? n = o._diffCustomMark(t, e) : 3 === a && (n = o._diffStandardMark(t, s) || o._diffCustomMark(t, e)))
                        })), !0 === n && this._emitConvUpdate())
                    }
                }, {
                    key: "_diffStandardMark",
                    value: function(e, t) {
                        t = xt(t);
                        var n = !1;
                        return !0 !== function(e, t) {
                            if (e === t) return !0;
                            if (!e || !t) return !1;
                            if (e.length !== t.length) return !1;
                            for (var n = 0, o = e.length; n < o; n++)
                                if (e[n] !== t[n]) return !1;
                            return !0
                        }(e.markList, t) && (e.markList = t, n = !0), n
                    }
                }, {
                    key: "_diffCustomMark",
                    value: function(e, t) {
                        var n = !1;
                        return e.customData !== t && void 0 !== t && (e.customData = t, n = !0), n
                    }
                }, {
                    key: "onConvGroupCreated",
                    value: function(e) {
                        var t = this,
                            n = (Oe.l("".concat(this._n, ".onConvGroupCreated resultList:"), e), !1),
                            o = !1;
                        Je(e) && (e.forEach((function(e) {
                            var i, a, s = (a = e.msgGroupItem).groupID,
                                r = a.groupName;
                            t._convGroupMap.get(s) !== r && (t._convGroupMap.set(s, r), o = !0), Je(a = e.msgRecentContactItem) && a.forEach((function(e) {
                                i = t._concatConvID(e), (i = t._getLocalConv(i)) && -1 === i.conversationGroupList.indexOf(r) && (i.conversationGroupList.push(r), n = !0)
                            }))
                        })), !0 === n && this._emitConvUpdate(), !0 === o && this._emitConvGroupListUpdate())
                    }
                }, {
                    key: "onConvGroupDeleted",
                    value: function(e) {
                        var t, n = this,
                            o = (Oe.l("".concat(this._n, ".onConvGroupDeleted groupItemList:"), e), []);
                        Je(e) && (t = !1, e.forEach((function(e) {
                            var i = e.groupID;
                            e = e.groupName, n._convGroupMap.has(i) && (n._convGroupMap.delete(i), t = !0, o.push(e))
                        })), !0 === t && this._emitConvGroupListUpdate()), this._eraseFromConversationGroupList(o)
                    }
                }, {
                    key: "_eraseFromConversationGroupList",
                    value: function(e) {
                        He(e) || (this._convM.getLocalConvList().forEach((function(t) {
                            t.conversationGroupList = t.conversationGroupList.filter((function(t) {
                                return !e.includes(t)
                            }))
                        })), this._emitConvUpdate())
                    }
                }, {
                    key: "onConvGroupNameUpdated",
                    value: function(e) {
                        Oe.l("".concat(this._n, ".onConvGroupNameUpdated options:"), e);
                        var t, n, o, i = e.groupID,
                            a = e.groupName,
                            s = e.oldGroupName;
                        this._convGroupMap.get(i) !== a && (this._convGroupMap.set(i, a), this._emitConvGroupListUpdate(), e = this._convM.getLocalConvList(), o = !1, e.forEach((function(e) {
                            t = e.conversationGroupList, -1 !== (n = t.indexOf(s)) && (t.splice(n, 1, a), o = !0)
                        })), !0 === o && this._emitConvUpdate())
                    }
                }, {
                    key: "onConvInGroupUpdated",
                    value: function(e) {
                        var t, n, o, i = this,
                            a = (Oe.l("".concat(this._n, ".onConvInGroupUpdated options:"), e), e.oldGroupName);
                        Je(e = e.recentContactUpdateGroupItem) && (o = !1, e.forEach((function(e) {
                            var s = e.contactOptType;
                            e = e.recentContactItem, t = i._concatConvID(e), (t = i._getLocalConv(t)) && (n = t.conversationGroupList.indexOf(a), 1 === s ? -1 === n && (t.conversationGroupList.push(a), o = !0) : 2 === s && -1 !== n && (t.conversationGroupList.splice(n, 1), o = !0))
                        })), !0 === o && (this._emitConvUpdate(), this._emitConvInGroupUpdate(a)))
                    }
                }, {
                    key: "onConvAddedToOrDeletedFromGroup",
                    value: function(e) {
                        var t, n, o = this,
                            i = (Oe.l("".concat(this._n, ".onConvAddedToOrDeletedFromGroup options:"), e), e.msgRecentContactItem),
                            a = (e = e.msgRecentContactUpdateContactItem, i = this._concatConvID(i), this._getLocalConv(i));
                        a && Je(e) && (n = !1, e.forEach((function(e) {
                            var i = e.groupOptType;
                            e = e.recentContactGroupItem.groupName, t = a.conversationGroupList.indexOf(e), 1 === i ? -1 === t && (a.conversationGroupList.push(e), n = !0) : 2 === i && -1 !== t && (a.conversationGroupList.splice(t, 1), n = !0), !0 === n && o._emitConvInGroupUpdate(e)
                        })), !0 === n && this._emitConvUpdate())
                    }
                }, {
                    key: "onConvGroupListSynced",
                    value: function(e) {
                        Je(e) && 0 !== e.length && (Oe.l("".concat(this._n, ".onConvGroupListSynced groupItem:"), e), this._fillConvGroupMap(e))
                    }
                }, {
                    key: "getConvGroupListByID",
                    value: function(e) {
                        var t, n = this;
                        if (!He(e)) return t = [], e.forEach((function(e) {
                            n._convGroupMap.has(e) && t.push(n._convGroupMap.get(e))
                        })), t
                    }
                }, {
                    key: "_onConvNotFound",
                    value: function(e, t) {
                        e.push({
                            conversationID: t,
                            code: Un.CONV_NOT_FOUND,
                            message: this._convM.getErrMsg(Un.CONV_NOT_FOUND)
                        })
                    }
                }, {
                    key: "_onConvIDInvalid",
                    value: function(e, t) {
                        e.push({
                            conversationID: t,
                            code: Un.INVALID_CONV_ID,
                            message: this._convM.getErrMsg(Un.INVALID_CONV_ID)
                        })
                    }
                }, {
                    key: "_getFlagBit",
                    value: function(e) {
                        for (var t = e.toString(2), n = t.length, o = n - 1; 0 <= o; o--)
                            if ("1" === t[o]) return n - o - 1
                    }
                }, {
                    key: "_concatConvID",
                    value: function(e) {
                        var t, n = e.type,
                            o = e.to,
                            i = e.groupID;
                        return e = e.userID, 1 === n ? ut(e) ? ut(o) || (t = "".concat(E.CONV_C2C).concat(o)) : t = "".concat(E.CONV_C2C).concat(e) : 2 === n && (t = "".concat(E.CONV_GROUP).concat(i)), t
                    }
                }, {
                    key: "_getMyUserID",
                    value: function() {
                        return this._convM.getMyUserID()
                    }
                }, {
                    key: "_getLocalConv",
                    value: function(e) {
                        return this._convM.getLocalConversation(e)
                    }
                }, {
                    key: "_hasLocalConv",
                    value: function(e) {
                        return this._convM.hasLocalConversation(e)
                    }
                }, {
                    key: "_emitConvUpdate",
                    value: function() {
                        this._convM.emitConvUpdate(!0, !1)
                    }
                }, {
                    key: "_emitConvGroupListUpdate",
                    value: function() {
                        this._convM.emitOEvt(D.CONVERSATION_GROUP_LIST_UPDATED, m(this._convGroupMap.values()))
                    }
                }, {
                    key: "_emitConvInGroupUpdate",
                    value: function(e) {
                        var t = {
                                groupName: e,
                                conversationList: []
                            },
                            n = this._convM.getLocalConvList();
                        t.conversationList = n.filter((function(t) {
                            return t.conversationGroupList.includes(e)
                        })), this._convM.emitOEvt(D.CONVERSATION_IN_GROUP_UPDATED, t)
                    }
                }, {
                    key: "reset",
                    value: function() {
                        Oe.l("".concat(this._n, ".reset")), this._convGroupMap.clear(), this._startIndex = 0, this._pagingStatus = En
                    }
                }]), Qi),
                ci = (c(Zi, Rn), Zo = g(Zi), s(Zi, [{
                    key: "_initListeners",
                    value: function() {
                        var e = this.getIEmitInst();
                        e.on(qo.A2KEY_AND_TINYID_UPDATED, this._init, this), e.on(qo.PROFILE_UPDATED, this._onProfileUpdated, this), e.on(qo.CLOUD_CONFIG, this._onCloudConfig, this)
                    }
                }, {
                    key: "_init",
                    value: function() {
                        var e = this,
                            t = (Oe.l("".concat(this._n, "._init")), this.get(13).getItem("conversationMap")),
                            n = this.isIntl(),
                            o = this.isUsingChatCore();
                        if (t) {
                            for (var i = t.length, a = 0; a < i; a++) {
                                var s = t[a];
                                if (s) {
                                    if (this._isNonExistentAccount(s.conversationID)) continue;
                                    if (s.groupProfile && Mt(s.groupProfile.type)) continue
                                }
                                this._convMap.set(s.conversationID, new ii(t[a], n, o))
                            }
                            this.emitConvUpdate(!0, !1)
                        }
                        this.ready((function() {
                            0 < e._tmpGroupList.length && (e.updateConvGroupProfile(e._tmpGroupList), e._tmpGroupList.length = 0)
                        })), this.syncConvList()
                    }
                }, {
                    key: "_isNonExistentAccount",
                    value: function(e) {
                        var t;
                        return "@TLS#ERROR" === (t = e.startsWith(E.CONV_C2C) ? e.replace(E.CONV_C2C, "") : t) || "@TLS#NOT_FOUND" === t
                    }
                }, {
                    key: "onCheckTimer",
                    value: function(e) {
                        this.isLoggedIn() && this._msgListHandler.onCheckTimer(e)
                    }
                }, {
                    key: "onMessageSent",
                    value: function(e) {
                        this._onSendOrRcvMsg({
                            conversationOptionsList: e.conversationOptionsList,
                            isInstantMessage: !0
                        })
                    }
                }, {
                    key: "onNewMessage",
                    value: function(e) {
                        this._onSendOrRcvMsg(e)
                    }
                }, {
                    key: "_onSendOrRcvMsg",
                    value: function(e) {
                        var t = this,
                            n = e.conversationOptionsList,
                            o = void 0 === (o = e.isInstantMessage) || o,
                            i = void 0 !== (i = e.isUnreadC2CMessage) && i,
                            a = void 0 === (a = e.updateUnreadCount) || a,
                            s = void 0 !== (s = e.isSyncingEnded) && s;
                        this._isReady ? 0 !== n.length ? (!0 === o && this._checkNewConv(n), this._updateLocalConvList({
                            conversationOptionsList: n,
                            isInstantMessage: o,
                            isUnreadC2CMessage: i,
                            isFromGetConversations: !1,
                            updateUnreadCount: a
                        }), o || (this._convIDFromUnreadDBMap = new Map([].concat(m(this._convIDFromUnreadDBMap), m(n.map((function(e) {
                            return [e.conversationID, 1]
                        }))))), this._diffAndDeleteConv(), s && this.emitIEvt(qo.C2C_UNREAD_HANDLE_COMPLETED)), 0 < n.filter((function(e) {
                            return !t._isConvNeedShow(e.conversationID)
                        })).length || this.emitConvUpdate()) : s && this.emitIEvt(qo.C2C_UNREAD_HANDLE_COMPLETED) : this.ready((function() {
                            t._onSendOrRcvMsg(e)
                        }))
                    }
                }, {
                    key: "updateConvGroupProfile",
                    value: function(e) {
                        var t, n = this;
                        Je(e) && 0 === e.length || (0 !== this._convMap.size ? (t = !1, e.forEach((function(e) {
                            var o = "".concat(E.CONV_GROUP).concat(e.groupID);
                            n._convMap.has(o) && (t = !0, (o = n._convMap.get(o)).groupProfile = JSON.parse(JSON.stringify(e)), o.lastMessage.lastSequence < e.nextMessageSeq && (o.lastMessage.lastSequence = e.nextMessageSeq - 1), o.subType || (o.subType = e.type))
                        })), t && this.emitConvUpdate(!0, !1)) : this._tmpGroupList = e)
                    }
                }, {
                    key: "onMessageRevoked",
                    value: function(e, t) {
                        var n, o, i, a = this;
                        0 !== e.length && (n = null, o = !1, i = [], e.forEach((function(e) {
                            (n = a._convMap.get(e.conversationID)) && (t && n.reduceUnreadCount() && (o = n.type !== E.CONV_TOPIC), n.type === E.CONV_TOPIC ? i.push(e) : n.isLastMessageRevoked({
                                sequence: e.sequence,
                                time: e.time
                            }) && (n.setLastMessageRevoked(!0), n.setLastMessageRevoker(e.revoker), o = !0))
                        })), this.get(10).onMessageRevoked(i), o && this.emitConvUpdate(!0, !1))
                    }
                }, {
                    key: "updateRevokerInfo",
                    value: function(e) {
                        for (var t = new Set, n = 0; n < e.length; n++) {
                            var o = e[n].revoker;
                            t.add(o)
                        }
                        var i = m(t),
                            a = this.get(4);
                        return new Promise((function(t) {
                            a.getUserProfile({
                                userIDList: i
                            }).then((function(n) {
                                if (!Je(n = n.data) || 0 === n.length) return t(e);
                                var o, i = {},
                                    a = T(n);
                                try {
                                    for (a.s(); !(o = a.n()).done;) {
                                        var s = o.value,
                                            r = s.userID,
                                            c = s.nick,
                                            u = s.avatar;
                                        i[r] = {
                                            nick: c,
                                            avatar: u
                                        }
                                    }
                                } catch (n) {
                                    a.e(n)
                                } finally {
                                    a.f()
                                }
                                e.forEach((function(e) {
                                    var t = e.revoker;
                                    i[t] && (e.revokerInfo.nick = i[t].nick || "", e.revokerInfo.avatar = i[t].avatar || "")
                                })), t(e)
                            })).catch((function() {
                                t(e)
                            }))
                        }))
                    }
                }, {
                    key: "isLastMessageRevoked",
                    value: function(e) {
                        var t = !1,
                            n = e.conversationID,
                            o = e.sequence,
                            i = e.time,
                            a = this._convMap.get(n);
                        return a && (t = a.type === E.CONV_TOPIC ? this.get(10).isLastMessageRevoked({
                            topicID: n.replace(E.CONV_GROUP, ""),
                            sequence: o
                        }) : a.isLastMessageRevoked({
                            sequence: o,
                            time: i
                        })), Oe.l("".concat(this._n, ".isLastMessageRevoked options:"), e, "ret:".concat(t)), t
                    }
                }, {
                    key: "onMessageDeleted",
                    value: function(e) {
                        var t = this;
                        if (0 !== e.length) {
                            var n = null;
                            e.forEach((function(e) {
                                (n = t._msgListHandler.getLocalMsg(e.conversationID, e.ID)) && (n.isDeleted = !0), e !== n && (e.isDeleted = !0)
                            })), e = e[0].conversationID;
                            for (var o = this._msgListHandler.getLocalMsgList(e), i = {}, a = o.length - 1; 0 <= a; a--)
                                if (!o[a].isDeleted) {
                                    i = o[a];
                                    break
                                }
                            var s, r = this._convMap.get(e);
                            r && (s = !1, r.lastMessage.lastSequence === i.sequence && r.lastMessage.lastTime === i.time || (He(i) && (i = void 0), r.updateLastMessage(i), r.type !== E.CONV_TOPIC && (s = !0), Oe.l("".concat(this._n, ".onMessageDeleted. update convID:").concat(e, " with lastMessage:"), r.lastMessage)), e.startsWith(E.CONV_C2C) && this.updateUnreadCount(e), s && this.emitConvUpdate(!0, !1))
                        }
                    }
                }, {
                    key: "onMessageModified",
                    value: function(e) {
                        var t = "".concat(this._n, ".onMessageModified"),
                            n = e.conversationType,
                            o = e.from,
                            i = e.to,
                            a = e.time,
                            s = e.sequence,
                            r = e.elements,
                            c = e.cloudCustomData,
                            u = e.messageVersion,
                            l = this.getMyUserID(),
                            d = "".concat(n).concat(i),
                            p = (n = (i === l && n === E.CONV_C2C && (d = "".concat(n).concat(o)), l = this._msgListHandler.onMsgModified(d, e)).isUpdated, l = l.message, !0 === n && this.emitOEvt(D.MESSAGE_MODIFIED, [l]), this._isTopicConv(d));
                        return null === l ? Oe.l("".concat(t, " message is null! options:"), e) : Oe.l("".concat(t, " isUpdated:").concat(n, " isTopicMessage:").concat(p, " from:").concat(o, " to:").concat(i, " sequence:").concat(l.sequence, " time:").concat(l.time)), p ? this.get(10).onMessageModified(e) : !(n = this._convMap.get(d)) || (o = n.lastMessage) && o.lastTime === a && o.lastSequence === s && o.version !== u && (Oe.l("".concat(t, " convID:").concat(d, " lastMessage updated")), o.type = r[0].type, o.payload = r[0].content, o.messageForShow = Ft(o.type, o.payload, this.isIntl()), o.cloudCustomData = c, o.version = u, this.emitConvUpdate(!0, !1)), l
                    }
                }, {
                    key: "onNewGroupAtTips",
                    value: function(e) {
                        var n = this,
                            o = (e = e.dataList, null);
                        e.forEach((function(e) {
                            e.groupAtTips ? o = e.groupAtTips : e.elements ? o = t(t({}, e.elements), {}, {
                                sync: !0
                            }) : e.groupAtType && (o = t(t({}, e), {}, {
                                sync: !0
                            })), o.__random = e.random, o.__sequence = e.clientSequence, n._tmpGroupAtTipsList.push(o)
                        })), Oe.l("".concat(this._n, ".onNewGroupAtTips isReady:").concat(this._isReady), this._tmpGroupAtTipsList), this._isReady && this._handleGroupAtTipsList()
                    }
                }, {
                    key: "_handleGroupAtTipsList",
                    value: function() {
                        var e, t = this;
                        0 !== this._tmpGroupAtTipsList.length && (e = !1, this._tmpGroupAtTipsList.forEach((function(n) {
                            var o, i = n.groupID,
                                a = n.from,
                                s = void 0 === (s = n.topicID) ? void 0 : s,
                                r = void 0 !== (r = n.sync) && r;
                            a !== t.getMyUserID() && (ut(s) ? (a = t._convMap.get("".concat(E.CONV_GROUP).concat(i))) && (a.updateGroupAtInfoList(n), e = !0) : ((i = t._convMap.get("".concat(E.CONV_GROUP).concat(s))) && (i.updateGroupAtInfoList(n), a = t.get(10), o = i.groupAtInfoList, a.onAtInfoUpdated({
                                topicID: s,
                                groupAtInfoList: o
                            })), He(i) && r && (t.updateTopicConversation([{
                                conversationID: "".concat(E.CONV_GROUP).concat(s),
                                type: E.CONV_TOPIC
                            }]), t._convMap.get("".concat(E.CONV_GROUP).concat(s)).updateGroupAtInfoList(n))))
                        })), e && this.emitConvUpdate(!0, !1), this._tmpGroupAtTipsList.length = 0)
                    }
                }, {
                    key: "_checkNewConv",
                    value: function(e) {
                        var t = this,
                            n = [],
                            o = [];
                        e.forEach((function(e) {
                            t._convMap.has(e.conversationID) || (e.type === E.CONV_C2C ? n.push(e.conversationID.replace(E.CONV_C2C, "")) : e.type === E.CONV_GROUP && o.push(e.conversationID.replace(E.CONV_GROUP, "")))
                        })), 0 < n.length && (this._onNewC2CConv(n), n = null), 0 < o.length && (this._onNewGroupConv(o), o = null)
                    }
                }, {
                    key: "_onNewC2CConv",
                    value: function(e) {
                        var t = this.get(6);
                        return Promise.all([t.getRemotePeerReadTime(e), this._msgRemindHandler.getC2CMsgRemindType(e), this._convGroupHandler.searchConvGroupAndMark(e, 1)])
                    }
                }, {
                    key: "_onNewGroupConv",
                    value: function(e) {
                        var t = this.get(7);
                        return t ? Promise.all([t.getMsgRemindType(e), this._convGroupHandler.searchConvGroupAndMark(e, 2)]) : Promise.resolve()
                    }
                }, {
                    key: "_setStorageConvList",
                    value: function() {
                        var e = 0 < arguments.length && void 0 !== arguments[0] && arguments[0],
                            t = this.getLocalConvList().filter((function(e) {
                                return e.type === E.CONV_C2C || e.type === E.CONV_GROUP && e.lastMessage.type !== E.MSG_GRP_TIP
                            })).slice(0, 20).map((function(e) {
                                return {
                                    conversationID: e.conversationID,
                                    type: e.type,
                                    subType: e.subType,
                                    lastMessage: e.lastMessage,
                                    groupProfile: e.groupProfile,
                                    userProfile: e.userProfile
                                }
                            }));
                        this.get(13).setItem("conversationMap", t, e)
                    }
                }, {
                    key: "emitConvUpdate",
                    value: function() {
                        var e = !(0 < arguments.length && void 0 !== arguments[0]) || arguments[0],
                            t = !(1 < arguments.length && void 0 !== arguments[1]) || arguments[1],
                            n = this.getLocalConvList();
                        !t || (t = this.get(7)) && t.updateGroupLastMessage(n), e && (this.get(12).isPartialUpdatedConvs() ? (this._diffConvMap(this._convMapForDiff, this._convMap), 0 < this._partialUpdatedConvMap.size && (this.emitOEvt(D.CONVERSATION_LIST_UPDATED), this.onTotalUnreadCountUpdate(), this._convMapForDiff.clear(), this._convMapForDiff = $e(this._convMap, !0)), 0 === this._convMapForDiff.size && (this._convMapForDiff = $e(this._convMap, !0))) : (this.emitOEvt(D.CONVERSATION_LIST_UPDATED), this.onTotalUnreadCountUpdate()))
                    }
                }, {
                    key: "_diffConvMap",
                    value: function(e, t) {
                        var n, o = T(e);
                        try {
                            for (o.s(); !(n = o.n()).done;) {
                                var i = f(n.value, 2),
                                    a = i[0],
                                    s = i[1];
                                t.has(a) && s === JSON.stringify(t.get(a)) || this._partialUpdatedConvMap.set(a, t.get(a))
                            }
                        } catch (e) {
                            o.e(e)
                        } finally {
                            o.f()
                        }
                    }
                }, {
                    key: "getPartialUpdatedConvs",
                    value: function() {
                        var e = m($e(this._partialUpdatedConvMap, !1).values());
                        return this._partialUpdatedConvMap.clear(), e
                    }
                }, {
                    key: "getLocalConvList",
                    value: function() {
                        var e = this;
                        return m(this._convMap.values()).filter((function(t) {
                            return e._isConvNeedShow(t.conversationID)
                        }))
                    }
                }, {
                    key: "getLocalConversation",
                    value: function(e) {
                        return this._convMap.get(e)
                    }
                }, {
                    key: "hasLocalConversation",
                    value: function(e) {
                        return this._convMap.has(e)
                    }
                }, {
                    key: "getLocalOldestMessage",
                    value: function(e) {
                        return this._msgListHandler.getLocalOldestMsg(e)
                    }
                }, {
                    key: "syncConvList",
                    value: function() {
                        var e = this,
                            t = !(0 < arguments.length && void 0 !== arguments[0]) || arguments[0],
                            n = "syncConvList",
                            o = new Qn(n);
                        return this._pagingStatus === En && this._convMap.clear(), this._pagingGetConvList(t).then((function(t) {
                            var i = Kt(e._pagingGetCostList),
                                a = Bt(e._pagingGetCostList);
                            return e._pagingGetCostList.length = 0, e._pagingStatus = Sn, e._diffAndDeleteConv(), e.emitConvUpdate(!0, !1), e._setStorageConvList(), e._handleC2CPeerReadTime(), e.emitIEvt(qo.CONV_SYNC_COMPLETED), a = "count:".concat(e._convMap.size, " sum:").concat(a, " avg:").concat(i), Oe.l("".concat(e._n, ".").concat(n, ". ").concat(a)), o.setMessage(a).end(), t
                        })).catch((function(t) {
                            return e._pagingStatus = kn, o.setMessage(e._pagingTs).setError(t).end(), Mn(t)
                        }))
                    }
                }, {
                    key: "_diffAndDeleteConv",
                    value: function() {
                        var e, t = this;
                        this._isSyncCompleted() && (e = [], this._convMap.forEach((function(n, o) {
                            !t._pagingConvIDMap.has(o) && t._convIDFromUnreadDBMap.has(o) && (t._convMap.delete(o), e.push(o))
                        })), Oe.l("".concat(this._n, "._diffAndDeleteConv list:").concat(e)), e = null)
                    }
                }, {
                    key: "_pagingGetConvList",
                    value: function() {
                        var e = this,
                            t = !(0 < arguments.length && void 0 !== arguments[0]) || arguments[0],
                            n = "".concat(this._n, "._pagingGetConvList"),
                            o = (Oe.l("".concat(n, " incrementalPullFlag:").concat(t, " ts:").concat(this._pagingTs, " startIdx:").concat(this._pagingStartIdx) + " pinnedTs:".concat(this._pagingPinnedTs, " pinnedStartIdx:").concat(this._pagingPinnedStartIdx)), Date.now());
                        return this._pagingStatus = Ln, this.req({
                            P: wn.PAGING_GET_CONV_LIST,
                            data: {
                                fromAccount: this.getMyUserID(),
                                timeStamp: t ? this._pagingTs : 0,
                                startIndex: t ? this._pagingStartIdx : 0,
                                pinnedTimeStamp: t ? this._pagingPinnedTs : 0,
                                pinnedStartIndex: t ? this._pagingPinnedStartIdx : 0,
                                orderType: 1
                            }
                        }).then((function(t) {
                            var i = (t = t.data).completeFlag,
                                a = void 0 === (a = t.conversations) ? [] : a,
                                s = t.timeStamp,
                                r = t.startIndex,
                                c = t.pinnedTimeStamp,
                                u = t.pinnedStartIndex;
                            if (t = t.groupItem, e._pagingGetCostList.push(Yt(o, !1)), Oe.l("".concat(n, " ok. completeFlag:").concat(i, " count:").concat(a.length, " cost:").concat(Yt(o))), e._convGroupHandler.onConvGroupListSynced(t), 0 < a.length && (t = e._getConvOptions(a), e._pagingConvIDMap = new Map([].concat(m(e._pagingConvIDMap), m(t.map((function(e) {
                                    return [e.conversationID, 1]
                                }))))), e._updateLocalConvList({
                                    conversationOptionsList: t,
                                    isFromGetConversations: !0,
                                    updateUnreadCount: !0
                                }), e.isLoggedIn() && e.emitConvUpdate()), !e._isReady) {
                                if (!e.isLoggedIn()) return In();
                                e.triggerReady()
                            }
                            return e._pagingTs = s, e._pagingStartIdx = r, e._pagingPinnedTs = c, e._pagingPinnedStartIdx = u, 1 !== i ? e._pagingGetConvList() : (e._handleGroupAtTipsList(), e._convGroupHandler.getRemoteConvGroupList(), In())
                        })).catch((function(t) {
                            throw e.isLoggedIn() && (e._isReady || (Oe.w("".concat(n, " failed. error:"), t), e.triggerReady())), t
                        }))
                    }
                }, {
                    key: "_updateLocalConvList",
                    value: function(e) {
                        var t = e.isFromGetConversations,
                            n = Date.now();
                        e = this._getTmpConvListMapping(e).newConvList, this._convMap = new Map(this._sortConvList(m(this._convMap))), t || this._updateUserOrGroupProfile(e), Oe.l("".concat(this._n, "._updateLocalConvList cost:").concat(Yt(n)))
                    }
                }, {
                    key: "_getTmpConvListMapping",
                    value: function(e) {
                        for (var t = e.conversationOptionsList, n = e.isFromGetConversations, o = e.isInstantMessage, i = e.isUnreadC2CMessage, a = void 0 !== i && i, s = e.updateUnreadCount, r = [], c = [], u = this.get(7), l = this.get(8), d = this.isIntl(), p = this.isUsingChatCore(), _ = 0, h = t.length; _ < h; _++) {
                            var g = new ii(t[_], d, p),
                                f = g.conversationID,
                                m = g.type;
                            if (!this._isNonExistentAccount(f)) {
                                if (this._convMap.has(f)) {
                                    var v = this._convMap.get(f);
                                    if (n) {
                                        this._convMap.set(f, g), m === E.CONV_C2C && (g.unreadCount = v.unreadCount);
                                        continue
                                    }
                                    var I = ["unreadCount", "allowType", "adminForbidType", "payload"],
                                        M = (!1 === o && I.push("lastMessage"), "boolean" == typeof o && I.push("isPinned"), t[_].lastMessage),
                                        y = !ut(M);
                                    y || t[_].type === E.CONV_TOPIC || this._onLastMsgNotExist(t[_]), ut(o) && y && null === v.lastMessage.payload && (v.lastMessage.payload = M.payload), He(v.lastMessage.revoker) || (v.lastMessage.revoker = null), Qe(v, g, I, [null, void 0, "", 0, NaN]), !0 === s && v.updateUnreadCount({
                                        nextUnreadCount: g.unreadCount,
                                        isFromGetConversations: n,
                                        isUnreadC2CMessage: a
                                    }), o && y && (M.payload && (v.lastMessage.payload = M.payload), v.type === E.CONV_GROUP && (v.lastMessage.nameCard = M.nameCard, v.lastMessage.nick = M.nick)), y && v.lastMessage.cloudCustomData !== M.cloudCustomData && (v.lastMessage.cloudCustomData = M.cloudCustomData || "")
                                } else m === E.CONV_GROUP && u ? (I = g.groupProfile.groupID, (y = u.getLocalGroupProfile(I)) && (g.groupProfile = y, !0 === s && g.updateUnreadCount({
                                    nextUnreadCount: 0
                                }))) : m === E.CONV_C2C && (v = f.replace(E.CONV_C2C, ""), l && l.isMyFriend(v) && (g.remark = l.getFriendRemark(v))), r.push(g), this._convMap.set(f, g);
                                this._convMap.get(f).type === E.CONV_TOPIC && c.push(this._convMap.get(f))
                            }
                        }
                        for (var C = this.get(10), T = 0, D = c.length; T < D; T++) {
                            var L, S = (L = c[T]).conversationID;
                            He(L = L.groupAtInfoList) || C.onAtInfoUpdated({
                                topicID: S.replace(E.CONV_GROUP, ""),
                                groupAtInfoList: L
                            })
                        }
                        return {
                            newConvList: r
                        }
                    }
                }, {
                    key: "_onLastMsgNotExist",
                    value: function(e) {
                        new Qn("lastMsgNotExist").setMessage(JSON.stringify(e)).end()
                    }
                }, {
                    key: "_sortConvList",
                    value: function(e) {
                        var t = [],
                            n = [],
                            o = [],
                            i = [];
                        return e.forEach((function(e) {
                            (!0 === e[1].isPinned ? He(e[1].lastMessage.lastTime) ? n : t : He(e[1].lastMessage.lastTime) ? i : o).push(e)
                        })), t.sort((function(e, t) {
                            return t[1].lastMessage.lastTime - e[1].lastMessage.lastTime
                        })).concat(n).concat(o.sort((function(e, t) {
                            return t[1].lastMessage.lastTime - e[1].lastMessage.lastTime
                        }))).concat(i)
                    }
                }, {
                    key: "_sortConvListAndEmitEvent",
                    value: function() {
                        this._convMap = new Map(this._sortConvList(m(this._convMap))), this.emitConvUpdate(!0, !1)
                    }
                }, {
                    key: "_updateUserOrGroupProfile",
                    value: function(e) {
                        var t, n, o, i, a = this;
                        0 !== e.length && (t = [], n = [], o = this.get(4), i = this.get(7), e.forEach((function(e) {
                            var o;
                            e.type === E.CONV_C2C ? t.push(e.toAccount) : e.type === E.CONV_GROUP && (o = e.toAccount, i.hasLocalGroup(o) ? e.groupProfile = i.getLocalGroupProfile(o) : n.push(o))
                        })), Oe.l("".concat(this._n, "._updateUserOrGroupProfile userIDList:").concat(t, " groupIDList:").concat(n)), 0 < t.length && o.getUserProfile({
                            userIDList: t
                        }).then((function(e) {
                            Je(e = e.data) ? e.forEach((function(e) {
                                a._doUpdateUserProfile("".concat(E.CONV_C2C).concat(e.userID), e)
                            })) : a._doUpdateUserProfile("".concat(E.CONV_C2C).concat(e.userID), e)
                        })), 0 < n.length && i.getGroupProfileAdvance({
                            groupIDList: n,
                            responseFilter: {
                                groupBaseInfoFilter: ["Type", "Name", "FaceUrl"]
                            }
                        }).then((function(e) {
                            e = e.data.successGroupList;
                            var t = !1;
                            e.forEach((function(e) {
                                var n = "".concat(E.CONV_GROUP).concat(e.groupID);
                                a._convMap.has(n) && (Qe((n = a._convMap.get(n)).groupProfile, e, [], [null, void 0, "", 0, NaN]), !n.subType && e.type && (n.subType = e.type), t = !0)
                            })), t && a.emitConvUpdate()
                        })))
                    }
                }, {
                    key: "_doUpdateUserProfile",
                    value: function(e, t) {
                        this.hasLocalConversation(e) && (this.getLocalConversation(e).userProfile = t, this.emitConvUpdate())
                    }
                }, {
                    key: "_getConvOptions",
                    value: function(e) {
                        var n = this,
                            o = [],
                            i = (e = e.filter((function(e) {
                                var t = e.type;
                                return e = e.userID, 1 === t && !n._isNonExistentAccount(e) || 2 === t
                            })), this.getMyUserID());
                        return e = e.map((function(e) {
                            var a;
                            return ut(e.lastMsg) && (e.lastMsg = {
                                elements: []
                            }), 1 === e.type ? (a = {
                                userID: e.userID,
                                nick: e.peerNick,
                                avatar: e.peerAvatar
                            }, o.push(a), {
                                conversationID: "".concat(E.CONV_C2C).concat(e.userID),
                                type: E.CONV_C2C,
                                lastMessage: {
                                    lastTime: e.time,
                                    lastSequence: e.sequence,
                                    fromAccount: e.lastC2CMsgFromAccount,
                                    type: e.lastMsg.elements[0] ? e.lastMsg.elements[0].type : null,
                                    payload: e.lastMsg.elements[0] ? n._amendLayersOverLimitProp(e.lastMsg.elements[0].content) : null,
                                    cloudCustomData: e.lastMsg.cloudCustomData || "",
                                    isRevoked: 8 === e.lastMessageFlag,
                                    onlineOnlyFlag: !1,
                                    nick: "",
                                    nameCard: "",
                                    version: 0,
                                    isPeerRead: e.lastC2CMsgFromAccount === i && e.time <= e.c2cPeerReadTime,
                                    revoker: e.lastMsg.revokerInfo ? e.lastMsg.revokerInfo.revoker : null
                                },
                                unreadCount: 0,
                                userProfile: new ei(a),
                                peerReadTime: e.c2cPeerReadTime,
                                isPinned: 1 === e.isPinned,
                                customData: e.customMark || "",
                                markList: xt(e.standardMark),
                                conversationGroupList: n._convGroupHandler.getConvGroupListByID(e.contactGroupId),
                                remark: e.friendRemark || "",
                                messageRemindType: n._transMsgRemindType(e.messageRemindType)
                            }) : {
                                conversationID: "".concat(E.CONV_GROUP).concat(e.groupID),
                                type: E.CONV_GROUP,
                                lastMessage: t(t({
                                    lastTime: e.time,
                                    lastSequence: e.sequence,
                                    fromAccount: e.msgGroupFromAccount
                                }, n._patchTypeAndPayload(e)), {}, {
                                    cloudCustomData: e.lastMsg.cloudCustomData || "",
                                    isRevoked: 2 === e.lastMessageFlag,
                                    onlineOnlyFlag: !1,
                                    nick: e.senderNick || "",
                                    nameCard: e.senderNameCard || "",
                                    revoker: e.lastMsg.revokerInfo ? e.lastMsg.revokerInfo.revoker : null
                                }),
                                groupProfile: new oi({
                                    groupID: e.groupID,
                                    name: e.groupNick,
                                    avatar: e.groupImage,
                                    type: e.groupType,
                                    nextMessageSeq: e.nextMessageSeq
                                }),
                                unreadCount: n._computeGroupUnreadCount(e),
                                peerReadTime: 0,
                                isPinned: 1 === e.isPinned,
                                version: 0,
                                customData: e.customMark || "",
                                markList: xt(e.standardMark),
                                conversationGroupList: n._convGroupHandler.getConvGroupListByID(e.contactGroupId),
                                messageRemindType: n._transMsgRemindType(e.messageRemindType)
                            }
                        })), 0 < o.length && this.get(4).onConvProfileUpdated(o), e
                    }
                }, {
                    key: "_transMsgRemindType",
                    value: function(e) {
                        var t = "";
                        return 0 === e ? t = E.MSG_REMIND_ACPT_AND_NOTE : 1 === e ? t = E.MSG_REMIND_DISCARD : 2 === e ? t = E.MSG_REMIND_ACPT_NOT_NOTE : 3 === e && (t = E.NOT_RECEIVE_OFFLINE_PUSH_EXCEPT_AT), t
                    }
                }, {
                    key: "_computeGroupUnreadCount",
                    value: function(e) {
                        var t;
                        return 0 < (t = (void 0 === (t = e.unreadCount) ? 0 : t) - (void 0 === (e = e.noUnreadCount) ? 0 : e)) ? t : 0
                    }
                }, {
                    key: "_patchTypeAndPayload",
                    value: function(e) {
                        var n = (e = e.lastMsg).event,
                            o = void 0 === (o = e.elements) ? [] : o;
                        return e = void 0 === (e = e.groupTips) ? {} : e, ut(void 0 === n ? void 0 : n) || He(e) ? {
                            type: o[0] ? o[0].type : null,
                            payload: o[0] ? this._amendLayersOverLimitProp(o[0].content) : null
                        } : ((n = new To(e)).setElement({
                            type: E.MSG_GRP_TIP,
                            content: t(t({}, e.elements), {}, {
                                groupProfile: e.groupProfile
                            })
                        }), o = JSON.parse(JSON.stringify(n.payload)), n = null, {
                            type: E.MSG_GRP_TIP,
                            payload: o
                        })
                    }
                }, {
                    key: "_amendLayersOverLimitProp",
                    value: function(e) {
                        var t = e.layersOverLimit;
                        return 0 === t ? e.layersOverLimit = !1 : 1 === t && (e.layersOverLimit = !0), e
                    }
                }, {
                    key: "getLocalMessageList",
                    value: function(e) {
                        return this._msgListHandler.getLocalMsgList(e)
                    }
                }, {
                    key: "deleteLocalMessage",
                    value: function(e) {
                        e instanceof To && this._msgListHandler.remove(e)
                    }
                }, {
                    key: "onConvDeleted",
                    value: function(e) {
                        Je(e) && (e = e.map((function(e) {
                            var t = e.type,
                                n = e.userID;
                            return e = e.groupID, 1 === t ? "".concat(E.CONV_C2C).concat(n) : 2 === t ? "".concat(E.CONV_GROUP).concat(e) : void 0
                        })), Oe.l("".concat(this._n, ".onConvDeleted convIDList:").concat(e)), this.deleteLocalConvList(e))
                    }
                }, {
                    key: "onConvPinnedStatus",
                    value: function(e, t) {
                        var n, o = this;
                        Je(e) && (n = !1, e.forEach((function(e) {
                            var i, a = e.type,
                                s = e.userID;
                            e = e.groupID, 1 === a ? i = o.getLocalConversation("".concat(E.CONV_C2C).concat(s)) : 2 === a && (i = o.getLocalConversation("".concat(E.CONV_GROUP).concat(e))), i && (Oe.l("".concat(o._n, ".onConvPinnedStatus convID:").concat(i.conversationID, " localPinned:").concat(i.isPinned, " remotePinned:").concat(t)), t ? i.isPinned || (i.isPinned = !0, n = !0) : i.isPinned && (i.isPinned = !1, n = !0))
                        })), n && this._sortConvListAndEmitEvent())
                    }
                }, {
                    key: "getMessageList",
                    value: function(e) {
                        var t = this,
                            n = e.conversationID,
                            o = e.nextReqMessageID,
                            i = (e = e.count, "".concat(this._n, ".getMessageList")),
                            a = "";
                        if ((r = this.getLocalConversation(n)) && r.groupProfile && (a = r.groupProfile.type), Mt(a)) return Oe.l("".concat(i, " not available in ").concat(a, ". convID:").concat(n)), In({
                            messageList: [],
                            nextReqMessageID: "",
                            isCompleted: !0
                        });
                        (ut(e) || 15 < e) && (e = 15), o || this._isMeInCommunity(n) || this.clearMemMsg(n);
                        var s = this._computeRemainingCount({
                                conversationID: n,
                                nextReqMessageID: o
                            }),
                            r = this._completedMap.has(n);
                        return Oe.l("".concat(i, " convID:").concat(n, " isEverCleared:").concat(this._isEverCleared(n), " nextReqMessageID:").concat(o) + " remainingCount:".concat(s, " count:").concat(e, " isCompleted:").concat(r)), this._needGetHistory({
                            conversationID: n,
                            remainingCount: s,
                            count: e
                        }) ? this.getHistoryMessages({
                            conversationID: n,
                            nextReqMessageID: o,
                            count: 20
                        }).then((function(e) {
                            var o = e.nextReqID,
                                a = e.storedMessageList,
                                r = e.assembledMessageList,
                                c = (e = e.isPullingCompleted, t._completedMap.has(n)),
                                u = a,
                                l = (0 < s && (u = t._msgListHandler.getLocalMsgList(n).slice(0, a.length + s)), {
                                    nextReqMessageID: void 0,
                                    messageList: void 0,
                                    isCompleted: void 0
                                });
                            return t._isEverCleared(n) ? (l.nextReqMessageID = o, l.messageList = r, l.isCompleted = e) : (l.nextReqMessageID = c ? "" : o, l.messageList = u, l.isCompleted = c), a = l.messageList.filter((function(e) {
                                return e.isRevoked
                            })) || [], r = l.messageList.map((function(e) {
                                return e.sequence
                            })), Oe.l("".concat(i, " ret.nextReqMessageID:").concat(l.nextReqMessageID, " ret.isCompleted:").concat(l.isCompleted, " sequenceList:"), r), Je(a) && 0 !== a.length ? t.updateRevokerInfo(a).then((function(e) {
                                return e.forEach((function(e) {
                                    var t = e.revokerInfo;
                                    l.messageList = l.messageList.map((function(n) {
                                        return n.ID === e.ID && t && (n.revokeReason = t.reason || "", n.revokerInfo = {
                                            userID: t.revoker || n.revoker,
                                            nick: t.nick,
                                            avatar: t.avatar
                                        }), n
                                    }))
                                })), vn(l)
                            })) : vn(l)
                        })) : (this.modifyMessageList(n), In(a = this._getMsgListFromMem({
                            conversationID: n,
                            nextReqMessageID: o,
                            count: e
                        })))
                    }
                }, {
                    key: "_isEverCleared",
                    value: function(e) {
                        return this._everClearedMap.has(e)
                    }
                }, {
                    key: "_getMsgListFromMem",
                    value: function(e) {
                        var t = e.conversationID,
                            n = e.nextReqMessageID,
                            o = (e = e.count, "".concat(this._n, "._getMsgListFromMem")),
                            i = this._msgListHandler.getLocalMsgList(t),
                            a = i.length,
                            s = Tt(t),
                            r = 0,
                            c = {
                                isCompleted: !1,
                                nextReqMessageID: "",
                                messageList: []
                            };
                        return n ? (r = s ? i.findIndex((function(e) {
                            return e.ID === n
                        })) : i.findIndex((function(e) {
                            return e.sequence + "" === n
                        }))) > e ? (c.messageList = i.slice(r - e, r), c.nextReqMessageID = s ? i[r - e].ID : i[r - e].sequence + "") : (c.messageList = i.slice(0, r), c.isCompleted = !0) : e < a ? (c.messageList = i.slice(r = a - e, a), c.nextReqMessageID = s ? i[r].ID : i[r].sequence + "") : (c.messageList = i.slice(0, a), c.isCompleted = !0), e = c.messageList.map((function(e) {
                            return e.sequence
                        })), Oe.l("".concat(o, " convID:").concat(t) + " ret.nextReqMessageID:".concat(c.nextReqMessageID, " ret.isCompleted:").concat(c.isCompleted, " sequenceList:").concat(e)), c
                    }
                }, {
                    key: "getMessageListHopping",
                    value: function(e) {
                        var t, n, o = e.conversationID,
                            i = e.sequence,
                            a = e.time,
                            s = e.count;
                        return e = void 0 === (e = e.direction) ? 0 : e, (ut(s) || 15 < s) && (s = 15), o.startsWith(E.CONV_C2C) ? (t = this.get(6), n = o.replace(E.CONV_C2C, ""), t.getRoamingMessagesHopping({
                            peerAccount: n,
                            time: a,
                            count: s,
                            direction: e
                        })) : o.startsWith(E.CONV_GROUP) ? (t = this.get(7), n = o.replace(E.CONV_GROUP, ""), t.getRoamingMessagesHopping({
                            groupID: n,
                            sequence: i,
                            count: s,
                            direction: e
                        })) : void 0
                    }
                }, {
                    key: "_computeRemainingCount",
                    value: function(e) {
                        var t = e.conversationID,
                            n = e.nextReqMessageID,
                            o = (e = this._msgListHandler.getLocalMsgList(t)).length;
                        return Oe.l("".concat(this._n, "._computeRemainingCount convID:").concat(t, " nextReqMessageID:").concat(n, " length:").concat(o)), n ? (o = 0, Tt(t) ? o = e.findIndex((function(e) {
                            return e.ID === n
                        })) : Dt(t) && (o = -1 !== n.indexOf("-") ? e.findIndex((function(e) {
                            return e.ID === n
                        })) : e.findIndex((function(e) {
                            return e.sequence + "" === n
                        }))), -1 === o ? 0 : o) : o
                    }
                }, {
                    key: "_needGetHistory",
                    value: function(e) {
                        var t = e.conversationID,
                            n = e.remainingCount,
                            o = (e = e.count, this.getLocalConversation(t)),
                            i = "";
                        return o && o.groupProfile && (i = o.groupProfile.type), !Et(t) && !Mt(i) && (!!this._isEverCleared(t) || (o = n <= e && !this._completedMap.has(t), Oe.l("".concat(this._n, "._needGetHistory convID:").concat(t, " ret:").concat(o)), o))
                    }
                }, {
                    key: "_isTopicConv",
                    value: function(e) {
                        return Ct(e = e.replace(E.CONV_GROUP, ""))
                    }
                }, {
                    key: "getHistoryMessages",
                    value: function(e) {
                        var t = e.conversationID,
                            n = e.count;
                        if (e = e.nextReqMessageID, t === E.CONV_SYSTEM) return In();
                        var o = 15;
                        if (20 < n && (o = 20), n = null, Tt(t)) return i = this._roamingMsgKeyAndTimeMap.has(t), (n = this.get(6)).getRoamingMessage({
                            conversationID: t,
                            peerAccount: t.replace(E.CONV_C2C, ""),
                            count: o,
                            lastMessageTime: i ? this._roamingMsgKeyAndTimeMap.get(t).lastMessageTime : 0,
                            messageKey: i ? this._roamingMsgKeyAndTimeMap.get(t).messageKey : ""
                        });
                        if (Dt(t)) {
                            if (!(n = this.get(7))) return Mn({
                                code: Un.NO_MODULE
                            });
                            var i = t.replace(E.CONV_GROUP, ""),
                                a = null,
                                s = (this._convMap.has(t) && !Ct(i) && (a = this._convMap.get(t).lastMessage), 0);
                            return e ? s = Number(e) : a && (s = a.lastSequence), n.getRoamingMessage({
                                conversationID: t,
                                groupID: i,
                                count: o,
                                sequence: s
                            })
                        }
                        return In()
                    }
                }, {
                    key: "patchConvLastMessage",
                    value: function(e) {
                        var t, n, o = 1 < arguments.length && void 0 !== arguments[1] && arguments[1],
                            i = this.getLocalConversation(e);
                        i && (t = (n = i.lastMessage).messageForShow, n = n.payload, !(He(t) || He(n) || o) || 0 !== (t = this._msgListHandler.getLocalMsgList(e)).length && (n = t[t.length - 1], Oe.l("".concat(this._n, ".patchConvLastMessage bForceUpdate:").concat(o, " convID:").concat(e, " payload:"), n.payload), i.updateLastMessage(n)))
                    }
                }, {
                    key: "onRoamingMessage",
                    value: function() {
                        var e, n, o = 0 < arguments.length && void 0 !== arguments[0] ? arguments[0] : [],
                            i = !(2 < arguments.length && void 0 !== arguments[2]) || arguments[2],
                            a = 3 < arguments.length ? arguments[3] : void 0,
                            s = (u = 1 < arguments.length ? arguments[1] : void 0).startsWith(E.CONV_C2C) ? E.CONV_C2C : E.CONV_GROUP,
                            r = null,
                            c = [],
                            u = [],
                            l = 0,
                            d = o.length,
                            p = s === E.CONV_GROUP,
                            _ = this.getFileDownloadProxy(),
                            h = this.getDowloadFileAuthKey(),
                            g = Je(a),
                            f = this.get(17).getFileDNList(),
                            m = function() {
                                p ? --l : ++l
                            },
                            v = function() {
                                return p ? d <= l : l < d
                            };
                        for (l = p ? o.length - 1 : 0, d = p ? 0 : o.length; v(); m()) 1 !== o[l].isPlaceMessage && ((r = new To(o[l])).to = o[l].to, s !== E.CONV_GROUP || ut(o[l].topicID) || (r.to = o[l].topicID), r.isSystemMessage = !!o[l].isSystemMessage, r.conversationType = s, e = 4 === o[l].event ? {
                            type: E.MSG_GRP_TIP,
                            content: t(t({}, o[l].elements), {}, {
                                groupProfile: o[l].groupProfile
                            })
                        } : o[l].elements, p || r.setNickAndAvatar({
                            nick: o[l].nick,
                            avatar: o[l].avatar
                        }), He(e) ? ((n = new Qn("emptyMessageBody")).setMessage("from:".concat(r.from, " to:").concat(r.to, " sequence:").concat(r.sequence, " event:").concat(o[l].event)), n.setLevel("warning").end()) : (r.setElement(e, _, h, f), r.reInitialize(this.getMyUserID()), c.push(r), g && a.push(r)));
                        return m = v = null, i ? (this._msgListHandler.unshift(c, u), c = null, u) : (u = null, c)
                    }
                }, {
                    key: "findMessage",
                    value: function(e) {
                        return this._msgListHandler.findMessage(e)
                    }
                }, {
                    key: "_isMeInCommunity",
                    value: function(e) {
                        var t = !0;
                        return this._isTopicConv(e) && (e = wt(e.replace(E.CONV_GROUP, "")), this.get(7).hasLocalGroup(e) || (t = !1, Oe.l("".concat(this._n, "._isMeInCommunity groupID:").concat(e, " ret:").concat(t)))), t
                    }
                }, {
                    key: "deleteTopicRoamingInfo",
                    value: function(e) {
                        var t = this;
                        yt({
                            groupID: e
                        }) && this._msgListHandler.getTopicConvIDList(e).forEach((function(e) {
                            t.clearMemMsg(e)
                        }))
                    }
                }, {
                    key: "deleteGroupRoamingInfo",
                    value: function(e) {
                        e = "".concat(E.CONV_GROUP).concat(e), 0 < this._msgListHandler.getLocalMsgList(e).length && this.clearMemMsg(e)
                    }
                }, {
                    key: "setMessageRead",
                    value: function(e) {
                        var t = e.conversationID,
                            n = this.getLocalConversation(t);
                        if (e = "".concat(this._n, ".setMessageRead"), Oe.l("".concat(e, " convID:").concat(t, " unreadCount:").concat(n ? n.unreadCount : 0)), !n) return In();
                        if (n.type !== E.CONV_GROUP && n.type !== E.CONV_TOPIC || He(n.groupAtInfoList) || this.deleteGroupAtTips(t), 0 === n.unreadCount) return In();
                        var o = this._msgListHandler.getLocalLastMsg(t),
                            i = n.lastMessage.lastTime,
                            a = (i < (a = this._msgListHandler.getLocalMaxTime(t)) && (Oe.l("".concat(e, " update lastMessageTime from ").concat(i, " to ").concat(a)), i = a), this._msgListHandler.getLocalMaxSeq(t)),
                            s = n.lastMessage.lastSequence,
                            r = (s < a && (Oe.l("".concat(e, " update lastMessageSeq from ").concat(s, " to ").concat(a)), s = a), n.type === E.CONV_TOPIC && ut(o) && (e = this.get(10), o = wt(a = t.replace(E.CONV_GROUP, "")), (e = e.getLocalTopic(o, a)) && (s = e.nextMessageSeq - 1)), null);
                        switch (n.type) {
                            case E.CONV_C2C:
                                return (r = this.get(6)) ? r.setMessageRead({
                                    conversationID: t,
                                    lastMessageTime: i
                                }) : Mn({
                                    code: Un.NO_MODULE
                                });
                            case E.CONV_GROUP:
                            case E.CONV_TOPIC:
                                return (r = this.get(7)) ? r.setMessageRead({
                                    conversationID: t,
                                    lastMessageSeq: s
                                }) : Mn({
                                    code: Un.NO_MODULE
                                });
                            case E.CONV_SYSTEM:
                                return n.unreadCount = 0, this.emitConvUpdate(!0, !1), In();
                            default:
                                return In()
                        }
                    }
                }, {
                    key: "setAllMessageRead",
                    value: function() {
                        var e = this,
                            t = 0 < arguments.length && void 0 !== arguments[0] ? arguments[0] : {},
                            n = "setAllMessageRead",
                            o = "".concat(this._n, ".").concat(n),
                            i = (t.scope || (t.scope = E.READ_ALL_MSG), Oe.l("".concat(o, " options:"), t), this._createSetAllMessageReadPack(t));
                        if (0 === i.readAllC2CMessage && 0 === i.groupMessageReadInfoList.length) return In();
                        var a = new Qn(n);
                        return this.req({
                            P: wn.SET_ALL_MSG_READ,
                            data: i
                        }).then((function(n) {
                            return n = n.data, n = e._handleAllMsgRead(n), a.setMessage("scope:".concat(t.scope, " failureGroups:").concat(JSON.stringify(n))).end(), In()
                        })).catch((function(e) {
                            return a.setError(e).end(), Oe.w("".concat(o, " failed. error:"), e), Mn({
                                code: e && e.code ? e.code : Un.MSG_UNREAD_ALL_FAIL,
                                message: e && e.message ? e.message : void 0
                            })
                        }))
                    }
                }, {
                    key: "setConvCustomData",
                    value: function(e) {
                        return this._convGroupHandler.setConvCustomData(e)
                    }
                }, {
                    key: "markConv",
                    value: function(e) {
                        return this._convGroupHandler.markConv(e)
                    }
                }, {
                    key: "getConvGroupList",
                    value: function() {
                        return this._convGroupHandler.getLocalConvGroupList()
                    }
                }, {
                    key: "createConvGroup",
                    value: function(e) {
                        return this._convGroupHandler.createConvGroup(e)
                    }
                }, {
                    key: "deleteConvGroup",
                    value: function(e) {
                        return this._convGroupHandler.deleteConvGroup(e)
                    }
                }, {
                    key: "renameConvGroup",
                    value: function(e) {
                        return this._convGroupHandler.renameConvGroup(e)
                    }
                }, {
                    key: "addConvsToGroup",
                    value: function(e) {
                        return this._convGroupHandler.addConvsToGroup(e)
                    }
                }, {
                    key: "deleteConvsFromGroup",
                    value: function(e) {
                        return this._convGroupHandler.deleteConvsFromGroup(e)
                    }
                }, {
                    key: "onConvMarkUpdated",
                    value: function(e) {
                        this._convGroupHandler.onConvMarkUpdated(e)
                    }
                }, {
                    key: "onConvGroupCreated",
                    value: function(e) {
                        this._convGroupHandler.onConvGroupCreated(e)
                    }
                }, {
                    key: "onConvGroupDeleted",
                    value: function(e) {
                        this._convGroupHandler.onConvGroupDeleted(e)
                    }
                }, {
                    key: "onConvGroupNameUpdated",
                    value: function(e) {
                        this._convGroupHandler.onConvGroupNameUpdated(e)
                    }
                }, {
                    key: "onConvInGroupUpdated",
                    value: function(e) {
                        this._convGroupHandler.onConvInGroupUpdated(e)
                    }
                }, {
                    key: "onConvAddedToOrDeletedFromGroup",
                    value: function(e) {
                        this._convGroupHandler.onConvAddedToOrDeletedFromGroup(e)
                    }
                }, {
                    key: "_getConvLastMessageSeq",
                    value: function(e) {
                        var t = this._msgListHandler.getLocalLastMsg(e.conversationID);
                        return e = e.lastMessage.lastSequence, t && e < t.sequence ? t.sequence : e
                    }
                }, {
                    key: "_getConvLastMessageTime",
                    value: function(e) {
                        var t = this._msgListHandler.getLocalLastMsg(e.conversationID);
                        return e = e.lastMessage.lastTime, t && e < t.time ? t.time : e
                    }
                }, {
                    key: "_createSetAllMessageReadPack",
                    value: function(e) {
                        var t, n = {
                                readAllC2CMessage: 0,
                                groupMessageReadInfoList: []
                            },
                            o = e.scope,
                            i = T(this._convMap);
                        try {
                            for (i.s(); !(t = i.n()).done;) {
                                var a, s = f(t.value, 2)[1];
                                if (0 < s.unreadCount)
                                    if (s.type === E.CONV_C2C && 0 === n.readAllC2CMessage) {
                                        if (o === E.READ_ALL_MSG) n.readAllC2CMessage = 1;
                                        else if (o === E.READ_ALL_C2C_MSG) {
                                            n.readAllC2CMessage = 1;
                                            break
                                        }
                                    } else s.type !== E.CONV_GROUP || o !== E.READ_ALL_GROUP_MSG && o !== E.READ_ALL_MSG || (a = this._getConvLastMessageSeq(s), n.groupMessageReadInfoList.push({
                                        groupID: s.groupProfile.groupID,
                                        messageSequence: a
                                    }))
                            }
                        } catch (e) {
                            i.e(e)
                        } finally {
                            i.f()
                        }
                        return n
                    }
                }, {
                    key: "onPushedAllMessageRead",
                    value: function(e) {
                        this._handleAllMsgRead(e)
                    }
                }, {
                    key: "_handleAllMsgRead",
                    value: function(e) {
                        var t = e.groupMessageReadInfoList;
                        return e = e.readAllC2CMessage, t = this._parseGroupReadInfo(t), 1 <= this._updateAllConvUnreadCount({
                            readAllC2CMessage: e
                        }) && this.emitConvUpdate(!0, !1), t
                    }
                }, {
                    key: "_parseGroupReadInfo",
                    value: function(e) {
                        var t = [];
                        if (e && e.length)
                            for (var n = 0, o = e.length; n < o; n++) {
                                var i = (r = e[n]).groupID,
                                    a = r.sequence,
                                    s = r.retCode,
                                    r = r.lastMessageSeq;
                                ut(s) ? this._remoteGroupReadSeqMap.set(i, r) : (this._remoteGroupReadSeqMap.set(i, a), 0 !== s && t.push("".concat(i, "-").concat(a, "-").concat(s)))
                            }
                        return t
                    }
                }, {
                    key: "_updateAllConvUnreadCount",
                    value: function(e) {
                        var t, n = e.readAllC2CMessage,
                            o = 0,
                            i = T(this._convMap);
                        try {
                            for (i.s(); !(t = i.n()).done;) {
                                var a, s, r, c, u = f(t.value, 2),
                                    l = u[0],
                                    d = u[1];
                                1 <= d.unreadCount && (1 === n && d.type === E.CONV_C2C ? (a = this._getConvLastMessageTime(d), this.updateIsReadAfterReadReport({
                                    conversationID: l,
                                    lastMessageTime: a
                                })) : d.type === E.CONV_GROUP && (s = l.replace(E.CONV_GROUP, ""), this._remoteGroupReadSeqMap.has(s) && (r = this._remoteGroupReadSeqMap.get(s), c = this._getConvLastMessageSeq(d), this.updateIsReadAfterReadReport({
                                    conversationID: l,
                                    remoteReadSequence: r
                                }), r <= c && this._remoteGroupReadSeqMap.delete(s))), this.updateUnreadCount(l, !1) && (o += 1))
                            }
                        } catch (t) {
                            i.e(t)
                        } finally {
                            i.f()
                        }
                        return o
                    }
                }, {
                    key: "isRemoteRead",
                    value: function(e) {
                        var t, n = e.conversationID,
                            o = (e = e.sequence, n.replace(E.CONV_GROUP, "")),
                            i = !1;
                        return this._remoteGroupReadSeqMap.has(o) && (e <= (t = this._remoteGroupReadSeqMap.get(o)) && (i = !0, Oe.l("".concat(this._n, ".isRemoteRead convID:").concat(n, " msgSeq:").concat(e, " remoteReadSeq:").concat(t))), t + 10 <= e && this._remoteGroupReadSeqMap.delete(o)), i
                    }
                }, {
                    key: "updateIsReadAfterReadReport",
                    value: function(e) {
                        var t = e.conversationID,
                            n = e.lastMessageSeq,
                            o = e.lastMessageTime,
                            i = this._msgListHandler.getLocalMsgList(t);
                        if (0 !== i.length)
                            for (var a, s = i.length - 1; 0 <= s; s--)
                                if (a = i[s], !(o && a.time > o || n && a.sequence > n)) {
                                    if ("in" === a.flow && a.isRead) break;
                                    a.setIsRead(!0)
                                }
                    }
                }, {
                    key: "updateUnreadCount",
                    value: function(e) {
                        var t, n = !(1 < arguments.length && void 0 !== arguments[1]) || arguments[1],
                            o = !1,
                            i = this.getLocalConversation(e),
                            a = this._msgListHandler.getLocalMsgList(e);
                        if (i) return (t = i.unreadCount) !== (a = a.filter((function(e) {
                            return !e.isRead && !e._onlineOnlyFlag && !e.isDeleted
                        })).length) && (i.unreadCount = a, o = !0, Oe.l("".concat(this._n, ".updateUnreadCount from ").concat(t, " to ").concat(a, ", convID:").concat(e)), !0 === n && this.emitConvUpdate(!0, !1)), o && i.type === E.CONV_TOPIC && (t = i.unreadCount, a = this.get(10), n = e.replace(E.CONV_GROUP, ""), a.onUnreadCountUpdatedFromConv(n, t)), o
                    }
                }, {
                    key: "clearGroupAtInfoList",
                    value: function(e) {
                        var t, n = !(1 < arguments.length && void 0 !== arguments[1]) || arguments[1],
                            o = this.getLocalConversation(e);
                        o && 0 < o.groupAtInfoList.length && (o.clearGroupAtInfoList(), Oe.l("".concat(this._n, ".clearGroupAtInfoList convID:").concat(e)), o.type === E.CONV_TOPIC && (o = o.groupAtInfoList, t = this.get(10), e = e.replace(E.CONV_GROUP, ""), t.onAtInfoUpdated({
                            topicID: e,
                            groupAtInfoList: o
                        })), !0 === n && this.emitConvUpdate(!0, !1))
                    }
                }, {
                    key: "updateReadReceiptInfo",
                    value: function(e) {
                        var t, n, o, i = this,
                            a = void 0 === (r = e.userID) ? void 0 : r,
                            s = void 0 === (r = e.groupID) ? void 0 : r,
                            r = e.readReceiptList,
                            c = void 0 === (e = e.timestamp) ? 0 : e;
                        He(r) || (t = [], ut(a) ? ut(s) || (n = "".concat(E.CONV_GROUP).concat(s), r.forEach((function(e) {
                            var o = e.tinyID,
                                a = e.clientTime,
                                r = e.random,
                                c = e.readCount;
                            e = e.unreadCount, o = "".concat(o, "-").concat(a, "-").concat(r), a = i._msgListHandler.getLocalMsg(n, o) || i._msgListHandler.getHoppingMsg(n, o), r = {
                                groupID: s,
                                messageID: o,
                                readCount: 0,
                                unreadCount: 0
                            }, a && (Ye(c) && (a.readReceiptInfo.readCount = c, r.readCount = c), Ye(e) && (a.readReceiptInfo.unreadCount = e, r.unreadCount = e), t.push(r))
                        }))) : (o = "".concat(E.CONV_C2C).concat(a), r.forEach((function(e) {
                            var n = e.tinyID,
                                s = e.clientTime;
                            e = e.random, n = "".concat(n, "-").concat(s, "-").concat(e), (s = i._msgListHandler.getLocalMsg(o, n) || i._msgListHandler.getHoppingMsg(o, n)) && !s.readReceiptInfo.isPeerRead && (s.readReceiptInfo.isPeerRead = !0, s.readReceiptInfo.timestamp = c, t.push({
                                userID: a,
                                messageID: n,
                                isPeerRead: !0,
                                timestamp: c
                            }))
                        }))), 0 < t.length && this.emitOEvt(D.MESSAGE_READ_RECEIPT_RECEIVED, t))
                    }
                }, {
                    key: "updateIsRead",
                    value: function(e) {
                        var t = this.getLocalConversation(e),
                            n = this.getLocalMessageList(e);
                        if (t && 0 !== n.length && !Et(t.type)) {
                            for (var o = [], i = 0, a = n.length; i < a; i++) "in" !== n[i].flow ? "out" !== n[i].flow || n[i].isRead || n[i].setIsRead(!0) : o.push(n[i]);
                            var s;
                            s = t.type === E.CONV_C2C ? (e = o.slice(-t.unreadCount).filter((function(e) {
                                return e.isRevoked
                            })).length, o.length - t.unreadCount - e) : o.length - t.unreadCount;
                            for (var r = 0; r < s && !o[r].isRead; r++) o[r].setIsRead(!0)
                        }
                    }
                }, {
                    key: "deleteGroupAtTips",
                    value: function(e) {
                        var t = this,
                            n = "".concat(this._n, ".deleteGroupAtTips");
                        if (Oe.l("".concat(n)), !(i = this._convMap.get(e))) return Promise.resolve();
                        var o = i.groupAtInfoList;
                        if (0 === o.length) return Promise.resolve();
                        var i = void 0,
                            a = (e.startsWith(E.CONV_GROUP) && (i = e.replace(E.CONV_GROUP, "")), m(o));
                        if ((yt({
                                groupID: i
                            }) || Ct(i)) && 0 === (a = o.filter((function(e) {
                                return !e.atTypeArray.includes(E.CONV_AT_ALL)
                            }))).length) return this.clearGroupAtInfoList(e, !1), Promise.resolve();
                        var s = this.getMyUserID();
                        return this.req({
                            P: wn.DEL_GROUP_AT_TIPS,
                            data: {
                                messageListToDelete: a.map((function(e) {
                                    return {
                                        from: e.from,
                                        to: s,
                                        messageSeq: e.__sequence,
                                        messageRandom: e.__random,
                                        groupID: ut(e.topicID) ? e.groupID : e.topicID
                                    }
                                }))
                            }
                        }).then((function() {
                            return Oe.l("".concat(n, " ok. count:").concat(o.length)), t.clearGroupAtInfoList(e, !1), Promise.resolve()
                        })).catch((function(e) {
                            return Oe.e("".concat(n, " failed. error:"), e), Mn(e)
                        }))
                    }
                }, {
                    key: "appendToMessageList",
                    value: function(e) {
                        return this._msgListHandler.pushIn(e)
                    }
                }, {
                    key: "setMessageRandom",
                    value: function(e) {
                        this._sll.set(e.random)
                    }
                }, {
                    key: "deleteMessageRandom",
                    value: function(e) {
                        this._sll.delete(e.random)
                    }
                }, {
                    key: "pushIntoMessageList",
                    value: function(e, t, n) {
                        return !(!this._msgListHandler.pushIn(t, n) || this._sll.has(t.random) && !n || (e.push(t), 0))
                    }
                }, {
                    key: "revoke",
                    value: function(e, t, n) {
                        return this._msgListHandler.revoke(e, t, n)
                    }
                }, {
                    key: "getPeerReadTime",
                    value: function(e) {
                        return this._peerReadTimeMap.get(e)
                    }
                }, {
                    key: "recordPeerReadTime",
                    value: function(e, t) {
                        (!this._peerReadTimeMap.has(e) || this._peerReadTimeMap.get(e) < t) && this._peerReadTimeMap.set(e, t)
                    }
                }, {
                    key: "updateMsgIsPeerReadProp",
                    value: function(e, t) {
                        var n;
                        e.startsWith(E.CONV_C2C) && 0 < t && (0 < (n = this._msgListHandler.updateMsgIsPeerReadProp(e, t)).length && this.emitOEvt(D.MESSAGE_READ_BY_PEER, n), this._convMap.has(e) && (He(n = this._convMap.get(e).lastMessage) || n.fromAccount === this.getMyUserID() && n.lastTime <= t && !n.isPeerRead && (n.isPeerRead = !0, this.emitConvUpdate(!0, !1))))
                    }
                }, {
                    key: "updateMsgIsModifiedProp",
                    value: function(e) {
                        this._msgListHandler.updateMsgIsModifiedProp(e)
                    }
                }, {
                    key: "setCompleted",
                    value: function(e) {
                        Oe.l("".concat(this._n, ".setCompleted convID:").concat(e)), this._completedMap.set(e, !0)
                    }
                }, {
                    key: "updateRoamingMsgKeyAndTime",
                    value: function(e, t, n) {
                        this._roamingMsgKeyAndTimeMap.set(e, {
                            messageKey: t,
                            lastMessageTime: n
                        })
                    }
                }, {
                    key: "getConvList",
                    value: function(e) {
                        var t, n = this,
                            o = "".concat(this._n, ".").concat("getConvList"),
                            i = "pagingStatus:".concat(this._pagingStatus, ", local conversation count:").concat(this._convMap.size, ", options:").concat(JSON.stringify(e));
                        return Oe.l("".concat(o, ". ").concat(i)), this._pagingStatus === kn ? ((t = new Qn("getConvList")).setMessage(i), this.syncConvList().then((function() {
                            return t.end(), vn({
                                conversationList: n._getConvList(e),
                                isSyncCompleted: n._isSyncCompleted()
                            })
                        })).catch((function(e) {
                            return t.setError(e).end(), Oe.e("".concat(o, " failed. error:"), e), Mn(e)
                        }))) : (i = this._getConvList(e), Oe.l("".concat(o, ". returned conversation count:").concat(i.length)), In({
                            conversationList: i,
                            isSyncCompleted: this._isSyncCompleted()
                        }))
                    }
                }, {
                    key: "_getConvList",
                    value: function(e) {
                        var t, n, o, i, a, s = this;
                        return ut(e) ? this.getLocalConvList() : Je(e) ? 0 === e.length ? [] : this.getLocalConvList().filter((function(t) {
                            return e.includes(t.conversationID)
                        })) : je(e) ? (t = e.type, n = e.markType, o = e.groupName, i = e.hasUnreadCount, a = e.hasGroupAtInfo, this.getLocalConvList().filter((function(e) {
                            return s._filterType(e, t) && s._filterMarkType(e, n) && s._filterGroupName(e, o) && s._filterUnreadCount(e, i) && s._filterGroupAtInfo(e, a)
                        }))) : []
                    }
                }, {
                    key: "_filterType",
                    value: function(e, t) {
                        return t !== E.CONV_C2C && t !== E.CONV_GROUP || e.type === t
                    }
                }, {
                    key: "_filterGroupName",
                    value: function(e, t) {
                        return !ct(t) || ("" === t ? 0 === e.conversationGroupList.length : e.conversationGroupList.includes(t))
                    }
                }, {
                    key: "_filterMarkType",
                    value: function(e, t) {
                        return !Ye(t) || (0 === t ? 0 === e.markList.length : e.markList.includes(t))
                    }
                }, {
                    key: "_filterUnreadCount",
                    value: function(e, t) {
                        var n = !0;
                        return !0 === t ? n = 1 <= e.unreadCount : !1 === t && (n = 0 === e.unreadCount), n
                    }
                }, {
                    key: "_filterGroupAtInfo",
                    value: function(e, t) {
                        var n = !0;
                        return !0 === t ? n = 1 <= e.groupAtInfoList.length : !1 === t && (n = 0 === e.groupAtInfoList.length), n
                    }
                }, {
                    key: "_handleC2CPeerReadTime",
                    value: function() {
                        var e, t = T(this._convMap);
                        try {
                            for (t.s(); !(e = t.n()).done;) {
                                var n = f(e.value, 2),
                                    o = n[0],
                                    i = n[1];
                                i.type === E.CONV_C2C && this.recordPeerReadTime(o, i.peerReadTime)
                            }
                        } catch (e) {
                            t.e(e)
                        } finally {
                            t.f()
                        }
                    }
                }, {
                    key: "_isPagingGetGroupListCompleted",
                    value: function() {
                        var e = this.get(7);
                        return !e || e.isPagingGetCompleted()
                    }
                }, {
                    key: "_getLocalGroupCount",
                    value: function() {
                        var e = this.get(7);
                        return e ? e.getLocalGroupList().length : 0
                    }
                }, {
                    key: "_hasLocalGroup",
                    value: function(e) {
                        var t = this.get(7);
                        return !!t && t.hasLocalGroup(e.replace(E.CONV_GROUP, ""))
                    }
                }, {
                    key: "getConversationProfile",
                    value: function(e) {
                        var t, n = this,
                            o = !1;
                        if (this._convMap.has(e) ? t = this._convMap.get(e) : (t = new ii({
                                conversationID: e,
                                type: Tt(e) ? E.CONV_C2C : E.CONV_GROUP
                            }, this.isIntl(), this.isUsingChatCore()), o = !0), t._isInfoCompleted || t.type === E.CONV_SYSTEM) return In({
                            conversation: t
                        });
                        if (Dt(e)) {
                            if (!this.get(7)) return Mn({
                                code: Un.NO_MODULE
                            });
                            if (!this._hasLocalGroup(e)) return In({
                                conversation: t
                            })
                        }
                        var i = "".concat(this._n, ".").concat("getConversationProfile"),
                            a = new Qn("getConversationProfile");
                        return Oe.l("".concat(i, ". convID:").concat(e, " remark:").concat(t.remark, " lastMessage:"), t.lastMessage), this._getUserOrGroupProfile(t).then((function(s) {
                            a.setMessage("convID:".concat(e, " unreadCount:").concat(s.data.conversation.unreadCount)).end();
                            var r, c = n.get(8);
                            if (c && t.type === E.CONV_C2C && (r = e.replace(E.CONV_C2C, ""), c.isMyFriend(r) && (c = c.getFriendRemark(r), t.remark !== c && (t.remark = c, Oe.l("".concat(i, ". convID:").concat(e, " patch remark:").concat(t.remark))))), Oe.l("".concat(i, " ok. isNewConv:").concat(o, " convID:").concat(e)), o) {
                                if (t.type === E.CONV_C2C) return n._onNewC2CConv([e.replace(E.CONV_C2C, "")]).then((function() {
                                    return In({
                                        conversation: t
                                    })
                                }));
                                if (t.type === E.CONV_GROUP) return n._onNewGroupConv([e.replace(E.CONV_GROUP, "")]).then((function() {
                                    return In({
                                        conversation: t
                                    })
                                }))
                            }
                            return s
                        })).catch((function(t) {
                            return a.setError(t).setMessage("convID:".concat(e)).end(), Oe.e("".concat(i, " failed. error:"), t), Mn(t)
                        }))
                    }
                }, {
                    key: "_getUserOrGroupProfile",
                    value: function(e) {
                        var t = this;
                        return e.type === E.CONV_C2C ? this.get(4).getUserProfile({
                            userIDList: [e.toAccount]
                        }).then((function(n) {
                            return 0 === (n = n.data).length ? Mn({
                                code: Un.USER_OR_GRP_NOT_FOUND
                            }) : (e.userProfile = n[0], e._isInfoCompleted = !0, t._insertConvAfterTopmost(e), In({
                                conversation: e
                            }))
                        })) : this.get(7).getGroupProfile({
                            groupID: e.toAccount
                        }).then((function(n) {
                            return e.groupProfile = n.data.group, e._isInfoCompleted = !0, t._insertConvAfterTopmost(e), In({
                                conversation: e
                            })
                        }))
                    }
                }, {
                    key: "_insertConvAfterTopmost",
                    value: function(e) {
                        var t, n;
                        e instanceof ii && !this._convMap.has(e.conversationID) && (n = (t = m(this._convMap)).findIndex((function(e) {
                            return !1 === e[1].isPinned
                        })), t.splice(n, 0, [e.conversationID, e]), this._convMap = new Map(t), this._setStorageConvList(), this.emitConvUpdate(!0, !1))
                    }
                }, {
                    key: "_onProfileUpdated",
                    value: function(e) {
                        var t = this;
                        e.data.forEach((function(e) {
                            var n = e.userID;
                            n === t.getMyUserID() ? t._onMyProfileModified({
                                latestNick: e.nick,
                                latestAvatar: e.avatar
                            }) : (n = t._convMap.get("".concat(E.CONV_C2C).concat(n))) && (n.userProfile = e)
                        }))
                    }
                }, {
                    key: "_onCloudConfig",
                    value: function(e) {
                        "0" === this.getCloudConfig("pull_on_invite") && (this._bPullOnInvite = !1), Oe.l("".concat(this._n, "._onCloudConfig bPullOnInvite:").concat(this._bPullOnInvite))
                    }
                }, {
                    key: "disableMsgPullOnInvite",
                    value: function() {
                        this._bPullOnInvite = !1
                    }
                }, {
                    key: "_isSyncCompleted",
                    value: function() {
                        return this._pagingStatus === Sn
                    }
                }, {
                    key: "_errorLog",
                    value: function(e, t, n, o) {
                        var i = new Error("Params validate failed."),
                            a = "".concat(this.getErrMsg("API_REFER")).concat(e);
                        throw Oe.w("[".concat(e, "] | ").concat(t, " | ").concat(this.getErrMsg(n, o), ", ").concat(a)), Oe.e("[".concat(e, "] Invalid ").concat(t, ": type check failed for ").concat(t, ".")), i
                    }
                }, {
                    key: "_isValidConvID",
                    value: function(e) {
                        return Tt(e) || Dt(e) || Et(e)
                    }
                }, {
                    key: "deleteConversation",
                    value: function(e) {
                        var t = this,
                            n = "deleteConversation";
                        return ct(e) || We(e) || this._errorLog(n, "options", "StringOrObjectRequiredLog"), ct(e) ? (this._isValidConvID(e) || this._errorLog(n, "options", "InvalidConversationID", e), Oe.l("".concat(this._n, ".").concat(n, " convID:").concat(e)), this.deleteConvList({
                            conversationIDList: [e],
                            flag: 1
                        })) : (Je(e.conversationIDList) || this._errorLog(n, "conversationIDList", "ArrayRequiredLog"), 0 === e.conversationIDList.length && this._errorLog(n, "conversationIDList", "NonEmptyArrayLog"), e.conversationIDList.forEach((function(e) {
                            t._isValidConvID(e) || t._errorLog(n, "conversationIDList", "InvalidConversationID", e)
                        })), "clearHistoryMessage" in e && "boolean" != typeof e.clearHistoryMessage && this._errorLog(n, "clearHistoryMessage", "BooleanRequiredLog"), 100 < e.conversationIDList.length && (e.conversationIDList = e.conversationIDList.slice(0, 100)), this.deleteConvList(e))
                    }
                }, {
                    key: "deleteConvList",
                    value: function(e) {
                        var t = void 0 === (t = e.conversationIDList) ? [] : t,
                            n = void 0 === (n = e.clearHistoryMessage) || n,
                            o = void 0 === (e = e.flag) ? 0 : e,
                            i = "".concat(this._n, ".").concat("deleteConvList"),
                            a = (e = "convIDList:".concat(t, " clearHistoryMessage:").concat(n), Oe.l("".concat(i, " ").concat(e)), new Qn("deleteConvList"));
                        return a.setMessage(e), Promise.all([this.rmLocalOnlyConvList(t), this.rmLocalAndRemoteConvList(t, n)]).then((function(e) {
                            return a.end(), 0 === (e = [].concat(m(e[0]), m(e[1]))).length ? Mn(new Pn({
                                code: Un.CONV_NOT_FOUND
                            })) : (Oe.l("".concat(i, " ok")), In(1 === o ? {
                                conversationID: e[0]
                            } : {
                                conversationIDList: e
                            }))
                        })).catch((function(e) {
                            return a.setError(e).end(), Oe.e("".concat(i, " failed. error:"), e), Mn(e)
                        }))
                    }
                }, {
                    key: "rmLocalOnlyConvList",
                    value: function(e) {
                        var t = this;
                        return e.filter((function(e) {
                            if (!t._convMap.has(e)) return !1;
                            var n = t.getLocalConversation(e).type;
                            return n !== E.CONV_GROUP || t._hasLocalGroup(e) ? n === E.CONV_SYSTEM && (t.get(7).deleteGroupSystemNotice({
                                messageList: t._msgListHandler.getLocalMsgList(e)
                            }), t.deleteLocalConv(e), !0) : (t.deleteLocalConv(e), !0)
                        }))
                    }
                }, {
                    key: "rmLocalAndRemoteConvList",
                    value: function(e, t) {
                        var n = this,
                            o = {
                                fromAccount: this.getMyUserID(),
                                conversationList: [],
                                clearHistoryMessage: t ? 1 : 0
                            };
                        return e.forEach((function(e) {
                            var t;
                            n._convMap.has(e) && ((t = n.getLocalConversation(e).type) === E.CONV_C2C ? o.conversationList.push({
                                toAccount: e.replace(t, ""),
                                type: 1
                            }) : t === E.CONV_GROUP && n._hasLocalGroup(e) && o.conversationList.push({
                                toGroupID: e.replace(t, ""),
                                type: 2
                            }))
                        })), 0 === o.conversationList.length ? [] : this.req({
                            P: wn.DEL_CONV,
                            data: o
                        }).then((function(e) {
                            var t = [];
                            return 0 < e.data.resultList.length && e.data.resultList.map((function(e) {
                                0 === e.code && (e = 1 === e.type ? "".concat(E.CONV_C2C).concat(e.to) : "".concat(E.CONV_GROUP).concat(e.groupID), t.push(e))
                            })), n.deleteLocalConvList(t), t
                        }))
                    }
                }, {
                    key: "setConvDraft",
                    value: function(e) {
                        var t = e.conversationID,
                            n = (e = e.draftText, "".concat(this._n, ".").concat("setConvDraft"));
                        return Oe.l("".concat(n, " convID:").concat(t, " draftText:").concat(e)), this._convMap.has(t) ? ((n = this._convMap.get(t)).setDraftText(e), this.emitConvUpdate(), In({
                            code: 0,
                            conversation: n
                        })) : Mn({
                            code: Un.CONV_NOT_FOUND
                        })
                    }
                }, {
                    key: "clearHistoryMessage",
                    value: function(e) {
                        var t = this,
                            n = {
                                fromAccount: this.getMyUserID(),
                                toAccount: void 0,
                                type: void 0,
                                toGroupID: void 0
                            };
                        if (!this._convMap.has(e)) return Mn({
                            code: Un.CONV_NOT_FOUND
                        });
                        var o = this._convMap.get(e).type;
                        if (o === E.CONV_C2C) n.type = 1, n.toAccount = e.replace(E.CONV_C2C, "");
                        else {
                            if (o !== E.CONV_GROUP) return o === E.CONV_SYSTEM ? (this.get(7).deleteGroupSystemNotice({
                                messageList: this._msgListHandler.getLocalMsgList(e)
                            }), In({
                                conversationID: e
                            })) : Mn({
                                code: Un.CONV_UN_RECORDED_TYPE
                            });
                            n.type = 2, n.toGroupID = e.replace(E.CONV_GROUP, "")
                        }
                        var i = "".concat(this._n, ".").concat("clearHistoryMessage"),
                            a = new Qn("clearHistoryMessage");
                        return a.setMessage("convID:".concat(e)), Oe.l("".concat(i, ". convID:").concat(e)), this.setMessageRead({
                            conversationID: e
                        }).then((function() {
                            return t.req({
                                P: wn.CLEAR_HISTORY_MSG,
                                data: n
                            })
                        })).then((function() {
                            a.end(), Oe.l("".concat(i, " ok")), t.clearMemMsg(e);
                            var n = t.getLocalConversation(e);
                            return n && (n.updateLastMessage(), t._sortConvListAndEmitEvent()), In({
                                conversationID: e
                            })
                        })).catch((function(e) {
                            return a.setError(e).end(), Oe.e("".concat(i, " failed. error:"), e), Mn(e)
                        }))
                    }
                }, {
                    key: "pinConversation",
                    value: function(e) {
                        var t = this,
                            n = e.conversationID,
                            o = e.isPinned,
                            i = this.getLocalConversation(n);
                        if (i && i.isPinned === o) return In({
                            conversationID: n
                        });
                        if (Et(n)) return i && (i.isPinned = o), this._sortConvListAndEmitEvent(), In({
                            conversationID: n
                        });
                        if (e = null, Tt(n) ? e = {
                                type: 1,
                                toAccount: n.replace(E.CONV_C2C, "")
                            } : Dt(n) && (e = {
                                type: 2,
                                groupID: n.replace(E.CONV_GROUP, "")
                            }), null === e) return Mn({
                            code: Un.INVALID_CONV_ID
                        });
                        var a = "".concat(this._n, ".").concat("pinConversation"),
                            s = "convID:".concat(n, " isPinned:").concat(o),
                            r = new Qn("pinConversation");
                        return r.setMessage(s), Oe.l("".concat(a, ". ").concat(s)), this.req({
                            P: wn.PIN_CONV,
                            data: {
                                fromAccount: this.getMyUserID(),
                                operationType: !0 === o ? 1 : 2,
                                itemList: [e]
                            }
                        }).then((function() {
                            return r.end(), Oe.l("".concat(a, " ok")), i ? i.isPinned !== o && (i.isPinned = o) : t._convMap.set(n, new ii({
                                conversationID: n,
                                type: Tt(n) ? E.CONV_C2C : E.CONV_GROUP,
                                isPinned: o
                            }, t.isIntl(), t.isUsingChatCore())), t._sortConvListAndEmitEvent(), vn({
                                conversationID: n
                            })
                        })).catch((function(e) {
                            return r.setError(e).end(), Oe.e("".concat(a, " failed. error:"), e), Mn(e)
                        }))
                    }
                }, {
                    key: "setMessageRemindType",
                    value: function(e) {
                        return this._msgRemindHandler.set(e)
                    }
                }, {
                    key: "patchMsgRemindType",
                    value: function(e) {
                        var t = e.ID,
                            n = e.isC2CConversation,
                            o = e.messageRemindType,
                            i = !1;
                        return (n = this.getLocalConversation("".concat(n ? E.CONV_C2C : E.CONV_GROUP).concat(t))) && n.messageRemindType !== o && (n.messageRemindType = o, i = !0), Oe.l("".concat(this._n, ".patchMsgRemindType options:"), e, "ret:".concat(i)), i
                    }
                }, {
                    key: "onC2CMsgRemindTypeFetched",
                    value: function(e) {
                        var t, n = this;
                        Je(e) && 0 < e.length && (t = 0, e.forEach((function(e) {
                            var o = e.userID;
                            e = e.muteFlag, e = n._transMsgRemindType(e), !0 === n.patchMsgRemindType({
                                ID: o,
                                isC2CConversation: !0,
                                messageRemindType: e
                            }) && (t += 1)
                        })), Oe.l("".concat(this._n, ".onC2CMsgRemindTypeFetched updateCount:").concat(t)), 1 <= t && this.emitConvUpdate(!0, !1))
                    }
                }, {
                    key: "onC2CMsgRemindTypeSynced",
                    value: function(e) {
                        var t = this,
                            n = "".concat(this._n, ".onC2CMsgRemindTypeSynced");
                        e.dataList.forEach((function(e) {
                            var o;
                            He(e.muteNotificationsSync) || (o = (e = e.muteNotificationsSync).to, e = e.muteFlag, e = t._transMsgRemindType(e), t.patchMsgRemindType({
                                ID: o,
                                isC2CConversation: !(o = 0),
                                messageRemindType: e
                            }) && (o += 1), Oe.l("".concat(n, " updateCount:").concat(o)), 1 <= o && t.emitConvUpdate(!0, !1))
                        }))
                    }
                }, {
                    key: "onGroupMsgRemindTypeUpdated",
                    value: function(e) {
                        this._msgRemindHandler.onGroupMsgRemindTypeUpdated(e)
                    }
                }, {
                    key: "deleteLocalConv",
                    value: function(e) {
                        var t = !(1 < arguments.length && void 0 !== arguments[1]) || arguments[1],
                            n = this._convMap.has(e);
                        Oe.l("".concat(this._n, ".deleteLocalConv convID:").concat(e, " has:").concat(n)), n && (this._convMap.delete(e), this.clearMemMsg(e), this._setStorageConvList(), t) && (n = !this._isTopicConv(e), this.emitConvUpdate(n, !1))
                    }
                }, {
                    key: "pullMsgOnInvite",
                    value: function(e) {
                        var t, n, o, i, a, s = this.get(7);
                        s && (t = "".concat(this._n, ".pullMsgOnInvite"), Oe.l("".concat(t, " flag:").concat(this._bPullOnInvite)), this._bPullOnInvite && (a = this.getLocalLastMessage(e), n = this.getLocalSecondLastMessage(e), i = o = 1, a && (o = a.sequence), n && (i = n.sequence), a = s.getGroupRemoteLastSeq(e.replace(E.CONV_GROUP, "")), Oe.l("".concat(t, " convID:").concat(e, " localLastSeq:").concat(o, " localSecondLastSeq:").concat(i, " remoteLastSeq:").concat(a)), this.clearMemMsg(e), 1 < o - i ? this._recursiveGetMsgList([], e, !1, o, i) : 1 < a - o && this._recursiveGetMsgList([], e, !0, a, o)))
                    }
                }, {
                    key: "_recursiveGetMsgList",
                    value: function(e, t, n, o, i, a) {
                        var s = this;
                        this.getMessageList({
                            conversationID: t,
                            nextReqMessageID: a
                        }).then((function(a) {
                            var r = (a = a.data.messageList).filter((function(e) {
                                return n ? e.sequence > i && e.sequence <= o : e.sequence > i && e.sequence < o
                            }));
                            e.unshift.apply(e, m(r)), 0 < a.length && a[0].sequence > i && e.length < 100 ? s._recursiveGetMsgList(e, t, n, o, i, a[0].ID) : s._emitMsgReceived(t, e)
                        }))
                    }
                }, {
                    key: "_emitMsgReceived",
                    value: function(e, t) {
                        var n, o, i = this;
                        0 < t.length && (n = this.hasLocalConversation(e), o = t.map((function(e) {
                            return e.sequence
                        })), Oe.l("".concat(this._n, "._emitMsgReceived convID:").concat(e, " has:").concat(n, " count:").concat(o.length, " sequenceList:"), o), this.emitOEvt(D.MESSAGE_RECEIVED, t), n ? this.patchConvLastMessage(e, !0) : this.getConversationProfile(e).then((function() {
                            i.patchConvLastMessage(e, !0)
                        })))
                    }
                }, {
                    key: "deleteLocalConvList",
                    value: function(e) {
                        var t = this,
                            n = !1;
                        e.forEach((function(e) {
                            t._convMap.has(e) && (t.deleteLocalConv(e, !1), n = !0)
                        })), Oe.l("".concat(this._n, ".deleteLocalConvList convID:").concat(e, " isConvIDExisted:").concat(n)), n && this.emitConvUpdate(!0, !1)
                    }
                }, {
                    key: "isMessageSentByCurrentInstance",
                    value: function(e) {
                        return !(!this._msgListHandler.hasLocalMsg(e.conversationID, e.ID) && !this._sll.has(e.random))
                    }
                }, {
                    key: "modifyMessageList",
                    value: function(e) {
                        var t, n;
                        e.startsWith(E.CONV_C2C) && this._convMap.has(e) && (n = this._convMap.get(e), t = Date.now(), this._msgListHandler.modifyMsgSentByPeer({
                            conversationID: e,
                            latestNick: n.userProfile.nick,
                            latestAvatar: n.userProfile.avatar
                        }), n = this.get(4).getNickAndAvatarByUserID(this.getMyUserID()), this._msgListHandler.modifyMsgSentByMe({
                            conversationID: e,
                            latestNick: n.nick,
                            latestAvatar: n.avatar
                        }), Oe.l("".concat(this._n, ".modifyMessageList convID:").concat(e, " cost:").concat(Yt(t))))
                    }
                }, {
                    key: "updateUserProfileSpecifiedKey",
                    value: function(e) {
                        Oe.l("".concat(this._n, ".updateUserProfileSpecifiedKey options:"), e);
                        var t = e.conversationID,
                            n = e.nick;
                        e = e.avatar, this._convMap.has(t) && (t = this._convMap.get(t).userProfile, ct(n) && t.nick !== n && (t.nick = n), ct(e) && t.avatar !== e && (t.avatar = e), this.emitConvUpdate(!0, !1))
                    }
                }, {
                    key: "_onMyProfileModified",
                    value: function(e) {
                        var n = this,
                            o = this.getLocalConvList(),
                            i = Date.now();
                        o.forEach((function(o) {
                            n.modifyMessageSentByMe(t({
                                conversationID: o.conversationID
                            }, e))
                        })), Oe.l("".concat(this._n, "._onMyProfileModified. modify all messages sent by me, cost:").concat(Yt(i)))
                    }
                }, {
                    key: "modifyMessageSentByMe",
                    value: function(e) {
                        this._msgListHandler.modifyMsgSentByMe(e)
                    }
                }, {
                    key: "getLatestMessageSentByMe",
                    value: function(e) {
                        return this._msgListHandler.getLatestMsgSentByMe(e)
                    }
                }, {
                    key: "modifyMessageSentByPeer",
                    value: function(e) {
                        this._msgListHandler.modifyMsgSentByPeer(e)
                    }
                }, {
                    key: "getLatestMessageSentByPeer",
                    value: function(e) {
                        return this._msgListHandler.getLatestMsgSentByPeer(e)
                    }
                }, {
                    key: "pushIntoNoticeResult",
                    value: function(e, t) {
                        return !(!this._msgListHandler.pushIn(t) || this._sll.has(t.random) || (e.push(t), 0))
                    }
                }, {
                    key: "getLocalLastMessage",
                    value: function(e) {
                        return this._msgListHandler.getLocalLastMsg(e)
                    }
                }, {
                    key: "getLocalSecondLastMessage",
                    value: function(e) {
                        return this._msgListHandler.getLocalSecondLastMsg(e)
                    }
                }, {
                    key: "checkAndPatchRemark",
                    value: function() {
                        var e, t, n = this.get(8);
                        0 === this._convMap.size || !n || 0 !== (e = m(this._convMap.values()).filter((function(e) {
                            return e.type === E.CONV_C2C
                        }))).length && (t = 0, e.forEach((function(e) {
                            var o = e.conversationID.replace(E.CONV_C2C, "");
                            n.isMyFriend(o) && (o = n.getFriendRemark(o), e.remark !== o && (e.remark = o, t += 1))
                        })), Oe.l("".concat(this._n, ".checkAndPatchRemark. c2cConvCount:").concat(e.length, " patchedCount:").concat(t)))
                    }
                }, {
                    key: "updateTopicConversation",
                    value: function(e) {
                        this._updateLocalConvList({
                            conversationOptionsList: e,
                            isFromGetConversations: !0,
                            updateUnreadCount: !0
                        })
                    }
                }, {
                    key: "sendReadReceipt",
                    value: function(e) {
                        var t = e[0],
                            n = null;
                        return t.conversationType === E.CONV_C2C ? n = this._m.get(6) : t.conversationType === E.CONV_GROUP && (n = this._m.get(7)), n ? n.sendReadReceipt(e) : Mn({
                            code: Un.NO_MODULE
                        })
                    }
                }, {
                    key: "getReadReceiptList",
                    value: function(e) {
                        var t = e[0],
                            n = null;
                        return t.conversationType === E.CONV_C2C ? n = this._m.get(6) : t.conversationType === E.CONV_GROUP && (n = this._m.get(7)), n ? n.getReadReceiptList(e) : Mn({
                            code: Un.NO_MODULE
                        })
                    }
                }, {
                    key: "getLastMessageTime",
                    value: function(e) {
                        return (e = this.getLocalConversation(e)) ? e.lastMessage.lastTime : 0
                    }
                }, {
                    key: "getTotalUnreadCount",
                    value: function() {
                        var e = this.getLocalConvList(),
                            t = 0;
                        return e.forEach((function(e) {
                            e.type !== E.CONV_SYSTEM && ("" !== e.messageRemindType && e.messageRemindType !== E.MSG_REMIND_ACPT_AND_NOTE || (t += e.unreadCount))
                        })), t
                    }
                }, {
                    key: "onTotalUnreadCountUpdate",
                    value: function() {
                        var e = this.getTotalUnreadCount();
                        this._convTotalUnreadCount !== e && (Oe.l("".concat(this._n, ".onTotalUnreadCountUpdate from ").concat(this._convTotalUnreadCount, " to ").concat(e)), this._convTotalUnreadCount = e, this.emitOEvt(D.TOTAL_UNREAD_MESSAGE_COUNT_UPDATED))
                    }
                }, {
                    key: "_isConvNeedShow",
                    value: function(e) {
                        if (e = this.getLocalConversation(e), ut(e)) return !0;
                        var t = e.type === E.CONV_TOPIC,
                            n = e.type === E.CONV_GROUP && e.groupProfile.type === E.GRP_ROOM;
                        return e = e.type === E.CONV_GROUP && e.groupProfile.type === E.GRP_LIVE, !(t || n || e)
                    }
                }, {
                    key: "setAllRcvMsgOpt",
                    value: function(e) {
                        return this._msgRemindHandler.setAllRcvMsgOpt(e)
                    }
                }, {
                    key: "getAllRcvMsgOpt",
                    value: function() {
                        return this._msgRemindHandler.getAllRcvMsgOpt()
                    }
                }, {
                    key: "onAllRcvMsgOptNotify",
                    value: function(e) {
                        this._msgRemindHandler.onAllRcvMsgOptNotify(e)
                    }
                }, {
                    key: "clearUnreadCount",
                    value: function(e) {
                        (e = this.getLocalConversation(e)) && 0 < e.unreadCount && (e.unreadCount = 0, this.emitConvUpdate(!0, !1))
                    }
                }, {
                    key: "storeHoppingMessageList",
                    value: function(e) {
                        this._msgListHandler.storeHoppingMsgList(e)
                    }
                }, {
                    key: "clearMemMsg",
                    value: function(e) {
                        var t = 1 < arguments.length && void 0 !== arguments[1] && arguments[1];
                        Oe.l("".concat(this._n, ".clearMemMsg convID:").concat(e, " isOverLimit:").concat(t)), this._msgListHandler.removeByConvID(e), this._completedMap.delete(e), this._roamingMsgKeyAndTimeMap.delete(e), !0 === t && this._everClearedMap.set(e, 1)
                    }
                }, {
                    key: "reset",
                    value: function() {
                        Oe.l("".concat(this._n, ".reset")), this._setStorageConvList(!0), this._pagingStatus = En, this._msgListHandler.reset(), this._msgRemindHandler.reset(), this._roamingMsgKeyAndTimeMap.clear(), this._sll.reset(), this._peerReadTimeMap.clear(), this._completedMap.clear(), this._convMap.clear(), this._pagingTs = 0, this._pagingStartIdx = 0, this._pagingPinnedTs = 0, this._pagingPinnedStartIdx = 0, this._remoteGroupReadSeqMap.clear(), this._convTotalUnreadCount = 0, this._pagingGetCostList.length = 0, this._pagingConvIDMap.clear(), this._convIDFromUnreadDBMap.clear(), this._pagingGetCostList.length = 0, this._convMapForDiff.clear(), this._partialUpdatedConvMap.clear(), this._everClearedMap.clear(), this._bPullOnInvite = !0, this.resetReady()
                    }
                }]), Zi),
                ui = (s(Xi, [{
                    key: "onCheckTimer",
                    value: function(e) {
                        e % 1 == 0 && 0 < this._cachedGroupTipsMap.size && this._checkCachedGroupTips()
                    }
                }, {
                    key: "_checkCachedGroupTips",
                    value: function() {
                        var e = this;
                        this._cachedGroupTipsMap.forEach((function(t, n) {
                            var o = e._checkCountMap.get(n),
                                i = e._grpM.hasLocalGroup(n);
                            Oe.l("".concat(e._n, "._checkCachedGroupTips groupID:").concat(n, " hasLocalGroup:").concat(i, " checkCount:").concat(o)), i ? (e._notifyCachedGroupTips(n), e._checkCountMap.delete(n), e._grpM.deleteUnjoinedAVChatRoom(n)) : o >= e.MAX_CHECK_COUNT ? (e._deleteCachedGroupTips(n), e._checkCountMap.delete(n)) : e._checkCountMap.set(n, ++o)
                        }))
                    }
                }, {
                    key: "onNewGroupTips",
                    value: function(e) {
                        Oe.l("".concat(this._n, ".onNewGroupTips options:").concat(JSON.stringify(e.dataList)));
                        var t = (e = this._assembly(e)).eventDataList,
                            n = e.result;
                        0 < (e = e.AVChatRoomMessageList).length && this._grpM.onAVChatRoomMessage(e), 0 < n.length && (this._grpM.emitOEvt(D.MESSAGE_RECEIVED, n), this._handleTips(n)), 0 < t.length && (this._grpM.updateNextMessageSeq(t), this._grpM.get(11).onNewMessage({
                            conversationOptionsList: t,
                            isInstantMessage: !0
                        }))
                    }
                }, {
                    key: "_assembly",
                    value: function(e) {
                        for (var n = e.event, o = e.dataList, i = null, a = [], s = [], r = {}, c = [], u = 0, l = o.length; u < l; u++) {
                            var d = st(o[u]);
                            if (6 === n) {
                                if (this._grpM.isGroupAttributesUpdatedNotice(d)) continue;
                                if (this._grpM.isGroupCountersNotice(d)) continue
                            }
                            var p = (g = d.groupProfile).groupID,
                                _ = void 0 === (_ = g.communityType) ? 0 : _,
                                h = void 0 === (h = g.topicID) ? void 0 : h,
                                g = g.invisible,
                                f = void 0;
                            if ((v = this._grpM.isMessageFromTopic(_, h)) && (f = E.CONV_TOPIC, d.to = h), (m = this._grpM.hasLocalGroup(p)) || !this._grpM.isUnjoinedAVChatRoom(p))
                                if (m || v)
                                    if (this._grpM.isMessageFromOrToAVChatroom(p)) d.event = n, c.push(d);
                                    else if (d.currentUser = this._grpM.getMyUserID(), d.conversationType = E.CONV_GROUP, (i = new To(d)).setElement({
                                    type: E.MSG_GRP_TIP,
                                    content: t(t({}, d.elements), {}, {
                                        groupProfile: d.groupProfile
                                    })
                                }), i.isSystemMessage = !1, 1 !== g) {
                                var m = this._grpM.get(11),
                                    v = (g = (v = i).conversationID, v.sequence);
                                if (6 === n) i._onlineOnlyFlag = !0, s.push(i);
                                else if (!m.pushIntoNoticeResult(s, i)) continue;
                                this._grpM.isMessageFromCommunityOfTopic(_, h) || 6 === n && m.getLocalConversation(g) || (6 !== n && this._qualityStat(i), _ = m.isRemoteRead({
                                    conversationID: g,
                                    sequence: v
                                }), ut(r[g]) ? (h = 0, "in" === i.flow && (i._isExcludedFromUnreadCount || i._onlineOnlyFlag || _ || (h = 1)), r[g] = a.push({
                                    conversationID: g,
                                    unreadCount: h,
                                    type: ut(f) ? i.conversationType : f,
                                    subType: i.conversationSubType,
                                    lastMessage: i._isExcludedFromLastMessage ? "" : i
                                }) - 1) : (a[m = r[g]].type = i.conversationType, a[m].subType = i.conversationSubType, a[m].lastMessage = i._isExcludedFromLastMessage ? "" : i, "in" === i.flow && (i._isExcludedFromUnreadCount || i._onlineOnlyFlag || _ || a[m].unreadCount++)))
                            } else this._qualityStat(i);
                            else this._cacheGroupTipsAndProbe({
                                groupID: p,
                                event: n,
                                item: d
                            })
                        }
                        return {
                            eventDataList: a,
                            result: s,
                            AVChatRoomMessageList: c
                        }
                    }
                }, {
                    key: "_qualityStat",
                    value: function(e) {
                        this._grpM.get(26).addMessageSequence({
                            key: Yn,
                            message: e
                        })
                    }
                }, {
                    key: "_handleTips",
                    value: function(e) {
                        var t = this;
                        e.forEach((function(e) {
                            switch (e.payload.operationType) {
                                case 1:
                                    t._onNewMemberComeIn(e);
                                    break;
                                case 2:
                                    t._onMemberQuit(e);
                                    break;
                                case 3:
                                    t._onMemberKickedOut(e);
                                    break;
                                case 4:
                                    t._onMemberSetAdmin(e);
                                    break;
                                case 5:
                                    t._onMemberCancelledAdmin(e);
                                    break;
                                case 6:
                                    t._onGroupProfileModified(e);
                                    break;
                                case 7:
                                    t._onMemberInfoModified(e);
                                    break;
                                case 8:
                                    t._onTopicProfileUpdated(e);
                                    break;
                                default:
                                    Oe.w("".concat(t._n, "._handleTips unknown operationType:").concat(e.payload.operationType))
                            }
                        }))
                    }
                }, {
                    key: "_onNewMemberComeIn",
                    value: function(e) {
                        var t = (e = e.payload).memberNum;
                        e = e.groupProfile.groupID, (e = this._grpM.getLocalGroupProfile(e)) && Ye(t) && e.memberCount !== t && (e.memberCount = t, this._updateConvGroupProfile(e))
                    }
                }, {
                    key: "_onMemberQuit",
                    value: function(e) {
                        var t = (n = e.payload).memberNum,
                            n = n.groupProfile.groupID,
                            o = this._grpM.getLocalGroupProfile(n);
                        o && Ye(t) && o.memberCount !== t && (o.memberCount = t, this._updateConvGroupProfile(o)), this._grpM.getGroupMemberHandler().deleteLocalGroupMembers(n, e.payload.userIDList)
                    }
                }, {
                    key: "_onMemberKickedOut",
                    value: function(e) {
                        var t = (n = e.payload).memberNum,
                            n = n.groupProfile.groupID,
                            o = this._grpM.getLocalGroupProfile(n);
                        o && Ye(t) && o.memberCount !== t && (o.memberCount = t, this._updateConvGroupProfile(o)), this._grpM.getGroupMemberHandler().deleteLocalGroupMembers(n, e.payload.userIDList)
                    }
                }, {
                    key: "_updateConvGroupProfile",
                    value: function(e) {
                        this._grpM.get(11).updateConvGroupProfile([e])
                    }
                }, {
                    key: "_onMemberSetAdmin",
                    value: function(e) {
                        var t = e.payload.groupProfile.groupID,
                            n = (e = e.payload.userIDList, this._grpM.getGroupMemberHandler());
                        e.forEach((function(e) {
                            (e = n.getLocalGroupMemberInfo(t, e)) && e.updateRole(E.GRP_MBR_ROLE_ADMIN)
                        }))
                    }
                }, {
                    key: "_onMemberCancelledAdmin",
                    value: function(e) {
                        var t = e.payload.groupProfile.groupID,
                            n = (e = e.payload.userIDList, this._grpM.getGroupMemberHandler());
                        e.forEach((function(e) {
                            (e = n.getLocalGroupMemberInfo(t, e)) && e.updateRole(E.GRP_MBR_ROLE_MEMBER)
                        }))
                    }
                }, {
                    key: "_onGroupProfileModified",
                    value: function(e) {
                        var t = this,
                            n = (e = e.payload).newGroupProfile,
                            o = e.groupProfile,
                            i = e.operatorInfo,
                            a = (e = o.groupID, this._grpM.getLocalGroupProfile(e));
                        Object.keys(n).forEach((function(e) {
                            switch (e) {
                                case "ownerID":
                                    t._ownerChanged(a, n);
                                    break;
                                case "groupName":
                                    a.name = n[e];
                                    break;
                                default:
                                    a[e] = n[e]
                            }
                        })), ut(i) || Object.keys(i).forEach((function(e) {
                            "nameCard" === e ? a.updateSelfInfo({
                                nameCard: i[e]
                            }) : "role" === e && a.updateSelfInfo({
                                role: i[e]
                            })
                        })), o = !a.isSupportTopic, this._grpM.emitGroupListUpdate(!0, o)
                    }
                }, {
                    key: "_ownerChanged",
                    value: function(e, t) {
                        e = e.groupID;
                        var n = this._grpM.getLocalGroupProfile(e),
                            o = this._grpM.getMyUserID();
                        o === t.ownerID && (n.updateGroup({
                            selfInfo: {
                                role: E.GRP_MBR_ROLE_OWNER
                            }
                        }), n = (t = this._grpM.getGroupMemberHandler()).getLocalGroupMemberInfo(e, o), o = this._grpM.getLocalGroupProfile(e).ownerID, t = t.getLocalGroupMemberInfo(e, o), n && n.updateRole(E.GRP_MBR_ROLE_OWNER), t && t.updateRole(E.GRP_MBR_ROLE_MEMBER))
                    }
                }, {
                    key: "_onMemberInfoModified",
                    value: function(e) {
                        var t = e.to,
                            n = (o = e.payload).groupProfile,
                            o = o.memberList,
                            i = n.groupID,
                            a = (Ct(t) && this._updateTopicMuteTime(e), this._grpM.getGroupMemberHandler());
                        o.forEach((function(e) {
                            var t = a.getLocalGroupMemberInfo(i, e.userID);
                            t && Ye(e.muteTime) && t.updateMuteUntil(e.muteTime)
                        }))
                    }
                }, {
                    key: "_updateTopicMuteTime",
                    value: function(e) {
                        var t = e.to,
                            n = (e = e.payload).groupProfile,
                            o = void 0 === (e = e.memberList) ? [] : e,
                            i = (e = this._grpM.get(10), n = n.groupID, e.getLocalTopic(n, t));
                        if (i) {
                            for (var a = !1, s = 0; s < o.length; s++) {
                                var r = o[s];
                                if (r.userID === this._grpM.getMyUserID() && 0 <= r.muteTime) {
                                    i.updateSelfInfo({
                                        muteTime: r.muteTime
                                    }), a = !0;
                                    break
                                }
                            }
                            a && this._grpM.emitOEvt(D.TOPIC_UPDATED, {
                                groupID: n,
                                topic: i
                            })
                        }
                    }
                }, {
                    key: "_onTopicProfileUpdated",
                    value: function(e) {
                        var n = (o = e.payload).groupProfile.groupID,
                            o = o.newTopicInfo;
                        this._grpM.get(10).onTopicProfileUpdated(t({
                            groupID: n,
                            topicID: e.to
                        }, o))
                    }
                }, {
                    key: "_cacheGroupTips",
                    value: function(e, t) {
                        this._cachedGroupTipsMap.has(e) || this._cachedGroupTipsMap.set(e, []), this._cachedGroupTipsMap.get(e).push(t)
                    }
                }, {
                    key: "_deleteCachedGroupTips",
                    value: function(e) {
                        this._cachedGroupTipsMap.has(e) && this._cachedGroupTipsMap.delete(e)
                    }
                }, {
                    key: "_notifyCachedGroupTips",
                    value: function(e) {
                        var t = this,
                            n = this._cachedGroupTipsMap.get(e) || [];
                        n.forEach((function(e) {
                            t.onNewGroupTips(e)
                        })), this._deleteCachedGroupTips(e), Oe.l("".concat(this._n, "._notifyCachedGroupTips groupID:").concat(e, " count:").concat(n.length))
                    }
                }, {
                    key: "_cacheGroupTipsAndProbe",
                    value: function(e) {
                        var t = this,
                            n = e.groupID,
                            o = e.event;
                        e = e.item, this._cacheGroupTips(n, {
                            event: o,
                            dataList: [e]
                        }), this._grpM.getGroupSimplifiedInfo(n).then((function(e) {
                            e.type === E.GRP_AVCHATROOM ? t._grpM.hasLocalGroup(n) ? t._notifyCachedGroupTips(n) : t._grpM.setUnjoinedAVChatRoom(n) : (t._grpM.updateGroupMap([e]), t._notifyCachedGroupTips(n))
                        })), this._checkCountMap.has(n) || this._checkCountMap.set(n, 0), Oe.l("".concat(this._n, "._cacheGroupTipsAndProbe groupID:").concat(n))
                    }
                }, {
                    key: "reset",
                    value: function() {
                        this._cachedGroupTipsMap.clear(), this._checkCountMap.clear()
                    }
                }]), Xi),
                li = (s(zi, [{
                    key: "onCheckTimer",
                    value: function(e) {
                        e % 1 == 0 && 0 < this._cachedGroupMessageMap.size && this._checkCachedGroupMessage()
                    }
                }, {
                    key: "_checkCachedGroupMessage",
                    value: function() {
                        var e = this;
                        this._cachedGroupMessageMap.forEach((function(t, n) {
                            var o = e._checkCountMap.get(n),
                                i = e._grpM.hasLocalGroup(n);
                            Oe.l("".concat(e._n, "._checkCachedGroupMessage groupID:").concat(n, " hasLocalGroup:").concat(i, " checkCount:").concat(o)), i ? (e._notifyCachedGroupMessage(n), e._checkCountMap.delete(n), e._grpM.deleteUnjoinedAVChatRoom(n)) : o >= e.MAX_CHECK_COUNT ? (e._deleteCachedGroupMessage(n), e._checkCountMap.delete(n)) : e._checkCountMap.set(n, ++o)
                        }))
                    }
                }, {
                    key: "updateLastMsg",
                    value: function(e) {
                        var n = "".concat(this._n, ".updateLastMsg");
                        if (0 !== this._grpM.getGroupMap().size) {
                            for (var o, i, a, s, r = !1, c = e.length, u = 0; u < c; u++)(o = e[u]).type === E.CONV_GROUP && 0 !== o.lastMessage.lastSequence && null !== o.lastMessage.payload && (i = o.conversationID.split(/^GROUP/)[1], (i = this._grpM.getLocalGroupProfile(i)) && (a = i.lastMessage, s = o.lastMessage, JSON.stringify(a) !== JSON.stringify(s) && (i.lastMessage = t({}, o.lastMessage), r = !0)));
                            Oe.l("".concat(n, " convCount:").concat(c, " groupCount:").concat(this._grpM.getLocalGroupList().length, " isUpdated:").concat(r)), r && (this._grpM.sortLocalGroupList(), this._grpM.emitGroupListUpdate(!0, !1))
                        } else this.tempConversationList = e
                    }
                }, {
                    key: "onNewMessage",
                    value: function(e) {
                        var t, n = (t = this._assembly(e)).conversationOptionsList,
                            o = t.messageList;
                        0 < (0 < (0 < (t = t.AVChatRoomMessageList).length && this._grpM.onAVChatRoomMessage(t), t = vt(o)).length && this._grpM.emitOEvt(D.MESSAGE_MODIFIED, t), 0 < n.length && (this._grpM.get(11).onNewMessage({
                            conversationOptionsList: n,
                            isInstantMessage: !1 !== e.isInstantMessage,
                            updateUnreadCount: !1 !== e.updateUnreadCount
                        }), this._grpM.updateNextMessageSeq(n)), t = It(o)).length && this._grpM.emitOEvt(D.MESSAGE_RECEIVED, t), o.length = 0
                    }
                }, {
                    key: "_assembly",
                    value: function(e) {
                        var t = e.dataList,
                            n = e.event,
                            o = e.isInstantMessage,
                            i = null,
                            a = [],
                            s = [],
                            r = [],
                            c = {},
                            u = this._grpM.getFileDownloadProxy(),
                            l = this._grpM.getDowloadFileAuthKey(),
                            d = this._grpM.get(17).getFileDNList(),
                            p = t.length;
                        1 < p && t.sort((function(e, t) {
                            return e.sequence - t.sequence
                        }));
                        for (var _ = this._grpM.get(11), h = this._grpM.get(4), g = 0; g < p; g++) {
                            var f, m = st(t[g]),
                                v = (y = m.groupProfile).groupID,
                                I = void 0 === (I = y.communityType) ? 0 : I,
                                M = void 0 === (M = y.topicID) ? void 0 : M,
                                y = y.invisible,
                                C = void 0,
                                T = this._grpM.isMessageFromTopic(I, M),
                                D = (T && (C = E.CONV_TOPIC, m.to = M), this._grpM.hasLocalGroup(v));
                            !D && this._grpM.isUnjoinedAVChatRoom(v) || (D || T ? this._grpM.isMessageFromOrToAVChatroom(v) ? (m.event = n, r.push(m)) : (m.currentUser = this._grpM.getMyUserID(), m.conversationType = E.CONV_GROUP, m.isSystemMessage = !!m.isSystemMessage, (i = new To(m)).setElement(m.elements, u, l, d), 1 !== y ? (D = 1 === t[g].isModified, _.isMessageSentByCurrentInstance(i) ? i.isModified = D : D = !1, 1 === m.onlineOnlyFlag ? (i._onlineOnlyFlag = !0, _.isMessageSentByCurrentInstance(i) || s.push(i)) : this._grpM.isMessageFromCommunityOfTopic(I, M) ? s.push(i) : (i.from !== this._grpM.getMyUserID() || (T = _.getLatestMessageSentByMe(i.conversationID)) && (y = T.nick, I = T.avatar, y === i.nick && I === i.avatar || (_.modifyMessageSentByMe({
                                conversationID: f,
                                latestNick: i.nick,
                                latestAvatar: i.avatar
                            }), h.mockOnNickAvatarModified(i.nick, i.avatar))), _.pushIntoMessageList(s, i, D) && (this._qualityStat(o, i), f = (M = i).conversationID, T = M.sequence, y = _.isRemoteRead({
                                conversationID: f,
                                sequence: T
                            }), ut(c[f]) ? (I = 0, "in" === i.flow && (i._isExcludedFromUnreadCount || y || (I = 1)), c[f] = a.push({
                                conversationID: f,
                                unreadCount: I,
                                type: ut(C) ? i.conversationType : C,
                                subType: i.conversationSubType,
                                lastMessage: i._isExcludedFromLastMessage ? "" : i
                            }) - 1) : (a[D = c[f]].type = ut(C) ? i.conversationType : C, a[D].subType = i.conversationSubType, a[D].lastMessage = i._isExcludedFromLastMessage ? "" : i, "in" === i.flow && (i._isExcludedFromUnreadCount || y || a[D].unreadCount++))))) : this._qualityStat(o, i)) : this._cacheGroupMessageAndProbe({
                                groupID: v,
                                event: n,
                                item: m
                            }))
                        }
                        return {
                            conversationOptionsList: a,
                            messageList: s,
                            AVChatRoomMessageList: r
                        }
                    }
                }, {
                    key: "_qualityStat",
                    value: function(e, t) {
                        var n = this._grpM.get(26);
                        n.addMessageSequence({
                            key: Yn,
                            message: t
                        }), e && 0 < t.clientTime && n.addMessageDelay(t.clientTime)
                    }
                }, {
                    key: "onMsgRevoked",
                    value: function(e, t) {
                        var n = this,
                            o = this._grpM.get(11),
                            i = [],
                            a = [];
                        e.dataList.forEach((function(e) {
                            var t = e.elements.revokedInfos,
                                n = e.revokerInfo,
                                s = e.groupProfile,
                                r = !1;
                            s && (r = yt({
                                groupID: s.groupID
                            }) || !He(s.topicID)), ut(t) || t.forEach((function(e) {
                                var t, c = He(e.topicID) ? "GROUP".concat(e.groupID) : "GROUP".concat(e.topicID),
                                    u = o.getLocalConversation(c),
                                    l = e.revokerInfo && e.revokerInfo.revoker || n && n.revoker,
                                    d = n && n.reason || "";
                                u && Mt(u.type) ? t = {
                                    conversationID: c,
                                    sequence: e.sequence,
                                    ID: "".concat(e.tinyID, "-").concat(e.clientTime, "-").concat(e.random)
                                } : (u = o.revoke(c, e.sequence, e.random)) ? t = u : (t = {
                                    conversationID: c,
                                    sequence: e.sequence
                                }, e.tinyID && e.clientTime && e.random && (t.ID = "".concat(e.tinyID, "-").concat(e.clientTime, "-").concat(e.random)), e.time && (t.time = e.time)), t && (t.revoker = l, t.revokeReason = d, t.revokerInfo = {
                                    userID: l,
                                    nick: "",
                                    avatar: ""
                                }, r ? (t.revokerInfo.nick = s.nick, t.revokerInfo.avatar = s.avatar, i.push(t)) : a.push(t))
                            }))
                        })), 0 === a.length && 0 === i.length || (o.onMessageRevoked([].concat(i, a), t), 0 < i.length && this._grpM.emitOEvt(D.MESSAGE_REVOKED, i), 0 < a.length && o.updateRevokerInfo(a).then((function(e) {
                            n._grpM.emitOEvt(D.MESSAGE_REVOKED, e)
                        })))
                    }
                }, {
                    key: "_groupListTreeShaking",
                    value: function(e) {
                        for (var t = new Map(m(this._grpM.getGroupMap())), n = 0, o = e.length; n < o; n++) t.delete(e[n].groupID);
                        this._grpM.hasJoinedAVChatRoom() && this._grpM.getJoinedAVChatRoom().forEach((function(e) {
                            t.delete(e)
                        })), this._grpM.getGroupMap().forEach((function(e, n) {
                            e.isSupportTopic && t.delete(n)
                        }));
                        for (var i = m(t.keys()), a = 0, s = i.length; a < s; a++) this._grpM.deleteGroup(i[a])
                    }
                }, {
                    key: "syncGroupList",
                    value: function() {
                        var e = this,
                            t = 0 < arguments.length && void 0 !== arguments[0] && arguments[0],
                            n = (this._pagingStatus === En && this._grpM.clearGroupMap(), m(w)),
                            o = this.PAGING_GRP_COUNT_LIMIT,
                            i = [];
                        if (!0 === t) return this._pagingGetGroupListWithTopic({
                            limit: o,
                            offset: 0,
                            groupBaseInfoFilter: n,
                            groupList: i
                        });
                        t = "syncGroupList";
                        var a = "".concat(this._n, ".").concat(t),
                            s = new Qn(t);
                        return this._pagingGetGroupList({
                            limit: o,
                            offset: 0,
                            groupBaseInfoFilter: n,
                            groupList: i
                        }).then((function() {
                            var t = Kt(e._pagingGetCostList),
                                n = Bt(e._pagingGetCostList),
                                o = (e._pagingGetCostList.length = 0, e._pagingStatus = Sn, e._groupListTreeShaking(i), e._grpM.updateGroupMap(i), e._grpM.getLocalGroupList().length);
                            return o = "count:".concat(o, " sum:").concat(n, " avg:").concat(t), Oe.l("".concat(a, " ok. ").concat(o)), s.setMessage(o).end(), e.tempConversationList && (e.updateLastMsg(e.tempConversationList), e.tempConversationList = null), e._grpM.emitGroupListUpdate(!0, !0), vn({
                                groupList: e._grpM.getLocalGroupList()
                            })
                        })).catch((function(t) {
                            return e._pagingStatus = kn, s.setError(t).end(), Oe.e("".concat(a, " failed. error:"), t), Mn(t)
                        }))
                    }
                }, {
                    key: "getGroupList",
                    value: function() {
                        var e = this,
                            t = "".concat(this._n, ".").concat("getGroupList");
                        if (Oe.l("".concat(t, " pagingStatus:").concat(this._pagingStatus)), this._pagingStatus === kn || this._pagingStatus === En) return this.syncGroupList().then((function() {
                            return vn({
                                groupList: e._grpM.getLocalGroupList(),
                                isSyncCompleted: e.isPagingGetCompleted()
                            })
                        })).catch((function(e) {
                            return Oe.e("".concat(t, " failed. error:"), e), Mn(e)
                        }));
                        var n = this._grpM.getLocalGroupList();
                        return Oe.l("".concat(t, ". returned group count:").concat(n.length)), In({
                            groupList: n,
                            isSyncCompleted: this.isPagingGetCompleted()
                        })
                    }
                }, {
                    key: "isPagingGetCompleted",
                    value: function() {
                        return this._pagingStatus === Sn
                    }
                }, {
                    key: "_pagingGetGroupList",
                    value: function(e) {
                        var t = this,
                            n = "".concat(this._n, ".").concat("_pagingGetGroupList"),
                            o = e.isCommunityRelay,
                            i = void 0 !== o && o,
                            a = e.limit,
                            s = e.offset,
                            r = e.groupBaseInfoFilter,
                            c = e.groupList,
                            u = Date.now();
                        return this._grpM.req({
                            P: wn.GET_GRP_LIST,
                            data: {
                                type: i ? E.GRP_COMMUNITY : void 0,
                                memberAccount: this._grpM.getMyUserID(),
                                limit: a,
                                offset: s,
                                responseFilter: {
                                    groupBaseInfoFilter: r,
                                    selfInfoFilter: ["Role", "JoinTime", "MsgFlag", "MsgSeq"]
                                }
                            }
                        }).then((function(e) {
                            var o = void 0 === (o = (e = e.data).groups) ? [] : o,
                                l = (e = e.totalCount, c.push.apply(c, m(o)), t._handleGroupAtInfoWithoutTopic(i, o), !((o = s + a) < e));
                            return e = "offset:".concat(s, " limit:").concat(a, " total:").concat(e, " isCompleted:").concat(l, " ") + "current:".concat(c.length, " isCommunityRelay:").concat(i), t._pagingGetCostList.push(Yt(u, !1)), Oe.l("".concat(n, " ok. ").concat(e, " cost:").concat(Yt(u))), i || l ? !i && l ? (Oe.l("".concat(n, " start to get community list")), s = 0, t._pagingGetGroupList({
                                limit: a,
                                offset: s,
                                groupBaseInfoFilter: r,
                                groupList: c,
                                isCommunityRelay: !0
                            })) : i && !l ? (s = o, t._pagingGetGroupList({
                                limit: a,
                                offset: s,
                                groupBaseInfoFilter: r,
                                groupList: c,
                                isCommunityRelay: !0
                            })) : vn({
                                groupList: c
                            }) : (s = o, t._pagingGetGroupList({
                                limit: a,
                                offset: s,
                                groupBaseInfoFilter: r,
                                groupList: c
                            }))
                        })).catch((function(e) {
                            return 10018 === e.code ? (Oe.w("".concat(t.logPrefix, " response size exceeds the limit, request count:").concat(a)), a = 50, t._pagingGetGroupList({
                                limit: a,
                                offset: s,
                                groupBaseInfoFilter: r,
                                groupList: c,
                                isCommunityRelay: i
                            })) : i ? (11e3 === e.code && Oe.l("".concat(n, " ok. community unavailable")), In({
                                groupList: c
                            })) : Mn(e)
                        }))
                    }
                }, {
                    key: "_pagingGetGroupListWithTopic",
                    value: function(e) {
                        var t = this,
                            n = "".concat(this._n, "._pagingGetGroupListWithTopic"),
                            o = e.limit,
                            i = e.offset,
                            a = e.groupBaseInfoFilter,
                            s = e.groupList,
                            r = Date.now();
                        return this._grpM.req({
                            P: wn.GET_GRP_LIST,
                            data: {
                                type: E.GRP_COMMUNITY,
                                memberAccount: this._grpM.getMyUserID(),
                                limit: o,
                                offset: i,
                                responseFilter: {
                                    groupBaseInfoFilter: a,
                                    selfInfoFilter: m(F)
                                },
                                isSupportTopic: 1,
                                needAppDefineData: 1
                            }
                        }).then((function(e) {
                            var c = (e = e.data).groups,
                                u = (e = e.totalCount, s.push.apply(s, m(void 0 === c ? [] : c)), !((c = i + o) < e));
                            return Oe.l("".concat(n, " ok. offset:").concat(i, " limit:").concat(o, " totalCount:").concat(e, " isCompleted:").concat(u, " currentCount:").concat(s.length, " cost:").concat(Yt(r))), u ? (t._grpM.updateGroupMap(s), t._grpM.emitGroupListUpdate(!0, !1), vn({
                                groupList: e = t._grpM.getLocalGroupList().filter((function(e) {
                                    return !0 === e.isSupportTopic
                                }))
                            })) : (i = c, t._pagingGetGroupListWithTopic({
                                limit: o,
                                offset: i,
                                groupBaseInfoFilter: a,
                                groupList: s
                            }))
                        })).catch((function(e) {
                            return 10018 === e.code ? (Oe.w("".concat(t.logPrefix, " response size exceeds the limit, request count:").concat(o)), o = 50, t._pagingGetGroupListWithTopic({
                                limit: o,
                                offset: i,
                                groupBaseInfoFilter: a,
                                groupList: s
                            })) : Mn(e)
                        }))
                    }
                }, {
                    key: "_cacheGroupMessage",
                    value: function(e, t) {
                        this._cachedGroupMessageMap.has(e) || this._cachedGroupMessageMap.set(e, []), this._cachedGroupMessageMap.get(e).push(t)
                    }
                }, {
                    key: "_deleteCachedGroupMessage",
                    value: function(e) {
                        this._cachedGroupMessageMap.has(e) && this._cachedGroupMessageMap.delete(e)
                    }
                }, {
                    key: "_notifyCachedGroupMessage",
                    value: function(e) {
                        var t = this,
                            n = this._cachedGroupMessageMap.get(e) || [];
                        n.forEach((function(e) {
                            t.onNewMessage(e)
                        })), this._deleteCachedGroupMessage(e), Oe.l("".concat(this._n, "._notifyCachedGroupMessage groupID:").concat(e, " count:").concat(n.length))
                    }
                }, {
                    key: "_cacheGroupMessageAndProbe",
                    value: function(e) {
                        var t = this,
                            n = e.groupID,
                            o = e.event;
                        e = e.item, this._cacheGroupMessage(n, {
                            event: o,
                            dataList: [e]
                        }), this._grpM.getGroupSimplifiedInfo(n).then((function(e) {
                            e.type === E.GRP_AVCHATROOM ? t._grpM.hasLocalGroup(n) ? t._notifyCachedGroupMessage(n) : t._grpM.setUnjoinedAVChatRoom(n) : (t._grpM.updateGroupMap([e]), t._notifyCachedGroupMessage(n))
                        })), this._checkCountMap.has(n) || this._checkCountMap.set(n, 0), Oe.l("".concat(this._n, "._cacheGroupMessageAndProbe groupID:").concat(n))
                    }
                }, {
                    key: "_handleGroupAtInfoWithoutTopic",
                    value: function(e, n) {
                        var o = this;
                        e && 0 !== n.length && n.forEach((function(e) {
                            var n = e.groupID,
                                i = (e = e.groupAtInfoList, []);
                            ut(e) || (e.forEach((function(e) {
                                i.push(t(t({}, e), {}, {
                                    groupID: n
                                }))
                            })), o._grpM.get(11).onNewGroupAtTips({
                                dataList: i
                            }))
                        }))
                    }
                }, {
                    key: "setPagingGroupCount",
                    value: function(e) {
                        ut(e) || (this.PAGING_GRP_COUNT_LIMIT = parseInt(e, 10))
                    }
                }, {
                    key: "reset",
                    value: function() {
                        this.PAGING_GRP_COUNT_LIMIT = 200, this._cachedGroupMessageMap.clear(), this._checkCountMap.clear(), this._pagingStatus = En, this._pagingGetCostList = []
                    }
                }]), zi),
                di = (s(Ji, [{
                    key: "_onCloudConfig",
                    value: function() {
                        var e = this._grpM.getCloudConfig("grp_attr_cache_time");
                        ut(e) || (this.CACHE_EXPIRE_TIME = Number(e))
                    }
                }, {
                    key: "updateLocalMainSequenceOnReconnected",
                    value: function() {
                        this._groupAttributesMap.forEach((function(e) {
                            e.localMainSequence = 0
                        }))
                    }
                }, {
                    key: "isGroupAttributesUpdatedNotice",
                    value: function(e) {
                        var t = e.to,
                            n = (e = e.elements.newGroupProfile, !ut(e) && !He(e.groupAttributeOption));
                        return n && this._onGroupAttributesUpdated({
                            groupID: t,
                            groupAttributeOption: e.groupAttributeOption
                        }), n
                    }
                }, {
                    key: "_onGroupAttributesUpdated",
                    value: function(e) {
                        var t = this,
                            n = e.groupID,
                            o = (e = e.groupAttributeOption).mainSequence,
                            i = e.isWithChangedAttributeInfo,
                            a = void 0 === (a = e.groupAttributeList) ? [] : a;
                        if (e = e.operationType, Oe.l("".concat(this._n, ".onGroupAttributesUpdated. ") + "groupID:".concat(n, " isWithChangedAttributeInfo:").concat(i, " operationType:").concat(e)), !ut(e)) {
                            this._groupAttributesCopy = this._getCachedAttributes({
                                groupID: n
                            });
                            var s = o - this._getLocalGroupAttributes(n).localMainSequence;
                            if (0 != s) {
                                if (1 === i && 1 == s) return this._refreshCachedGroupAttributes({
                                    groupID: n,
                                    remoteMainSequence: o,
                                    groupAttributeList: a,
                                    operationType: e
                                }), void this._emitGroupAttributesUpdated(n);
                                this._hasLocalGroupAttributes(n) && (i = this._getLocalGroupAttributes(n).avChatRoomKey, this._getGroupAttributes({
                                    groupID: n,
                                    avChatRoomKey: i
                                }).then((function() {
                                    t._emitGroupAttributesUpdated(n)
                                })))
                            }
                        }
                    }
                }, {
                    key: "initGroupAttributesCache",
                    value: function(e) {
                        var t = e.groupID;
                        e = void 0 === (e = e.avChatRoomKey) ? void 0 : e, this._groupAttributesMap.set(t, {
                            lastUpdateTime: 0,
                            localMainSequence: 0,
                            remoteMainSequence: 0,
                            attributes: new Map,
                            avChatRoomKey: e
                        }), Oe.l("".concat(this._n, ".initGroupAttributesCache groupID:").concat(t, " avChatRoomKey:").concat(e))
                    }
                }, {
                    key: "initGroupAttributes",
                    value: function(e) {
                        var t = this,
                            n = e.groupID,
                            o = e.groupAttributes,
                            i = (e = this._getLocalGroupAttributes(n)).remoteMainSequence,
                            a = (e = e.avChatRoomKey, new Qn("initGroupAttributes"));
                        return a.setMessage("groupID:".concat(n, " avChatRoomKey:").concat(e, " mainSequence:").concat(i)), this._grpM.req({
                            P: wn.SET_GRP_ATTR,
                            data: {
                                groupID: n,
                                avChatRoomKey: e,
                                mainSequence: i,
                                groupAttributeList: this._transformGroupAttributes(o)
                            }
                        }).then((function(e) {
                            Oe.l("".concat(t._n, ".").concat("initGroupAttributes", " ok. groupID:").concat(n));
                            var i = (e = e.data).mainSequence;
                            return (e = m(e.groupAttributeList)).forEach((function(e) {
                                e.value = o[e.key]
                            })), t._groupAttributesCopy = t._getCachedAttributes({
                                groupID: n
                            }), t._refreshCachedGroupAttributes({
                                groupID: n,
                                remoteMainSequence: i,
                                groupAttributeList: e,
                                operationType: 1
                            }), t._emitGroupAttributesUpdated(n), a.end(), vn({
                                groupAttributes: o
                            })
                        })).catch((function(e) {
                            return a.setError(e).end(), Mn(e)
                        }))
                    }
                }, {
                    key: "setGroupAttributes",
                    value: function(e) {
                        var t = this,
                            n = "".concat(this._n, ".").concat("setGroupAttributes"),
                            o = e.groupID,
                            i = e.groupAttributes,
                            a = (e = this._getLocalGroupAttributes(o)).remoteMainSequence,
                            s = e.avChatRoomKey,
                            r = e.attributes,
                            c = ((e = this._transformGroupAttributes(i)).forEach((function(e) {
                                var t = e.key;
                                e.sequence = 0, r.has(t) && (e.sequence = r.get(t).sequence)
                            })), new Qn("setGroupAttributes"));
                        return c.setMessage("groupID:".concat(o, " groupAttributes:").concat(JSON.stringify(i))), Oe.l("".concat(n, ". groupID:").concat(o, " mainSequence:").concat(a)), this._grpM.req({
                            P: wn.MODIFY_GRP_ATTR,
                            data: {
                                groupID: o,
                                avChatRoomKey: s,
                                mainSequence: a,
                                groupAttributeList: e
                            }
                        }).then((function(e) {
                            Oe.l("".concat(n, " ok."));
                            var a = (e = e.data).mainSequence;
                            return (e = m(e.groupAttributeList)).forEach((function(e) {
                                e.value = i[e.key]
                            })), t._groupAttributesCopy = t._getCachedAttributes({
                                groupID: o
                            }), t._refreshCachedGroupAttributes({
                                groupID: o,
                                remoteMainSequence: a,
                                groupAttributeList: e,
                                operationType: 2
                            }), t._emitGroupAttributesUpdated(o), c.end(), vn({
                                groupAttributes: i
                            })
                        })).catch((function(e) {
                            return c.setError(e).end(), Mn(e)
                        }))
                    }
                }, {
                    key: "deleteGroupAttributes",
                    value: function(e) {
                        var t = this,
                            n = e.groupID,
                            o = (e = void 0 === (e = e.keyList) ? [] : e, (r = this._getLocalGroupAttributes(n)).remoteMainSequence),
                            i = r.avChatRoomKey,
                            a = r.attributes,
                            s = m(a.keys()),
                            r = wn.CLEAR_GRP_ATTR,
                            c = 3,
                            u = (i = {
                                groupID: n,
                                avChatRoomKey: i,
                                mainSequence: o
                            }, []),
                            l = (0 < e.length && (s = [], r = wn.DEL_GRP_ATTR, c = 4, e.forEach((function(e) {
                                var t = 0;
                                a.has(e) && (t = a.get(e).sequence, s.push(e)), u.push({
                                    key: e,
                                    sequence: t
                                })
                            })), i.groupAttributeList = u), new Qn("deleteGroupAttributes"));
                        return l.setMessage("groupID:".concat(n, " mainSequence:").concat(o, " keyList:").concat(e, " proto:").concat(r)), this._grpM.req({
                            P: r,
                            data: i
                        }).then((function(e) {
                            return Oe.l("".concat(t._n, ".").concat("deleteGroupAttributes", " ok. groupID:").concat(n)), e = e.data.mainSequence, t._groupAttributesCopy = t._getCachedAttributes({
                                groupID: n
                            }), t._refreshCachedGroupAttributes({
                                groupID: n,
                                remoteMainSequence: e,
                                groupAttributeList: u,
                                operationType: c
                            }), t._emitGroupAttributesUpdated(n), l.end(), vn({
                                keyList: s
                            })
                        })).catch((function(e) {
                            return l.setError(e).end(), Mn(e)
                        }))
                    }
                }, {
                    key: "getGroupAttributes",
                    value: function(e) {
                        var t = this,
                            n = "".concat(this._n, ".").concat("getGroupAttributes"),
                            o = e.groupID,
                            i = (r = this._getLocalGroupAttributes(o)).avChatRoomKey,
                            a = r.lastUpdateTime,
                            s = r.localMainSequence,
                            r = r.remoteMainSequence,
                            c = new Qn("getGroupAttributes");
                        return c.setMessage("groupID:".concat(o, " localMainSequence:").concat(s, " remoteMainSequence:").concat(r, " keyList:").concat(e.keyList)), Date.now() - a >= this.CACHE_EXPIRE_TIME || s < r ? this._getGroupAttributes({
                            groupID: o,
                            avChatRoomKey: i
                        }).then((function(i) {
                            return c.setMoreMessage("get attributes from remote. count:".concat(i.length)).end(), Oe.l("".concat(n, " from remote. groupID:").concat(o)), vn({
                                groupAttributes: i = t._getCachedAttributes(e)
                            })
                        })).catch((function(e) {
                            return c.setError(e).end(), Mn(e)
                        })) : (c.setMoreMessage("get attributes from cache").end(), Oe.l("".concat(n, " from cache. groupID:").concat(o)), In({
                            groupAttributes: a = this._getCachedAttributes(e)
                        }))
                    }
                }, {
                    key: "_getGroupAttributes",
                    value: function(e) {
                        var n = this,
                            o = 0;
                        return ut(e.avChatRoomKey) || (o = 1), this._grpM.req({
                            P: wn.GET_GRP_ATTR,
                            data: t(t({}, e), {}, {
                                groupType: o
                            })
                        }).then((function(t) {
                            Oe.l("".concat(n._n, "._getGroupAttributes ok. groupID:").concat(e.groupID));
                            var o = (t = t.data).mainSequence,
                                i = m(t = t.groupAttributeList);
                            return ut(o) || n._refreshCachedGroupAttributes({
                                groupID: e.groupID,
                                remoteMainSequence: o,
                                groupAttributeList: i,
                                operationType: 5
                            }), t
                        })).catch((function(e) {
                            return Mn(e)
                        }))
                    }
                }, {
                    key: "_refreshCachedGroupAttributes",
                    value: function(e) {
                        var t = e.groupID,
                            n = e.remoteMainSequence,
                            o = e.groupAttributeList;
                        if (e = e.operationType, this._hasLocalGroupAttributes(t)) {
                            var i = this._getLocalGroupAttributes(t),
                                a = i.localMainSequence;
                            if (5 === e || n - a == 1) i.remoteMainSequence = n, i.localMainSequence = n, i.lastUpdateTime = Date.now(), this._updateCachedAttributes({
                                groupAttributes: i,
                                groupAttributeList: o,
                                operationType: e
                            });
                            else {
                                if (a === n) return;
                                i.remoteMainSequence = n
                            }
                            this._groupAttributesMap.set(t, i), o = "operationType:".concat(e, " localMainSequence:").concat(a, " remoteMainSequence:").concat(n), Oe.l("".concat(this._n, "._refreshCachedGroupAttributes. ").concat(o))
                        }
                    }
                }, {
                    key: "_getCachedAttributes",
                    value: function(e) {
                        var t = e.groupID,
                            n = (e = void 0 === (e = e.keyList) ? [] : e, {});
                        if (this._hasLocalGroupAttributes(t)) {
                            var o = this._getLocalGroupAttributes(t).attributes;
                            if (0 < e.length) e.forEach((function(e) {
                                o.has(e) && (n[e] = o.get(e).value)
                            }));
                            else {
                                var i, a = T(o.keys());
                                try {
                                    for (a.s(); !(i = a.n()).done;) {
                                        var s = i.value;
                                        n[s] = o.get(s).value
                                    }
                                } catch (e) {
                                    a.e(e)
                                } finally {
                                    a.f()
                                }
                            }
                        }
                        return n
                    }
                }, {
                    key: "_updateCachedAttributes",
                    value: function(e) {
                        var t = e.groupAttributes,
                            n = e.groupAttributeList;
                        3 !== (e = e.operationType) ? 4 !== e ? (1 === e && t.attributes.clear(), n.forEach((function(e) {
                            var n = e.key,
                                o = e.value;
                            e = e.sequence, t.attributes.set(n, {
                                value: o,
                                sequence: e
                            })
                        }))) : n.forEach((function(e) {
                            t.attributes.delete(e.key)
                        })) : t.attributes.clear()
                    }
                }, {
                    key: "_hasLocalGroupAttributes",
                    value: function(e) {
                        return this._groupAttributesMap.has(e)
                    }
                }, {
                    key: "_getLocalGroupAttributes",
                    value: function(e) {
                        return this._hasLocalGroupAttributes(e) || this.initGroupAttributesCache({
                            groupID: e
                        }), this._groupAttributesMap.get(e)
                    }
                }, {
                    key: "_transformGroupAttributes",
                    value: function(e) {
                        var t = [];
                        return Object.keys(e).forEach((function(n) {
                            t.push({
                                key: n,
                                value: e[n]
                            })
                        })), t
                    }
                }, {
                    key: "_emitGroupAttributesUpdated",
                    value: function(e) {
                        var t = this._getCachedAttributes({
                                groupID: e
                            }),
                            n = (o = this._computeAttrChangedInfo(t)).updatedKeyList,
                            o = o.deletedKeyList;
                        Oe.l("".concat(this._n, "._emitGroupAttributesUpdated update:").concat(n.length, ", delete:").concat(o.length)), 0 === n.length && 0 === o.length || this._grpM.emitOEvt(D.GROUP_ATTRIBUTES_UPDATED, {
                            groupID: e,
                            groupAttributes: t,
                            updatedKeyList: n,
                            deletedKeyList: o
                        })
                    }
                }, {
                    key: "_computeAttrChangedInfo",
                    value: function(e) {
                        var t = this,
                            n = [],
                            o = [];
                        return Object.keys(e).forEach((function(o) {
                            e[o] !== t._groupAttributesCopy[o] && n.push(o)
                        })), Object.keys(this._groupAttributesCopy).forEach((function(t) {
                            ut(e[t]) && o.push(t)
                        })), this._groupAttributesCopy = {}, {
                            updatedKeyList: n,
                            deletedKeyList: o
                        }
                    }
                }, {
                    key: "deleteLocalGroupAttributes",
                    value: function(e) {
                        this._hasLocalGroupAttributes(e) && this._groupAttributesMap.delete(e)
                    }
                }, {
                    key: "reset",
                    value: function() {
                        this._groupAttributesMap.clear(), this._groupAttributesCopy = {}, this.CACHE_EXPIRE_TIME = 3e4
                    }
                }]), Ji),
                pi = (s(ji, [{
                    key: "_onCloudConfig",
                    value: function() {
                        var e = this._grpM.getCloudConfig("grp_counter_expire_time");
                        ut(e) || (this.EXPIRE_TIME = Number(e))
                    }
                }, {
                    key: "isGroupCountersNotice",
                    value: function(e) {
                        var t = e.to,
                            n = !1;
                        return He(e = e.elements.groupCounterInfo) || (this._onGroupCountersUpdated({
                            groupID: t,
                            groupCounterInfo: e
                        }), n = !0), n
                    }
                }, {
                    key: "_onGroupCountersUpdated",
                    value: function(e) {
                        var t = this,
                            n = e.groupID;
                        e.groupCounterInfo.forEach((function(e) {
                            var o = e.type,
                                i = e.groupCounterSeq;
                            e = void 0 === (e = e.counterList) ? [] : e, 0 !== o && 2 !== o || (t._updateLocalGroupCounters({
                                groupID: n,
                                groupCounterSeq: i,
                                counterList: e
                            }), e.forEach((function(e) {
                                t._grpM.emitOEvt(D.GROUP_COUNTER_UPDATED, {
                                    groupID: n,
                                    key: e.key,
                                    value: e.value
                                })
                            }))), 1 === o && t._deleteLocalGroupCounters({
                                groupID: n,
                                groupCounterSeq: i,
                                counterList: e
                            })
                        })), Oe.l("".concat(this._n, "._onGroupCountersUpdated groupID:").concat(n))
                    }
                }, {
                    key: "initGroupCountersCache",
                    value: function(e) {
                        var t = e.groupID;
                        e = e.avChatRoomKey, this._groupCountersMap.set(t, {
                            lastUpdateTime: 0,
                            groupCounterSeq: 0,
                            counters: new Map,
                            avChatRoomKey: e
                        }), Oe.l("".concat(this._n, ".initGroupCountersCache groupID:").concat(t, " avChatRoomKey:").concat(e))
                    }
                }, {
                    key: "setGroupCounters",
                    value: function(e) {
                        if (!this._grpM.canIUse(U.GRP_COUNTER)) return this._grpM.noUse("setGroupCounters");
                        var t = "".concat(this._n, ".").concat("setGroupCounters"),
                            n = e.groupID,
                            o = (e = e.counters, e = this._convertObjectToList(e), this._getLocalGroupCounters(n).avChatRoomKey),
                            i = "groupID:".concat(n, " count:").concat(e.length),
                            a = new Qn("setGroupCounters");
                        return a.setMessage("".concat(i)), Oe.l("".concat(t, ". ").concat(i)), this._updateGroupCounters({
                            groupID: n,
                            counterList: e,
                            avChatRoomKey: o,
                            mode: "Set"
                        }).then((function(e) {
                            return a.end(), Oe.l("".concat(t, " ok.")), vn({
                                counters: e
                            })
                        })).catch((function(e) {
                            return a.setError(e).end(), Oe.e("".concat(t, " failed. error:"), e), Mn(e)
                        }))
                    }
                }, {
                    key: "increaseGroupCounter",
                    value: function(e) {
                        var t = "increaseGroupCounter";
                        if (!this._grpM.canIUse(U.GRP_COUNTER)) return this._grpM.noUse(t);
                        var n = "".concat(this._n, ".").concat(t),
                            o = e.groupID,
                            i = e.key,
                            a = (e = e.value, this._getLocalGroupCounters(o).avChatRoomKey),
                            s = "groupID:".concat(o, " key:").concat(i, " value:").concat(e),
                            r = new Qn(t);
                        return r.setMessage("".concat(s)), Oe.l("".concat(n, ". ").concat(s)), this._updateGroupCounters({
                            groupID: o,
                            counterList: [{
                                key: i,
                                value: e
                            }],
                            avChatRoomKey: a,
                            mode: "Increase"
                        }).then((function(e) {
                            return r.end(), Oe.l("".concat(n, " ok.")), vn({
                                counters: e
                            })
                        })).catch((function(e) {
                            return r.setError(e).end(), Oe.e("".concat(n, " failed. error:"), e), Mn(e)
                        }))
                    }
                }, {
                    key: "decreaseGroupCounter",
                    value: function(e) {
                        var t = "decreaseGroupCounter";
                        if (!this._grpM.canIUse(U.GRP_COUNTER)) return this._grpM.noUse(t);
                        var n = "".concat(this._n, ".").concat(t),
                            o = e.groupID,
                            i = e.key,
                            a = (e = e.value, this._getLocalGroupCounters(o).avChatRoomKey),
                            s = "groupID:".concat(o, " key:").concat(i, " value:").concat(e),
                            r = new Qn(t);
                        return r.setMessage("".concat(s)), Oe.l("".concat(n, ". ").concat(s)), this._updateGroupCounters({
                            groupID: o,
                            counterList: [{
                                key: i,
                                value: e
                            }],
                            avChatRoomKey: a,
                            mode: "Decrease"
                        }).then((function(e) {
                            return r.end(), Oe.l("".concat(n, " ok.")), vn({
                                counters: e
                            })
                        })).catch((function(e) {
                            return r.setError(e).end(), Oe.e("".concat(n, " failed. error:"), e), Mn(e)
                        }))
                    }
                }, {
                    key: "getGroupCounters",
                    value: function(e) {
                        var t = this;
                        if (!this._grpM.canIUse(U.GRP_COUNTER)) return this._grpM.noUse("getGroupCounters");
                        var n = "".concat(this._n, ".").concat("getGroupCounters"),
                            o = e.groupID,
                            i = void 0 === (e = e.keyList) ? [] : e,
                            a = (e = this._getLocalGroupCounters(o)).avChatRoomKey,
                            s = (e = e.lastUpdateTime, new Qn("getGroupCounters"));
                        return s.setMessage("groupID:".concat(o)), Date.now() - e >= this.EXPIRE_TIME ? this._getRemoteGroupCounters({
                            groupID: o,
                            avChatRoomKey: a
                        }).then((function(e) {
                            return s.setMoreMessage("from remote. count:".concat(e.length)).end(), Oe.l("".concat(n, " from remote. groupID:").concat(o)), vn({
                                counters: e = t._getLocalCounters(o, i)
                            })
                        })).catch((function(e) {
                            return s.setError(e).end(), Mn(e)
                        })) : (s.setMoreMessage("from cache").end(), Oe.l("".concat(n, " from cache. groupID:").concat(o)), In({
                            counters: e = this._getLocalCounters(o, i)
                        }))
                    }
                }, {
                    key: "_getRemoteGroupCounters",
                    value: function(e) {
                        var n = this;
                        return this._grpM.req({
                            P: wn.GET_GRP_COUNTER,
                            data: t({}, e)
                        }).then((function(t) {
                            var o = void 0 === (o = (t = t.data).counterList) ? [] : o;
                            return t = t.groupCounterSeq, n._updateLocalGroupCounters({
                                groupID: e.groupID,
                                counterList: o,
                                groupCounterSeq: t
                            }), Oe.l("".concat(n._n, "._getRemoteGroupCounters ok. groupID:").concat(e.groupID)), o
                        })).catch((function(e) {
                            return Mn(e)
                        }))
                    }
                }, {
                    key: "_convertObjectToList",
                    value: function(e) {
                        var t = [];
                        return Object.keys(e).forEach((function(n) {
                            t.push({
                                key: n,
                                value: e[n]
                            })
                        })), t
                    }
                }, {
                    key: "_updateGroupCounters",
                    value: function(e) {
                        var n = "".concat(this._n, "._updateGroupCounters"),
                            o = e.groupID,
                            i = e.avChatRoomKey,
                            a = e.mode;
                        return Oe.l("".concat(n, ". groupID:").concat(o, " avChatRoomKey:").concat(i, " mode:").concat(a)), this._grpM.req({
                            P: wn.UPDATE_GRP_COUNTER,
                            data: t({}, e)
                        }).then((function(e) {
                            Oe.l("".concat(n, " ok.")), e = e.data.counterList;
                            var t = {};
                            return (void 0 === e ? [] : e).forEach((function(e) {
                                var n = e.key;
                                e = e.value, t[n] = e
                            })), t
                        })).catch((function(e) {
                            return Mn(e)
                        }))
                    }
                }, {
                    key: "_hasLocalGroupCounters",
                    value: function(e) {
                        return this._groupCountersMap.has(e)
                    }
                }, {
                    key: "_getLocalGroupCounters",
                    value: function(e) {
                        return this._hasLocalGroupCounters(e) || this.initGroupCountersCache({
                            groupID: e
                        }), this._groupCountersMap.get(e)
                    }
                }, {
                    key: "_updateLocalGroupCounters",
                    value: function(e) {
                        var t, n, o, i = e.groupID,
                            a = void 0 === (a = e.counterList) ? [] : a;
                        e = e.groupCounterSeq, this._hasLocalGroupCounters(i) && (o = this._getLocalGroupCounters(i), t = o.counters, n = o.avChatRoomKey, o = o.groupCounterSeq, 0 < e && e < o || (a.forEach((function(e) {
                            var n = e.key;
                            e = e.value, t.set(n, e)
                        })), this._groupCountersMap.set(i, {
                            lastUpdateTime: Date.now(),
                            groupCounterSeq: e,
                            counters: t,
                            avChatRoomKey: n
                        })))
                    }
                }, {
                    key: "_deleteLocalGroupCounters",
                    value: function(e) {
                        var t, n, o = e.groupID,
                            i = void 0 === (i = e.counterList) ? [] : i;
                        e = e.groupCounterSeq, this._hasLocalGroupCounters(o) && (n = this._getLocalGroupCounters(o), t = n.counters, n = n.avChatRoomKey, i.forEach((function(e) {
                            t.delete(e.key)
                        })), this._groupCountersMap.set(o, {
                            lastUpdateTime: Date.now(),
                            groupCounterSeq: e,
                            counters: t,
                            avChatRoomKey: n
                        }))
                    }
                }, {
                    key: "_getLocalCounters",
                    value: function(e, t) {
                        var n = {};
                        if (!this._hasLocalGroupCounters(e)) return n;
                        var o = this._getLocalGroupCounters(e).counters;
                        if (0 < t.length) t.forEach((function(e) {
                            o.has(e) && (n[e] = o.get(e))
                        }));
                        else {
                            var i, a = T(o.keys());
                            try {
                                for (a.s(); !(i = a.n()).done;) {
                                    var s = i.value;
                                    n[s] = o.get(s)
                                }
                            } catch (e) {
                                a.e(e)
                            } finally {
                                a.f()
                            }
                        }
                        return n
                    }
                }, {
                    key: "reset",
                    value: function() {
                        this._groupCountersMap.clear(), this.EXPIRE_TIME = 3e4
                    }
                }]), ji),
                _i = (s(Wi, [{
                    key: "start",
                    value: function() {
                        var e = this._grpM.isLoggedIn();
                        e || (this._proto = wn.AV_NOAUTH_POLLING), Oe.l("".concat(this._n, ".start pollingInterval:").concat(this._manager.getPollingInterval(), " isLoggedIn:").concat(e)), this._isRunning = !0, this._request()
                    }
                }, {
                    key: "isRunning",
                    value: function() {
                        return this._isRunning
                    }
                }, {
                    key: "_request",
                    value: function() {
                        var e = this,
                            t = this._onInit(this._groupID);
                        this._grpM.req({
                            P: this._proto,
                            data: t
                        }).then((function(t) {
                            e._onSuccess(e._groupID, t), e.isRunning() && (clearTimeout(e._timeoutID), e._timeoutID = setTimeout(e._request.bind(e), e._manager.getPollingInterval()))
                        })).catch((function(t) {
                            e._onFail(e._groupID, t), e.isRunning() && (clearTimeout(e._timeoutID), e._timeoutID = setTimeout(e._request.bind(e), e._manager.MAX_POLLING_INTERVAL))
                        }))
                    }
                }, {
                    key: "stop",
                    value: function() {
                        Oe.l("".concat(this._n, ".stop")), 0 < this._timeoutID && (clearTimeout(this._timeoutID), this._timeoutID = -1), this._isRunning = !1
                    }
                }, {
                    key: "getPollingTimerID",
                    value: function() {
                        return this._timeoutID
                    }
                }]), Wi),
                hi = {
                    3: !0,
                    4: !0,
                    5: !0,
                    6: !0,
                    17: !0,
                    20: !0,
                    21: !0,
                    100: !0
                },
                gi = (s(Yi, [{
                    key: "hasJoinedAVChatRoom",
                    value: function() {
                        var e = [];
                        return 0 < (e = 0 < this._joinedGroupMap.size ? m(this._joinedGroupMap.values()).filter((function(e) {
                            return e.type === E.GRP_AVCHATROOM
                        })) : e).length
                    }
                }, {
                    key: "getJoinedLiveList",
                    value: function() {
                        var e = [];
                        return 0 < this._joinedGroupMap.size ? m(this._joinedGroupMap.values()).filter((function(e) {
                            return e.type === E.GRP_LIVE
                        })) : e
                    }
                }, {
                    key: "checkJoinedAVChatRoomByID",
                    value: function(e) {
                        return this._joinedGroupMap.has(e)
                    }
                }, {
                    key: "getJoinedAVChatRoom",
                    value: function() {
                        return 0 < this._joinedGroupMap.size ? m(this._joinedGroupMap.keys()) : []
                    }
                }, {
                    key: "_updatedata",
                    value: function(e) {
                        var n = this._pollingRequestInfoMap.get(e);
                        return e === m(this._pollingInstanceMap.keys())[0] ? t(t({}, n), {}, {
                            startBroadcastSeq: this._startBroadcastSeq,
                            simplifiedMessage: this.DEFAULT_POLLING_SIMPLIFIED_MSG
                        }) : t(t({}, n), {}, {
                            simplifiedMessage: this.DEFAULT_POLLING_SIMPLIFIED_MSG
                        })
                    }
                }, {
                    key: "_handleSuccess",
                    value: function(e, t) {
                        var n, o = (c = t.data).key,
                            i = c.nextSeq,
                            a = c.rspMsgList,
                            s = c.errorCode,
                            r = c.nextBroadcastSeq,
                            c = c.broadcastMessageList;
                        0 !== s ? (s = this._pollingRequestInfoMap.get(e), n = new Qn("longPollingAVError"), s = s ? "".concat(s.key, "-").concat(s.startSeq) : "requestInfo is undefined", n.setMessage("".concat(e, "-").concat(s, "-").concat(t.errorInfo)).setCode(t.errorCode).end(!0)) : this.checkJoinedAVChatRoomByID(e) && (ct(o) && Ye(i) && this._pollingRequestInfoMap.set(e, {
                            key: o,
                            startSeq: i
                        }), Ye(r) && r > this._startBroadcastSeq && (this._startBroadcastSeq = r), Je(a) && 0 < a.length ? (a.forEach((function(e) {
                            e.to = e.groupID
                        })), this.onMessage(a, e)) : (this._pollingNoMessageCount += 1, this._pollingNoMessageCount === this.DEFAULT_POLLING_NO_MESSAGE_COUNT && (this._pollingInterval = this.DEFAULT_POLLING_INTERVAL + this.DEFAULT_POLLING_INTERVAL_PLUS)), this._onBroadcastMessage(c))
                    }
                }, {
                    key: "_handleFailure",
                    value: function(e, t) {}
                }, {
                    key: "onMessage",
                    value: function(e, t) {
                        if (Je(e) && 0 !== e.length) {
                            var n = "".concat(this._n, ".onMessage"),
                                o = (t && (n += " groupID:".concat(t)), 0 !== this._pollingNoMessageCount && (this._pollingNoMessageCount = 0, this._pollingInterval = this.DEFAULT_POLLING_INTERVAL), null),
                                i = [],
                                a = this._get(11),
                                s = this._get(26),
                                r = e.length,
                                c = (1 < r && e.sort((function(e, t) {
                                    return e.sequence - t.sequence
                                })), this._get(12).isUnlimitedAVChatRoom()),
                                u = !1;
                            Oe.getLevel() <= 0 && (t = e.map((function(e) {
                                return e.sequence
                            })), Oe.l("".concat(n, " count:").concat(t.length, " sequenceList:").concat(t)), t.length = 0);
                            for (var l = 0; l < r; l++) {
                                var d = this.restoreMessageFromSimplified(e[l]);
                                if (hi[d.event]) {
                                    if (6 === d.event) {
                                        if (this._grpM.isGroupAttributesUpdatedNotice(d)) continue;
                                        if (this._grpM.isGroupCountersNotice(d)) continue
                                    }
                                    if (20 !== d.event)
                                        if (21 !== d.event)
                                            if (100 !== d.event) {
                                                o = this.packMessage(d, d.event);
                                                var p = 1 === d.isModified;
                                                if (u = 1 === d.isHistoryMessage, !c) {
                                                    if (this._seqSll.has(o.sequence)) continue;
                                                    this._seqSll.set(o.sequence)
                                                }
                                                var _ = this._IDSll.has(o.ID);
                                                _ ? Oe.w("".concat(n, " ID:").concat(o.ID, " has:").concat(_)) : (this._IDSll.set(o.ID), _ = !1, !u && this._isMessageSentByCurrentInstance(o) ? p && (_ = !0, o.isModified = p, a.updateMsgIsModifiedProp(o)) : _ = !0, _ && (o.conversationType === E.CONV_SYSTEM && 5 === o.payload.operationType && this._onGroupDismissed(o.payload.groupProfile.groupID), u || o.conversationType === E.CONV_SYSTEM || (p = o.conversationID.replace(E.CONV_GROUP, ""), this._pollingInstanceMap.has(p) ? this._grpM.isLoggedIn() && s.addMessageSequence({
                                                    key: jn,
                                                    message: o
                                                }) : (o.type !== E.MSG_GRP_TIP && 0 < o.clientTime && s.addMessageDelay(o.clientTime), s.addMessageSequence({
                                                    key: Wn,
                                                    message: o
                                                }))), i.push(o)))
                                            } else this.onRoomCustomData(d);
                                    else this._get(34).onMessageReactionNotify({
                                        event: 21,
                                        dataList: d.elements.messageReactionNotifyList
                                    });
                                    else this.handleMessageRevokedNotice(d)
                                } else Oe.w("".concat(n, ". unknown event:").concat(d.event))
                            }
                            0 !== i.length && (0 < (t = vt(i)).length && this._grpM.emitOEvt(D.MESSAGE_MODIFIED, t), u || 0 < (t = this.packConversationOption(i)).length && a.onNewMessage({
                                conversationOptionsList: t,
                                isInstantMessage: !0
                            }), this._checkMessageStacked(i), 0 < (t = It(i)).length && this._grpM.emitOEvt(D.MESSAGE_RECEIVED, t), i.length = 0)
                        }
                    }
                }, {
                    key: "handleMessageRevokedNotice",
                    value: function(e) {
                        var t = this,
                            n = e.groupID,
                            o = e.elements.revokeMsgList,
                            i = e.revokerInfo,
                            a = [];
                        o.forEach((function(e) {
                            var t = e.tinyID,
                                o = e.clientTime,
                                s = e.random;
                            e = e.sequence, t = {
                                conversationID: "".concat(E.CONV_GROUP).concat(n),
                                ID: "".concat(t, "-").concat(o, "-").concat(s),
                                revoker: i.revoker,
                                revokeReason: i.reason || "",
                                revokerInfo: {
                                    userID: i.revoker,
                                    nick: "",
                                    avatar: ""
                                },
                                sequence: e
                            }, a.push(t)
                        })), 0 !== a.length && this._get(11).updateRevokerInfo(a).then((function(e) {
                            t._grpM.emitOEvt(D.MESSAGE_REVOKED, e)
                        }))
                    }
                }, {
                    key: "isBroadcastOrNormal",
                    value: function(e) {
                        return 3 === e || 17 === e
                    }
                }, {
                    key: "isGroupTip",
                    value: function(e) {
                        return 4 === e || 6 === e
                    }
                }, {
                    key: "isGroupSystemNotice",
                    value: function(e) {
                        return 5 === e
                    }
                }, {
                    key: "restoreGroupTipElements",
                    value: function() {
                        var e = 0 < arguments.length && void 0 !== arguments[0] ? arguments[0] : {},
                            t = void 0 === (t = e.operatorInfo) ? {} : t,
                            n = e.operatorID,
                            o = void 0 === (o = e.userIDList) ? [] : o,
                            i = e.operationType,
                            a = (Ye(e.groupJoinType) || 1 !== i && 2 !== i || (e.groupJoinType = 2 === i ? 0 : 1), i = t.userID, t.avatar);
                        return t = t.nick, e.operatorInfo = {
                            userID: void 0 === i ? n : i,
                            avatar: void 0 === a ? "" : a,
                            nick: void 0 === t ? "" : t
                        }, n = o.map((function(e) {
                            return {
                                userID: e
                            }
                        })), e.memberInfoList = e.memberInfoList || n, e
                    }
                }, {
                    key: "restoreMessageFromSimplified",
                    value: function(e) {
                        var n, o, i, a = e.event;
                        return this.isBroadcastOrNormal(a) && (e.cloudCustomData = e.cloudCustomData || "", e.elements = e.elements.map((function(e) {
                            var n;
                            return e.type === E.MSG_CUSTOM && (n = e.content, e.content = t({
                                data: "",
                                description: "",
                                extension: ""
                            }, void 0 === n ? {} : n)), e
                        }))), (this.isGroupTip(a) || this.isGroupSystemNotice(a)) && (e.from = e.from || "@TIM#SYSTEM"), this.isGroupTip(a) && (e.elements = this.restoreGroupTipElements(e.elements), o = (i = void 0 === (i = e.elements) ? {} : i).operationType, n = i.operatorInfo, 1 === o && (o = [{
                            userID: (void 0 === n ? {} : n).userID
                        }], i.memberInfoList = i.memberInfoList || o)), this.isGroupSystemNotice(a) && (i = (n = e.elements).memberInfoList, o = n.operatorInfo, e.elements.memberInfoList = t({
                            userID: e.elements.operatorID,
                            avatar: "",
                            nick: ""
                        }, i = i || (void 0 === o ? {} : o)), e.elements = t({
                            authentication: "",
                            remarkInfo: "",
                            messageKey: 1e3 * e.time
                        }, e.elements), a = Object.keys(e.elements).filter((function(e) {
                            return "operatorInfo" !== e
                        })).reduce((function(n, o) {
                            return t(t({}, n), {}, r({}, o, e.elements[o]))
                        }), {}), e.elements = a), e
                    }
                }, {
                    key: "_onGroupDismissed",
                    value: function(e) {
                        Oe.l("".concat(this._n, "._onGroupDismissed groupID:").concat(e)), this._grpM.deleteLocalGroupAndConversation(e), this.reset(e)
                    }
                }, {
                    key: "_checkMessageStacked",
                    value: function(e) {
                        var t = "MessageStacked";
                        100 <= (e = e.length) && (this._grpM.warn(t, e), this._reportMessageStackedCount < 5 && (new Qn(t).setMessage("count:".concat(e, " groupID:").concat(m(this._joinedGroupMap.keys()))).setLevel("warning").end(), this._reportMessageStackedCount += 1))
                    }
                }, {
                    key: "_isMessageSentByCurrentInstance",
                    value: function(e) {
                        return !!this._get(11).isMessageSentByCurrentInstance(e)
                    }
                }, {
                    key: "packMessage",
                    value: function(e, t) {
                        e.currentUser = this._grpM.getMyUserID(), e.conversationType = 5 === t ? E.CONV_SYSTEM : E.CONV_GROUP, e.isSystemMessage = !!e.isSystemMessage;
                        var n = new To(e),
                            o = (e = this.packElements(e, t), t = this._grpM.getFileDownloadProxy(), this._grpM.getDowloadFileAuthKey()),
                            i = this._get(17).getFileDNList();
                        return n.setElement(e, t, o, i), n
                    }
                }, {
                    key: "packElements",
                    value: function(e, n) {
                        return 4 === n || 6 === n ? (this._updateMemberCountByGroupTips(e), {
                            type: E.MSG_GRP_TIP,
                            content: t(t({}, e.elements), {}, {
                                groupProfile: e.groupProfile
                            })
                        }) : 5 === n ? {
                            type: E.MSG_GRP_SYS_NOTICE,
                            content: t(t({}, e.elements), {}, {
                                groupProfile: t(t({}, e.groupProfile), {}, {
                                    groupID: e.groupID
                                })
                            })
                        } : e.elements
                    }
                }, {
                    key: "packConversationOption",
                    value: function(e) {
                        for (var t = new Map, n = 0; n < e.length; n++) {
                            var o, i = e[n],
                                a = i.conversationID;
                            t.has(a) ? "in" === ((o = t.get(a)).lastMessage = i).flow && o.unreadCount++ : t.set(a, {
                                conversationID: i.conversationID,
                                unreadCount: "out" === i.flow ? 0 : 1,
                                type: i.conversationType,
                                subType: i.conversationSubType,
                                lastMessage: i
                            })
                        }
                        return m(t.values())
                    }
                }, {
                    key: "_updateMemberCountByGroupTips",
                    value: function(e) {
                        var t, n, o, i = e.groupProfile.groupID;
                        He(e = void 0 === (e = e.elements.onlineMemberInfo) ? void 0 : e) || (t = void 0 === (t = e.onlineMemberNum) ? 0 : t, e = void 0 === (e = e.expireTime) ? this.DEFAULT_EXPIRE_TIME : e, n = this._onlineMemberCountMap.get(i) || {}, o = Date.now(), He(n) ? Object.assign(n, {
                            lastReqTime: 0,
                            lastSyncTime: 0,
                            latestUpdateTime: o,
                            memberCount: t,
                            expireTime: e
                        }) : (n.latestUpdateTime = o, n.memberCount = t), this._onlineMemberCountMap.set(i, n))
                    }
                }, {
                    key: "_onBroadcastMessage",
                    value: function(e) {
                        if (!He(e)) {
                            for (var t = [], n = e.length, o = null, i = 0; i < n; i++) {
                                var a = this.restoreMessageFromSimplified(e[i]);
                                hi[a.event] ? ((o = this.packMessage(a, a.event)).isBroadcastMessage = !0, this._broadcastMessageIDMap.has(o.ID) || (t.push(o), this._broadcastMessageIDMap.set(o.ID, 1))) : Oe.w("".concat(this._n, "._onBroadcastMessage unknown event:").concat(a.event))
                            }
                            0 < t.length && this._grpM.emitOEvt(D.MESSAGE_RECEIVED, t)
                        }
                    }
                }, {
                    key: "start",
                    value: function(e) {
                        var t;
                        this._pollingInstanceMap.has(e) ? (t = this._pollingInstanceMap.get(e)).isRunning() || t.start() : ((t = new _i({
                            manager: this,
                            groupID: e,
                            onInit: this._updatedata.bind(this),
                            onSuccess: this._handleSuccess.bind(this),
                            onFail: this._handleFailure.bind(this)
                        })).start(), this._pollingInstanceMap.set(e, t), Oe.l("".concat(this._n, ".start groupID:").concat(e)))
                    }
                }, {
                    key: "handleJoinResult",
                    value: function(e) {
                        var t = this;
                        return this._preCheck(e.group).then((function() {
                            var n = e.longPollingKey,
                                o = e.group,
                                i = o.groupID;
                            return t._joinedGroupMap.set(i, o), t._grpM.updateGroupMap([o]), t._grpM.deleteUnjoinedAVChatRoom(i), t._grpM.emitGroupListUpdate(!0, !1), ut(n) ? In({
                                status: Fe,
                                group: o
                            }) : Promise.resolve()
                        }))
                    }
                }, {
                    key: "startRunLoop",
                    value: function(e) {
                        var t = this;
                        return this.handleJoinResult(e).then((function() {
                            var n = e.longPollingKey,
                                o = e.group,
                                i = e.startSeq,
                                a = o.groupID;
                            return t._pollingRequestInfoMap.set(a, {
                                key: n,
                                startSeq: void 0 === i ? 0 : i
                            }), t.start(a), t._grpM.isLoggedIn() ? In({
                                status: Fe,
                                group: o
                            }) : In({
                                status: Fe
                            })
                        }))
                    }
                }, {
                    key: "_preCheck",
                    value: function(e) {
                        if (this._get(12).isUnlimitedAVChatRoom()) return Promise.resolve();
                        if (!this.hasJoinedAVChatRoom()) return Promise.resolve();
                        if (e.type === E.GRP_LIVE) return Promise.resolve();
                        var t = (e = f(this._joinedGroupMap.entries().next().value, 2))[0];
                        if (e = e[1], this._grpM.isLoggedIn()) {
                            if (e.selfInfo.role !== E.GRP_MBR_ROLE_OWNER && e.ownerID !== this._grpM.getMyUserID()) return this._grpM.quitGroup(t);
                            this._grpM.deleteLocalGroupAndConversation(t)
                        } else this._grpM.deleteLocalGroupAndConversation(t);
                        return this.reset(t), Promise.resolve()
                    }
                }, {
                    key: "joinWithoutAuth",
                    value: function(e) {
                        var t = this,
                            n = e.groupID,
                            o = "".concat(this._n, ".").concat("joinWithoutAuth"),
                            i = new Qn("joinWithoutAuth");
                        return this._grpM.req({
                            P: wn.APPLY_JOIN_GRP_NOAUTH,
                            data: e
                        }).then((function(e) {
                            if (e = e.data.longPollingKey, i.setMessage("groupID:".concat(n, " longPollingKey:").concat(e)).end(!0), ut(e)) return Mn({
                                code: Un.CANNOT_JOIN_NON_AV_WITHOUT_LOGIN
                            });
                            Oe.l("".concat(o, " ok. groupID:").concat(n)), t._get(11).setCompleted("".concat(E.CONV_GROUP).concat(n));
                            var a = new oi({
                                groupID: n
                            });
                            return t.startRunLoop({
                                group: a,
                                longPollingKey: e
                            }), vn({
                                status: Fe
                            })
                        })).catch((function(e) {
                            return Oe.e("".concat(o, " failed. groupID:").concat(n, " error:"), e), i.setError(e).setMessage("groupID:".concat(n)).end(!0), Mn(e)
                        })).finally((function() {
                            t._grpM.get(14).reportAtOnce()
                        }))
                    }
                }, {
                    key: "getGroupOnlineMemberCount",
                    value: function(e) {
                        var t = this._onlineMemberCountMap.get(e) || {},
                            n = Date.now();
                        return He(t) || n - t.lastSyncTime > 1e3 * t.expireTime && 1e4 < n - t.latestUpdateTime && 3e3 < n - t.lastReqTime ? (t.lastReqTime = n, this._onlineMemberCountMap.set(e, t), this._getGroupOnlineMemberCount(e).then((function(e) {
                            return vn({
                                memberCount: e.memberCount
                            })
                        })).catch((function(e) {
                            return Mn(e)
                        }))) : In({
                            memberCount: t.memberCount
                        })
                    }
                }, {
                    key: "_getGroupOnlineMemberCount",
                    value: function(e) {
                        var t = this,
                            n = "".concat(this._n, ".").concat("_getGroupOnlineMemberCount"),
                            o = new Qn("_getGroupOnlineMemberCount");
                        return this._grpM.requestOnlineCount(e).then((function(o) {
                            var i = t._onlineMemberCountMap.get(e) || {},
                                a = void 0 === (a = (o = o.data).memberCount) ? 0 : a,
                                s = (o = void 0 === (o = o.expireTime) ? t.DEFAULT_EXPIRE_TIME : o, Oe.l("".concat(n, " ok. groupID:").concat(e, " memberCount:").concat(a, " expireTime:").concat(o)), Date.now());
                            return He(i) && (i.lastReqTime = s), t._onlineMemberCountMap.set(e, Object.assign(i, {
                                lastSyncTime: s,
                                latestUpdateTime: s,
                                memberCount: a,
                                expireTime: o
                            })), {
                                memberCount: a
                            }
                        })).catch((function(t) {
                            return Oe.w("".concat(n, " failed. error:"), t), o.setCode(t.code).setMessage("groupID:".concat(e, " error:").concat(JSON.stringify(t))).end(), Promise.reject(t)
                        }))
                    }
                }, {
                    key: "_get",
                    value: function(e) {
                        return this._grpM.get(e)
                    }
                }, {
                    key: "setPollingInterval",
                    value: function(e) {
                        ut(e) || (Ye(e) ? this._pollingInterval = this.DEFAULT_POLLING_INTERVAL = e : this._pollingInterval = this.DEFAULT_POLLING_INTERVAL = parseInt(e, 10))
                    }
                }, {
                    key: "setPollingIntervalPlus",
                    value: function(e) {
                        ut(e) || (Ye(e) ? this.DEFAULT_POLLING_INTERVAL_PLUS = e : this.DEFAULT_POLLING_INTERVAL_PLUS = parseInt(e, 10))
                    }
                }, {
                    key: "setPollingNoMessageCount",
                    value: function(e) {
                        ut(e) || (Ye(e) ? this.DEFAULT_POLLING_NO_MESSAGE_COUNT = e : this.DEFAULT_POLLING_NO_MESSAGE_COUNT = parseInt(e, 10))
                    }
                }, {
                    key: "setPollingSimplifiedMessage",
                    value: function(e) {
                        ut(e) || "0" !== e && "1" !== e || (this.DEFAULT_POLLING_SIMPLIFIED_MSG = parseInt(e, 10))
                    }
                }, {
                    key: "getPollingInterval",
                    value: function() {
                        return this._pollingInterval
                    }
                }, {
                    key: "onAVChatRoomMemberBanned",
                    value: function(e) {
                        e = e.payload.groupProfile.groupID, Oe.l("".concat(this._n, ".onAVChatRoomMemberBanned groupID:").concat(e)), this._grpM.deleteLocalGroupAndConversation(e), this.reset(e)
                    }
                }, {
                    key: "restartPolling",
                    value: function() {
                        Oe.l("".concat(this._n, ".restartPolling count:").concat(this._pollingInstanceMap.size));
                        var e, t = T(this._pollingInstanceMap.values());
                        try {
                            for (t.s(); !(e = t.n()).done;) {
                                var n = e.value;
                                n.stop(), n.start()
                            }
                        } catch (e) {
                            t.e(e)
                        } finally {
                            t.f()
                        }
                    }
                }, {
                    key: "getPollingTimerID",
                    value: function(e) {
                        if (!this._pollingInstanceMap.has(e)) return -1;
                        var t = this._pollingInstanceMap.get(e).getPollingTimerID();
                        return Oe.l("".concat(this._n, ".getPollingTimerID groupID:").concat(e, " timerID:").concat(t)), t
                    }
                }, {
                    key: "hasPollingInstance",
                    value: function(e) {
                        return this._pollingInstanceMap.has(e)
                    }
                }, {
                    key: "onRoomCustomData",
                    value: function(e) {
                        var t = e.groupID,
                            n = e.sequence,
                            o = e.time;
                        e = (e = e.elements) && e.content, this._get(30).onRoomCustomDataReceived(e), Oe.l("".concat(this._n, ".onRoomCustomData groupID:").concat(t, " sequence:").concat(n, " time:").concat(o, " data:").concat(e))
                    }
                }, {
                    key: "reset",
                    value: function(e) {
                        if (e) {
                            Oe.l("".concat(this._n, ".reset groupID:").concat(e));
                            var t = this._pollingInstanceMap.get(e);
                            t && t.stop(), this._pollingInstanceMap.delete(e), this._joinedGroupMap.delete(e), this._pollingRequestInfoMap.delete(e), this._onlineMemberCountMap.delete(e)
                        } else {
                            Oe.l("".concat(this._n, ".reset all"));
                            var n, o = T(this._pollingInstanceMap.values());
                            try {
                                for (o.s(); !(n = o.n()).done;) n.value.stop()
                            } catch (e) {
                                o.e(e)
                            } finally {
                                o.f()
                            }
                            this._pollingInstanceMap.clear(), this._joinedGroupMap.clear(), this._pollingRequestInfoMap.clear(), this._onlineMemberCountMap.clear(), this._broadcastMessageIDMap.clear()
                        }
                        this._seqSll.reset(), this._IDSll.reset(), this._reportMessageStackedCount = 0, this._pollingInterval = this.DEFAULT_POLLING_INTERVAL = 300, this.DEFAULT_POLLING_NO_MESSAGE_COUNT = 20, this.DEFAULT_POLLING_INTERVAL_PLUS = 2e3, this._pollingNoMessageCount = 0
                    }
                }]), Yi),
                fi = (s(Ki, [{
                    key: "updateMember",
                    value: function(e) {
                        ut(e.onlineStatus) || (this.isOnline = "Online" === e.onlineStatus);
                        var t = [null, void 0, "", 0, NaN];
                        e.memberCustomField && mt(this.memberCustomField, e.memberCustomField), Qe(this, e, ["memberCustomField", "marks", "onlineStatus"], t)
                    }
                }, {
                    key: "updateRole",
                    value: function(e) {
                        ["Owner", "Admin", "Member"].indexOf(e) < 0 || (this.role = e)
                    }
                }, {
                    key: "updateMuteUntil",
                    value: function(e) {
                        ut(e) || (this.muteUntil = Math.floor((Date.now() + 1e3 * e) / 1e3))
                    }
                }, {
                    key: "updateNameCard",
                    value: function(e) {
                        ut(e) || (this.nameCard = e)
                    }
                }, {
                    key: "updateMemberCustomField",
                    value: function(e) {
                        e && mt(this.memberCustomField, e)
                    }
                }]), Ki),
                mi = (s(Bi, [{
                    key: "_onProfileUpdated",
                    value: function(e) {
                        for (var t = this, n = e.data, o = 0; o < n.length; o++) ! function(e) {
                            var o = n[e];
                            t.groupMemberListMap.forEach((function(e) {
                                e.has(o.userID) && e.get(o.userID).updateMember({
                                    nick: o.nick,
                                    avatar: o.avatar
                                })
                            }))
                        }(o)
                    }
                }, {
                    key: "deleteGroupMemberList",
                    value: function(e) {
                        this.groupMemberListMap.delete(e)
                    }
                }, {
                    key: "getGroupMemberList",
                    value: function(e) {
                        var t, n = this,
                            o = e.groupID,
                            i = void 0 === (i = e.role) ? void 0 : i,
                            a = void 0 === (c = e.offset) ? 0 : c,
                            s = void 0 === (c = e.count) ? 15 : c,
                            r = (e = void 0 === (c = e.filter) ? void 0 : c, "".concat(this._n, ".").concat("getGroupMemberList")),
                            c = this._grpM.hasLocalGroup(o);
                        if (Oe.l("".concat(r, " groupID:").concat(o, " role:").concat(i, " offset:").concat(a, " count:").concat(s, " hasLocalGroup:").concat(c)), !c) return In({
                            memberList: [],
                            offset: 0
                        });
                        if (this._grpM.getLocalGroupProfile(o).type === E.GRP_AVCHATROOM) {
                            if (this._grpM.canIUse(U.AV_MBR_LIST)) return this._getAVChatRoomMemberList({
                                groupID: o,
                                offset: a,
                                filter: e
                            });
                            this._grpM.warn("LiveOnlineMember")
                        }
                        i !== E.GRP_MBR_ROLE_ADMIN && i !== E.GRP_MBR_ROLE_OWNER && i !== E.GRP_MBR_ROLE_MEMBER || (t = i);
                        var u = new Qn("getGroupMemberList"),
                            l = 0,
                            d = (c = {
                                groupID: o,
                                limit: 100 < s ? 100 : s,
                                memberRoleFilter: t ? [t] : void 0,
                                memberInfoFilter: this.DEFAULT_MEMBER_INFO_FILTER
                            }, yt({
                                groupID: o
                            }) ? c.next = "".concat(a) : (c.offset = a, l = a + s), []);
                        return this._grpM.req({
                            P: wn.GET_GRP_MBR_LIST,
                            data: c
                        }).then((function(e) {
                            var t = (e = e.data).members,
                                i = e.memberNum;
                            return e = e.next, ut(e = void 0 === e ? void 0 : e) || (l = He(e) ? 0 : e), Je(t) && 0 !== t.length ? (n._grpM.hasLocalGroup(o) && (n._grpM.getLocalGroupProfile(o).memberNum = i), d = n._updateLocalGroupMemberMap(o, t), n._grpM.get(4).getUserProfile({
                                userIDList: t.map((function(e) {
                                    return e.userID
                                })),
                                tagList: [Ge.NICK, Ge.AVATAR]
                            })) : (l = 0, Promise.resolve([]))
                        })).then((function(e) {
                            return Je(e = e.data) && 0 !== e.length ? (e = e.map((function(e) {
                                return {
                                    userID: e.userID,
                                    nick: e.nick,
                                    avatar: e.avatar
                                }
                            })), n._updateLocalGroupMemberMap(o, e), d.length < s && (l = 0), u.setMessage("groupID:".concat(o, " offset:").concat(a, " count:").concat(s)).end(), Oe.l("".concat(r, " ok.")), vn({
                                memberList: d,
                                offset: l
                            })) : In({
                                memberList: [],
                                offset: l
                            })
                        })).catch((function(e) {
                            return u.setError(e).end(), Oe.e("".concat(r, " failed. error:"), e), Mn(e)
                        }))
                    }
                }, {
                    key: "_getAVChatRoomMemberList",
                    value: function(e) {
                        var n = this,
                            o = e.groupID,
                            i = e.offset,
                            a = (e = e.filter, "".concat(this._n, ".").concat("_getAVChatRoomMemberList")),
                            s = new Qn("_getAVChatRoomMemberList");
                        return s.setMessage("groupID:".concat(o, " offset:").concat(i, " filter:").concat(e)), this._grpM.req({
                            P: wn.GET_AV_MBR_LIST,
                            data: {
                                groupID: o,
                                offset: i,
                                filter: e
                            }
                        }).then((function(e) {
                            var i = void 0 === (i = (e = e.data).memberList) ? [] : i;
                            return e = void 0 === (e = e.offset) ? 0 : e, s.end(), Oe.l("".concat(a, " ok. member count:").concat(i.length, ", next request timestamp:").concat(e)), i = i.map((function(e) {
                                return t(t({}, e), {}, {
                                    onlineStatus: "Online"
                                })
                            })), vn({
                                memberList: i = n._updateLocalGroupMemberMap(o, i),
                                offset: e
                            })
                        })).catch((function(e) {
                            return s.setError(e).end(), Oe.e("".concat(a, " failed. error:"), e), Mn(e)
                        }))
                    }
                }, {
                    key: "getGroupMemberProfile",
                    value: function(e) {
                        var n = this,
                            o = "getGroupMemberProfile",
                            i = "".concat(this._n, ".").concat(o),
                            a = "groupID:".concat(e.groupID),
                            s = (5 < e.userIDList.length ? a += " userIDList.length:".concat(e.userIDList.length) : a += " userIDList:".concat(e.userIDList), Oe.l("".concat(i, " ").concat(a)), 50 < e.userIDList.length && (e.userIDList = e.userIDList.slice(0, 50)), e.groupID),
                            r = e.userIDList;
                        if ((i = this._grpM.getLocalGroupProfile(s)) && Mt(i.type)) return Mn({
                            code: i = Un.OPERATION_NOT_SUPPORTED_IN_AV,
                            message: this._grpM.getErrMsg(i, o)
                        });
                        var c = new Qn(o);
                        return c.setMessage(a), this._getGroupMemberProfileAdvance(t(t({}, e), {}, {
                            userIDList: r
                        })).then((function(e) {
                            return Je(e = e.data.members) && 0 !== e.length ? (n._updateLocalGroupMemberMap(s, e), n._grpM.get(4).getUserProfile({
                                userIDList: e.map((function(e) {
                                    return e.userID
                                })),
                                tagList: [Ge.NICK, Ge.AVATAR]
                            })) : In([])
                        })).then((function(e) {
                            return e = e.data.map((function(e) {
                                return {
                                    userID: e.userID,
                                    nick: e.nick,
                                    avatar: e.avatar
                                }
                            })), n._updateLocalGroupMemberMap(s, e), e = r.filter((function(e) {
                                return n.hasLocalGroupMember(s, e)
                            })).map((function(e) {
                                return n.getLocalGroupMemberInfo(s, e)
                            })), c.end(), vn({
                                memberList: e
                            })
                        }))
                    }
                }, {
                    key: "addGroupMember",
                    value: function(e) {
                        var t = this,
                            n = "".concat(this._n, ".").concat("addGroupMember"),
                            o = e.groupID,
                            i = this._grpM.getLocalGroupProfile(o),
                            a = i.type,
                            s = new Qn("addGroupMember");
                        return s.setMessage("groupID:".concat(o, " groupType:").concat(a)), Mt(a) ? (a = new Pn({
                            code: Un.CANNOT_ADD_MEMBER_IN_AV
                        }), s.setError(a).end(), Mn(a)) : (e.userIDList = e.userIDList.map((function(e) {
                            return {
                                userID: e
                            }
                        })), Oe.l("".concat(n, " groupID:").concat(o)), this._grpM.req({
                            P: wn.ADD_GRP_MBR,
                            data: e
                        }).then((function(o) {
                            o = o.data.members;
                            var a = (Oe.l("".concat(n, " ok")), o.filter((function(e) {
                                    return 1 === e.result
                                })).map((function(e) {
                                    return e.userID
                                }))),
                                r = o.filter((function(e) {
                                    return 0 === e.result
                                })).map((function(e) {
                                    return e.userID
                                })),
                                c = o.filter((function(e) {
                                    return 2 === e.result
                                })).map((function(e) {
                                    return e.userID
                                })),
                                u = (o = o.filter((function(e) {
                                    return 4 === e.result
                                })).map((function(e) {
                                    return e.userID
                                })), "groupID:".concat(e.groupID, ", ") + "successUserIDList:".concat(a, ", ") + "failureUserIDList:".concat(r, ", ") + "existedUserIDList:".concat(c, ", ") + "overLimitUserIDList:".concat(o));
                            return s.setMoreMessage(u).end(), 0 === a.length ? vn({
                                successUserIDList: a,
                                failureUserIDList: r,
                                existedUserIDList: c,
                                overLimitUserIDList: o
                            }) : (t._updateConvGroupProfile(i), vn({
                                successUserIDList: a,
                                failureUserIDList: r,
                                existedUserIDList: c,
                                overLimitUserIDList: o,
                                group: i
                            }))
                        })).catch((function(e) {
                            return s.setError(e).end(), Oe.e("".concat(n, " failed. error:"), e), Mn(e)
                        })))
                    }
                }, {
                    key: "deleteGroupMember",
                    value: function(e) {
                        var t = this,
                            n = "".concat(this._n, ".").concat("deleteGroupMember"),
                            o = e.groupID,
                            i = e.userIDList,
                            a = this._grpM.getLocalGroupProfile(o);
                        if (ut(a)) return Mn({
                            code: Un.CANNOT_FIND_GRP
                        });
                        if (Mt(a.type)) return this._grpM.canIUse(U.AV_BAN_MBR) ? this._banAVChatRoomMember(e) : this._grpM.noUse("deleteGroupMember");
                        var s = "groupID:".concat(o, " ").concat(5 < i.length ? "userIDList.length:".concat(i.length) : "userIDList:".concat(i)),
                            r = (Oe.l("".concat(n, " groupID:").concat(o, " userIDList:"), i), new Qn("deleteGroupMember"));
                        return r.setMessage(s), this._grpM.req({
                            P: wn.DEL_GRP_MBR,
                            data: e
                        }).then((function() {
                            return r.end(), Oe.l("".concat(n, " ok")), t._updateConvGroupProfile(a), t.deleteLocalGroupMembers(o, i), vn({
                                group: a,
                                userIDList: i
                            })
                        })).catch((function(e) {
                            return r.setError(e).end(), Oe.e("".concat(n, " failed. error:"), e), Mn(e)
                        }))
                    }
                }, {
                    key: "_updateConvGroupProfile",
                    value: function(e) {
                        this._grpM.get(11).updateConvGroupProfile([e])
                    }
                }, {
                    key: "_banAVChatRoomMember",
                    value: function(e) {
                        var t = this,
                            n = "".concat(this._n, ".").concat("_banAVChatRoomMember"),
                            o = e.groupID,
                            i = e.userIDList,
                            a = "groupID:".concat(o, " ").concat(5 < i.length ? "userIDList.length:".concat(i.length) : "userIDList:".concat(i)),
                            s = new Qn("_banAVChatRoomMember"),
                            r = (s.setMessage(a), Oe.l("".concat(n, " groupID:").concat(o, " userIDList:"), i), this._grpM.getLocalGroupProfile(o));
                        return ut(e.duration) || 0 === e.duration ? Mn({
                            code: Un.BAN_DURATION_INVALID
                        }) : this._grpM.req({
                            P: wn.BAN_AV_MBR,
                            data: e
                        }).then((function() {
                            return s.end(), Oe.l("".concat(n, " ok")), t.deleteLocalGroupMembers(o, i), vn({
                                group: r,
                                userIDList: i
                            })
                        })).catch((function(e) {
                            return s.setError(e).end(), Oe.e("".concat(n, " failed. error:"), e), Mn(e)
                        }))
                    }
                }, {
                    key: "setGroupMemberMuteTime",
                    value: function(e) {
                        var t = this,
                            n = e.groupID,
                            o = e.userID,
                            i = (e = e.muteTime, "".concat(this._n, ".").concat("setGroupMemberMuteTime"));
                        if (o === this._grpM.getMyUserID()) return Mn({
                            code: Un.CANNOT_MUTE_SELF
                        });
                        var a = "groupID:".concat(n, " userID:").concat(o, " muteTime:").concat(e),
                            s = (Oe.l("".concat(i, " ").concat(a)), new Qn("setGroupMemberMuteTime"));
                        return s.setMessage(a), this.modifyGroupMemberInfo({
                            groupID: n,
                            userID: o,
                            muteTime: e
                        }).then((function(e) {
                            return s.end(), Oe.l("".concat(i, " ok")), vn({
                                group: t._grpM.getLocalGroupProfile(n),
                                member: e
                            })
                        })).catch((function(e) {
                            return s.setError(e).end(), Oe.e("".concat(i, " failed. error:"), e), Mn(e)
                        }))
                    }
                }, {
                    key: "setGroupMemberRole",
                    value: function(e) {
                        var t = "".concat(this._n, ".").concat("setGroupMemberRole"),
                            n = e.groupID,
                            o = e.userID,
                            i = (e = e.role, "groupID:".concat(n, " userID:").concat(o, " role:").concat(e)),
                            a = this._grpM.getLocalGroupProfile(n);
                        if (!a || a.type === E.GRP_WORK || a.type === E.GRP_AVCHATROOM) return Mn({
                            code: Un.CANNOT_SET_MEMBER_ROLE_IN_WORK_AND_AV
                        });
                        if (a && a.selfInfo.role !== E.GRP_MBR_ROLE_OWNER) return Mn({
                            code: Un.NOT_OWNER
                        });
                        var s = [E.GRP_MBR_ROLE_ADMIN, E.GRP_MBR_ROLE_MEMBER];
                        if (yt({
                                groupID: n
                            }) && s.push(E.GRP_MBR_ROLE_CUSTOM), s.indexOf(e) < 0) return Mn({
                            code: Un.INVALID_MEMBER_ROLE
                        });
                        if (o === this._grpM.getMyUserID()) return Mn({
                            code: Un.CANNOT_SET_SELF_MEMBER_ROLE
                        });
                        var r = new Qn("setGroupMemberRole");
                        return r.setMessage(i), Oe.l("".concat(t, " ").concat(i)), this.modifyGroupMemberInfo({
                            groupID: n,
                            userID: o,
                            role: e
                        }).then((function(e) {
                            return r.end(), Oe.l("".concat(t, " ok")), vn({
                                group: a,
                                member: e
                            })
                        })).catch((function(e) {
                            return r.setError(e).end(), Oe.e("".concat(t, " failed. error:"), e), Mn(e)
                        }))
                    }
                }, {
                    key: "_filterProfanity",
                    value: function(e, t) {
                        if (!(o = this._grpM.get(29))) return !0;
                        var n = (o = o.filterText(t[e], "group_member_profile")).isAllowedToSend,
                            o = o.modifiedText;
                        return !0 === n && (t[e] = o, !0)
                    }
                }, {
                    key: "setGroupMemberNameCard",
                    value: function(e) {
                        var t = this,
                            n = "setGroupMemberNameCard",
                            o = "".concat(this._n, ".").concat(n);
                        if (e.nameCard && !1 === this._filterProfanity("nameCard", e)) return Mn({
                            code: Un.PROFANITY_FOUND
                        });
                        var i = e.groupID,
                            a = void 0 === (r = e.userID) ? this._grpM.getMyUserID() : r,
                            s = e.nameCard,
                            r = "groupID:".concat(i, " userID:").concat(a, " nameCard:").concat(s);
                        if (Oe.l("".concat(o, " ").concat(r)), (e = this._grpM.getLocalGroupProfile(i)) && Mt(e.type)) return Mn({
                            code: e = Un.OPERATION_NOT_SUPPORTED_IN_AV,
                            message: this._grpM.getErrMsg(e, n)
                        });
                        var c = new Qn(n);
                        return c.setMessage(r), this.modifyGroupMemberInfo({
                            groupID: i,
                            userID: a,
                            nameCard: s
                        }).then((function(e) {
                            Oe.l("".concat(o, " ok")), c.end();
                            var n = t._grpM.getLocalGroupProfile(i);
                            return a === t._grpM.getMyUserID() && n && n.setSelfNameCard(s), vn({
                                group: n,
                                member: e
                            })
                        })).catch((function(e) {
                            return c.setError(e).end(), Oe.e("".concat(o, " failed. error:"), e), Mn(e)
                        }))
                    }
                }, {
                    key: "setGroupMemberCustomField",
                    value: function(e) {
                        var t = this,
                            n = "setGroupMemberCustomField",
                            o = "".concat(this._n, ".").concat(n),
                            i = e.groupID,
                            a = void 0 === (a = e.userID) ? this._grpM.getMyUserID() : a,
                            s = (e = e.memberCustomField, "groupID:".concat(i, " userID:").concat(a, " memberCustomField:").concat(JSON.stringify(e))),
                            r = (Oe.l("".concat(o, " ").concat(s)), this._grpM.getLocalGroupProfile(i));
                        if (r && Mt(r.type)) return Mn({
                            code: r = Un.OPERATION_NOT_SUPPORTED_IN_AV,
                            message: this._grpM.getErrMsg(r, n)
                        });
                        var c = new Qn(n);
                        return c.setMessage(s), this.modifyGroupMemberInfo({
                            groupID: i,
                            userID: a,
                            memberCustomField: e
                        }).then((function(e) {
                            return c.end(), Oe.l("".concat(o, " ok")), vn({
                                group: t._grpM.getLocalGroupProfile(i),
                                member: e
                            })
                        })).catch((function(e) {
                            return c.setError(e).end(), Oe.e("".concat(o, " failed. error:"), e), Mn(e)
                        }))
                    }
                }, {
                    key: "modifyGroupMemberInfo",
                    value: function(e) {
                        var n = this,
                            o = e.groupID,
                            i = e.userID,
                            a = void 0;
                        return Ct(o) && (o = wt(a = o)), this._grpM.req({
                            P: wn.MODIFY_GRP_MBR_INFO,
                            data: t(t({}, e), {}, {
                                groupID: o,
                                topicID: a
                            })
                        }).then((function() {
                            if (n.hasLocalGroupMember(o, i)) return t = n.getLocalGroupMemberInfo(o, i), ut(e.muteTime) || t.updateMuteUntil(e.muteTime), ut(e.role) || t.updateRole(e.role), ut(e.nameCard) || t.updateNameCard(e.nameCard), ut(e.memberCustomField) || t.updateMemberCustomField(e.memberCustomField), t;
                            var t = n._grpM.getLocalGroupProfile(o);
                            return t && !Mt(t.type) ? n.getGroupMemberProfile({
                                groupID: o,
                                userIDList: [i]
                            }).then((function(e) {
                                return f(e.data.memberList, 1)[0]
                            })) : void 0
                        }))
                    }
                }, {
                    key: "markGroupMemberList",
                    value: function(e) {
                        var t = "".concat(this._n, ".").concat("markGroupMemberList"),
                            n = e.groupID,
                            o = e.markType,
                            i = e.enableMark,
                            a = void 0 === (e = e.userIDList) ? [] : e,
                            s = (e = "groupID:".concat(n, " markType:").concat(o, " enableMark:").concat(i, " userIDList count:").concat(a.length), Oe.l("".concat(t, " ").concat(e)), 2),
                            r = [],
                            c = (!0 === i && (s = 1), i = m(a), 500 < a.length && (i = a.slice(0, 500), Oe.w("".concat(t, " ").concat(Ht(500)))), i.forEach((function(e) {
                                r.push({
                                    userID: e,
                                    markType: [o]
                                })
                            })), i = null, new Qn("markGroupMemberList"));
                        return c.setMessage(e), this._grpM.req({
                            P: wn.MARK_AV_MBR_INFO,
                            data: {
                                groupID: n,
                                operationType: s,
                                memberList: r
                            }
                        }).then((function(e) {
                            e = e.data.memberList;
                            var n = [],
                                o = [];
                            return (e = void 0 === e ? [] : e).length === a.length ? n.push.apply(n, m(a)) : (e.forEach((function(e) {
                                n.push(e.userID)
                            })), a.forEach((function(e) {
                                n.includes(e) || o.push(e)
                            }))), e = "success count:".concat(n.length, " fail count:").concat(o.length), c.setMessage(e).end(), Oe.l("".concat(t, " ok. ").concat(e)), vn({
                                successUserIDList: n,
                                failureUserIDList: o
                            })
                        })).catch((function(e) {
                            return c.setError(e).end(), Oe.e("".concat(t, " failed. error:"), e), Mn(e)
                        }))
                    }
                }, {
                    key: "_getGroupMemberProfileAdvance",
                    value: function(e) {
                        return this._grpM.req({
                            P: wn.GET_GRP_MBR_PROFILE,
                            data: t(t({}, e), {}, {
                                memberInfoFilter: e.memberInfoFilter || this.DEFAULT_MEMBER_INFO_FILTER
                            })
                        })
                    }
                }, {
                    key: "_updateLocalGroupMemberMap",
                    value: function(e, t) {
                        var n = this;
                        return Je(t) && 0 !== t.length ? t.map((function(t) {
                            return n.hasLocalGroupMember(e, t.userID) ? n.getLocalGroupMemberInfo(e, t.userID).updateMember(t) : n.setLocalGroupMember(e, new fi(t)), n.getLocalGroupMemberInfo(e, t.userID)
                        })) : []
                    }
                }, {
                    key: "deleteLocalGroupMembers",
                    value: function(e, t) {
                        var n = this.groupMemberListMap.get(e);
                        n && t.forEach((function(e) {
                            n.delete(e)
                        }))
                    }
                }, {
                    key: "getLocalGroupMemberInfo",
                    value: function(e, t) {
                        return this.groupMemberListMap.has(e) ? this.groupMemberListMap.get(e).get(t) : null
                    }
                }, {
                    key: "setLocalGroupMember",
                    value: function(e, t) {
                        this.groupMemberListMap.has(e) ? this.groupMemberListMap.get(e).set(t.userID, t) : (t = (new Map).set(t.userID, t), this.groupMemberListMap.set(e, t))
                    }
                }, {
                    key: "getLocalGroupMemberList",
                    value: function(e) {
                        return this.groupMemberListMap.get(e)
                    }
                }, {
                    key: "hasLocalGroupMember",
                    value: function(e, t) {
                        return this.groupMemberListMap.has(e) && this.groupMemberListMap.get(e).has(t)
                    }
                }, {
                    key: "hasLocalGroupMemberMap",
                    value: function(e) {
                        return this.groupMemberListMap.has(e)
                    }
                }, {
                    key: "reset",
                    value: function() {
                        this.groupMemberListMap.clear()
                    }
                }]), Bi),
                vi = [17, 18, 20],
                Ii = (s(Hi, [{
                    key: "onNewGroupSystemNotice",
                    value: function(e) {
                        var t = e.dataList,
                            n = e.isSyncingEnded,
                            o = (e = e.isInstantMessage, (Oe.d("".concat(this._n, ".onReceiveSystemNotice count:").concat(t.length)), t = this._assembly({
                                notifiesList: t,
                                isInstantMessage: e
                            })).eventDataList);
                        t = t.result, 0 < o.length && (this._grpM.get(11).onNewMessage({
                            conversationOptionsList: o,
                            isInstantMessage: e
                        }), this._onReceivedGroupSystemNotice({
                            result: t,
                            isInstantMessage: e
                        })), e ? 0 < t.length && this._grpM.emitOEvt(D.MESSAGE_RECEIVED, t) : !0 === n && this._clearGroupSystemNotice()
                    }
                }, {
                    key: "_assembly",
                    value: function(e) {
                        var n = e.notifiesList,
                            o = e.isInstantMessage,
                            i = null,
                            a = n.length,
                            s = 0,
                            r = [],
                            c = {
                                conversationID: E.CONV_SYSTEM,
                                unreadCount: 0,
                                type: E.CONV_SYSTEM,
                                subType: null,
                                lastMessage: null
                            };
                        for (s = 0; s < a; s++) {
                            var u = n[s],
                                l = (d = u.groupProfile).communityType,
                                d = void 0 === (d = d.topicID) ? void 0 : d,
                                p = void 0 === (p = (_ = u.elements).topicIDList) ? void 0 : p,
                                _ = _.operationType;
                            if (!(2 !== (void 0 === l ? 0 : l) || He(d) && He(p))) {
                                if (vi.includes(_)) {
                                    this._handleTopicSystemNotice(u);
                                    continue
                                }
                                He(d) || (u.to = d)
                            }
                            15 !== u.elements.operationType && (u.currentUser = this._grpM.getMyUserID(), u.conversationType = E.CONV_SYSTEM, u.conversationID = E.CONV_SYSTEM, (i = new To(u)).setElement({
                                type: E.MSG_GRP_SYS_NOTICE,
                                content: t(t({}, u.elements), {}, {
                                    groupProfile: t({}, u.groupProfile)
                                })
                            }), i.isSystemMessage = !0, (1 === i.sequence && 1 === i.random || 2 === i.sequence && 2 === i.random) && (i.sequence = nt(), i.random = nt(), i.generateMessageID(), Oe.l("".concat(this._n, "._assembly regenerate ID:").concat(i.ID))), this._grpM.get(11).pushIntoNoticeResult(r, i) && (o ? c.unreadCount++ : i.setIsRead(!0), c.subType = i.conversationSubType))
                        }
                        return c.lastMessage = r[r.length - 1], {
                            eventDataList: 0 < r.length ? [c] : [],
                            result: r
                        }
                    }
                }, {
                    key: "_clearGroupSystemNotice",
                    value: function() {
                        var e = this;
                        this._getPendencyList().then((function(t) {
                            t.forEach((function(t) {
                                e.pendencyMap.set("".concat(t.from, "_").concat(t.groupID, "_").concat(t.to), t)
                            })), t = e._grpM.get(11).getLocalMessageList(E.CONV_SYSTEM);
                            var n = [];
                            t.forEach((function(t) {
                                var o = (a = t.payload).operatorID,
                                    i = a.operationType,
                                    a = a.groupProfile;
                                1 === i && (i = "".concat(o, "_").concat(a.groupID, "_").concat(a.to), (o = e.pendencyMap.get(i)) && Ye(o.handled) && 0 !== o.handled && n.push(t))
                            })), e.deleteGroupSystemNotice({
                                messageList: n
                            })
                        }))
                    }
                }, {
                    key: "deleteGroupSystemNotice",
                    value: function(e) {
                        var t = this,
                            n = "".concat(this._n, ".deleteGroupSystemNotice");
                        return Je(e.messageList) && 0 !== e.messageList.length ? (Oe.l("".concat(n, " ") + e.messageList.map((function(e) {
                            return e.ID
                        }))), this._grpM.req({
                            P: wn.DEL_GRP_SYSTEM_NOTICE,
                            data: {
                                messageListToDelete: e.messageList.map((function(e) {
                                    return {
                                        from: E.CONV_SYSTEM,
                                        messageSeq: e.clientSequence,
                                        messageRandom: e.random
                                    }
                                }))
                            }
                        }).then((function() {
                            Oe.l("".concat(n, " ok"));
                            var o = t._grpM.get(11);
                            return e.messageList.forEach((function(e) {
                                o.deleteLocalMessage(e)
                            })), vn()
                        })).catch((function(e) {
                            return Oe.e("".concat(n, " error:"), e), Mn(e)
                        }))) : In()
                    }
                }, {
                    key: "_getPendencyList",
                    value: function() {
                        var e = this,
                            t = (o = 0 < arguments.length && void 0 !== arguments[0] ? arguments[0] : {}).type,
                            n = o.startTime,
                            o = o.limit;
                        return this._grpM.req({
                            P: wn.GET_GRP_PENDENCY,
                            data: {
                                type: void 0 === t ? void 0 : t,
                                startTime: void 0 === n ? 0 : n,
                                limit: void 0 === o ? 20 : o,
                                handleAccount: this._grpM.getMyUserID()
                            }
                        }).then((function(t) {
                            var n = t.data.pendencyList;
                            return 0 !== t.data.nextStartTime ? e._getPendencyList({
                                startTime: t.data.nextStartTime
                            }).then((function(e) {
                                return [].concat(m(n), m(e))
                            })) : n
                        }))
                    }
                }, {
                    key: "getGroupApplicationList",
                    value: function() {
                        var e = this;
                        return this._getPendencyList().then((function(t) {
                            return e._getPendencyList({
                                type: E.GRP_COMMUNITY
                            }).then((function(n) {
                                return t.push.apply(t, m(n)), e._handlePendencyResult(t)
                            })).catch((function(n) {
                                return e._handlePendencyResult(t)
                            }))
                        }))
                    }
                }, {
                    key: "_handlePendencyResult",
                    value: function(e) {
                        var t = this,
                            n = [];
                        return e.forEach((function(e) {
                            t.pendencyMap.set("".concat(e.from, "_").concat(e.groupID, "_").concat(e.to), e), 0 === e.handled && n.push({
                                applicant: e.from,
                                applicantNick: e.fromUserNickName,
                                groupName: e.groupName,
                                groupID: e.groupID,
                                authentication: e.authentication,
                                messageKey: e.time,
                                applicationType: e.applicationType,
                                userID: e.userID,
                                note: e.note
                            })
                        })), In({
                            applicationList: n
                        })
                    }
                }, {
                    key: "_onReceivedGroupSystemNotice",
                    value: function(e) {
                        var t = this,
                            n = e.result;
                        e.isInstantMessage && n.forEach((function(e) {
                            switch (e.payload.operationType) {
                                case 1:
                                    break;
                                case 2:
                                    t._onApplyJoinGroup(e);
                                    break;
                                case 3:
                                    break;
                                case 4:
                                    t._onMemberKicked(e);
                                    break;
                                case 5:
                                    t._onGroupDismissed(e);
                                    break;
                                case 6:
                                    break;
                                case 7:
                                    t._onInviteGroup(e);
                                    break;
                                case 8:
                                    t._onQuitGroup(e);
                                    break;
                                case 9:
                                    t._onSetManager(e);
                                    break;
                                case 10:
                                    t._onDeleteManager(e);
                                    break;
                                case 11:
                                case 12:
                                case 15:
                                    break;
                                case 20:
                                    t._onMessageRemindTypeSynced(e);
                                    break;
                                case 21:
                                    t._grpM.onAVChatRoomMemberBanned(e)
                            }
                        }))
                    }
                }, {
                    key: "_onApplyJoinGroup",
                    value: function(e) {
                        var t = this,
                            n = (e = e.payload.groupProfile).groupID,
                            o = (e = e.groupType, this._grpM.hasLocalGroup(n));
                        Oe.l("".concat(this._n, "._onApplyJoinGroup groupID:").concat(n, " groupType:").concat(e, " hasGroup:").concat(o)), o || Mt(e) || this._grpM.getGroupProfile({
                            groupID: n
                        }).then((function(e) {
                            (e = e.data.group) && (t._grpM.updateGroupMap([e]), e = !e.isSupportTopic, t._grpM.emitGroupListUpdate(!0, e))
                        }))
                    }
                }, {
                    key: "_onMemberKicked",
                    value: function(e) {
                        e = e.payload.groupProfile.groupID, this._grpM.hasLocalGroup(e) && this._grpM.deleteLocalGroupAndConversation(e)
                    }
                }, {
                    key: "_onGroupDismissed",
                    value: function(e) {
                        e = e.payload.groupProfile.groupID;
                        var t = (this._grpM.hasLocalGroup(e) && this._grpM.deleteLocalGroupAndConversation(e), this._grpM._AVChatRoomHandler);
                        t && t.checkJoinedAVChatRoomByID(e) && t.reset(e)
                    }
                }, {
                    key: "_onInviteGroup",
                    value: function(e) {
                        var t = this,
                            n = e.payload.groupProfile.groupID;
                        e = this._grpM.hasLocalGroup(n), Oe.l("".concat(this._n, "._onInviteGroup groupID:").concat(n, " hasGroup:").concat(e)), this._grpM.getGroupProfile({
                            groupID: n
                        }).then((function() {
                            t._grpM.emitGroupListUpdate(), t._grpM.get(11).pullMsgOnInvite("".concat(E.CONV_GROUP).concat(n))
                        }))
                    }
                }, {
                    key: "_onQuitGroup",
                    value: function(e) {
                        var t = (e = e.payload.groupProfile).groupID,
                            n = (e = e.groupType, this._grpM.hasLocalGroup(t));
                        Oe.l("".concat(this._n, "._onQuitGroup groupID:").concat(t, " groupType:").concat(e, " hasGroup:").concat(n)), n && this._grpM.deleteLocalGroupAndConversation(t)
                    }
                }, {
                    key: "_onSetManager",
                    value: function(e) {
                        var t = (e = e.payload.groupProfile).to;
                        e = e.groupID, (e = this._grpM.getGroupMemberHandler().getLocalGroupMemberInfo(e, t)) && e.updateRole(E.GRP_MBR_ROLE_ADMIN)
                    }
                }, {
                    key: "_onDeleteManager",
                    value: function(e) {
                        var t = (e = e.payload.groupProfile).to;
                        e = e.groupID, (e = this._grpM.getGroupMemberHandler().getLocalGroupMemberInfo(e, t)) && e.updateRole(E.GRP_MBR_ROLE_MEMBER)
                    }
                }, {
                    key: "_onMessageRemindTypeSynced",
                    value: function(e) {
                        var t = e.payload.groupProfile.groupID;
                        e = e.payload.messageRemindType, this._grpM.get(11).onGroupMsgRemindTypeUpdated({
                            groupID: t,
                            messageRemindType: e
                        })
                    }
                }, {
                    key: "_handleTopicSystemNotice",
                    value: function(e) {
                        var t = (n = e.groupProfile).groupID,
                            n = n.topicID,
                            o = (e = e.elements).operationType,
                            i = e.topicIDList,
                            a = (e = e.messageRemindType, this._grpM.get(10));
                        17 === o ? a.onTopicCreated({
                            groupID: t,
                            topicID: n
                        }) : 18 === o ? a.onTopicDeleted({
                            groupID: t,
                            topicIDList: i
                        }) : 20 === o && a.onMessageRemindTypeUpdated({
                            groupID: t,
                            topicID: n,
                            messageRemindType: e
                        })
                    }
                }, {
                    key: "reset",
                    value: function() {
                        this.pendencyMap.clear()
                    }
                }]), Hi),
                Mi = ["relayFlag"],
                yi = (c(Vi, Rn), Xo = g(Vi), s(Vi, [{
                    key: "_onCloudConfig",
                    value: function() {
                        var e = this.getCloudConfig("polling_interval"),
                            t = this.getCloudConfig("polling_interval_plus"),
                            n = this.getCloudConfig("polling_no_msg_count"),
                            o = this.getCloudConfig("polling_simplified_msg"),
                            i = this.getCloudConfig("paging_grp_count");
                        Oe.l("".concat(this._n, "._onCloudConfig pollingInterval:").concat(e) + " pollingIntervalPlus:".concat(t, " pollingNoMessageCount:").concat(n) + " pollingSimplifiedMessage:".concat(o, " pagingGroupCount:").concat(i)), this._AVChatRoomHandler.setPollingInterval(e), this._AVChatRoomHandler.setPollingIntervalPlus(t), this._AVChatRoomHandler.setPollingNoMessageCount(n), this._AVChatRoomHandler.setPollingSimplifiedMessage(o), this._commonGroupHandler.setPagingGroupCount(i)
                    }
                }, {
                    key: "onCheckTimer",
                    value: function(e) {
                        this.isLoggedIn() && (this._commonGroupHandler.onCheckTimer(e), this._groupTipsHandler.onCheckTimer(e))
                    }
                }, {
                    key: "guardForAVChatRoom",
                    value: function(e) {
                        var t, n = this;
                        return e.conversationType === E.CONV_GROUP ? (t = Ct(e.to) ? wt(e.to) : e.to, this.hasLocalGroup(t) ? In() : this.getGroupProfile({
                            groupID: t
                        }).then((function(o) {
                            return o = o.data.group.type, Oe.l("".concat(n._n, ".guardForAVChatRoom. groupID:").concat(t, " type:").concat(o)), o === E.GRP_AVCHATROOM ? Mn(new Pn({
                                code: o = Un.MSG_SEND_FAIL_NOT_IN_AV,
                                message: n.getErrMsg(o, e.from, t),
                                data: {
                                    message: e
                                }
                            })) : In()
                        }))) : In()
                    }
                }, {
                    key: "checkJoinedAVChatRoomByID",
                    value: function(e) {
                        return this._AVChatRoomHandler.checkJoinedAVChatRoomByID(e)
                    }
                }, {
                    key: "onNewMessage",
                    value: function(e) {
                        this._commonGroupHandler.onNewMessage(e)
                    }
                }, {
                    key: "updateNextMessageSeq",
                    value: function(e) {
                        var t, n = this;
                        Je(e) && (t = this.get(10), e.forEach((function(e) {
                            var o = e.conversationID.replace(E.CONV_GROUP, "");
                            Ct(o) && t.updateUnreadCountAndLastMsg(o, e.lastMessage), n.groupMap.has(o) && (n.groupMap.get(o).nextMessageSeq = e.lastMessage.sequence + 1)
                        })))
                    }
                }, {
                    key: "onNewGroupTips",
                    value: function(e) {
                        this._groupTipsHandler.onNewGroupTips(e)
                    }
                }, {
                    key: "onMsgRevoked",
                    value: function(e) {
                        this._commonGroupHandler.onMsgRevoked(e, !(1 < arguments.length && void 0 !== arguments[1]) || arguments[1])
                    }
                }, {
                    key: "onNewGroupSystemNotice",
                    value: function(e) {
                        this._groupSystemNoticeHandler.onNewGroupSystemNotice(e)
                    }
                }, {
                    key: "onMsgReadNotice",
                    value: function(e) {
                        var t = this;
                        e.dataList.forEach((function(e) {
                            var n;
                            e = e.elements.groupMessageReadNotice, ut(e) || (n = t.get(11), e.forEach((function(e) {
                                var o = e.groupID,
                                    i = void 0 === (i = e.topicID) ? void 0 : i,
                                    a = (e = e.lastMessageSeq, Oe.l("".concat(t._n, ".onMsgReadNotice groupID:").concat(o, " lastMessageSeq:").concat(e)), o = "".concat(E.CONV_GROUP).concat(o), !0);
                                He(i) || (o = "".concat(E.CONV_GROUP).concat(i), a = !1), n.updateIsReadAfterReadReport({
                                    conversationID: o,
                                    lastMessageSeq: e
                                }), n.updateUnreadCount(o, a), n.clearGroupAtInfoList(o, a)
                            })))
                        }))
                    }
                }, {
                    key: "onReadReceiptList",
                    value: function(e) {
                        var t = this;
                        Oe.l("".concat(this._n, ".onReadReceiptList options:"), e), e.dataList.forEach((function(e) {
                            var n = e.groupProfile,
                                o = (e = e.elements, n = n.groupID, t.get(11));
                            e = e.readReceiptList, o.updateReadReceiptInfo({
                                groupID: n,
                                readReceiptList: e
                            })
                        }))
                    }
                }, {
                    key: "onMsgModified",
                    value: function(e) {
                        Oe.l("".concat(this._n, ".onMsgModified options:"), e);
                        var n = this.get(11);
                        e.dataList.forEach((function(e) {
                            n.onMessageModified(t(t({}, e), {}, {
                                conversationType: E.CONV_GROUP,
                                to: e.topicID || e.groupID
                            }))
                        }))
                    }
                }, {
                    key: "deleteGroupSystemNotice",
                    value: function(e) {
                        this._groupSystemNoticeHandler.deleteGroupSystemNotice(e)
                    }
                }, {
                    key: "initGroupMap",
                    value: function(e) {
                        this.groupMap.set(e.groupID, new oi(e))
                    }
                }, {
                    key: "clearGroupMap",
                    value: function() {
                        this.groupMap.clear()
                    }
                }, {
                    key: "deleteGroup",
                    value: function(e) {
                        this.groupMap.delete(e)
                    }
                }, {
                    key: "updateGroupMap",
                    value: function(e) {
                        var t, n = this,
                            o = this.get(11);
                        e.forEach((function(e) {
                            t = e.groupID, n.groupMap.has(t) ? n.groupMap.get(t).updateGroup(e) : (n.groupMap.set(t, new oi(e)), o.deleteGroupRoamingInfo(t))
                        }));
                        var i, a = this.getMyUserID(),
                            s = T(this.groupMap);
                        try {
                            for (s.s(); !(i = s.n()).done;) {
                                var r = f(i.value, 2)[1];
                                r.selfInfo.userID = a, "Owner" === r.selfInfo.role && (r.ownerID = a)
                            }
                        } catch (e) {
                            s.e(e)
                        } finally {
                            s.f()
                        }
                    }
                }, {
                    key: "getGroupMap",
                    value: function() {
                        return this.groupMap
                    }
                }, {
                    key: "getLocalGroupList",
                    value: function() {
                        return m(this.groupMap.values()).filter((function(e) {
                            return e.type !== E.GRP_ROOM && e.type !== E.GRP_LIVE
                        }))
                    }
                }, {
                    key: "getLocalGroupProfile",
                    value: function(e) {
                        return this.groupMap.get(e)
                    }
                }, {
                    key: "sortLocalGroupList",
                    value: function() {
                        var e = m(this.groupMap).filter((function(e) {
                            return (e = f(e, 2))[0], !He(e[1].lastMessage)
                        }));
                        e.sort((function(e, t) {
                            return t[1].lastMessage.lastTime - e[1].lastMessage.lastTime
                        })), this.groupMap = new Map(m(e))
                    }
                }, {
                    key: "updateGroupLastMessage",
                    value: function(e) {
                        this._commonGroupHandler.updateLastMsg(e)
                    }
                }, {
                    key: "emitGroupListUpdate",
                    value: function() {
                        var e = !(0 < arguments.length && void 0 !== arguments[0]) || arguments[0],
                            t = !(1 < arguments.length && void 0 !== arguments[1]) || arguments[1],
                            n = this.getLocalGroupList();
                        e && this.emitOEvt(D.GROUP_LIST_UPDATED), t && (e = JSON.parse(JSON.stringify(n)), this.get(11).updateConvGroupProfile(e))
                    }
                }, {
                    key: "getMyNameCardByGroupID",
                    value: function(e) {
                        return (e = this.getLocalGroupProfile(e)) ? e.selfInfo.nameCard : ""
                    }
                }, {
                    key: "isPagingGetCompleted",
                    value: function() {
                        return this._commonGroupHandler.isPagingGetCompleted()
                    }
                }, {
                    key: "getMsgRemindType",
                    value: function(e) {
                        var t = this;
                        return Je(e) && 0 !== e.length ? 0 === (e = e.filter((function(e) {
                            return !Mt(t.getLocalGroupProfile(e).type)
                        }))).length ? Promise.resolve() : (Oe.l("".concat(this._n, ".getMsgRemindType groupIDList:").concat(e)), this.getGroupProfileAdvance({
                            groupIDList: e,
                            responseFilter: {
                                memberInfoFilter: ["MsgFlag"]
                            }
                        }).then((function(e) {
                            e = e.data.successGroupList;
                            var n = t.get(11);
                            e.forEach((function(e) {
                                n.onGroupMsgRemindTypeUpdated({
                                    groupID: e.groupID,
                                    messageRemindType: Je(e.members) ? e.members[0].messageRemindType : ""
                                })
                            }))
                        }))) : Promise.resolve()
                    }
                }, {
                    key: "getGroupList",
                    value: function() {
                        return this._commonGroupHandler.getGroupList()
                    }
                }, {
                    key: "syncCommunityWithTopic",
                    value: function() {
                        return this._commonGroupHandler.syncGroupList(!0)
                    }
                }, {
                    key: "getGroupProfile",
                    value: function(e) {
                        var t = this,
                            n = "".concat(this._n, ".").concat("getGroupProfile"),
                            o = new Qn("getGroupProfile"),
                            i = e.groupID,
                            a = e.groupCustomFieldFilter;
                        return Oe.l("".concat(n, " groupID:").concat(i)), a = {
                            groupIDList: [i],
                            responseFilter: {
                                groupBaseInfoFilter: m(w),
                                groupCustomFieldFilter: a,
                                memberInfoFilter: [].concat(m(F), ["NameCard"])
                            }
                        }, this.getGroupProfileAdvance(a).then((function(e) {
                            var a = (e = e.data).successGroupList;
                            return e = e.failureGroupList, Oe.l("".concat(n, " ok")), 0 < e.length ? Mn(e[0]) : ((e = Mt(a[0].type) && !t.hasLocalGroup(i) ? new oi(a[0]) : (t.updateGroupMap(a), t.getLocalGroupProfile(i))).isSupportTopic || t.get(11).updateConvGroupProfile([e]), o.setMessage("groupID:".concat(i, " type:").concat(e.type, " muteAllMembers:").concat(e.muteAllMembers, " ownerID:").concat(e.ownerID)).end(), vn({
                                group: e
                            }))
                        })).catch((function(t) {
                            return o.setError(t).setMessage("groupID:".concat(e.groupID)).end(), Oe.e("".concat(n, " failed. error:"), t), Mn(t)
                        }))
                    }
                }, {
                    key: "getGroupProfileAdvance",
                    value: function(e) {
                        var n, o = "".concat(this._n, ".getGroupProfileAdvance"),
                            i = (Je(s = e.groupIDList) && 50 < s.length && (this.warn("GetGroupProfileLimit"), s.length = 50), []),
                            a = [],
                            s = (s.forEach((function(e) {
                                (yt({
                                    groupID: e
                                }) ? a : i).push(e)
                            })), []);
                        return 0 < i.length && (n = this._getGroupProfileAdvance(t(t({}, e), {}, {
                            groupIDList: i
                        })), s.push(n)), 0 < a.length && (n = this._getGroupProfileAdvance(t(t({}, e), {}, {
                            groupIDList: a,
                            relayFlag: 0 < i.length
                        })), s.push(n)), Promise.all(s).then((function(e) {
                            var t = [],
                                n = [];
                            return e.forEach((function(e) {
                                t.push.apply(t, m(e.successGroupList)), n.push.apply(n, m(e.failureGroupList))
                            })), vn({
                                successGroupList: t,
                                failureGroupList: n
                            })
                        })).catch((function(e) {
                            return Oe.e("".concat(o, " failed. error:"), e), Mn(e)
                        }))
                    }
                }, {
                    key: "_getGroupProfileAdvance",
                    value: function(e) {
                        var t = this,
                            n = e.relayFlag,
                            o = void 0 !== n && n,
                            i = _(e, Mi);
                        return this.req({
                            P: wn.GET_GRP_PROFILE,
                            data: i
                        }).then((function(e) {
                            return Oe.l("".concat(t._n, "._getGroupProfileAdvance ok. options:"), i), {
                                successGroupList: (e = e.data.groups).filter((function(e) {
                                    return ut(e.errorCode) || 0 === e.errorCode
                                })),
                                failureGroupList: e.filter((function(e) {
                                    return e.errorCode && 0 !== e.errorCode
                                })).map((function(e) {
                                    return new Pn({
                                        code: e.errorCode,
                                        message: e.errorInfo,
                                        data: {
                                            groupID: e.groupID
                                        }
                                    })
                                }))
                            }
                        })).catch((function(t) {
                            return o && yt({
                                groupID: e.groupIDList[0]
                            }) ? {
                                successGroupList: [],
                                failureGroupList: []
                            } : Mn(t)
                        }))
                    }
                }, {
                    key: "createGroup",
                    value: function(e) {
                        var n = this,
                            o = [E.GRP_PUBLIC, E.GRP_WORK, E.GRP_MEETING, E.GRP_AVCHATROOM, E.GRP_COMMUNITY],
                            i = "".concat(this._n, ".").concat("createGroup"),
                            a = e.type,
                            s = e.groupID;
                        if (e.name && !1 === this._filterProfanity("name", e)) return Mn({
                            code: Un.PROFANITY_FOUND
                        });
                        if (e.introduction && !1 === this._filterProfanity("introduction", e)) return Mn({
                            code: Un.PROFANITY_FOUND
                        });
                        if (e.notification && !1 === this._filterProfanity("notification", e)) return Mn({
                            code: Un.PROFANITY_FOUND
                        });
                        if (!o.includes(a)) return Mn({
                            code: Un.ILLEGAL_GRP_TYPE
                        });
                        if (!yt({
                                type: a
                            })) {
                            if (!He(s) && yt({
                                    groupID: s
                                })) return Mn({
                                code: Un.ILLEGAL_GRP_ID
                            });
                            e.isSupportTopic = void 0
                        }
                        if (Mt(a) && !ut(e.memberList) && 0 < e.memberList.length && (e.memberList = void 0), this._canIUseJoinOption(a) || ut(e.joinOption) || (e.joinOption = void 0), yt({
                                type: a
                            })) {
                            if (!He(s) && !yt({
                                    groupID: s
                                })) return Mn({
                                code: Un.ILLEGAL_GRP_ID
                            });
                            e.isSupportTopic = !0 === e.isSupportTopic ? 1 : 0
                        }
                        var r = new Qn("createGroup"),
                            c = (Oe.l("".concat(i, " options:"), e), null),
                            u = [];
                        return this.req({
                            P: wn.CREATE_GRP,
                            data: t(t({}, e), {}, {
                                ownerID: this.getMyUserID(),
                                webPushFlag: 1
                            })
                        }).then((function(o) {
                            var a = (o = o.data).groupID,
                                s = void 0 === (o = o.overLimitUserIDList) ? [] : o;
                            if (c = a, u = s, o = "groupType:".concat(e.type, " groupID:").concat(a, " overLimitUserIDList:").concat(s), r.setMessage(o).end(), Oe.l("".concat(i, " ok. ").concat(o)), e.type === E.GRP_AVCHATROOM) return n.getGroupProfile({
                                groupID: a
                            });
                            if (e.type === E.GRP_COMMUNITY && 1 === e.isSupportTopic) return n.getGroupProfile({
                                groupID: a
                            });
                            He(e.memberList) || He(s) || (e.memberList = e.memberList.filter((function(e) {
                                return -1 === s.indexOf(e.userID)
                            }))), n.updateGroupMap([t(t({}, e), {}, {
                                groupID: a
                            })]), o = n.get(2);
                            var l = "",
                                d = 0,
                                p = (e.type === E.GRP_COMMUNITY ? (l = n.isIntl() ? "Create Community" : "创建社群", d = 1) : l = n.isIntl() ? "Create Group" : "创建群组", n.get(4).getMyNick());
                            return l = o.createCustomMessage({
                                to: a,
                                conversationType: E.CONV_GROUP,
                                payload: {
                                    data: JSON.stringify({
                                        businessID: "group_create",
                                        content: l,
                                        cmd: d,
                                        opUser: p || n.getMyUserID(),
                                        version: 4
                                    })
                                }
                            }), o.sendMessageInstance(l), n.emitGroupListUpdate(), n.getGroupProfile({
                                groupID: a
                            })
                        })).then((function(e) {
                            var t = (n = (e = e.data.group).selfInfo).nameCard,
                                n = n.joinTime;
                            return e.updateSelfInfo({
                                nameCard: t,
                                joinTime: n,
                                messageRemindType: E.MSG_REMIND_ACPT_AND_NOTE,
                                role: E.GRP_MBR_ROLE_OWNER
                            }), vn({
                                group: e,
                                overLimitUserIDList: u
                            })
                        })).catch((function(o) {
                            var a;
                            return r.setMessage("groupType:".concat(e.type)).setError(o).end(), 10010 === o.code || 10007 === o.code ? (n._silentlyGetGroupProfile(o.code, c), n.updateGroupMap([t(t({}, e), {}, {
                                groupID: c
                            })]), (a = n.getLocalGroupProfile(c)).selfInfo.role = E.GRP_MBR_ROLE_OWNER, vn({
                                group: a,
                                overLimitUserIDList: u
                            })) : (Oe.e("".concat(i, " failed. error:"), o), Mn(o))
                        }))
                    }
                }, {
                    key: "dismissGroup",
                    value: function(e) {
                        var t = this,
                            n = "".concat(this._n, ".").concat("dismissGroup"),
                            o = "groupID:".concat(e),
                            i = new Qn("dismissGroup");
                        return i.setMessage(o), Oe.l("".concat(n, " ").concat(o)), this.req({
                            P: wn.DISMISS_GRP,
                            data: {
                                groupID: e
                            }
                        }).then((function() {
                            return i.end(), Oe.l("".concat(n, " ok")), t.deleteLocalGroupAndConversation(e), t.checkJoinedAVChatRoomByID(e) && t._AVChatRoomHandler.reset(e), t._groupAttributesHandler.deleteLocalGroupAttributes(e), vn({
                                groupID: e
                            })
                        })).catch((function(e) {
                            return i.setError(e).end(), Oe.e("".concat(n, " failed. error:"), e), Mn(e)
                        }))
                    }
                }, {
                    key: "updateGroupProfile",
                    value: function(e) {
                        var t, n = this,
                            o = "".concat(this._n, ".").concat("updateGroupProfile");
                        if (this.hasLocalGroup(e.groupID) && (t = this.getLocalGroupProfile(e.groupID).type, this._canIUseJoinOption(t) || ut(e.joinOption) || (Oe.w("".concat(o, " joinOption is unavailable for Work/Meeting/AVChatRoom")), e.joinOption = void 0)), ut(e.muteAllMembers) || (e.muteAllMembers ? e.muteAllMembers = "On" : e.muteAllMembers = "Off"), e.name && !1 === this._filterProfanity("name", e)) return Mn({
                            code: Un.PROFANITY_FOUND
                        });
                        if (e.introduction && !1 === this._filterProfanity("introduction", e)) return Mn({
                            code: Un.PROFANITY_FOUND
                        });
                        if (e.notification && !1 === this._filterProfanity("notification", e)) return Mn({
                            code: Un.PROFANITY_FOUND
                        });
                        var i = new Qn("updateGroupProfile");
                        return i.setMessage(JSON.stringify(e)), Oe.l("".concat(o, " groupID:").concat(e.groupID)), this.req({
                            P: wn.UPDATE_GRP_PROFILE,
                            data: e
                        }).then((function() {
                            return i.end(), Oe.l("".concat(o, " ok")), n.hasLocalGroup(e.groupID) && n.groupMap.get(e.groupID).updateGroup(e), vn({
                                group: n.groupMap.get(e.groupID)
                            })
                        })).catch((function(e) {
                            return i.setError(e).end(), Oe.l("".concat(o, " failed. error:"), e), Mn(e)
                        }))
                    }
                }, {
                    key: "_filterProfanity",
                    value: function(e, t) {
                        if (!(o = this.get(29))) return !0;
                        var n = (o = o.filterText(t[e], b)).isAllowedToSend,
                            o = o.modifiedText;
                        return !0 === n && (t[e] = o, !0)
                    }
                }, {
                    key: "joinGroup",
                    value: function(e) {
                        var t = this,
                            n = e.groupID,
                            o = "".concat(this._n, ".joinGroup");
                        if (this.deleteUnjoinedAVChatRoom(n), this.hasLocalGroup(n)) {
                            if (!this.isLoggedIn()) return In({
                                status: E.JOIN_STATUS_ALREADY_IN_GROUP
                            });
                            var i = new Qn("applyJoinGroup");
                            return this.getGroupProfile({
                                groupID: n
                            }).then((function() {
                                return i.setMessage("groupID:".concat(n, " joinedStatus:").concat(E.JOIN_STATUS_ALREADY_IN_GROUP)).end(), In({
                                    status: E.JOIN_STATUS_ALREADY_IN_GROUP
                                })
                            })).catch((function(a) {
                                return i.setMessage("groupID:".concat(n, " unjoined")).end(), Oe.w("".concat(o, " ").concat(n, " was unjoined, now join!")), t.groupMap.delete(n), t.applyJoinGroup(e)
                            }))
                        }
                        return Oe.l("".concat(o, " groupID:").concat(n)), this.isLoggedIn() ? this.applyJoinGroup(e) : this._AVChatRoomHandler.joinWithoutAuth(e)
                    }
                }, {
                    key: "applyJoinGroup",
                    value: function(e) {
                        var n = this,
                            o = "".concat(this._n, ".").concat("applyJoinGroup"),
                            i = e.groupID;
                        if (!He(e.applyMessage) && !1 === this._filterProfanity("applyMessage", e)) return Mn({
                            code: Un.PROFANITY_FOUND
                        });
                        var a = new Qn("applyJoinGroup"),
                            s = (e = t({}, e), this.canIUse(U.AV_HISTORY_MSG));
                        return s && (e.historyMessageFlag = 1), this.get(11).deleteTopicRoamingInfo(i), this.req({
                            P: wn.APPLY_JOIN_GRP,
                            data: e
                        }).then((function(e) {
                            var t = (e = e.data).joinedStatus,
                                r = e.longPollingKey,
                                c = e.startSeq,
                                u = e.avChatRoomFlag,
                                l = e.avChatRoomKey,
                                d = e.messageList;
                            switch (e = "groupID:".concat(i, " joinedStatus:").concat(t, " longPollingKey:").concat(r, " startSeq:").concat(c) + " avChatRoomFlag:".concat(u, " canGetAVChatRoomHistoryMsg:").concat(s, ",") + " historyMsgCount:".concat(He(d) ? 0 : d.length), a.setMessage(e).end(), Oe.l("".concat(o, " ok. ").concat(e)), t) {
                                case qe:
                                    return vn({
                                        status: qe
                                    });
                                case Fe:
                                    return n.getGroupProfile({
                                        groupID: i
                                    }).then((function(e) {
                                        return e = e.data.group, n._handleJoinResult({
                                            group: e,
                                            avChatRoomFlag: u,
                                            longPollingKey: r,
                                            startSeq: c,
                                            avChatRoomKey: l,
                                            messageList: d
                                        })
                                    })).catch((function(e) {
                                        var t;
                                        return 10010 === e.code || 10007 === e.code ? (n._silentlyGetGroupProfile(e.code, i), t = new oi({
                                            groupID: i
                                        }), n.updateGroupMap([t]), n._handleJoinResult({
                                            group: t,
                                            avChatRoomFlag: u,
                                            longPollingKey: r,
                                            startSeq: c,
                                            avChatRoomKey: l,
                                            messageList: d
                                        })) : (Oe.e("".concat(o, " failed. error:"), e), Mn(e))
                                    }));
                                default:
                                    var p = new Pn({
                                        code: Un.JOIN_GRP_FAIL
                                    });
                                    return Oe.e("".concat(o, " failed. error:"), p), Mn(p)
                            }
                        })).catch((function(e) {
                            return a.setMessage("groupID:".concat(i)).setError(e).end(), Oe.e("".concat(o, " failed. error:"), e), Mn(e)
                        }))
                    }
                }, {
                    key: "_handleJoinResult",
                    value: function(e) {
                        var t = this,
                            n = e.group,
                            o = e.avChatRoomFlag,
                            i = e.longPollingKey,
                            a = e.startSeq,
                            s = e.avChatRoomKey,
                            r = e.messageList,
                            c = n.groupID;
                        return 1 === o ? (this.get(11).setCompleted("".concat(E.CONV_GROUP).concat(c)), this._groupAttributesHandler.initGroupAttributesCache({
                            groupID: c,
                            avChatRoomKey: s
                        }), this._groupCountersHandler.initGroupCountersCache({
                            groupID: c,
                            avChatRoomKey: s
                        }), (e = ut(i) ? this._AVChatRoomHandler.handleJoinResult({
                            group: n
                        }) : this._AVChatRoomHandler.startRunLoop({
                            group: n,
                            longPollingKey: i,
                            startSeq: a
                        })).then((function() {
                            t._onAVChatRoomHistoryMessage(r, c)
                        })), e) : (this.emitGroupListUpdate(!0, !1), vn({
                            status: Fe,
                            group: n
                        }))
                    }
                }, {
                    key: "quitGroup",
                    value: function(e) {
                        var t = this,
                            n = "".concat(this._n, ".").concat("quitGroup"),
                            o = "groupID:".concat(e),
                            i = (Oe.l("".concat(n, " ").concat(o)), this.checkJoinedAVChatRoomByID(e));
                        if (!i && !this.hasLocalGroup(e)) return Mn({
                            code: Un.MEMBER_NOT_IN_GRP
                        });
                        if (i && !this.isLoggedIn()) return Oe.l("".concat(n, " anonymously ok. ").concat(o)), this.deleteLocalGroupAndConversation(e), this._AVChatRoomHandler.reset(e), In({
                            groupID: e
                        });
                        var a = new Qn("quitGroup");
                        return a.setMessage(o), this.req({
                            P: wn.QUIT_GRP,
                            data: {
                                groupID: e
                            }
                        }).then((function() {
                            return a.end(), Oe.l("".concat(n, " ok")), t.deleteLocalGroupAndConversation(e), i && t._AVChatRoomHandler.reset(e), t._groupAttributesHandler.deleteLocalGroupAttributes(e), vn({
                                groupID: e
                            })
                        })).catch((function(e) {
                            return a.setError(e).end(), Oe.e("".concat(n, " failed. error:"), e), Mn(e)
                        }))
                    }
                }, {
                    key: "searchGroupByID",
                    value: function(e) {
                        var t = "".concat(this._n, ".").concat("searchGroupByID"),
                            n = {
                                groupIDList: [e]
                            },
                            o = new Qn("searchGroupByID");
                        return o.setMessage("groupID:".concat(e)), Oe.l("".concat(t, " groupID:").concat(e)), this.req({
                            P: wn.SEARCH_GRP,
                            data: n
                        }).then((function(e) {
                            if (0 !== (e = e.data.groupProfile)[0].errorCode) throw new Pn({
                                code: e[0].errorCode,
                                message: e[0].errorInfo
                            });
                            return o.end(), Oe.l("".concat(t, " ok")), vn({
                                group: new oi(e[0])
                            })
                        })).catch((function(e) {
                            return o.setError(e).end(), Oe.w("".concat(t, " failed. error:"), e), Mn(e)
                        }))
                    }
                }, {
                    key: "changeGroupOwner",
                    value: function(e) {
                        var t = this,
                            n = "".concat(this._n, ".").concat("changeGroupOwner");
                        if (this.hasLocalGroup(e.groupID) && this.getLocalGroupProfile(e.groupID).type === E.GRP_AVCHATROOM) return Mn({
                            code: Un.CANNOT_CHANGE_OWNER_IN_AV
                        });
                        if (e.newOwnerID === this.getMyUserID()) return Mn({
                            code: Un.CANNOT_CHANGE_OWNER_TO_SELF
                        });
                        var o = new Qn("changeGroupOwner");
                        return o.setMessage("groupID:".concat(e.groupID, " newOwnerID:").concat(e.newOwnerID)), Oe.l("".concat(n, " groupID:").concat(e.groupID)), this.req({
                            P: wn.CHANGE_GRP_OWNER,
                            data: e
                        }).then((function() {
                            o.end(), Oe.l("".concat(n, " ok"));
                            var i, a = e.groupID,
                                s = e.newOwnerID,
                                r = (t.groupMap.get(a).ownerID = s, t._groupMemberHandler.getLocalGroupMemberList(a));
                            return r instanceof Map && (i = r.get(t.getMyUserID()), ut(i) || (i.updateRole("Member"), t.groupMap.get(a).selfInfo.role = "Member"), i = r.get(s), ut(i) || i.updateRole("Owner")), t.emitGroupListUpdate(!0, !1), vn({
                                group: t.groupMap.get(a)
                            })
                        })).catch((function(e) {
                            return o.setError(e).end(), Oe.e("".concat(n, " failed. error:"), e), Mn(e)
                        }))
                    }
                }, {
                    key: "getGroupApplicationList",
                    value: function() {
                        return this._groupSystemNoticeHandler.getGroupApplicationList()
                    }
                }, {
                    key: "handleGroupApplication",
                    value: function(e) {
                        var t, n, o, i, a, s = this,
                            r = "".concat(this._n, ".").concat("handleGroupApplication"),
                            c = e.handleAction,
                            u = e.handleMessage,
                            l = e.message,
                            d = e.application,
                            p = (l ? (t = l.payload.operatorID, n = l.payload.groupProfile.groupID, o = l.payload.authentication, i = l.payload.messageKey) : d && (t = d.applicant, n = d.groupID, o = d.authentication, i = d.messageKey), wn.HANDLE_GRP_APPLICATION),
                            _ = (d && 2 === d.applicationType && (p = wn.HANDLE_INVITE_JOIN_GRP, a = d.userID), new Qn("handleGroupApplication"));
                        return _.setMessage("groupID:".concat(n)), Oe.l("".concat(r, " groupID:").concat(n)), this.req({
                            P: p,
                            data: {
                                handleAction: c,
                                handleMessage: u,
                                applicant: t,
                                invitee: a,
                                groupID: n,
                                authentication: o,
                                messageKey: i
                            }
                        }).then((function() {
                            return _.end(), Oe.l("".concat(r, " ok")), l && s._groupSystemNoticeHandler.deleteGroupSystemNotice({
                                messageList: [e.message]
                            }), vn({
                                group: s.getLocalGroupProfile(n)
                            })
                        })).catch((function(e) {
                            return _.setError(e).end(), Oe.e("".concat(r, " failed. error"), e), Mn(e)
                        }))
                    }
                }, {
                    key: "handleGroupInvitation",
                    value: function(e) {
                        var n = this,
                            o = "".concat(this._n, ".").concat("handleGroupInvitation"),
                            i = (r = e.message.payload).groupProfile.groupID,
                            a = r.authentication,
                            s = r.messageKey,
                            r = r.operatorID,
                            c = e.handleAction,
                            u = new Qn("handleGroupInvitation");
                        return u.setMessage("groupID:".concat(i, " inviter:").concat(r, " handleAction:").concat(c)), Oe.l("".concat(o, " groupID:").concat(i, " inviter:").concat(r, " handleAction:").concat(c)), this.req({
                            P: wn.HANDLE_GRP_INVITATION,
                            data: t(t({}, e), {}, {
                                inviter: r,
                                groupID: i,
                                authentication: a,
                                messageKey: s
                            })
                        }).then((function() {
                            return u.end(), Oe.l("".concat(o, " ok")), n._groupSystemNoticeHandler.deleteGroupSystemNotice({
                                messageList: [e.message]
                            }), vn({
                                group: n.getLocalGroupProfile(i)
                            })
                        })).catch((function(e) {
                            return u.setError(e).end(), Oe.e("".concat(o, " failed. error"), e), Mn(e)
                        }))
                    }
                }, {
                    key: "getGroupOnlineMemberCount",
                    value: function(e) {
                        var t = this,
                            n = "".concat(this._n, ".getGroupOnlineMemberCount"),
                            o = this._AVChatRoomHandler.checkJoinedAVChatRoomByID(e),
                            i = this.hasLocalGroup(e);
                        if (Oe.l("".concat(n, " groupID:").concat(e, " isAVChatRoom:").concat(o, " has:").concat(i)), o) return this._AVChatRoomHandler.getGroupOnlineMemberCount(e);
                        if (!i) return In({
                            memberCount: 0
                        });
                        if (o = Date.now(), this._onlineMemberCountMap.has(e)) {
                            if (o - (i = this._onlineMemberCountMap.get(e)).lastReqTime <= 6e4) return In({
                                memberCount: i.memberCount
                            });
                            i.lastReqTime = o
                        }
                        return this.requestOnlineCount(e).then((function(o) {
                            return o = void 0 === (o = o.data.memberCount) ? 0 : o, t._onlineMemberCountMap.set(e, {
                                lastReqTime: Date.now(),
                                memberCount: o
                            }), Oe.l("".concat(n, " ok. groupID:").concat(e, " memberCount:").concat(o)), In({
                                memberCount: o
                            })
                        })).catch((function(e) {
                            return Oe.w("".concat(n, " failed. error:"), e), Promise.reject(e)
                        }))
                    }
                }, {
                    key: "requestOnlineCount",
                    value: function(e) {
                        return this.req({
                            P: wn.GET_ONLINE_MBR_NUM,
                            data: {
                                groupID: e
                            }
                        })
                    }
                }, {
                    key: "hasLocalGroup",
                    value: function(e) {
                        return this.groupMap.has(e)
                    }
                }, {
                    key: "deleteLocalGroupAndConversation",
                    value: function(e) {
                        var t, n = this.checkJoinedAVChatRoomByID(e),
                            o = (Oe.l("".concat(this._n, ".deleteLocalGroupAndConversation groupID:").concat(e, " isJoinedAVChatRoom:").concat(n)), this.get(11)),
                            i = "".concat(E.CONV_GROUP).concat(e);
                        n && o.deleteLocalConv(i), yt({
                            groupID: e
                        }) && (t = this.getLocalGroupProfile(e)) && !0 === t.isSupportTopic && this.get(10).deleteTopicListInCommunity(e), o.clearUnreadCount(i), o.setCompleted(i), this._deleteLocalGroup(e), this._onlineMemberCountMap.delete(e), this.emitGroupListUpdate(!0, !1)
                    }
                }, {
                    key: "_deleteLocalGroup",
                    value: function(e) {
                        this.groupMap.delete(e), this._groupMemberHandler.deleteGroupMemberList(e)
                    }
                }, {
                    key: "sendMessage",
                    value: function(e, t) {
                        return Je(e._receiverList) && 0 < e._receiverList.length && !this.canIUse(U.MSG_TO_SPECIFIED_GRP_MBR) ? this.noUse("Targeted Group Message") : (e = this.createGroupMessagePack(e, t), this.req(e))
                    }
                }, {
                    key: "createGroupMessagePack",
                    value: function(e, t) {
                        var n = null,
                            o = (t && t.offlinePushInfo && (n = t.offlinePushInfo), ""),
                            i = (ct(e.cloudCustomData) && 0 < e.cloudCustomData.length && (o = e.cloudCustomData), []),
                            a = void(je(t) && je(t.messageControlInfo) && (a = (r = t.messageControlInfo).excludedFromUnreadCount, s = r.excludedFromLastMessage, r = r.excludedFromContentModeration, !0 === a && i.push("NoUnread"), !0 === s && i.push("NoLastMsg"), !0 === r && i.push("NoMsgCheck"))),
                            s = (Je(e._receiverList) && 0 < e._receiverList.length && (a = e._receiverList, 50 < e._receiverList.length && (a = e._receiverList.slice(0, 50), this.warn("ReceiverListLimit"))), this.isOnlineMessage(e, t) ? 1 : 0),
                            r = JSON.parse(JSON.stringify(e.getElements())),
                            c = (t = this.get(17).getFileDNList(), e.getGroupAtInfoList());
                        return r = {
                            fromAccount: this.getMyUserID(),
                            groupID: e.to,
                            msgBody: ao(e.type, r, t),
                            cloudCustomData: o,
                            random: e.random,
                            priority: e.priority,
                            clientSequence: e.clientSequence,
                            groupAtInfo: e.type !== E.MSG_TEXT || He(c) ? void 0 : c,
                            onlineOnlyFlag: s,
                            clientTime: e.clientTime,
                            offlinePushInfo: bo(n),
                            messageControlInfo: 0 == s ? i : void 0,
                            needReadReceipt: !0 !== e.needReadReceipt || this.isMessageFromOrToAVChatroom(e.to) ? 0 : 1,
                            receiverList: a,
                            isSupportExtension: !0 === e.isSupportExtension ? 1 : 0,
                            isRelayMessage: !0 === e._relayFlag ? 1 : 0,
                            cmConfigID: e._cmConfigID
                        }, Ct(e.to) && (r.groupID = wt(e.to), r.topicID = e.to), {
                            P: wn.SEND_GRP_MSG,
                            tjgID: this.generateTjgID(e),
                            data: r
                        }
                    }
                }, {
                    key: "revokeMessage",
                    value: function(e) {
                        var t = {
                            groupID: e.to,
                            msgSeqList: [{
                                msgSeq: e.sequence
                            }]
                        };
                        return Ct(e.to) && (t.groupID = wt(e.to), t.topicID = e.to), this.req({
                            P: wn.REVOKE_GRP_MSG,
                            data: t
                        })
                    }
                }, {
                    key: "deleteMessage",
                    value: function(e) {
                        var t = e.to;
                        return e = e.keyList, Oe.l("".concat(this._n, ".deleteMessage groupID:").concat(t, " count:").concat(e.length)), e = {
                            groupID: t,
                            deleter: this.getMyUserID(),
                            keyList: e
                        }, Ct(t) && (e.groupID = wt(t), e.topicID = t), this.req({
                            P: wn.DEL_GRP_MSG,
                            data: e
                        })
                    }
                }, {
                    key: "modifyRemoteMessage",
                    value: function(e) {
                        var t = e.to,
                            n = e.sequence,
                            o = e.payload,
                            i = e.type,
                            a = void 0 === (a = e.version) ? 0 : a,
                            s = (e = e.cloudCustomData, t),
                            r = void 0;
                        return t = void(Ct(t) && (s = wt(t), r = t)), qt(i) && (t = []).push({
                            type: i,
                            content: o
                        }), this.req({
                            P: wn.MODIFY_GRP_MSG,
                            data: {
                                groupID: s,
                                topicID: r,
                                sequence: n,
                                version: a,
                                elements: t,
                                cloudCustomData: e
                            }
                        })
                    }
                }, {
                    key: "getRoamingMessage",
                    value: function(e) {
                        var t = this,
                            n = "".concat(this._n, ".").concat("getRoamingMessage"),
                            o = e.conversationID,
                            i = e.groupID,
                            a = (e = e.sequence, new Qn("getRoamingMessage")),
                            s = 0,
                            r = void 0;
                        return Ct(i) && (i = wt(r = i)), this._computeLastSequence({
                            groupID: i,
                            topicID: r,
                            sequence: e
                        }).then((function(e) {
                            return s = e, Oe.l("".concat(n, " groupID:").concat(i, " startSequence:").concat(s)), t.req({
                                P: wn.GET_GRP_ROAMING_MSG,
                                data: {
                                    groupID: i,
                                    count: 21,
                                    sequence: s,
                                    topicID: r
                                }
                            })
                        })).then((function(e) {
                            var c = (l = e.data).messageList,
                                u = l.complete,
                                l = void 0 === (l = l.invisibleSequenceList) ? [] : l,
                                d = (e = void 0 === (e = e.data.nextSequence) ? 0 : e, ut(c) ? Oe.l("".concat(n, " ok. complete:").concat(u, " nextSequence:").concat(e, " but messageList is undefined!")) : Oe.l("".concat(n, " ok. complete:").concat(u, " nextSequence:").concat(e, " count:").concat(c.length)), a.setMessage("groupID:".concat(i, " topicID:").concat(r, " startSequence:").concat(s, " complete:").concat(u, " nextSequence:").concat(e)).end(), t.get(11)),
                                p = [],
                                _ = [];
                            return He(c) || (p = d.onRoamingMessage(c, o, !0, _), d.updateIsRead(o), d.patchConvLastMessage(o)), (c = 2 === u || e < 1) && (d.setCompleted(o), e = ""), Oe.l("".concat(n, " isPullingCompleted:").concat(c, " nextReqID:").concat(e, " storedMsgCount:").concat(p.length) + " invisibleSeqCount:".concat(l.length)), {
                                nextReqID: e + "",
                                storedMessageList: p,
                                assembledMessageList: _,
                                isPullingCompleted: c
                            }
                        })).catch((function(e) {
                            return a.setError(e).setMessage("groupID:".concat(i, " topicID:").concat(r, " startSequence:").concat(s)).end(), Oe.w("".concat(n, " failed. error:"), e), Mn(e)
                        }))
                    }
                }, {
                    key: "_getGroupIDOfMessage",
                    value: function(e) {
                        return e.conversationID.replace(E.CONV_GROUP, "")
                    }
                }, {
                    key: "getReadReceiptList",
                    value: function(e) {
                        var t = "".concat(this._n, ".").concat("getReadReceiptList"),
                            n = this._getGroupIDOfMessage(e[0]),
                            o = this.getMyUserID(),
                            i = e.filter((function(e) {
                                return e.from === o && !0 === e.needReadReceipt
                            })).map((function(e) {
                                return {
                                    sequence: e.sequence
                                }
                            }));
                        if (Oe.l("".concat(t, " groupID:").concat(n, " sequenceList:").concat(JSON.stringify(i))), 0 === i.length) return In({
                            messageList: e
                        });
                        var a = new Qn("getReadReceiptList");
                        return a.setMessage("groupID:".concat(n)), this.req({
                            P: wn.GET_READ_RECEIPT,
                            data: {
                                groupID: n,
                                sequenceList: i
                            }
                        }).then((function(n) {
                            return a.end(), Oe.l("".concat(t, " ok")), Je(n = n.data.readReceiptList) && n.forEach((function(t) {
                                e.forEach((function(e) {
                                    0 === t.code && t.sequence === e.sequence && (e.readReceiptInfo.readCount = t.readCount, e.readReceiptInfo.unreadCount = t.unreadCount)
                                }))
                            })), vn({
                                messageList: e
                            })
                        })).catch((function(e) {
                            return a.setError(e).end(), Oe.w("".concat(t, " failed. error:"), e), Mn(e)
                        }))
                    }
                }, {
                    key: "sendReadReceipt",
                    value: function(e) {
                        var t = "".concat(this._n, ".").concat("sendReadReceipt"),
                            n = this._getGroupIDOfMessage(e[0]),
                            o = new Qn("sendReadReceipt"),
                            i = (o.setMessage("groupID:".concat(n)), this.getMyUserID());
                        return 0 === (e = e.filter((function(e) {
                            return e.from !== i && !0 === e.needReadReceipt
                        })).map((function(e) {
                            return {
                                sequence: e.sequence
                            }
                        }))).length ? Mn({
                            code: Un.READ_RECEIPT_MSG_LIST_EMPTY
                        }) : (Oe.l("".concat(t, ". sequenceList:").concat(JSON.stringify(e))), this.req({
                            P: wn.SEND_READ_RECEIPT,
                            data: {
                                groupID: n,
                                sequenceList: e
                            }
                        }).then((function(e) {
                            return o.end(), Oe.l("".concat(t, " ok")), vn()
                        })).catch((function(e) {
                            return o.setError(e).end(), Oe.w("".concat(t, " failed. error:"), e), Mn(e)
                        })))
                    }
                }, {
                    key: "getReadReceiptDetail",
                    value: function(e) {
                        var t = this,
                            n = e.message,
                            o = e.filter,
                            i = e.cursor,
                            a = (e = e.count, this._getGroupIDOfMessage(n)),
                            s = n.ID,
                            r = (n = n.sequence, "".concat(this._n, ".").concat("getReadReceiptDetail")),
                            c = this._receiptDetailCompleteMap.get(s) || !1,
                            u = 0 !== o && 1 !== o ? 0 : o,
                            l = (o = ct(i) ? i : "", i = !Ye(e) || e <= 0 || 100 <= e ? 100 : e, e = "groupID:".concat(a, " sequence:").concat(n, " cursor:").concat(o, " filter:").concat(u, " completeFlag:").concat(c), Oe.l("".concat(r, " ").concat(e)), {
                                cursor: "",
                                isCompleted: !1,
                                messageID: s,
                                unreadUserIDList: [],
                                readUserIDList: []
                            }),
                            d = new Qn("getReadReceiptDetail");
                        return d.setMessage(e), this.req({
                            P: wn.GET_READ_RECEIPT_DETAIL,
                            data: {
                                groupID: a,
                                sequence: n,
                                flag: u,
                                cursor: o,
                                count: i
                            }
                        }).then((function(e) {
                            d.end();
                            var n = (e = e.data).cursor,
                                o = e.isCompleted,
                                i = e.unreadUserIDList;
                            return e = e.readUserIDList, l.cursor = n, 1 === o && (l.isCompleted = !0, t._receiptDetailCompleteMap.set(s, !0)), 0 === u ? l.readUserIDList = e.map((function(e) {
                                return e.userID
                            })) : 1 === u && (l.unreadUserIDList = i.map((function(e) {
                                return e.userID
                            }))), Oe.l("".concat(r, " ok")), vn(l)
                        })).catch((function(e) {
                            return d.setError(e).end(), Oe.w("".concat(r, " failed. error:"), e), Mn(e)
                        }))
                    }
                }, {
                    key: "getRoamingMessagesHopping",
                    value: function(e) {
                        var t = this,
                            n = "".concat(this._n, ".").concat("getRoamingMessagesHopping"),
                            o = e.groupID,
                            i = e.count,
                            a = e.sequence,
                            s = e.direction,
                            r = void 0;
                        return ut(a) && 1 === s ? In({
                            messageList: [],
                            isCompleted: !0,
                            nextMessageSeq: ""
                        }) : (Ct(o) && (o = wt(r = o)), this._computeReqSeqHopping({
                            groupID: o,
                            topicID: r,
                            sequence: a
                        }).then((function(c) {
                            ut(a) || 1 !== s || (c = a + i - 1);
                            var u = "".concat(r ? "topicID:".concat(r) : "groupID:".concat(o), " sequence:").concat(a, " reqSeq:").concat(c, " direction:").concat(s),
                                l = (Oe.l("".concat(n, " ").concat(u)), new Qn("getRoamingMessagesHopping"));
                            return t.req({
                                P: wn.GET_GRP_ROAMING_MSG,
                                data: {
                                    groupID: o,
                                    topicID: r,
                                    count: i,
                                    sequence: c
                                }
                            }).then((function(o) {
                                var i = void 0 === (i = (o = o.data).messageList) ? [] : i,
                                    r = o.complete,
                                    c = void 0 === (c = o.nextSequence) ? 0 : c,
                                    d = (o = void 0 === (o = o.invisibleSequenceList) ? [] : o, "complete:".concat(r, " nextSequence:").concat(c, " remoteMsgCount:").concat(i.length, " invisibleSequenceList:").concat(o)),
                                    p = (l.setMessage("".concat(u, " ").concat(d)).end(), Oe.l("".concat(n, " ok. ").concat(d)), d = "".concat(E.CONV_GROUP).concat(e.groupID), t.get(11));
                                return d = p.onRoamingMessage(i, d, !1), i = t._computeResult({
                                    groupID: e.groupID,
                                    direction: s,
                                    sequence: a,
                                    remoteMessageList: i,
                                    processedMessageList: d,
                                    complete: r,
                                    nextSequence: c,
                                    invisibleSequenceList: o
                                }), p.storeHoppingMessageList(i.messageList), vn(i)
                            })).catch((function(e) {
                                return l.setError(e).setMessage("groupID:".concat(o, " sequence:").concat(a, " count:").concat(i)).end(), Oe.w("".concat(n, " failed. error:"), e), Mn(e)
                            }))
                        })))
                    }
                }, {
                    key: "_computeReqSeqHopping",
                    value: function(e) {
                        var t = this,
                            n = e.groupID,
                            o = void 0 === (o = e.topicID) ? void 0 : o;
                        return 0 < (e = void 0 === (e = e.sequence) ? void 0 : e) ? Promise.resolve(e) : ut(o) ? this.getGroupProfileAdvance({
                            groupIDList: [n],
                            responseFilter: {
                                groupBaseInfoFilter: ["NextMsgSeq"]
                            }
                        }).then((function(e) {
                            var o = 0;
                            return He(e = e.data.successGroupList) || (o = e[0].nextMessageSeq - 1), Oe.l("".concat(t._n, "._computeReqSeqHopping groupID:").concat(n, " lastSequence:").concat(o, " from remote")), o
                        })).catch((function(e) {
                            return Mn(e)
                        })) : Promise.resolve(0)
                    }
                }, {
                    key: "_computeResult",
                    value: function(e) {
                        var t = {
                                messageList: [],
                                isCompleted: !1,
                                nextMessageSeq: ""
                            },
                            n = e.groupID,
                            o = e.direction,
                            i = e.sequence,
                            a = void 0 === (a = e.remoteMessageList) ? [] : a,
                            s = void 0 === (s = e.processedMessageList) ? [] : s,
                            r = e.complete,
                            c = e.nextSequence;
                        if (e = e.invisibleSequenceList, 0 === o) return t.nextMessageSeq = c, (2 === r || c < 1) && (t.isCompleted = !0, t.nextMessageSeq = ""), t.messageList = s, t;
                        if (1 === o) {
                            if (He(a)) {
                                if (He(e)) return t.isCompleted = !0, t.nextMessageSeq = "", t;
                                t.nextMessageSeq = e[0] + 1
                            } else r = a[0].sequence, c = e[0] || 0, t.nextMessageSeq = c < r ? r + 1 : c + 1;
                            return s.forEach((function(e) {
                                e.sequence >= i && t.messageList.push(e)
                            })), (yt({
                                groupID: n
                            }) || Ct(n)) && 0 === t.messageList.length && a[0].sequence < i && (t.isCompleted = !0, t.nextMessageSeq = ""), t
                        }
                    }
                }, {
                    key: "setMessageRead",
                    value: function(e) {
                        var t = this,
                            n = e.conversationID,
                            o = e.lastMessageSeq,
                            i = "".concat(this._n, ".").concat("setMessageRead"),
                            a = (e = "convID:".concat(n, " lastMessageSeq:").concat(o), Oe.l("".concat(i, " ").concat(e)), Ye(o) || this.warn("DoNotModifyLastSeq"), new Qn("setMessageRead")),
                            s = (a.setMessage(e), n.replace(E.CONV_GROUP, "")),
                            r = void 0;
                        return Ct(s) && (s = wt(r = s)), this.req({
                            P: wn.SET_GRP_MSG_READ,
                            data: {
                                groupID: s,
                                topicID: r,
                                messageReadSeq: o
                            }
                        }).then((function() {
                            a.end(), Oe.l("".concat(i, " ok"));
                            var e, c = t.get(11),
                                u = (c.updateIsReadAfterReadReport({
                                    conversationID: n,
                                    lastMessageSeq: o
                                }), !0);
                            return ut(r) || (u = !1, (e = t.get(10).getLocalTopic(s, r)) && e.updateSelfInfo({
                                readedSequence: o
                            })), c.updateUnreadCount(n, u), vn()
                        })).catch((function(e) {
                            return a.setError(e).end(), Oe.l("".concat(i, " failed. error:"), e), Mn(e)
                        }))
                    }
                }, {
                    key: "_computeLastSequence",
                    value: function(e) {
                        var t = e.groupID,
                            n = void 0 === (n = e.topicID) ? void 0 : n;
                        return 0 < (e = e.sequence) ? Promise.resolve(e) : ut(n) ? this.getGroupLastSequence(t) : Promise.resolve(0)
                    }
                }, {
                    key: "getGroupLastSequence",
                    value: function(e) {
                        var t = "".concat(this._n, ".").concat("getGroupLastSequence"),
                            n = new Qn("getGroupLastSequence"),
                            o = 0,
                            i = "",
                            a = "groupID:".concat(e);
                        if (this.hasLocalGroup(e)) {
                            var s = this.getLocalGroupProfile(e),
                                r = s.lastMessage;
                            if (0 < r.lastSequence && !1 === r.onlineOnlyFlag) return o = r.lastSequence, i = "".concat(a, ", ").concat(o, " from group.lastMessage.lastSequence"), Oe.l("".concat(t, " ").concat(i)), n.setMessage(i).end(), Promise.resolve(o);
                            if (1 < s.nextMessageSeq) return o = s.nextMessageSeq - 1, i = "".concat(a, ", ").concat(o, " from group.nextMessageSeq"), Oe.l("".concat(t, " ").concat(i)), n.setMessage(i).end(), Promise.resolve(o)
                        }
                        return (r = this.get(11).getLocalConversation("GROUP".concat(e))) && r.lastMessage.lastSequence && !1 === r.lastMessage.onlineOnlyFlag ? (o = r.lastMessage.lastSequence, i = "".concat(a, ", ").concat(o, " from conversation.lastMessage.lastSequence"), Oe.l("".concat(t, " ").concat(i)), n.setMessage(i).end(), Promise.resolve(o)) : this.getGroupProfileAdvance({
                            groupIDList: [e],
                            responseFilter: {
                                groupBaseInfoFilter: ["NextMsgSeq"]
                            }
                        }).then((function(e) {
                            return He(e = e.data.successGroupList) ? Oe.w("".concat(t, " ").concat(a, ", empty successGroupList")) : (o = e[0].nextMessageSeq - 1, i = "".concat(a, ", ").concat(o, " from remote"), Oe.l("".concat(t, " ").concat(i))), n.setMessage(i).end(), o
                        })).catch((function(e) {
                            return n.setError(e).setMessage(a).end(), Oe.w("".concat(t, " failed. error:"), e), Mn(e)
                        }))
                    }
                }, {
                    key: "isMessageFromOrToAVChatroom",
                    value: function(e) {
                        return this._AVChatRoomHandler.checkJoinedAVChatRoomByID(e)
                    }
                }, {
                    key: "hasJoinedAVChatRoom",
                    value: function() {
                        return this._AVChatRoomHandler.hasJoinedAVChatRoom()
                    }
                }, {
                    key: "getJoinedAVChatRoom",
                    value: function() {
                        return this._AVChatRoomHandler.getJoinedAVChatRoom()
                    }
                }, {
                    key: "getGroupRemoteLastSeq",
                    value: function(e) {
                        return (e = this.getLocalGroupProfile(e)) ? e.nextMessageSeq - 1 : 1
                    }
                }, {
                    key: "isOnlineMessage",
                    value: function(e, t) {
                        return !(!this._canIUseOnlineOnlyFlag(e) || !t || !0 !== t.onlineUserOnly)
                    }
                }, {
                    key: "_canIUseOnlineOnlyFlag",
                    value: function(e) {
                        var t = this.getJoinedAVChatRoom();
                        return !t || !t.includes(e.to) || e.conversationType !== E.CONV_GROUP
                    }
                }, {
                    key: "_onAVChatRoomHistoryMessage",
                    value: function(e, n) {
                        var o;
                        He(e) || (Oe.l("".concat(this._n, "._onAVChatRoomHistoryMessage groupID:").concat(n, " count:").concat(e.length)), o = [], e.forEach((function(e) {
                            o.push(t(t({}, e), {}, {
                                isHistoryMessage: 1
                            }))
                        })), this.onAVChatRoomMessage(o, n))
                    }
                }, {
                    key: "onAVChatRoomMessage",
                    value: function(e) {
                        this._AVChatRoomHandler.onMessage(e, 1 < arguments.length && void 0 !== arguments[1] ? arguments[1] : "")
                    }
                }, {
                    key: "onAVChatRoomMemberBanned",
                    value: function(e) {
                        this._AVChatRoomHandler.onAVChatRoomMemberBanned(e)
                    }
                }, {
                    key: "getGroupSimplifiedInfo",
                    value: function(e) {
                        var t = new Qn("getGroupSimplifiedInfo");
                        return this.getGroupProfileAdvance({
                            groupIDList: [e],
                            responseFilter: {
                                groupBaseInfoFilter: ["Type", "Name"]
                            }
                        }).then((function(n) {
                            return n = n.data.successGroupList, t.setMessage("groupID:".concat(e, " type:").concat(n[0].type)).end(), n[0]
                        })).catch((function(n) {
                            t.setError(n).setMessage("groupID:".concat(e)).end()
                        }))
                    }
                }, {
                    key: "setUnjoinedAVChatRoom",
                    value: function(e) {
                        this._unjoinedAVChatRoomList.set(e, 1)
                    }
                }, {
                    key: "deleteUnjoinedAVChatRoom",
                    value: function(e) {
                        this._unjoinedAVChatRoomList.has(e) && this._unjoinedAVChatRoomList.delete(e)
                    }
                }, {
                    key: "isUnjoinedAVChatRoom",
                    value: function(e) {
                        return this._unjoinedAVChatRoomList.has(e)
                    }
                }, {
                    key: "isGroupAttributesUpdatedNotice",
                    value: function(e) {
                        return this._groupAttributesHandler.isGroupAttributesUpdatedNotice(e)
                    }
                }, {
                    key: "updateLocalMainSequenceOnReconnected",
                    value: function() {
                        this._groupAttributesHandler.updateLocalMainSequenceOnReconnected()
                    }
                }, {
                    key: "initGroupAttributes",
                    value: function(e) {
                        return this._groupAttributesHandler.initGroupAttributes(e)
                    }
                }, {
                    key: "setGroupAttributes",
                    value: function(e) {
                        return this._groupAttributesHandler.setGroupAttributes(e)
                    }
                }, {
                    key: "deleteGroupAttributes",
                    value: function(e) {
                        return this._groupAttributesHandler.deleteGroupAttributes(e)
                    }
                }, {
                    key: "getGroupAttributes",
                    value: function(e) {
                        return this._groupAttributesHandler.getGroupAttributes(e)
                    }
                }, {
                    key: "isMessageFromTopic",
                    value: function(e, t) {
                        return 2 === e && !He(t)
                    }
                }, {
                    key: "isMessageFromCommunityOfTopic",
                    value: function(e, t) {
                        return 2 === e && He(t)
                    }
                }, {
                    key: "getMessageExtensions",
                    value: function(e, t) {
                        return Oe.l("".concat(this._n, ".getMessageExtensions startSequence:").concat(t)), this.req({
                            P: wn.GET_GRP_MSG_EXT,
                            data: {
                                groupID: e.to,
                                messageSequence: e.sequence,
                                startSequence: t
                            }
                        })
                    }
                }, {
                    key: "modifyMsgExts",
                    value: function(e, t) {
                        var n = 2 < arguments.length && void 0 !== arguments[2] ? arguments[2] : 1;
                        return Oe.l("".concat(this._n, ".modifyMsgExts operateType:").concat(n)), this.req({
                            P: wn.MODIFY_GRP_MSG_EXT,
                            data: {
                                groupID: e.to,
                                messageSequence: e.sequence,
                                extensionList: t,
                                operateType: n
                            }
                        })
                    }
                }, {
                    key: "_genNotifyReqList",
                    value: function(e) {
                        for (var t, n, o, i, a = [], s = 0, r = e.length; s < r; s++) t = e[s], i = this.getLocalGroupProfile(t).type, n = this._getGroupLastRevokedTime(t), o = 1e3 * Se(), i = {
                            notifyType: 1,
                            limit: 20,
                            type: yt({
                                type: i,
                                groupID: t
                            }) ? E.GRP_COMMUNITY : void 0,
                            groupID: t,
                            beginTime: n,
                            endTime: o
                        }, a.push(i);
                        return a
                    }
                }, {
                    key: "getNotice",
                    value: function(e) {
                        var t = this,
                            n = "".concat(this._n, ".getNotice");
                        0 !== (e = e.filter((function(e) {
                            if (!t.hasLocalGroup(e)) return !1;
                            var n = (e = t.getLocalGroupProfile(e)).type;
                            return e = e.isSupportTopic, !Mt(n) && !e
                        }))).length && (Oe.l("".concat(n, " list:").concat(e)), this.req({
                            P: wn.GET_GRP_NOTIFY,
                            data: {
                                notifyReqList: this._genNotifyReqList(e)
                            }
                        }).then((function(e) {
                            e = e.data.notifyRspList;
                            var o, i, a = [];
                            Je(e) && (o = {
                                dataList: []
                            }, i = "".concat(n, " ok."), e.forEach((function(e) {
                                var n = e.nextRevokedTime,
                                    s = e.groupID,
                                    r = e.notifyList;
                                i += " groupID:".concat(s, " nextRevokedTime:").concat(n, " count:").concat(r.length, "\n"), o.dataList.push({
                                    elements: {
                                        revokedInfos: t._genRevokedInfos(e)
                                    }
                                }), 0 !== n ? (t._setGroupLastRevokedTime(s, n), a.push(s)) : t._setGroupLastRevokedTime(s, 1e3 * Se())
                            })), Oe.l(i), t.onMsgRevoked(o, !1)), 0 < a.length && t.getNotice(a)
                        })).catch((function(e) {
                            Oe.e("".concat(n, " failed. error:"), e)
                        })))
                    }
                }, {
                    key: "_genRevokedInfos",
                    value: function(e) {
                        var n = e.notifyList,
                            o = e.groupID,
                            i = [];
                        return Je(n) && n.forEach((function(e) {
                            i.push({
                                groupID: o,
                                sequence: e.sequence,
                                random: e.random,
                                revokerInfo: t({}, e.revokerInfo)
                            })
                        })), i
                    }
                }, {
                    key: "_getGroupLastRevokedTime",
                    value: function(e) {
                        return this.hasLocalGroup(e) ? this.getLocalGroupProfile(e)._lastRevokedTime : 0
                    }
                }, {
                    key: "_setGroupLastRevokedTime",
                    value: function(e, t) {
                        this.hasLocalGroup(e) && (this.getLocalGroupProfile(e)._lastRevokedTime = t)
                    }
                }, {
                    key: "isGroupCountersNotice",
                    value: function(e) {
                        return this._groupCountersHandler.isGroupCountersNotice(e)
                    }
                }, {
                    key: "setGroupCounters",
                    value: function(e) {
                        return this._groupCountersHandler.setGroupCounters(e)
                    }
                }, {
                    key: "increaseGroupCounter",
                    value: function(e) {
                        return this._groupCountersHandler.increaseGroupCounter(e)
                    }
                }, {
                    key: "decreaseGroupCounter",
                    value: function(e) {
                        return this._groupCountersHandler.decreaseGroupCounter(e)
                    }
                }, {
                    key: "getGroupCounters",
                    value: function(e) {
                        return this._groupCountersHandler.getGroupCounters(e)
                    }
                }, {
                    key: "getGroupMemberHandler",
                    value: function() {
                        return this._groupMemberHandler
                    }
                }, {
                    key: "getGroupMemberList",
                    value: function(e) {
                        return this._groupMemberHandler.getGroupMemberList(e)
                    }
                }, {
                    key: "getGroupMemberProfile",
                    value: function(e) {
                        return this._groupMemberHandler.getGroupMemberProfile(e)
                    }
                }, {
                    key: "addGroupMember",
                    value: function(e) {
                        return this._groupMemberHandler.addGroupMember(e)
                    }
                }, {
                    key: "deleteGroupMember",
                    value: function(e) {
                        return this._groupMemberHandler.deleteGroupMember(e)
                    }
                }, {
                    key: "setGroupMemberMuteTime",
                    value: function(e) {
                        return this._groupMemberHandler.setGroupMemberMuteTime(e)
                    }
                }, {
                    key: "setGroupMemberRole",
                    value: function(e) {
                        return this._groupMemberHandler.setGroupMemberRole(e)
                    }
                }, {
                    key: "setGroupMemberNameCard",
                    value: function(e) {
                        return this._groupMemberHandler.setGroupMemberNameCard(e)
                    }
                }, {
                    key: "setGroupMemberCustomField",
                    value: function(e) {
                        return this._groupMemberHandler.setGroupMemberCustomField(e)
                    }
                }, {
                    key: "markGroupMemberList",
                    value: function(e) {
                        return this._groupMemberHandler.markGroupMemberList(e)
                    }
                }, {
                    key: "modifyGroupMemberInfo",
                    value: function(e) {
                        return this._groupMemberHandler.modifyGroupMemberInfo(e)
                    }
                }, {
                    key: "restartPolling",
                    value: function() {
                        this._AVChatRoomHandler.restartPolling()
                    }
                }, {
                    key: "getPollingTimerID",
                    value: function(e) {
                        if (!e) return -1;
                        var t = this.getLocalGroupProfile(e);
                        return t && Mt(t.type) ? this._AVChatRoomHandler.getPollingTimerID(e) : -1
                    }
                }, {
                    key: "_canIUseJoinOption",
                    value: function(e) {
                        return e === E.GRP_PUBLIC || yt({
                            type: e
                        })
                    }
                }, {
                    key: "_silentlyGetGroupProfile",
                    value: function(e, t) {
                        var n = setTimeout(this.getGroupProfile.bind(this, {
                            groupID: t
                        }), 3e3);
                        this._timeoutIDs.push(n), Oe.l("".concat(this._n, "._silentlyGetGroupProfile errorCode:").concat(e, " groupID:").concat(t, " timeoutIDs:").concat(this._timeoutIDs))
                    }
                }, {
                    key: "_clearTimeoutIDs",
                    value: function() {
                        this._timeoutIDs.forEach((function(e) {
                            clearTimeout(e)
                        })), this._timeoutIDs = []
                    }
                }, {
                    key: "startMessageLongPolling",
                    value: function(e) {
                        var t = e.groupID,
                            n = e.longPollingKey,
                            o = (e = void 0 === (e = e.longPollingSequence) ? 1 : e, this.get(12).isUnlimitedAVChatRoom()),
                            i = (this._AVChatRoomHandler.hasPollingInstance(t) && this.stopMessageLongPolling({
                                groupID: t
                            }), this._AVChatRoomHandler.getJoinedLiveList());
                        return !o && 0 < i.length && this.stopMessageLongPolling({
                            groupID: i[0]
                        }), o = new oi({
                            groupID: t,
                            type: E.GRP_LIVE
                        }), Oe.l("".concat(this._n, ".startMessageLongPolling groupID:").concat(t, " longPollingKey:").concat(n, " longPollingSequence:").concat(e)), this._AVChatRoomHandler.startRunLoop({
                            group: o,
                            longPollingKey: n,
                            startSeq: e
                        })
                    }
                }, {
                    key: "stopMessageLongPolling",
                    value: function(e) {
                        e = e.groupID;
                        var t = this.get(11);
                        return this._AVChatRoomHandler.reset(e), this._deleteLocalGroup(e), t.deleteLocalConv("".concat(E.CONV_GROUP).concat(e)), Oe.l("".concat(this._n, ".stopMessageLongPolling ok, groupID:").concat(e)), In({
                            groupID: e
                        })
                    }
                }, {
                    key: "reset",
                    value: function() {
                        this.groupMap.clear(), this._unjoinedAVChatRoomList.clear(), this._receiptDetailCompleteMap.clear(), this._onlineMemberCountMap.clear(), this._commonGroupHandler.reset(), this._groupSystemNoticeHandler.reset(), this._groupTipsHandler.reset(), this._groupAttributesHandler.reset(), this._groupCountersHandler.reset(), this._AVChatRoomHandler.reset(), this._groupMemberHandler.reset(), this._clearTimeoutIDs()
                    }
                }]), Vi),
                Ci = ["topicID", "topicName", "avatar", "introduction", "notification", "unreadCount", "muteAllMembers", "customData", "groupAtInfoList", "nextMessageSeq", "selfInfo"],
                Ti = (s(xi, [{
                    key: "_initTopic",
                    value: function(e) {
                        for (var t in e) Ci.indexOf(t) < 0 || ("selfInfo" === t ? this.updateSelfInfo(e[t]) : this[t] = "muteAllMembers" === t ? 1 === e[t] : e[t])
                    }
                }, {
                    key: "updateUnreadCount",
                    value: function() {
                        this.unreadCount = 0 < arguments.length && void 0 !== arguments[0] ? arguments[0] : 0
                    }
                }, {
                    key: "updateNextMessageSeq",
                    value: function(e) {
                        this.nextMessageSeq = e
                    }
                }, {
                    key: "updateLastMessage",
                    value: function(e) {
                        this.lastMessage = Yo(e)
                    }
                }, {
                    key: "updateGroupAtInfoList",
                    value: function(e) {
                        this.groupAtInfoList = JSON.parse(JSON.stringify(e))
                    }
                }, {
                    key: "updateTopic",
                    value: function(e) {
                        ut(e.selfInfo) || this.updateSelfInfo(e.selfInfo), ut(e.muteAllMembers) || (this.muteAllMembers = 1 === e.muteAllMembers), Qe(this, e, ["groupID", "lastMessageTime", "selfInfo", "muteAllMembers", "lastMsg"])
                    }
                }, {
                    key: "updateSelfInfo",
                    value: function(e) {
                        return 0 === Qe(this.selfInfo, e, [], [""])
                    }
                }, {
                    key: "reduceUnreadCount",
                    value: function() {
                        return 1 <= this.unreadCount && (--this.unreadCount, !0)
                    }
                }, {
                    key: "isLastMessageRevoked",
                    value: function(e) {
                        return e.sequence === this.lastMessage.lastSequence
                    }
                }, {
                    key: "setLastMessageRevoked",
                    value: function(e) {
                        this.lastMessage.isRevoked = e
                    }
                }, {
                    key: "setLastMessageRevoker",
                    value: function(e) {
                        this.lastMessage.revoker = e
                    }
                }]), xi),
                Di = (c(qi, Rn), zo = g(qi), s(qi, [{
                    key: "_onCloudConfig",
                    value: function() {
                        var e = this.getCloudConfig("topic_cache_time"),
                            t = this.getCloudConfig("topic_last_active_time");
                        ut(e) || (this.TOPIC_CACHE_TIME = Number(e)), ut(t) || (this.TOPIC_LAST_ACTIVE_TIME = Number(t))
                    }
                }, {
                    key: "onTopicCreated",
                    value: function(e) {
                        var t = e.groupID;
                        this.resetGetTopicTime(t), this.emitOEvt(D.TOPIC_CREATED, e)
                    }
                }, {
                    key: "onTopicDeleted",
                    value: function(e) {
                        var t = this,
                            n = e.groupID,
                            o = e.topicIDList;
                        (void 0 === o ? [] : o).forEach((function(e) {
                            t._deleteLocalTopic(n, e)
                        })), this.emitOEvt(D.TOPIC_DELETED, e)
                    }
                }, {
                    key: "onTopicProfileUpdated",
                    value: function(e) {
                        var t = e.groupID,
                            n = e.topicID;
                        (n = this.getLocalTopic(t, n)) && (n.updateTopic(e), this.emitOEvt(D.TOPIC_UPDATED, {
                            groupID: t,
                            topic: n
                        }))
                    }
                }, {
                    key: "onTopicLatestMsg",
                    value: function(e) {
                        var t, n, o = (e = e || {}).topicLatestMessage;
                        e = e.excludedUnreadSequenceList, He(o) || (t = o.groupProfile.topicID, o.conversationType = E.CONV_GROUP, o.to = t, (n = new To(o)).setElement(o.elements), this.updateUnreadCountAndLastMsg(t, n, e))
                    }
                }, {
                    key: "onMessageRemindTypeUpdated",
                    value: function(e) {
                        var t, n = e.groupID,
                            o = e.topicID,
                            i = (e = e.messageRemindType, this.getLocalTopic(n, o));
                        i && ((t = i.updateSelfInfo({
                            messageRemindType: e
                        })) && this.emitOEvt(D.TOPIC_UPDATED, {
                            groupID: n,
                            topic: i
                        }), Oe.l("".concat(this._n, ".onMessageRemindTypeUpdated topicID:").concat(o, " messageRemindType:").concat(e, " isUpdated:").concat(t)))
                    }
                }, {
                    key: "onAtInfoUpdated",
                    value: function(e) {
                        var t = e.topicID,
                            n = (e = e.groupAtInfoList, wt(t));
                        (t = this.getLocalTopic(n, t)) && !ut(e) && (t.updateGroupAtInfoList(e), this.emitOEvt(D.TOPIC_UPDATED, {
                            groupID: n,
                            topic: t
                        }))
                    }
                }, {
                    key: "onUnreadCountUpdatedFromConv",
                    value: function(e) {
                        var t = 1 < arguments.length && void 0 !== arguments[1] ? arguments[1] : 0,
                            n = wt(e);
                        (e = this.getLocalTopic(n, e)) && e.unreadCount !== t && (e.updateUnreadCount(t), 0 === t && e.updateSelfInfo({
                            readedSequence: e.lastMessage.lastSequence
                        }), this.emitOEvt(D.TOPIC_UPDATED, {
                            groupID: n,
                            topic: e
                        }))
                    }
                }, {
                    key: "onMessageSent",
                    value: function(e) {
                        var t, n, o = e.groupID,
                            i = e.topicID;
                        e = e.lastMessage, !(i = this.getLocalTopic(o, i)) || (n = (t = void 0 === (t = e.sequence) ? 0 : t) + 1) > i.nextMessageSeq && (i.updateNextMessageSeq(n), i.updateLastMessage(e), i.updateSelfInfo({
                            readedSequence: t
                        }), i.updateUnreadCount(0), this.emitOEvt(D.TOPIC_UPDATED, {
                            groupID: o,
                            topic: i
                        }))
                    }
                }, {
                    key: "onMessageModified",
                    value: function(e) {
                        var t, n = e.to,
                            o = e.time,
                            i = e.sequence,
                            a = e.elements,
                            s = e.cloudCustomData,
                            r = e.messageVersion,
                            c = wt(n),
                            u = this.getLocalTopic(c, n);
                        u && (t = u.lastMessage, Oe.d("".concat(this._n, ".onMessageModified topicID:").concat(n, " lastMessage:"), JSON.stringify(t), "options:", JSON.stringify(e)), t && (null === t.payload || t.lastTime === o && t.lastSequence === i && t.version !== r) && (t.type = a[0].type, t.payload = a[0].content, t.messageForShow = Ft(t.type, t.payload, this.isIntl()), t.cloudCustomData = s, t.version = r, t.lastSequence = i, t.lastTime = o, this.emitOEvt(D.TOPIC_UPDATED, {
                            groupID: c,
                            topic: u
                        })))
                    }
                }, {
                    key: "onMessageRevoked",
                    value: function(e) {
                        var t, n, o, i = this;
                        0 !== e.length && (n = t = null, o = !1, e.forEach((function(e) {
                            var a = e.to;
                            n = wt(a), (t = i.getLocalTopic(n, a)) && (t.reduceUnreadCount() && (o = !0), t.isLastMessageRevoked(e) && (t.setLastMessageRevoked(!0), t.setLastMessageRevoker(e.revoker), o = !0), (a = t.selfInfo.excludedUnreadSequenceList || []).push(e.sequence), t.updateSelfInfo({
                                excludedUnreadSequenceList: a
                            }))
                        })), o && this.emitOEvt(D.TOPIC_UPDATED, {
                            groupID: n,
                            topic: t
                        }))
                    }
                }, {
                    key: "isLastMessageRevoked",
                    value: function(e) {
                        var t = e.topicID,
                            n = (e = e.sequence, wt(t));
                        return n = this.getLocalTopic(n, t), t = !1, n ? n.isLastMessageRevoked({
                            sequence: e
                        }) : t
                    }
                }, {
                    key: "updateUnreadCountAndLastMsg",
                    value: function(e, t, n) {
                        var o, i = wt(e),
                            a = this.getLocalTopic(i, e);
                        a && (o = a.selfInfo.excludedUnreadSequenceList || [], ut(n) || (o = n), t._isExcludedFromUnreadCount && o.push(t.sequence), a.updateSelfInfo({
                            excludedUnreadSequenceList: o
                        }), Oe.l("".concat(this._n, ".updateUnreadCountAndLastMsg seq:").concat(t.sequence, " lastSeq:").concat(a.lastMessage.lastSequence)), t.sequence > a.lastMessage.lastSequence && (a.updateLastMessage(t), n = t.sequence + 1, a.updateNextMessageSeq(n), o = this._computeUnreadCount(a), a.updateUnreadCount(o), (t = this.get(11).getLocalConversation("".concat(E.CONV_GROUP).concat(e))) && t.updateUnreadCount({
                            nextUnreadCount: o,
                            isFromGetConversations: !0
                        }), this.emitOEvt(D.TOPIC_UPDATED, {
                            groupID: i,
                            topic: a
                        })))
                    }
                }, {
                    key: "getJoinedCommunityList",
                    value: function() {
                        return this.get(7).syncCommunityWithTopic()
                    }
                }, {
                    key: "createTopicInCommunity",
                    value: function(e) {
                        var n = this,
                            o = "".concat(this._n, ".").concat("createTopicInCommunity"),
                            i = e.topicID;
                        if (!ut(i) && !Ct(i)) return Mn({
                            code: Un.ILLEGAL_TOPIC_ID
                        });
                        if (e.topicName && !1 === this._filterProfanity("topicName", e)) return Mn({
                            code: Un.PROFANITY_FOUND
                        });
                        if (e.introduction && !1 === this._filterProfanity("introduction", e)) return Mn({
                            code: Un.PROFANITY_FOUND
                        });
                        if (e.notification && !1 === this._filterProfanity("notification", e)) return Mn({
                            code: Un.PROFANITY_FOUND
                        });
                        var a = new Qn("createTopicInCommunity");
                        return this.req({
                            P: wn.CREATE_TOPIC,
                            data: t({}, e)
                        }).then((function(i) {
                            return i = i.data.topicID, a.setMessage("topicID:".concat(i)).end(), Oe.l("".concat(o, " ok. topicID:").concat(i)), n._updateTopicMap([t(t({}, e), {}, {
                                topicID: i
                            })]), vn({
                                topicID: i
                            })
                        })).catch((function(e) {
                            return a.setError(e).end(), Oe.e("".concat(o, " failed. error:"), e), Mn(e)
                        }))
                    }
                }, {
                    key: "deleteTopicFromCommunity",
                    value: function(e) {
                        var t = this,
                            n = "".concat(this._n, ".").concat("deleteTopicFromCommunity"),
                            o = e.groupID,
                            i = (e = void 0 === (e = e.topicIDList) ? [] : e, new Qn("deleteTopicFromCommunity"));
                        return i.setMessage("groupID:".concat(o, " topicIDList:").concat(e)), this.req({
                            P: wn.DEL_TOPIC,
                            data: {
                                groupID: o,
                                topicIDList: e
                            }
                        }).then((function(e) {
                            e = e.data.resultList;
                            var a = [],
                                s = [];
                            return (void 0 === e ? [] : e).forEach((function(e) {
                                var t = e.topicID,
                                    n = e.errorCode;
                                e = e.errorInfo, 0 === n ? a.push({
                                    topicID: t
                                }) : s.push({
                                    topicID: t,
                                    code: n,
                                    message: e
                                })
                            })), e = "success count:".concat(a.length, ", fail count:").concat(s.length), i.setMoreMessage(e).end(), Oe.l("".concat(n, " ok. ").concat(e)), a.forEach((function(e) {
                                t._deleteLocalTopic(o, e.topicID)
                            })), vn({
                                successTopicList: a,
                                failureTopicList: s
                            })
                        })).catch((function(e) {
                            return i.setError(e).end(), Oe.e("".concat(n, " failed. error:"), e), Mn(e)
                        }))
                    }
                }, {
                    key: "updateTopicProfile",
                    value: function(e) {
                        var n = this,
                            o = "".concat(this._n, ".").concat("updateTopicProfile");
                        if (Oe.l("".concat(o, " options:"), e), e.topicName && !1 === this._filterProfanity("topicName", e)) return Mn({
                            code: Un.PROFANITY_FOUND
                        });
                        if (e.introduction && !1 === this._filterProfanity("introduction", e)) return Mn({
                            code: Un.PROFANITY_FOUND
                        });
                        if (e.notification && !1 === this._filterProfanity("notification", e)) return Mn({
                            code: Un.PROFANITY_FOUND
                        });
                        var i = new Qn("updateTopicProfile");
                        return i.setMessage("groupID:".concat(e.groupID, " topicID:").concat(e.topicID)), ut(e.muteAllMembers) || (e.muteAllMembers = !0 === e.muteAllMembers ? "On" : "Off"), this.req({
                            P: wn.UPDATE_TOPIC_PROFILE,
                            data: t({}, e)
                        }).then((function() {
                            return i.end(), Oe.l("".concat(o, " ok")), n._updateTopicMap([e]), vn({
                                topic: n.getLocalTopic(e.groupID, e.topicID)
                            })
                        })).catch((function(e) {
                            return i.setError(e).end(), Oe.e("".concat(o, " failed. error:"), e), Mn(e)
                        }))
                    }
                }, {
                    key: "getTopicList",
                    value: function(e) {
                        var n = this,
                            o = "".concat(this._n, ".").concat("getTopicList"),
                            i = e.groupID,
                            a = 0 === (e = void 0 === (e = e.topicIDList) ? [] : e).length,
                            s = new Qn("getTopicList");
                        if (s.setMessage("groupID:".concat(i)), this._getTopicTimeMap.has(i)) {
                            var r = (c = this._getTopicTimeMap.get(i)).isGetAll,
                                c = c.time;
                            if ((r || !r && !a) && Date.now() - c < 1e3 * this.TOPIC_CACHE_TIME && (r = this._getLocalTopicList(i, e), a || r.length === e.length)) return s.setMoreMessage("from cache, topic count:".concat(r.length)).end(), Oe.l("".concat(o, " groupID:").concat(i, " from cache, topic count:").concat(r.length)), In({
                                successTopicList: r,
                                failureTopicList: []
                            })
                        }
                        return this.req({
                            P: wn.GET_TOPIC_LIST,
                            data: {
                                groupID: i,
                                topicIDList: e
                            }
                        }).then((function(e) {
                            e = e.data.topicInfoList;
                            var r = [],
                                c = [],
                                u = [];
                            return (void 0 === e ? [] : e).forEach((function(e) {
                                var n = e.topic,
                                    o = e.selfInfo,
                                    i = e.errorCode,
                                    a = (e = e.errorInfo, n.topicID);
                                0 === i ? (r.push(t(t({}, n), {}, {
                                    selfInfo: o
                                })), c.push(a)) : u.push({
                                    topicID: a,
                                    code: i,
                                    message: e
                                })
                            })), n._updateTopicMap(r), n._handleTopicAtInfo(r), e = "success count:".concat(c.length, ", fail count:").concat(u.length), s.setMoreMessage(e).end(), Oe.l("".concat(o, " groupID:").concat(i, " from remote, ").concat(e)), e = [], He(c) || (n._getTopicTimeMap.set(i, {
                                time: Date.now(),
                                isGetAll: a
                            }), e = n._getLocalTopicList(i, c)), vn({
                                successTopicList: e,
                                failureTopicList: u
                            })
                        })).catch((function(e) {
                            return s.setError(e).end(), Oe.e("".concat(o, " failed. error:"), e), Mn(e)
                        }))
                    }
                }, {
                    key: "hasLocalTopic",
                    value: function(e, t) {
                        return !!this._topicMap.has(e) && this._topicMap.get(e).has(t)
                    }
                }, {
                    key: "getLocalTopic",
                    value: function(e, t) {
                        var n = null;
                        return this._topicMap.has(e) ? this._topicMap.get(e).get(t) : n
                    }
                }, {
                    key: "_getLocalTopicList",
                    value: function(e) {
                        var t = 1 < arguments.length && void 0 !== arguments[1] ? arguments[1] : [],
                            n = [];
                        return (e = this._topicMap.get(e)) && (n = m(e.values())), 0 === t.length ? n : n.filter((function(e) {
                            return t.includes(e.topicID)
                        }))
                    }
                }, {
                    key: "_deleteLocalTopic",
                    value: function(e, t) {
                        this._topicMap.has(e) && this._topicMap.get(e).has(t) && (this._topicMap.get(e).delete(t), Oe.l("".concat(this._n, "._deleteLocalTopic groupID:").concat(e, " topicID:").concat(t)))
                    }
                }, {
                    key: "_updateTopicMap",
                    value: function(e) {
                        var t = this,
                            n = [];
                        e.forEach((function(e) {
                            var o = e.groupID,
                                i = e.topicID,
                                a = null;
                            t._topicMap.has(o) || t._topicMap.set(o, new Map), t._topicMap.get(o).has(i) ? (a = t._topicMap.get(o).get(i)).updateTopic(e) : (t._getTopicLastMessage(e), a = new Ti(e, t.isIntl()), t._topicMap.get(o).set(i, a)), e = t._computeUnreadCount(a), a.updateUnreadCount(e), n.push({
                                conversationID: "".concat(E.CONV_GROUP).concat(i),
                                type: E.CONV_TOPIC,
                                unreadCount: e
                            })
                        })), 0 < n.length && this.get(11).updateTopicConversation(n)
                    }
                }, {
                    key: "resetGetTopicTime",
                    value: function(e) {
                        var t = this;
                        ut(e) ? m(this._getTopicTimeMap.keys()).forEach((function(e) {
                            t._getTopicTimeMap.set(e, 0)
                        })) : this._getTopicTimeMap.set(e, 0)
                    }
                }, {
                    key: "getTopicListOnReconnected",
                    value: function() {
                        var e = this,
                            t = m(this._topicMap.keys()),
                            n = [],
                            o = this.get(11);
                        t.forEach((function(t) {
                            var i = [],
                                a = e._getLocalTopicList(t);
                            o.deleteTopicRoamingInfo(t), a.forEach((function(t) {
                                var n = void 0 === (n = t.lastMessage.lastTime) ? 0 : n;
                                Date.now() - 1e3 * n < 1e3 * e.TOPIC_LAST_ACTIVE_TIME && i.push(t.topicID)
                            })), 0 < i.length && n.push({
                                groupID: t,
                                topicIDList: i
                            })
                        })), Oe.l("".concat(this._n, ".getTopicListOnReconnected. active community count:").concat(n.length)), this._relayGetTopicList(n)
                    }
                }, {
                    key: "_relayGetTopicList",
                    value: function(e) {
                        var t, n, o, i = this;
                        0 !== e.length && (n = 5 < (t = e.shift()).topicIDList.length ? "topicIDList.length:".concat(t.topicIDList.length) : "topicIDList:".concat(t.topicIDList), (o = new Qn("relayGetTopicList")).setMessage(n), Oe.l("".concat(this._n, "._relayGetTopicList. ").concat(n)), this.getTopicList(t).then((function() {
                            o.end(), i._relayGetTopicList(e)
                        })).catch((function(t) {
                            o.setError(t).end(), i._relayGetTopicList(e)
                        })))
                    }
                }, {
                    key: "_handleTopicAtInfo",
                    value: function(e) {
                        var n = this;
                        0 !== e.length && e.forEach((function(e) {
                            var o = e.groupID,
                                i = e.topicID,
                                a = (e = e.groupAtInfoList, []);
                            ut(e) || (e.forEach((function(e) {
                                a.push(t(t({}, e), {}, {
                                    groupID: o,
                                    topicID: i
                                }))
                            })), n.get(11).onNewGroupAtTips({
                                dataList: a
                            }))
                        }))
                    }
                }, {
                    key: "_getTopicLastMessage",
                    value: function(e) {
                        var t;
                        ut(e.lastMsg) || (t = {
                            time: e.lastMsg.time,
                            sequence: e.lastMsg.sequence,
                            from: e.lastMsg.from,
                            payload: e.lastMsg.elements[0] ? e.lastMsg.elements[0].content : null,
                            type: e.lastMsg.elements[0] ? e.lastMsg.elements[0].type : "",
                            nick: e.lastMsg.nick,
                            avatar: e.lastMsg.avatar,
                            version: e.lastMsg.messageVersion,
                            cloudCustomData: e.lastMsg.cloudCustomData,
                            isRevoked: 2 === e.lastMsg.isPlaceMessage,
                            revoker: He(e.lastMsg.revokerInfo) ? null : e.lastMsg.revokerInfo.revoker
                        }, e.lastMessage = t)
                    }
                }, {
                    key: "deleteTopicListInCommunity",
                    value: function(e) {
                        var t = this,
                            n = this._getLocalTopicList(e),
                            o = this.get(11);
                        n.forEach((function(n) {
                            n = n.topicID, t._deleteLocalTopic(e, n), t._getTopicTimeMap.delete(e), o.deleteLocalConv("".concat(E.CONV_GROUP).concat(n))
                        }))
                    }
                }, {
                    key: "_computeUnreadCount",
                    value: function(e) {
                        var t, n = (i = e.selfInfo).excludedUnreadSequenceList,
                            o = i.readedSequence,
                            i = e.nextMessageSeq - e.selfInfo.readedSequence - 1;
                        return Je(n) && (t = 0, n.forEach((function(n) {
                            o < n && n <= e.nextMessageSeq - 1 && (t += 1)
                        })), 1 <= t && (i -= t)), i < 0 ? 0 : i
                    }
                }, {
                    key: "_filterProfanity",
                    value: function(e, t) {
                        if (!(o = this.get(29))) return !0;
                        var n = (o = o.filterText(t[e], b)).isAllowedToSend,
                            o = o.modifiedText;
                        return !0 === n && (t[e] = o, !0)
                    }
                }, {
                    key: "getMessageExtensions",
                    value: function(e, t) {
                        Oe.l("".concat(this._n, ".getMessageExtensions startSequence:").concat(t));
                        var n = wt(e.to);
                        return this.req({
                            P: wn.GET_GRP_MSG_EXT,
                            data: {
                                groupID: n,
                                topicID: e.to,
                                messageSequence: e.sequence,
                                startSequence: t
                            }
                        })
                    }
                }, {
                    key: "modifyMsgExts",
                    value: function(e, t) {
                        var n = 2 < arguments.length && void 0 !== arguments[2] ? arguments[2] : 1,
                            o = (Oe.l("".concat(this._n, ".modifyMsgExts operateType:").concat(n)), wt(e.to));
                        return this.req({
                            P: wn.MODIFY_GRP_MSG_EXT,
                            data: {
                                groupID: o,
                                topicID: e.to,
                                messageSequence: e.sequence,
                                extensionList: t,
                                operateType: n
                            }
                        })
                    }
                }, {
                    key: "reset",
                    value: function() {
                        Oe.l("".concat(this._n, ".reset")), this._topicMap.clear(), this._getTopicTimeMap.clear(), this.TOPIC_CACHE_TIME = 300, this.TOPIC_LAST_ACTIVE_TIME = 3600
                    }
                }]), qi),
                Ei = (s(Fi, [{
                    key: "setExpirationTime",
                    value: function(e) {
                        this.expirationTime = e
                    }
                }, {
                    key: "getUserProfile",
                    value: function(e) {
                        var t = this,
                            n = "".concat(this._n, ".").concat("getUserProfile"),
                            o = e.userIDList;
                        e.fromAccount = this._userM.getMyAccount(), 100 < o.length && (Oe.w("".concat(n, " ").concat(Ht(100))), o.length = 100);
                        for (var i, a = [], s = [], r = 0, c = o.length; r < c; r++) i = o[r], this._userM.isMyFriend(i) && this._contains(i) ? s.push(this._getProfileFromMap(i)) : a.push(i);
                        if (0 === a.length) return In(s);
                        e.toAccount = a;
                        var u = e.bFromGetMyProfile || !1,
                            l = [],
                            d = (e.toAccount.forEach((function(e) {
                                l.push({
                                    toAccount: e,
                                    standardSequence: 0,
                                    customSequence: 0
                                })
                            })), e.userItem = l, new Qn("getUserProfile"));
                        return d.setMessage(5 < o.length ? "userIDList.length:".concat(o.length) : "userIDList:".concat(o)), this._userM.req({
                            P: wn.GET_USER_PROFILE,
                            data: e
                        }).then((function(e) {
                            return d.end(), Oe.i("".concat(n, " ok")), e = t._handleResponse(e).concat(s), vn(u ? e[0] : e)
                        })).catch((function(e) {
                            return d.setError(e).end(), Oe.e("".concat(n, " failed. error:"), e), Mn(e)
                        }))
                    }
                }, {
                    key: "getMyProfile",
                    value: function() {
                        var e, t = this._userM.getMyAccount(),
                            n = "".concat(this._n, ".getMyProfile");
                        return Oe.l("".concat(n, " myAccount:").concat(t)), this._fill(), this._contains(t) ? (e = this._getProfileFromMap(t), Oe.d("".concat(n, " from cache, myProfile:").concat(JSON.stringify(e))), In(e)) : this.getUserProfile({
                            fromAccount: t,
                            userIDList: [t],
                            bFromGetMyProfile: !0
                        })
                    }
                }, {
                    key: "_handleResponse",
                    value: function(e) {
                        var t = e.data.userProfileItem;
                        if (!Je(t)) return [];
                        for (var n = [], o = (e = Date.now(), 0), i = t.length; o < i; o++) {
                            var a = (s = t[o]).to,
                                s = s.profileItem;
                            "@TLS#NOT_FOUND" !== a && "" !== a && (a = this._update(a, this._getLatestProfileFromResponse(a, s)).latestProfile, n.push(a))
                        }
                        return Oe.l("".concat(this._n, "._handleResponse cost:").concat(Yt(e))), n
                    }
                }, {
                    key: "_getLatestProfileFromResponse",
                    value: function(e, t) {
                        var n = {
                            userID: e,
                            profileCustomField: []
                        };
                        if (!He(t))
                            for (var o = 0, i = t.length; o < i; o++)
                                if (-1 < t[o].tag.indexOf("Tag_Profile_Custom")) n.profileCustomField.push({
                                    key: t[o].tag,
                                    value: t[o].value
                                });
                                else switch (t[o].tag) {
                                    case Ge.NICK:
                                        n.nick = t[o].value;
                                        break;
                                    case Ge.GENDER:
                                        n.gender = t[o].value;
                                        break;
                                    case Ge.BIRTHDAY:
                                        n.birthday = t[o].value;
                                        break;
                                    case Ge.LOCATION:
                                        n.location = t[o].value;
                                        break;
                                    case Ge.SELFSIGNATURE:
                                        n.selfSignature = t[o].value;
                                        break;
                                    case Ge.ALLOWTYPE:
                                        n.allowType = t[o].value;
                                        break;
                                    case Ge.LANGUAGE:
                                        n.language = t[o].value;
                                        break;
                                    case Ge.AVATAR:
                                        n.avatar = t[o].value;
                                        break;
                                    case Ge.MESSAGESETTINGS:
                                        n.messageSettings = t[o].value;
                                        break;
                                    case Ge.ADMINFORBIDTYPE:
                                        n.adminForbidType = t[o].value;
                                        break;
                                    case Ge.LEVEL:
                                        n.level = t[o].value;
                                        break;
                                    case Ge.ROLE:
                                        n.role = t[o].value;
                                        break;
                                    default:
                                        Oe.w("".concat(this._n, "._getLatestProfileFromResponse unknown tag:"), t[o].tag, t[o].value)
                                }
                                return n
                    }
                }, {
                    key: "updateMyProfile",
                    value: function(e) {
                        var t = this,
                            n = "".concat(this._n, ".").concat("updateMyProfile");
                        if (e.nick && !1 === this._userM.filterProfanity("nick", e)) return Mn({
                            code: Un.PROFANITY_FOUND
                        });
                        if (e.selfSignature && !1 === this._userM.filterProfanity("selfSignature", e)) return Mn({
                            code: Un.PROFANITY_FOUND
                        });
                        var o = new Qn("updateMyProfile"),
                            i = (o.setMessage(JSON.stringify(e)), (new ei).validate(e));
                        if (!i.valid) return o.setCode(Un.UPDATE_PROFILE_INVALID_PARAM).setMoreMessage("info:".concat(i.tips)).end(), Oe.e("".concat(n, " info:").concat(i.tips)), Mn({
                            code: Un.UPDATE_PROFILE_INVALID_PARAM
                        });
                        var a, s = [];
                        for (a in e) Object.prototype.hasOwnProperty.call(e, a) && ("profileCustomField" === a ? e.profileCustomField.forEach((function(e) {
                            s.push({
                                tag: e.key,
                                value: e.value
                            })
                        })) : s.push({
                            tag: Ge[a.toUpperCase()],
                            value: e[a]
                        }));
                        if (0 === s.length) return i = new Pn({
                            code: Un.UPDATE_PROFILE_NO_KEY
                        }), o.setError(i).end(), Oe.e("".concat(n, " failed. error:"), i), Mn(i);
                        var r = this._userM.getMyAccount();
                        return this._userM.req({
                            P: wn.UPDATE_MY_PROFILE,
                            data: {
                                fromAccount: r,
                                profileItem: s
                            }
                        }).then((function(i) {
                            o.end(), Oe.i("".concat(n, " ok"));
                            var a = (s = t._update(r, e)).isProfileUpdated,
                                s = s.latestProfile;
                            return !0 === a && t._userM.emitOEvt(D.PROFILE_UPDATED, [s]), In(s)
                        })).catch((function(e) {
                            return o.setError(e).end(), Oe.e("".concat(n, " failed. error:"), e), Mn(e)
                        }))
                    }
                }, {
                    key: "onProfileModified",
                    value: function(e) {
                        var t = e.dataList;
                        if (!He(t)) {
                            var n = t.length;
                            Oe.d("".concat(this._n, ".onProfileModified count:").concat(n, " dataList:"), e.dataList);
                            for (var o = [], i = 0; i < n; i++) {
                                var a = t[i].userID,
                                    s = (a = this._update(a, this._getLatestProfileFromResponse(a, t[i].profileList))).isProfileUpdated;
                                a = a.latestProfile, !0 === s && o.push(a)
                            }
                            0 < o.length && (this._userM.emitIEvt(qo.PROFILE_UPDATED, o), this._userM.emitOEvt(D.PROFILE_UPDATED, o))
                        }
                    }
                }, {
                    key: "_fill",
                    value: function() {
                        if (0 === this.accountProfileMap.size) {
                            for (var e = this._getCachedProfiles(), t = Date.now(), n = 0, o = e.length; n < o; n++) t - e[n].lastUpdatedTime < this.expirationTime && this.accountProfileMap.set(e[n].userID, e[n]);
                            Oe.l("".concat(this._n, "._fill from cache, size:").concat(this.accountProfileMap.size))
                        }
                    }
                }, {
                    key: "_update",
                    value: function(e, t) {
                        var n, o = !1,
                            i = Date.now();
                        return this._contains(e) ? (n = this._getProfileFromMap(e), t.profileCustomField && !0 === mt(n.profileCustomField, t.profileCustomField) && (n.lastUpdatedTime = i, o = !0), 0 < Qe(n, t, ["profileCustomField"]) && (n.lastUpdatedTime = i, o = !0)) : (n = new ei(t), !this._userM.isMyFriend(e) && e !== this._userM.getMyAccount() || (n.lastUpdatedTime = i, o = !0, this.accountProfileMap.set(e, n))), this._flush(e === this._userM.getMyAccount()), !0 === o && Oe.l("".concat(this._n, "._update account:").concat(e, " isUpdated:").concat(o)), {
                            isProfileUpdated: o,
                            latestProfile: n
                        }
                    }
                }, {
                    key: "_flush",
                    value: function(e) {
                        var t = m(this.accountProfileMap.values()),
                            n = this._userM.getStorageModule();
                        Oe.d("".concat(this._n, "._flush length:").concat(t.length, " flushAtOnce:").concat(e)), n.setItem(this.TAG, t, e)
                    }
                }, {
                    key: "_contains",
                    value: function(e) {
                        return this.accountProfileMap.has(e)
                    }
                }, {
                    key: "_getProfileFromMap",
                    value: function(e) {
                        return this.accountProfileMap.get(e)
                    }
                }, {
                    key: "_getCachedProfiles",
                    value: function() {
                        var e = this._userM.getStorageModule().getItem(this.TAG);
                        return He(e) ? [] : e
                    }
                }, {
                    key: "onConvProfileUpdated",
                    value: function(e) {
                        for (var t, n, o = [], i = 0, a = e.length; i < a; i++) n = (t = e[i]).userID, this._userM.isMyFriend(n) && (this._contains(n) ? 0 < Qe(this._getProfileFromMap(n), t) && o.push(n) : o.push(t.userID));
                        0 !== o.length && (Oe.l("".concat(this._n, ".onConvProfileUpdated toAccountList:").concat(o)), this.getUserProfile({
                            userIDList: o
                        }))
                    }
                }, {
                    key: "getNickAndAvatarByUserID",
                    value: function(e) {
                        return this._contains(e) ? {
                            nick: (e = this._getProfileFromMap(e)).nick,
                            avatar: e.avatar
                        } : {
                            nick: "",
                            avatar: ""
                        }
                    }
                }, {
                    key: "getUserNickAndAvatar",
                    value: function(e) {
                        var t = this,
                            n = m(new Set(e)),
                            o = (Oe.l("".concat(this._n, ".getUserNickAndAvatar userIDList.length:").concat(e.length, " uniqueUserIDList.length:").concat(n.length)), []);
                        if (0 === e.length) return Promise.resolve(o);
                        e = this._createUserIDListGroup(n);
                        var i = [];
                        return e.forEach((function(e) {
                            i.push(t.getUserProfile({
                                userIDList: e
                            }))
                        })), Promise.all(i).then((function(e) {
                            return e.forEach((function(e) {
                                e = e.data.map((function(e) {
                                    return {
                                        userID: e.userID,
                                        nick: e.nick,
                                        avatar: e.avatar
                                    }
                                })), o.push.apply(o, m(e))
                            })), o
                        }))
                    }
                }, {
                    key: "_createUserIDListGroup",
                    value: function(e) {
                        for (var t = [], n = 0; n < e.length;) t.push(e.slice(n, n += 100));
                        return t
                    }
                }, {
                    key: "reset",
                    value: function() {
                        this._flush(!0), this.accountProfileMap.clear()
                    }
                }]), Fi),
                Li = s((function e(t) {
                    i(this, e)
                })),
                Si = (s(wi, [{
                    key: "getLocalBlacklist",
                    value: function() {
                        return m(this._blacklistMap.keys())
                    }
                }, {
                    key: "getBlacklist",
                    value: function() {
                        var e = this,
                            t = "".concat(this._n, ".getBlacklist"),
                            n = {
                                fromAccount: this._userM.getMyAccount(),
                                maxLimited: this.maxLimited,
                                startIndex: 0,
                                lastSequence: this.currentSequence
                            },
                            o = new Qn("getBlacklist");
                        return this._userM.req({
                            P: wn.GET_BL,
                            data: n
                        }).then((function(n) {
                            var i = (n = n.data).blackListItem,
                                a = (n = n.currentSequence, He(i) ? 0 : i.length);
                            o.setMessage("count:".concat(a)).end(), Oe.i("".concat(t, " ok")), e.currentSequence = n, e._handleResponse(i, !0), e._userM.emitOEvt(D.BLACKLIST_UPDATED, m(e._blacklistMap.keys()))
                        })).catch((function(e) {
                            return o.setError(e).end(), Oe.e("".concat(t, " failed. error:"), e), Mn(e)
                        }))
                    }
                }, {
                    key: "addBlacklist",
                    value: function(e) {
                        var t, n, o = this,
                            i = new Qn("addToBlacklist"),
                            a = "".concat(this._n, ".addBlacklist"),
                            s = this._userM.getMyAccount();
                        return 1 === e.userIDList.length && e.userIDList[0] === s ? (n = this._userM.getErrMsg(t = Un.CANNOT_ADD_SELF_TO_BLACKLIST), i.setCode(t).setMessage(n).end(), n = new Pn({
                            code: t
                        }), Oe.e("".concat(a, " failed. error:"), n), Mn(n)) : (e.userIDList.includes(s) && (e.userIDList = e.userIDList.filter((function(e) {
                            return e !== s
                        }))), e.fromAccount = this._userM.getMyAccount(), e.toAccount = e.userIDList, this._userM.req({
                            P: wn.ADD_TO_BL,
                            data: e
                        }).then((function(t) {
                            return i.setMessage(5 < e.userIDList.length ? "userIDList.length:".concat(e.userIDList.length) : "userIDList:".concat(e.userIDList)).end(), Oe.i("".concat(a, " ok")), o._handleResponse(t.resultItem, !0), vn(m(o._blacklistMap.keys()))
                        })).catch((function(e) {
                            return i.setError(e).end(), Oe.e("".concat(a, " failed. error:"), e), Mn(e)
                        })))
                    }
                }, {
                    key: "_handleResponse",
                    value: function(e, t) {
                        if (!He(e))
                            for (var n, o, i, a = 0, s = e.length; a < s; a++) o = e[a].to, i = e[a].resultCode, !ut(i) && 0 !== i || (t ? ((n = this._blacklistMap.has(o) ? this._blacklistMap.get(o) : new Li).userID = o, He(e[a].addBlackTimeStamp) || (n.timeStamp = e[a].addBlackTimeStamp), this._blacklistMap.set(o, n)) : this._blacklistMap.has(o) && (n = this._blacklistMap.get(o), this._blacklistMap.delete(o)));
                        Oe.l("".concat(this._n, "._handleResponse total:").concat(this._blacklistMap.size, " bAdd:").concat(t))
                    }
                }, {
                    key: "deleteBlacklist",
                    value: function(e) {
                        var t = this,
                            n = "".concat(this._n, ".deleteBlacklist"),
                            o = new Qn("removeFromBlacklist");
                        return e.fromAccount = this._userM.getMyAccount(), e.toAccount = e.userIDList, this._userM.req({
                            P: wn.RM_FROM_BL,
                            data: e
                        }).then((function(i) {
                            return o.setMessage(5 < e.userIDList.length ? "userIDList.length:".concat(e.userIDList.length) : "userIDList:".concat(e.userIDList)).end(), Oe.i("".concat(n, " ok")), t._handleResponse(i.data.resultItem, !1), vn(m(t._blacklistMap.keys()))
                        })).catch((function(e) {
                            return o.setError(e).end(), Oe.e("".concat(n, " failed. error:"), e), Mn(e)
                        }))
                    }
                }, {
                    key: "onAccountDeleted",
                    value: function(e) {
                        for (var t = 0, n = e.length; t < n; t++) {
                            var o = e[t];
                            this._blacklistMap.has(o) && this._blacklistMap.delete(o)
                        }
                        var i = e.length;
                        0 < i && (Oe.l("".concat(this._n, ".onAccountDeleted count:").concat(i, " ").concat(i < 30 ? "userIDList:".concat(e) : "")), this._userM.emitOEvt(D.BLACKLIST_UPDATED, m(this._blacklistMap.keys())))
                    }
                }, {
                    key: "onAccountAdded",
                    value: function(e) {
                        for (var t, n = [], o = 0, i = e.length; o < i; o++) t = e[o], this._blacklistMap.has(t) || (this._blacklistMap.set(t, new Li({
                            userID: t
                        })), n.push(t));
                        0 < n.length && (Oe.l("".concat(this._n, ".onAccountAdded count:").concat(n.length, " userIDList:"), n), this._userM.emitOEvt(D.BLACKLIST_UPDATED, m(this._blacklistMap.keys())))
                    }
                }, {
                    key: "reset",
                    value: function() {
                        this._blacklistMap.clear(), this.startIndex = 0, this.maxLimited = 100, this.currentSequence = 0
                    }
                }]), wi),
                ki = (s(bi, [{
                    key: "_onCloudConfig",
                    value: function() {
                        var e = this._userM.getCloudConfig("status_query_count"),
                            t = this._userM.getCloudConfig("status_sub_count"),
                            n = this._userM.getCloudConfig("status_unsub_count");
                        Oe.l("".concat(this._n, "._onCloudConfig statusQueryCount:").concat(e, " statusSubscribeCount:").concat(t) + " statusUnsubscribeCount:".concat(n)), ut(e) || (this.MAX_QUERY_USER_COUNT = parseInt(e, 10)), ut(e) || (this.MAX_SUBSCRIBE_USER_COUNT = parseInt(t, 10)), ut(e) || (this.MAX_UNSUBSCRIBE_USER_COUNT = parseInt(n, 10))
                    }
                }, {
                    key: "onUserStatusUpdated",
                    value: function(e) {
                        e = e.dataList;
                        var t = this._userM.getMyUserID(),
                            n = this._userM.get(12);
                        e = e.map((function(e) {
                            var o = e.to,
                                i = e.statusType;
                            return e = Wo(e = e.customStatus), o === t && n.setCustomStatus(e), {
                                userID: o,
                                statusType: i,
                                customStatus: e
                            }
                        })), Oe.l("".concat(this._n, ".onUserStatusUpdated list:").concat(JSON.stringify(e))), this._userM.emitOEvt(D.USER_STATUS_UPDATED, e)
                    }
                }, {
                    key: "setSelfStatus",
                    value: function(e) {
                        var t = this,
                            n = "".concat(this._n, ".setSelfStatus");
                        if (!1 === this._userM.filterProfanity("customStatus", e)) return Mn({
                            code: Un.PROFANITY_FOUND
                        });
                        var o = new Qn("setSelfStatus"),
                            i = e.customStatus;
                        return this._userM.req({
                            P: wn.SET_SELF_STATUS,
                            data: {
                                customStatus: i
                            }
                        }).then((function(e) {
                            return o.setMessage("customStatus:".concat(i)).end(), Oe.l("".concat(n, " ok. customStatus:").concat(i)), t._userM.get(12).setCustomStatus(i), vn({
                                userID: t._userM.getMyUserID(),
                                statusType: 1,
                                customStatus: i
                            })
                        })).catch((function(e) {
                            return o.setError(e).end(), Oe.e("".concat(n, " failed. error:"), e), Mn(e)
                        }))
                    }
                }, {
                    key: "getUserStatus",
                    value: function(e) {
                        var t = "".concat(this._n, ".").concat("getUserStatus"),
                            n = void 0 === (e = e.userIDList) ? [] : e,
                            o = (e = this._userM.getMyUserID(), m(n)),
                            i = void 0,
                            a = o.indexOf(e);
                        if (-1 < a && (o.splice(a, 1), i = {
                                userID: e,
                                statusType: 1,
                                customStatus: this._userM.get(12).getCustomStatus()
                            }), 0 === o.length) return In({
                            successUserList: [i],
                            failureUserList: []
                        });
                        if (!this._userM.canIUse(U.USER_STATUS)) return this._userM.noUse("getUserStatus");
                        o.length > this.MAX_QUERY_USER_COUNT && (Oe.w("".concat(t, " ").concat(Ht(this.MAX_QUERY_USER_COUNT))), o = n.slice(0, this.MAX_QUERY_USER_COUNT));
                        var s = new Qn("getUserStatus");
                        return this._userM.req({
                            P: wn.GET_USER_STATUS,
                            data: {
                                userIDList: o
                            }
                        }).then((function(e) {
                            var o = void 0 === (o = (e = e.data).successUserList) ? [] : o,
                                a = (e = void 0 === (e = e.failureUserList) ? [] : e, o = o.map((function(e) {
                                    return {
                                        userID: e.userID,
                                        statusType: e.statusType,
                                        customStatus: Wo(e = e.customStatus)
                                    }
                                })), e = e.map((function(e) {
                                    var t = e.userID,
                                        n = e.invalidUserID,
                                        o = e.errorCode;
                                    return e = e.errorInfo, {
                                        userID: He(n) ? t : n,
                                        code: o,
                                        message: e
                                    }
                                })), ut(i) || o.unshift(i), "userID count:".concat(n.length, ", success count:").concat(o.length, ", fail count:").concat(e.length));
                            return s.setMessage("".concat(a)).end(), Oe.l("".concat(t, " ok. ").concat(a, ".")), vn({
                                successUserList: o,
                                failureUserList: e
                            })
                        })).catch((function(e) {
                            return s.setMessage("userID count:".concat(n.length)).setError(e).end(), Oe.e("".concat(t, " failed. error:"), e), Mn(e)
                        }))
                    }
                }, {
                    key: "subscribeUserStatus",
                    value: function(e) {
                        var t = "subscribeUserStatus";
                        if (!this._userM.canIUse(U.USER_STATUS)) return this._userM.noUse(t);
                        var n = "".concat(this._n, ".").concat(t),
                            o = m(e = void 0 === (e = e.userIDList) ? [] : e),
                            i = (o.length > this.MAX_SUBSCRIBE_USER_COUNT && (Oe.w("".concat(n, " ").concat(Ht(this.MAX_SUBSCRIBE_USER_COUNT))), o = e.slice(0, this.MAX_SUBSCRIBE_USER_COUNT)), new Qn(t)),
                            a = "userID count:".concat(e.length);
                        return Oe.l("".concat(n, " ").concat(a)), this._userM.req({
                            P: wn.SUB_USER_STATUS,
                            data: {
                                userIDList: o
                            }
                        }).then((function(e) {
                            return e = (void 0 === (e = e.data.failureUserList) ? [] : e).map((function(e) {
                                var t = e.userID,
                                    n = e.invalidUserID,
                                    o = e.errorCode;
                                return e = e.errorInfo, {
                                    userID: He(n) ? t : n,
                                    code: o,
                                    message: e
                                }
                            })), i.setMessage("".concat(a, " fail count:").concat(e.length)).end(), Oe.l("".concat(n, " ok. fail count:").concat(e.length, ".")), vn({
                                failureUserList: e
                            })
                        })).catch((function(e) {
                            return i.setMessage(a).setError(e).end(), Oe.e("".concat(n, " failed. error:"), e), Mn(e)
                        }))
                    }
                }, {
                    key: "unsubscribeUserStatus",
                    value: function(e) {
                        var t = "unsubscribeUserStatus";
                        if (!this._userM.canIUse(U.USER_STATUS)) return this._userM.noUse(t);
                        var n = "".concat(this._n, ".").concat(t),
                            o = m(e = void 0 === (e = (e || {}).userIDList) ? [] : e),
                            i = (e.length > this.MAX_UNSUBSCRIBE_USER_COUNT && (Oe.w("".concat(n, " ").concat(Ht(this.MAX_UNSUBSCRIBE_USER_COUNT))), o = e.slice(0, this.MAX_UNSUBSCRIBE_USER_COUNT)), new Qn(t)),
                            a = "userID count:".concat(e.length);
                        return Oe.l("".concat(n, " ").concat(a)), t = {
                            userIDList: o
                        }, 0 === o.length && (t.userIDList = void 0, t.unsubscribeAll = 1), this._userM.req({
                            P: wn.UNSUB_USER_STATUS,
                            data: t
                        }).then((function(e) {
                            return e = (void 0 === (e = e.data.failureUserList) ? [] : e).map((function(e) {
                                var t = e.userID,
                                    n = e.invalidUserID,
                                    o = e.errorCode;
                                return e = e.errorInfo, {
                                    userID: He(n) ? t : n,
                                    code: o,
                                    message: e
                                }
                            })), i.setMessage("".concat(a, " fail count:").concat(e.length)).end(), Oe.l("".concat(n, " ok. fail count:").concat(e.length, ".")), vn({
                                failureUserList: e
                            })
                        })).catch((function(e) {
                            return i.setMessage("".concat(a)).setError(e).end(), Oe.e("".concat(n, " failed. error:"), e), Mn(e)
                        }))
                    }
                }, {
                    key: "reset",
                    value: function() {
                        this.MAX_QUERY_USER_COUNT = 500, this.MAX_SUBSCRIBE_USER_COUNT = 100, this.MAX_UNSUBSCRIBE_USER_COUNT = 100
                    }
                }]), bi),
                Ai = (c(Ui, Rn), Jo = g(Ui), s(Ui, [{
                    key: "onContextUpdated",
                    value: function(e) {
                        this._profileHandler.getMyProfile(), this._blacklistHandler.getBlacklist()
                    }
                }, {
                    key: "mockOnNickAvatarModified",
                    value: function(e, t) {
                        Oe.l("".concat(this._n, "._mockOnNickAvatarModified nick:").concat(e, " avatar:").concat(t)), this.onProfileModified({
                            dataList: [{
                                pushType: 1,
                                userID: this.getMyUserID(),
                                profileList: [{
                                    tag: Ge.NICK,
                                    value: e
                                }, {
                                    tag: Ge.AVATAR,
                                    value: t
                                }]
                            }]
                        })
                    }
                }, {
                    key: "onProfileModified",
                    value: function(e) {
                        this._profileHandler.onProfileModified(e)
                    }
                }, {
                    key: "onRelationChainModified",
                    value: function(e) {
                        var t, n;
                        He(e = e.dataList) || (t = [], e.forEach((function(e) {
                            e.blackListDelAccount && t.push.apply(t, m(e.blackListDelAccount))
                        })), 0 < t.length && this._blacklistHandler.onAccountDeleted(t), n = [], e.forEach((function(e) {
                            e.blackListAddAccount && n.push.apply(n, m(e.blackListAddAccount))
                        })), 0 < n.length && this._blacklistHandler.onAccountAdded(n))
                    }
                }, {
                    key: "onConvProfileUpdated",
                    value: function(e) {
                        this._profileHandler.onConvProfileUpdated(e)
                    }
                }, {
                    key: "getMyAccount",
                    value: function() {
                        return this.getMyUserID()
                    }
                }, {
                    key: "getMyNick",
                    value: function() {
                        return this._profileHandler.getNickAndAvatarByUserID(this.getMyUserID()).nick
                    }
                }, {
                    key: "getMyProfile",
                    value: function() {
                        return this._profileHandler.getMyProfile()
                    }
                }, {
                    key: "getStorageModule",
                    value: function() {
                        return this.get(13)
                    }
                }, {
                    key: "filterProfanity",
                    value: function(e, t) {
                        if (!(o = this.get(29))) return !0;
                        var n = (o = o.filterText(t[e], "user_profile")).isAllowedToSend,
                            o = o.modifiedText;
                        return !0 === n && (t[e] = o, !0)
                    }
                }, {
                    key: "isMyFriend",
                    value: function(e) {
                        var t = this.get(8);
                        return !!t && t.isMyFriend(e)
                    }
                }, {
                    key: "getUserProfile",
                    value: function(e) {
                        return this._profileHandler.getUserProfile(e)
                    }
                }, {
                    key: "updateMyProfile",
                    value: function(e) {
                        return this._profileHandler.updateMyProfile(e)
                    }
                }, {
                    key: "getNickAndAvatarByUserID",
                    value: function(e) {
                        return this._profileHandler.getNickAndAvatarByUserID(e)
                    }
                }, {
                    key: "getUserNickAndAvatar",
                    value: function(e) {
                        return this._profileHandler.getUserNickAndAvatar(e)
                    }
                }, {
                    key: "getLocalBlacklist",
                    value: function() {
                        return In(this._blacklistHandler.getLocalBlacklist())
                    }
                }, {
                    key: "addBlacklist",
                    value: function(e) {
                        return this._blacklistHandler.addBlacklist(e)
                    }
                }, {
                    key: "deleteBlacklist",
                    value: function(e) {
                        return this._blacklistHandler.deleteBlacklist(e)
                    }
                }, {
                    key: "onUserStatusUpdated",
                    value: function(e) {
                        this._userStatusHandler.onUserStatusUpdated(e)
                    }
                }, {
                    key: "setSelfStatus",
                    value: function(e) {
                        return this._userStatusHandler.setSelfStatus(e)
                    }
                }, {
                    key: "getUserStatus",
                    value: function(e) {
                        return this._userStatusHandler.getUserStatus(e)
                    }
                }, {
                    key: "subscribeUserStatus",
                    value: function(e) {
                        return this._userStatusHandler.subscribeUserStatus(e)
                    }
                }, {
                    key: "unsubscribeUserStatus",
                    value: function(e) {
                        return this._userStatusHandler.unsubscribeUserStatus(e)
                    }
                }, {
                    key: "reset",
                    value: function() {
                        Oe.l("".concat(this._n, ".reset")), this._profileHandler.reset(), this._blacklistHandler.reset(), this._userStatusHandler.reset()
                    }
                }]), Ui),
                Ri = (s(Pi, [{
                    key: "isLoggedIn",
                    value: function() {
                        return this._isLoggedIn
                    }
                }, {
                    key: "isOversea",
                    value: function() {
                        return this._oversea
                    }
                }, {
                    key: "isPrivateNetWork",
                    value: function() {
                        return this._proxyServer
                    }
                }, {
                    key: "isDevMode",
                    value: function() {
                        return this._isDevMode
                    }
                }, {
                    key: "isTestEnv",
                    value: function() {
                        return this._isTestEnv
                    }
                }, {
                    key: "isPartialUpdatedConvs",
                    value: function() {
                        return this._isPartialUpdatedConvs
                    }
                }, {
                    key: "isSingaporeSite",
                    value: function() {
                        return 2e7 <= this._SDKAppID && this._SDKAppID < 3e7 || 172e7 <= this._SDKAppID && this._SDKAppID < 173e7
                    }
                }, {
                    key: "isKoreaSite",
                    value: function() {
                        return 3e7 <= this._SDKAppID && this._SDKAppID < 4e7 || 173e7 <= this._SDKAppID && this._SDKAppID < 174e7
                    }
                }, {
                    key: "isGermanySite",
                    value: function() {
                        return 4e7 <= this._SDKAppID && this._SDKAppID < 5e7 || 174e7 <= this._SDKAppID && this._SDKAppID < 175e7
                    }
                }, {
                    key: "isIndiaSite",
                    value: function() {
                        return 5e7 <= this._SDKAppID && this._SDKAppID < 6e7 || 175e7 <= this._SDKAppID && this._SDKAppID < 176e7
                    }
                }, {
                    key: "isJapanSite",
                    value: function() {
                        return 6e7 <= this._SDKAppID && this._SDKAppID < 7e7 || 176e7 <= this._SDKAppID && this._SDKAppID < 177e7
                    }
                }, {
                    key: "isUSASite",
                    value: function() {
                        return 7e7 <= this._SDKAppID && this._SDKAppID < 8e7 || 177e7 <= this._SDKAppID && this._SDKAppID < 178e7
                    }
                }, {
                    key: "isIndonesiaSite",
                    value: function() {
                        return 8e7 <= this._SDKAppID && this._SDKAppID < 9e7 || 178e7 <= this._SDKAppID && this._SDKAppID < 179e7
                    }
                }, {
                    key: "isIntl",
                    value: function() {
                        return 0 === (e = this._SDKAppID) || 2e7 <= e && e < 9e7 || 172e7 <= e && e < 179e7;
                        var e
                    }
                }, {
                    key: "isUnlimitedAVChatRoom",
                    value: function() {
                        return this._unlimitedAVChatRoom
                    }
                }, {
                    key: "isUsingChatCore",
                    value: function() {
                        return this._isUsingChatCore
                    }
                }, {
                    key: "setUsingChatCore",
                    value: function(e) {
                        this._isUsingChatCore = e
                    }
                }, {
                    key: "getUIPlatform",
                    value: function() {
                        return this._uiPlatform
                    }
                }, {
                    key: "setUIPlatform",
                    value: function(e) {
                        this._uiPlatform = e
                    }
                }, {
                    key: "setUserID",
                    value: function(e) {
                        this._userID = e
                    }
                }, {
                    key: "getUserID",
                    value: function() {
                        return this._userID
                    }
                }, {
                    key: "setUserSig",
                    value: function(e) {
                        this._userSig = e
                    }
                }, {
                    key: "getUserSig",
                    value: function() {
                        return this._userSig
                    }
                }, {
                    key: "getSDKAppID",
                    value: function() {
                        return this._SDKAppID
                    }
                }, {
                    key: "setTinyID",
                    value: function(e) {
                        this._tinyID = e, this._isLoggedIn = !0
                    }
                }, {
                    key: "getTinyID",
                    value: function() {
                        return this._tinyID
                    }
                }, {
                    key: "setCustomStatus",
                    value: function(e) {
                        this._customStatus = e
                    }
                }, {
                    key: "getCustomStatus",
                    value: function() {
                        return this._customStatus
                    }
                }, {
                    key: "getScene",
                    value: function() {
                        return fe ? window.tencent_cloud_im_csig_flutter_for_web_25F_cy : this._isTUIKit() ? "tuikit" : this._scene
                    }
                }, {
                    key: "getInstanceID",
                    value: function() {
                        return this._instanceID
                    }
                }, {
                    key: "getStatusInstanceID",
                    value: function() {
                        return this._statusInstanceID
                    }
                }, {
                    key: "setStatusInstanceID",
                    value: function(e) {
                        this._statusInstanceID = e
                    }
                }, {
                    key: "getVersion",
                    value: function() {
                        return this._version
                    }
                }, {
                    key: "getA2Key",
                    value: function() {
                        return this._a2Key
                    }
                }, {
                    key: "setA2Key",
                    value: function(e) {
                        this._a2Key = e
                    }
                }, {
                    key: "getContentType",
                    value: function() {
                        return this._contentType
                    }
                }, {
                    key: "getProxyServer",
                    value: function() {
                        return this._proxyServer
                    }
                }, {
                    key: "getFileUploadProxy",
                    value: function() {
                        return this._fileUploadProxy
                    }
                }, {
                    key: "getFileDownloadProxy",
                    value: function() {
                        return this._fileDownloadProxy
                    }
                }, {
                    key: "setApplicationID",
                    value: function(e) {
                        this._applicationID = e
                    }
                }, {
                    key: "getApplicationID",
                    value: function() {
                        return this._applicationID
                    }
                }, {
                    key: "setDowloadFileAuthKey",
                    value: function(e) {
                        this._authKey = e
                    }
                }, {
                    key: "getDowloadFileAuthKey",
                    value: function() {
                        return this._authKey
                    }
                }, {
                    key: "_isTUIKit",
                    value: function() {
                        var e = !1,
                            t = !1,
                            n = !1,
                            o = !1,
                            i = [];
                        Q && (i = Object.keys(ne));
                        for (var a = 0, s = (i = te ? Z ? Object.keys(uni) : Object.keys(window) : i).length; a < s; a++)
                            if (i[a].toLowerCase().includes("uikit")) {
                                e = !0;
                                break
                            }
                        i = null;
                        var r, c = (Q && !ze(ne.createGamePortal) && ze(getApp) && !ut(getApp()) && je(r = getApp().globalData) && !0 === r.isTUIKit && (t = !0), !0 === this._m.get(13).getStorageSync("TIM_".concat(this._SDKAppID, "_isTUIKit")) && (n = !0), null);
                        if (H && !Y && "undefined" == typeof uni && __wxConfig && (c = __wxConfig.pages), K && "undefined" == typeof uni && __qqConfig && (c = __qqConfig.pages), Je(c) && 0 < c.length) {
                            for (var u = 0, l = c.length; u < l; u++)
                                if (c[u].toLowerCase().includes("tui")) {
                                    o = !0;
                                    break
                                }
                            c = null
                        }
                        return e || t || n || o
                    }
                }, {
                    key: "reset",
                    value: function() {
                        this._isLoggedIn = !1, this._userSig = "", this._a2Key = "", this._tinyID = "", this._customStatus = "", this._statusInstanceID = 0
                    }
                }]), Pi),
                Oi = {
                    "k-vue2-pc": 1,
                    "k-vue2-h5": 2,
                    "k-vue2-h5-uni": 3,
                    "k-vue2-app-uni": 4,
                    "k-vue2-mp-uni": 5,
                    "k-vue2-pc-uni": 6,
                    "k-vue3-pc": 7,
                    "k-vue3-h5": 8,
                    "k-vue3-h5-uni": 9,
                    "k-vue3-app-uni": 10,
                    "k-vue3-mp-uni": 11,
                    "k-vue3-pc-uni": 12
                },
                Ni = (c(Gi, Rn), jo = g(Gi), s(Gi, [{
                    key: "onCheckTimer",
                    value: function(e) {
                        this.isLoggedIn() && e % this._helloInterval == 0 && this._hello()
                    }
                }, {
                    key: "getPushModule",
                    value: function() {
                        var e = void 0,
                            t = this.get(36),
                            n = this.get(28);
                        return t.canIUseTIMPush() ? e = t : n.canIUseOfflinePush() && (e = n), e
                    }
                }, {
                    key: "login",
                    value: function(e) {
                        if (this.isLoggedIn()) return t = this.getMyUserID(), (t = this.getErrMsg("RepeatLogin", t)) && Oe.w(t), In({
                            actionStatus: "OK",
                            errorCode: 0,
                            errorInfo: t,
                            repeatLogin: !0
                        });
                        if (Date.now() - this._lastLoginTs <= 15e3) return this.warn("LoggingIn", e.userID), Mn({
                            code: Un.REPEAT_LOGIN
                        });
                        if (Oe.l("".concat(this._n, ".login userID:").concat(e.userID)), 0 !== (t = this._checkLoginInfo(e)).code) return Mn(t);
                        var t = this.get(12),
                            n = e.userID;
                        return e = e.userSig, t.setUserID(n), t.setUserSig(e), this.get(20).updateProtocolConfig(), this._login()
                    }
                }, {
                    key: "_login",
                    value: function() {
                        var e = this,
                            t = this.get(12),
                            n = t.getScene(),
                            o = 0,
                            i = n,
                            a = (n && n.startsWith("k-") && (i = Oi[n], n = "tuikit"), new Qn("login")),
                            s = (a.setMessage("".concat(i)).setMoreMessage("identifier:".concat(this.getMyUserID())), "tuikit" === n),
                            r = 0,
                            c = (Z ? r = s ? 3 === i || 4 === i || 5 === i || 6 === i ? 31 : 9 === i || 10 === i || 11 === i || 12 === i ? 32 : 4 : 3 : Q ? r = B ? 36 : "tuikit" === n ? 12 : 11 : te && (r = fe ? "flutter_web_uikit" === n ? 21 : 20 : this._isReactUIKit() ? ge ? 25 : 24 : s ? 1 === i || 2 === i ? 29 : 7 === i || 8 === i ? 30 : ge ? 17 : 14 : ge ? 16 : 13), a.setUIPlatform(r), t.setUIPlatform(r), (s = this.getPushModule()) && (this._isWebUniapp = s.getUniAppPlatform(), i = this._getStatusInstanceID(), t.setStatusInstanceID(i), this.get(20).updateProtocolConfig(), o = s.getDeviceBrand()), "".concat(this._n, "._login"));
                        return this._lastLoginTs = Date.now(), this.req({
                            P: wn.LOGIN,
                            data: {
                                deviceBrand: o,
                                isWebUniapp: this._isWebUniapp
                            }
                        }).then((function(o) {
                            e._lastLoginTs = 0;
                            var i = Date.now(),
                                s = null,
                                r = (g = o.data).a2Key,
                                u = g.tinyID,
                                l = g.helloInterval,
                                d = g.instanceID,
                                p = g.timeStamp,
                                _ = void 0 === (_ = g.customStatus) ? "" : _,
                                h = g.purchaseBits,
                                g = void 0 === (g = g.authKey) ? "" : g,
                                f = 1e3 * p,
                                m = i - a.getStartTs();
                            if (m = f + parseInt(m / 2) - i, i = a.getStartTs() + m, a.start(i), i = f, Le = m, (f = new Date).setTime(i), Oe.i("baseTime from server:".concat(f, " offset:").concat(Le)), !u) throw s = new Pn({
                                code: Un.NO_TINYID
                            }), a.setError(s).end(), s;
                            if (!r) throw s = new Pn({
                                code: Un.NO_A2KEY
                            }), a.setError(s).end(), s;
                            return i = e.get(21).getSocketID(), f = Wo(_), s = "socketID:".concat(i, " scene:").concat(n, " helloInterval:").concat(l, " instanceID:").concat(d, " timeStamp:").concat(p) + " offset:".concat(m, " customStatus:").concat(f), Oe.l("".concat(c, " ok. ").concat(s)), _ = "", i = "", H && ze(ne.getAccountInfoSync) && (p = ne.getAccountInfoSync().miniProgram) && (_ = p.appId, i = p.envVersion), a.setMoreMessage("".concat(s, " href:").concat(te ? window.location.href : "", " mpAppId:").concat(_, " envVersion:").concat(i, " authKey:").concat(g)).end(), t.setA2Key(r), t.setTinyID(u), t.setStatusInstanceID(d), t.setCustomStatus(f), t.setDowloadFileAuthKey(g), h && e.get(27).onPushedConfig({
                                errorCode: 0,
                                expiredTime: 0,
                                purchaseBits: h
                            }), e.get(20).updateProtocolConfig(), e.emitIEvt(qo.A2KEY_AND_TINYID_UPDATED), e._helloInterval = l, e.triggerReady(), (m = e.getPushModule()) && (uni.setStorageSync("timUniAppInstanceID", d), m.init()), e._fetchCloudControlConfig(), e.get(29).init(), o
                        })).catch((function(t) {
                            return a.setError(t).end(!0), e._m.setNotReadyReason(Un.LOGIN_FAILED), Oe.e("".concat(c, " failed. error:"), t), e._lastLoginTs = 0, e._m.onLoginFailed(), Mn(t)
                        }))
                    }
                }, {
                    key: "logout",
                    value: function() {
                        var e = this,
                            t = 0 < arguments.length && void 0 !== arguments[0] ? arguments[0] : 0,
                            n = "".concat(this._n, ".logout"),
                            o = this.isLoggedIn();
                        return Oe.i("".concat(n, " type:").concat(t, " isLoggedIn:").concat(o)), o ? (new Qn("logout").setMessage("identifier:".concat(this.getMyUserID())).end(!0), 0 === t && this._m.setNotReadyReason(Un.LOGGED_OUT), this.req({
                            P: wn.LOGOUT,
                            data: {
                                type: t
                            }
                        }).then((function() {
                            return e.resetReady(), In({})
                        })).catch((function(t) {
                            return Oe.e("".concat(n, " error:"), t), e.resetReady(), In({})
                        }))) : Mn({
                            code: Un.USER_NOT_LOGGED_IN
                        })
                    }
                }, {
                    key: "getLoginUser",
                    value: function() {
                        return this.isLoggedIn() ? this.getMyUserID() : ""
                    }
                }, {
                    key: "_fetchCloudControlConfig",
                    value: function() {
                        this.get(23).fetchConfig()
                    }
                }, {
                    key: "_getStatusInstanceID",
                    value: function() {
                        return uni.getStorageSync("timUniAppInstanceID") || 0
                    }
                }, {
                    key: "_hello",
                    value: function() {
                        var e = this;
                        this._lastWsHelloTs = Date.now(), this.req({
                            P: wn.HELLO,
                            data: {
                                isWebUniapp: this._isWebUniapp
                            }
                        }).catch((function(t) {
                            Oe.w("".concat(e._n, "._hello error:"), t)
                        }))
                    }
                }, {
                    key: "getLastWsHelloTs",
                    value: function() {
                        return this._lastWsHelloTs
                    }
                }, {
                    key: "_checkLoginInfo",
                    value: function(e) {
                        var t = 0;
                        return He(this.get(12).getSDKAppID()) ? t = Un.NO_SDKAPPID : He(e.userID) ? t = Un.NO_IDENTIFIER : He(e.userSig) && (t = Un.NO_USERSIG), {
                            code: t
                        }
                    }
                }, {
                    key: "_isReactUIKit",
                    value: function() {
                        return te && void 0 !== window.tencent_cloud_im_csig_react_uikit_23F_xa
                    }
                }, {
                    key: "onMultipleAccountKickedOut",
                    value: function(e) {
                        var t = this;
                        new Qn("kickedOut").setMessage("type:".concat(E.KICKED_OUT_MULT_ACCOUNT, " newInstanceInfo:").concat(JSON.stringify(e))).end(!0), Oe.w("".concat(this._n, ".onMultipleAccountKickedOut userID:").concat(this.getMyUserID(), " newInstanceInfo:"), e), this.logout(1).then((function() {
                            t.emitOEvt(D.KICKED_OUT, {
                                type: E.KICKED_OUT_MULT_ACCOUNT
                            }), t._m.setNotReadyReason(Un.KICKED_OUT_MULT_ACCOUNT), t._m.reset()
                        }))
                    }
                }, {
                    key: "onMultipleDeviceKickedOut",
                    value: function(e) {
                        var t = this;
                        new Qn("kickedOut").setMessage("type:".concat(E.KICKED_OUT_MULT_DEVICE, " newInstanceInfo:").concat(JSON.stringify(e))).end(!0), Oe.w("".concat(this._n, ".onMultipleDeviceKickedOut userID:").concat(this.getMyUserID(), " newInstanceInfo:"), e), this.logout(1).then((function() {
                            t.emitOEvt(D.KICKED_OUT, {
                                type: E.KICKED_OUT_MULT_DEVICE
                            }), t._m.setNotReadyReason(Un.KICKED_OUT_MULT_DEVICE), t._m.reset()
                        }))
                    }
                }, {
                    key: "onUserSigExpired",
                    value: function() {
                        new Qn("kickedOut").setMessage(E.KICKED_OUT_USERSIG_EXPIRED).end(!0), Oe.w("".concat(this._n, ".onUserSigExpired userID:").concat(this.getMyUserID())), 0 !== this.get(12).getStatusInstanceID() && (this.emitOEvt(D.KICKED_OUT, {
                            type: E.KICKED_OUT_USERSIG_EXPIRED
                        }), this._m.setNotReadyReason(Un.KICKED_OUT_USERSIG_EXPIRED), this._m.reset())
                    }
                }, {
                    key: "onRestApiKickedOut",
                    value: function(e) {
                        new Qn("kickedOut").setMessage("type:".concat(E.KICKED_OUT_REST_API, " newInstanceInfo:").concat(JSON.stringify(e))).end(!0), Oe.w("".concat(this._n, ".onRestApiKickedOut userID:").concat(this.getMyUserID(), " newInstanceInfo:"), e), 0 !== this.get(12).getStatusInstanceID() && (this.emitOEvt(D.KICKED_OUT, {
                            type: E.KICKED_OUT_REST_API
                        }), this._m.setNotReadyReason(Un.KICKED_OUT_REST_API), this._m.reset(), this.get(21).onRestApiKickedOut())
                    }
                }, {
                    key: "reset",
                    value: function() {
                        Oe.l("".concat(this._n, ".reset")), this.resetReady(), this._helloInterval = 120, this._lastLoginTs = 0, this._lastWsHelloTs = 0, this._isWebUniapp = 0
                    }
                }]), Gi);

            function Gi(e) {
                return i(this, Gi), (e = jo.call(this, e))._n = "SignModule", e._helloInterval = 120, e._lastLoginTs = 0, e._lastWsHelloTs = 0, e._isWebUniapp = 0, Bo.mixin(h(e)), e
            }

            function Pi(e, t) {
                i(this, Pi), this._m = e, this._isLoggedIn = !1, this._SDKAppID = t.SDKAppID, this._userID = t.userID || "", this._userSig = t.userSig || "", this._version = "3.4.3", this._a2Key = "", this._tinyID = "", this._customStatus = "", this._contentType = "json", this._unlimitedAVChatRoom = t.unlimitedAVChatRoom, this._scene = t.scene || "", this._oversea = t.oversea, this._instanceID = t.instanceID, this._statusInstanceID = 0, this._isDevMode = t.devMode, this._isTestEnv = t.testEnv, this._proxyServer = t.proxyServer, this._fileUploadProxy = t.fileUploadProxy, this._fileDownloadProxy = t.fileDownloadProxy, this._applicationID = 0, this._isPartialUpdatedConvs = t.partialUpdatedConversations, this._isUsingChatCore = !1, this._uiPlatform = 0, this._authKey = ""
            }

            function Ui(e) {
                return i(this, Ui), (e = Jo.call(this, e))._n = "UserModule", e._profileHandler = new Ei(h(e)), e._blacklistHandler = new Si(h(e)), e._userStatusHandler = new ki(h(e)), e.getIEmitInst().on(qo.A2KEY_AND_TINYID_UPDATED, e.onContextUpdated, h(e)), e
            }

            function bi(e) {
                i(this, bi), this._userM = e, this._n = "UserStatusHandler", this.MAX_QUERY_USER_COUNT = 500, this.MAX_SUBSCRIBE_USER_COUNT = 100, this.MAX_UNSUBSCRIBE_USER_COUNT = 100, this._userM.getIEmitInst().on(qo.CLOUD_CONFIG, this._onCloudConfig, this)
            }

            function wi(e) {
                i(this, wi), this._userM = e, this._n = "BlacklistHandler", this._blacklistMap = new Map, this.startIndex = 0, this.maxLimited = 100, this.currentSequence = 0
            }

            function Fi(e) {
                i(this, Fi), this._userM = e, this._n = "ProfileHandler", this.TAG = "profile", this.accountProfileMap = new Map, this.expirationTime = 864e5
            }

            function qi(e) {
                return i(this, qi), (e = zo.call(this, e))._n = "TopicModule", e._topicMap = new Map, e._getTopicTimeMap = new Map, e.TOPIC_CACHE_TIME = 300, e.TOPIC_LAST_ACTIVE_TIME = 3600, e.getIEmitInst().on(qo.CLOUD_CONFIG, e._onCloudConfig, h(e)), e
            }

            function xi(e, t) {
                i(this, xi), this.topicID = "", this.topicName = "", this.avatar = "", this.introduction = "", this.notification = "", this.unreadCount = 0, this.muteAllMembers = !1, this.customData = "", this.groupAtInfoList = [], this.nextMessageSeq = 0, this.lastMessage = Yo(e.lastMessage, t), this.selfInfo = {
                    muteTime: 0,
                    readedSequence: 0,
                    messageRemindType: "",
                    excludedUnreadSequenceList: void 0
                }, this._initTopic(e)
            }

            function Vi(e) {
                return i(this, Vi), (e = Xo.call(this, e))._n = "GroupModule", e._commonGroupHandler = new li(h(e)), e._groupAttributesHandler = new di(h(e)), e._groupCountersHandler = new pi(h(e)), e._AVChatRoomHandler = new gi(h(e)), e._groupTipsHandler = new ui(h(e)), e._groupSystemNoticeHandler = new Ii(h(e)), e._groupMemberHandler = new mi(h(e)), e.groupMap = new Map, e._unjoinedAVChatRoomList = new Map, e._receiptDetailCompleteMap = new Map, e._onlineMemberCountMap = new Map, e._timeoutIDs = [], e.getIEmitInst().on(qo.CLOUD_CONFIG, e._onCloudConfig, h(e)), e
            }

            function Hi(e) {
                i(this, Hi), this._grpM = e, this._n = "GroupSystemNoticeHandler", this.pendencyMap = new Map
            }

            function Bi(e) {
                i(this, Bi), this._grpM = e, this._n = "GroupMemberHandler", this.groupMemberListMap = new Map, this.DEFAULT_MEMBER_INFO_FILTER = ["Role", "JoinTime", "NameCard", "ShutUpUntil", "OnlineStatus"], this._grpM.getIEmitInst().on(qo.PROFILE_UPDATED, this._onProfileUpdated, this)
            }

            function Ki(e) {
                i(this, Ki), this.userID = "", this.avatar = "", this.nick = "", this.role = "", this.joinTime = "", this.lastSendMsgTime = "", this.nameCard = "", this.muteUntil = 0, this.memberCustomField = [], this.isOnline = !1, this.updateMember(e)
            }

            function Yi(e) {
                i(this, Yi), this._grpM = e, this._n = "AVChatRoomHandler", this._joinedGroupMap = new Map, this._pollingRequestInfoMap = new Map, this._pollingInstanceMap = new Map, this._seqSll = new ti(200), this._IDSll = new ti(100), this._reportMessageStackedCount = 0, this._onlineMemberCountMap = new Map, this.DEFAULT_EXPIRE_TIME = 60, this.DEFAULT_POLLING_INTERVAL = 300, this.MAX_POLLING_INTERVAL = 2e3, this._pollingInterval = this.DEFAULT_POLLING_INTERVAL, this.DEFAULT_POLLING_NO_MESSAGE_COUNT = 20, this.DEFAULT_POLLING_INTERVAL_PLUS = 2e3, this._pollingNoMessageCount = 0, this._startBroadcastSeq = 1, this._broadcastMessageIDMap = new Map, this.DEFAULT_POLLING_SIMPLIFIED_MSG = 0
            }

            function Wi(e) {
                i(this, Wi);
                var t = e.manager,
                    n = e.groupID,
                    o = e.onInit,
                    a = e.onSuccess;
                e = e.onFail, this._n = "Polling", this._manager = t, this._grpM = t._grpM, this._onInit = o, this._onSuccess = a, this._onFail = e, this._groupID = n, this._timeoutID = -1, this._isRunning = !1, this._proto = wn.AV_POLLING
            }

            function ji(e) {
                i(this, ji), this._grpM = e, this._n = "GroupCountersHandler", this._groupCountersMap = new Map, this.EXPIRE_TIME = 3e4, this._grpM.getIEmitInst().on(qo.CLOUD_CONFIG, this._onCloudConfig, this)
            }

            function Ji(e) {
                i(this, Ji), this._grpM = e, this._n = "GroupAttributesHandler", this._groupAttributesMap = new Map, this._groupAttributesCopy = {}, this.CACHE_EXPIRE_TIME = 3e4, this._grpM.getIEmitInst().on(qo.CLOUD_CONFIG, this._onCloudConfig, this)
            }

            function zi(e) {
                i(this, zi), this._grpM = e, this._n = "CommonGroupHandler", this.tempConversationList = null, this._cachedGroupMessageMap = new Map, this._checkCountMap = new Map, this.MAX_CHECK_COUNT = 4, this.PAGING_GRP_COUNT_LIMIT = 200, this._pagingStatus = En, this._pagingGetCostList = [], e.getIEmitInst().on(qo.A2KEY_AND_TINYID_UPDATED, this.syncGroupList, this)
            }

            function Xi(e) {
                i(this, Xi), this._grpM = e, this._n = "GroupTipsHandler", this._cachedGroupTipsMap = new Map, this._checkCountMap = new Map, this.MAX_CHECK_COUNT = 4
            }

            function Zi(e) {
                return i(this, Zi), (e = Zo.call(this, e))._n = "ConvModule", Bo.mixin(h(e)), e._msgListHandler = new xo(h(e)), e._msgRemindHandler = new si(h(e)), e._convGroupHandler = new ri(h(e)), e._sll = new ti(100), e._pagingStatus = En, e._pagingTs = 0, e._pagingStartIdx = 0, e._pagingPinnedTs = 0, e._pagingPinnedStartIdx = 0, e._pagingConvIDMap = new Map, e._convIDFromUnreadDBMap = new Map, e._convMap = new Map, e._tmpGroupList = [], e._tmpGroupAtTipsList = [], e._peerReadTimeMap = new Map, e._completedMap = new Map, e._roamingMsgKeyAndTimeMap = new Map, e._remoteGroupReadSeqMap = new Map, e._convTotalUnreadCount = 0, e._pagingGetCostList = [], e._convMapForDiff = new Map, e._partialUpdatedConvMap = new Map, e._everClearedMap = new Map, e._bPullOnInvite = !0, e._initListeners(), e
            }

            function Qi(e) {
                i(this, Qi), this._convM = e, this._n = "ConvGroupHandler", this._convGroupMap = new Map, this._startIndex = 0, this._pagingStatus = En
            }

            function $i(e) {
                i(this, $i), this._convM = e, this._n = "MsgRemindHandler"
            }

            function ea(e, t) {
                var n = 2 < arguments.length && void 0 !== arguments[2] && arguments[2];
                i(this, ea), this.conversationID = e.conversationID || "", this.unreadCount = e.unreadCount || 0, this.type = e.type || "", this.lastMessage = Ko(e.lastMessage, t, n), e.lastMsgTime && (this.lastMessage.lastTime = e.lastMsgTime), this._isInfoCompleted = !1, this.peerReadTime = e.peerReadTime || 0, this.groupAtInfoList = [], this.remark = "", this.isPinned = e.isPinned || !1, this.messageRemindType = e.messageRemindType, this.markList = e.markList || [], this.customData = e.customData || "", this.conversationGroupList = e.conversationGroupList || [], this.draftText = e.draftText || "", this._initProfile(e), this.subType = this.groupProfile ? this.groupProfile.type : ""
            }

            function ta(e) {
                i(this, ta), this.groupID = "", this.name = "", this.avatar = "", this.type = "", this.introduction = "", this.notification = "", this.ownerID = "", this.createTime = "", this.infoSequence = "", this.lastInfoTime = "", this.selfInfo = {
                    messageRemindType: "",
                    joinTime: "",
                    nameCard: "",
                    role: "",
                    userID: "",
                    memberCustomField: void 0,
                    readedSequence: 0,
                    excludedUnreadSequenceList: void 0
                }, this.lastMessage = {
                    lastTime: "",
                    lastSequence: "",
                    fromAccount: "",
                    messageForShow: ""
                }, this.nextMessageSeq = "", this.memberNum = "", this.memberCount = "", this.maxMemberNum = "", this.maxMemberCount = "", this.joinOption = "", this.inviteOption = "", this.groupCustomField = [], this.muteAllMembers = !1, this.isSupportTopic = !1, this._lastRevokedTime = 0, this._initGroup(e)
            }

            function na(e) {
                i(this, na), this.MAX_LENGTH = e, this.map = new Map
            }

            function oa(e) {
                var t = this;
                i(this, oa), He(e) || (this.userID = e.userID || "", this.nick = e.nick || "", this.gender = e.gender || "", this.birthday = e.birthday || 0, this.location = e.location || "", this.selfSignature = e.selfSignature || "", this.allowType = e.allowType || E.ALLOW_TYPE_ALLOW_ANY, this.language = e.language || 0, this.avatar = e.avatar || "", this.messageSettings = e.messageSettings || 0, this.adminForbidType = e.adminForbidType || E.FORBID_TYPE_NONE, this.level = e.level || 0, this.role = e.role || 0, this.lastUpdatedTime = 0, this.profileCustomField = [], He(e.profileCustomField) || e.profileCustomField.forEach((function(e) {
                    t.profileCustomField.push({
                        key: e.key,
                        value: e.value
                    })
                })))
            }

            function ia() {
                return null
            }

            function aa(e) {
                var t = e.get(12);
                return {
                    SDKType: 10,
                    SDKAppID: t.getSDKAppID(),
                    SDKVersion: t.getVersion(),
                    tinyID: Number(t.getTinyID()),
                    userID: t.getUserID(),
                    platform: e.getPlatform(),
                    instanceID: t.getInstanceID(),
                    traceID: Se()
                }
            }
            s(fa, [{
                key: "_errorTolerantHandle",
                value: function() {
                    Q || "undefined" != typeof window && this._canIUseCookies() || (this.getItem = ia, this.setItem = ia, this.removeItem = ia, this.clear = ia)
                }
            }, {
                key: "onCheckTimer",
                value: function(e) {
                    e % 20 == 0 && 0 !== this._storageQueue.size && this._doFlush()
                }
            }, {
                key: "_doFlush",
                value: function() {
                    try {
                        var e, t = T(this._storageQueue);
                        try {
                            for (t.s(); !(e = t.n()).done;) {
                                var n = f(e.value, 2),
                                    o = n[0],
                                    i = n[1];
                                this._setStorageSync(this._getKey(o), i)
                            }
                        } catch (e) {
                            t.e(e)
                        } finally {
                            t.f()
                        }
                        this._storageQueue.clear()
                    } catch (e) {
                        Oe.w("".concat(this._n, "._doFlush error:"), e)
                    }
                }
            }, {
                key: "_getPrefix",
                value: function() {
                    var e = this._m.get(12);
                    return "TIM_".concat(e.getSDKAppID(), "_").concat(e.getUserID(), "_")
                }
            }, {
                key: "_getKey",
                value: function(e) {
                    return "".concat(this._getPrefix()).concat(e)
                }
            }, {
                key: "getItem",
                value: function(e) {
                    var t = !(1 < arguments.length && void 0 !== arguments[1]) || arguments[1];
                    try {
                        var n = t ? this._getKey(e) : e;
                        return this.getStorageSync(n)
                    } catch (e) {
                        return Oe.w("".concat(this._n, ".getItem error:"), e), {}
                    }
                }
            }, {
                key: "setItem",
                value: function(e, t) {
                    var n;
                    2 < arguments.length && void 0 !== arguments[2] && arguments[2] ? (n = 3 < arguments.length && void 0 !== arguments[3] && !arguments[3] ? e : this._getKey(e), this._setStorageSync(n, t)) : this._storageQueue.set(e, t)
                }
            }, {
                key: "clear",
                value: function() {
                    try {
                        Q ? ne.clearStorageSync() : this._canIUseCookies() && localStorage.clear()
                    } catch (e) {
                        Oe.w("".concat(this._n, ".clear error:"), e)
                    }
                }
            }, {
                key: "removeItem",
                value: function(e) {
                    var t = !(1 < arguments.length && void 0 !== arguments[1]) || arguments[1];
                    try {
                        var n = t ? this._getKey(e) : e;
                        this._removeStorageSync(n)
                    } catch (e) {
                        Oe.w("".concat(this._n, ".removeItem error:"), e)
                    }
                }
            }, {
                key: "getSize",
                value: function(e) {
                    var t = this,
                        n = 1 < arguments.length && void 0 !== arguments[1] ? arguments[1] : "b";
                    try {
                        var o = {
                            size: 0,
                            limitSize: 5242880,
                            unit: n
                        };
                        if (Object.defineProperty(o, "leftSize", {
                                enumerable: !0,
                                get: function() {
                                    return o.limitSize - o.size
                                }
                            }), Q && (o.limitSize = 1024 * ne.getStorageInfoSync().limitSize), e) o.size = JSON.stringify(this.getItem(e)).length + this._getKey(e).length;
                        else if (Q) ne.getStorageInfoSync().keys.forEach((function(e) {
                            o.size += JSON.stringify(t.getStorageSync(e)).length + t._getKey(e).length
                        }));
                        else if (this._canIUseCookies())
                            for (var i in localStorage) localStorage.hasOwnProperty(i) && (o.size += localStorage.getItem(i).length + i.length);
                        return this._convertUnit(o)
                    } catch (e) {
                        Oe.w("".concat(this._n, " error:"), e)
                    }
                }
            }, {
                key: "_convertUnit",
                value: function(e) {
                    var t, n = {},
                        o = e.unit;
                    for (t in n.unit = o, e) "number" == typeof e[t] && ("kb" === o.toLowerCase() ? n[t] = Math.round(e[t] / 1024) : "mb" === o.toLowerCase() ? n[t] = Math.round(e[t] / 1024 / 1024) : n[t] = e[t]);
                    return n
                }
            }, {
                key: "_setStorageSync",
                value: function(e, t) {
                    Q ? j ? my.setStorageSync({
                        key: e,
                        data: t
                    }) : ne.setStorageSync(e, t) : this._canIUseCookies() && localStorage.setItem(e, JSON.stringify(t))
                }
            }, {
                key: "getStorageSync",
                value: function(e) {
                    return Q ? j ? my.getStorageSync({
                        key: e
                    }).data : ne.getStorageSync(e) : this._canIUseCookies() ? JSON.parse(localStorage.getItem(e)) : {}
                }
            }, {
                key: "_removeStorageSync",
                value: function(e) {
                    Q ? j ? my.removeStorageSync({
                        key: e
                    }) : ne.removeStorageSync(e) : this._canIUseCookies() && localStorage.removeItem(e)
                }
            }, {
                key: "_canIUseCookies",
                value: function() {
                    return "undefined" != typeof window && navigator && navigator.cookieEnabled && localStorage
                }
            }, {
                key: "reset",
                value: function() {
                    Oe.l("".concat(this._n, ".reset")), this._doFlush()
                }
            }]);
            var sa, ra = fa,
                ca = (s(ga, [{
                    key: "pushIn",
                    value: function(e) {
                        Oe.d("".concat(this._n, ".pushIn"), this._report.length, e), this._report.push(e)
                    }
                }, {
                    key: "backfill",
                    value: function(e) {
                        var t;
                        Je(e) && 0 !== e.length && (Oe.d("".concat(this._n, ".backfill"), this._report.length, e.length), (t = this._report).unshift.apply(t, m(e)))
                    }
                }, {
                    key: "getLogsNumInMemory",
                    value: function() {
                        return this._report.length
                    }
                }, {
                    key: "isEmpty",
                    value: function() {
                        return 0 === this._report.length
                    }
                }, {
                    key: "_reset",
                    value: function() {
                        this._report.length = 0, this._report = []
                    }
                }, {
                    key: "getLogsInMemory",
                    value: function() {
                        var e = this._report.slice();
                        return this._reset(), e
                    }
                }]), ga),
                ua = (c(ha, Rn), sa = g(ha), s(ha, [{
                    key: "reportAtOnce",
                    value: function() {
                        this._report()
                    }
                }, {
                    key: "_onLoginSuccess",
                    value: function() {
                        var e = this,
                            t = this.get(13),
                            n = t.getItem(this.TAG, !1);
                        !He(n) && ze(n.forEach) && (Oe.l("".concat(this._n, "._onLoginSuccess. logs count:").concat(n.length)), n.forEach((function(t) {
                            e._reportBody.pushIn(t)
                        })), t.removeItem(this.TAG, !1))
                    }
                }, {
                    key: "_onCloudConfig",
                    value: function() {
                        var e = this.getCloudConfig("evt_rpt_threshold"),
                            t = this.getCloudConfig("evt_rpt_waiting"),
                            n = this.getCloudConfig("evt_rpt_level"),
                            o = this.getCloudConfig("evt_rpt_sdkappid_bl"),
                            i = this.getCloudConfig("evt_rpt_tinyid_wl");
                        ut(e) || (this.MIN_THRESHOLD = Number(e)), ut(t) || (this.WAITING_TIME = Number(t)), ut(n) || (this.REPORT_LEVEL = n.split(",").map((function(e) {
                            return Number(e)
                        }))), ut(o) || (this.REPORT_SDKAPPID_BLACKLIST = o.split(",").map((function(e) {
                            return Number(e)
                        }))), ut(i) || (this.REPORT_TINYID_WHITELIST = i.split(","))
                    }
                }, {
                    key: "pushIn",
                    value: function(e) {
                        e instanceof Qn && (e.updateTimeStamp(), this._reportBody.pushIn(e), this._reportBody.getLogsNumInMemory() >= this.MIN_THRESHOLD && this._report())
                    }
                }, {
                    key: "onCheckTimer",
                    value: function() {
                        Date.now() < this._lastReportTime + this.WAITING_TIME || this._reportBody.isEmpty() || this._report()
                    }
                }, {
                    key: "_filterLogs",
                    value: function(e) {
                        var t = this,
                            n = (o = this.get(12)).getSDKAppID(),
                            o = o.getTinyID();
                        return Ut(this.REPORT_SDKAPPID_BLACKLIST, n) && !bt(this.REPORT_TINYID_WHITELIST, o) ? [] : e.filter((function(e) {
                            return t.REPORT_LEVEL.includes(e.level)
                        }))
                    }
                }, {
                    key: "_report",
                    value: function() {
                        var e, n, o = this;
                        this._reportBody.isEmpty() || (e = this._reportBody.getLogsInMemory(), 0 !== (n = this._filterLogs(e)).length ? (n = {
                            header: aa(this),
                            event: n
                        }, this.req({
                            P: wn.SSO_STAT,
                            data: t({}, n)
                        }).then((function() {
                            o._lastReportTime = Date.now()
                        })).catch((function(t) {
                            Oe.w("".concat(o._n, "._report failed. error:"), t), o._lastReportTime = Date.now(), o._reportBody.backfill(e), o._reportBody.getLogsNumInMemory() > o.MAX_THRESHOLD && o._flushAtOnce()
                        }))) : this._lastReportTime = Date.now())
                    }
                }, {
                    key: "_flushAtOnce",
                    value: function() {
                        var e = this.get(13),
                            t = e.getItem(this.TAG, !1),
                            n = this._reportBody.getLogsInMemory(),
                            o = "".concat(this._n, "._flushAtOnce");
                        He(t) ? (Oe.l("".concat(o, " count:").concat(n.length)), e.setItem(this.TAG, n, !0, !1)) : ((n = n.concat(t)).length > this.MAX_THRESHOLD && (n = n.slice(0, this.MAX_THRESHOLD)), Oe.l("".concat(o, " count:").concat(n.length)), e.setItem(this.TAG, n, !0, !1))
                    }
                }, {
                    key: "reset",
                    value: function() {
                        Oe.l("".concat(this._n, ".reset")), this._lastReportTime = 0, this._report(), this.REPORT_SDKAPPID_BLACKLIST = [], this.REPORT_TINYID_WHITELIST = []
                    }
                }]), ha),
                la = "none",
                da = "online",
                pa = (s(_a, [{
                    key: "_startRN",
                    value: function() {
                        var e, t = this;
                        !ee || (e = this._m.get(18).getPlugin("chat-network-monitor")) && (this._removeListener = e.addEventListener((function(e) {
                            var n = e.isConnected;
                            e = e.type, t._networkType !== e && t._onNetworkStatusChange({
                                isConnected: void 0 !== n && n,
                                networkType: e
                            })
                        })))
                    }
                }, {
                    key: "start",
                    value: function() {
                        var e = this,
                            t = "".concat(this._n, ".start");
                        Q ? (ne.getNetworkType({
                            success: function(n) {
                                e._networkType = n.networkType || n.subtype || "", n.networkType === la ? Oe.w("".concat(t, " no network, please check!")) : Oe.i("".concat(t, " networkType:").concat(n.networkType))
                            }
                        }), this._mpNetworkStatusCallback = this._onNetworkStatusChange.bind(this), ne.onNetworkStatusChange(this._mpNetworkStatusCallback)) : te && (this._networkType = da, this._webOnlineCallback = this._onWebOnline.bind(this), this._webOfflineCallback = this._onWebOffline.bind(this), window.addEventListener("online", this._webOnlineCallback), window.addEventListener("offline", this._webOfflineCallback))
                    }
                }, {
                    key: "_onWebOnline",
                    value: function() {
                        this._onNetworkStatusChange({
                            isConnected: !0,
                            networkType: da
                        })
                    }
                }, {
                    key: "_onWebOffline",
                    value: function() {
                        this._onNetworkStatusChange({
                            isConnected: !1,
                            networkType: la
                        })
                    }
                }, {
                    key: "_onNetworkStatusChange",
                    value: function(e) {
                        var t = e.isConnected,
                            n = (e = e.networkType, "".concat(this._n, "._onNetworkStatusChange")),
                            o = !1,
                            i = "previous:".concat(this._networkType, " current:").concat(e);
                        t ? (Oe.i("".concat(n, " ").concat(i)), this._networkType !== e && (o = !0, this._networkType = e, this._m.get(21).reConnect(!0))) : this._networkType !== e && (o = !0, this._networkType = e, Oe.w("".concat(n, " no network, please check!")), this._m.get(21).offline()), o && new Qn("networkChange").setMessage("isConnected:".concat(t, " ").concat(i)).end()
                    }
                }, {
                    key: "isOnline",
                    value: function() {
                        return this._networkType !== la
                    }
                }, {
                    key: "getNetworkType",
                    value: function() {
                        return this._networkType
                    }
                }, {
                    key: "reset",
                    value: function() {
                        Oe.l("".concat(this._n, ".reset")), Q ? null !== this._mpNetworkStatusCallback && (ne.offNetworkStatusChange && ne.offNetworkStatusChange(this._mpNetworkStatusCallback), this._mpNetworkStatusCallback = null) : te ? (null !== this._webOnlineCallback && (window.removeEventListener("online", this._webOnlineCallback), this._webOnlineCallback = null), null !== this._onWebOffline && (window.removeEventListener("offline", this._webOfflineCallback), this._webOfflineCallback = null)) : ee && this._removeListener && (this._removeListener(), this._removeListener = null)
                    }
                }]), _a);

            function _a(e) {
                i(this, _a), this._m = e, this._networkType = da, this._n = "NetMonitorModule", this._mpNetworkStatusCallback = null, this._webOnlineCallback = null, this._webOfflineCallback = null, this._removeListener = null, this._m.getIEmitInst().on(qo.A2KEY_AND_TINYID_UPDATED, this._startRN, this)
            }

            function ha(e) {
                i(this, ha), (e = sa.call(this, e))._n = "EventStatModule", e.TAG = "im-ssolog-event", e._reportBody = new ca, e.MIN_THRESHOLD = 20, e.MAX_THRESHOLD = 100, e.WAITING_TIME = 6e4, e.REPORT_LEVEL = [4, 5, 6], e.REPORT_SDKAPPID_BLACKLIST = [], e.REPORT_TINYID_WHITELIST = [], e._lastReportTime = Date.now();
                var t = e.getIEmitInst();
                return t.on(qo.A2KEY_AND_TINYID_UPDATED, e._onLoginSuccess, h(e)), t.on(qo.CLOUD_CONFIG, e._onCloudConfig, h(e)), e
            }

            function ga(e) {
                i(this, ga), this._n = "SSOLogBody", this._report = []
            }

            function fa(e) {
                i(this, fa), this._m = e, this._n = "StorageModule", this._storageQueue = new Map, this._errorTolerantHandle()
            }

            function ma(e, t) {
                return e(t = {
                    exports: {}
                }, t.exports), t.exports
            }
            var va, Ia = ma((function(e) {
                    var t = Object.prototype.hasOwnProperty,
                        n = "~";

                    function o() {}

                    function i(e, t, n) {
                        this.fn = e, this.context = t, this.once = n || !1
                    }

                    function a(e, t, o, a, s) {
                        if ("function" != typeof o) throw new TypeError("The listener must be a function");
                        return o = new i(o, a || e, s), a = n ? n + t : t, e._events[a] ? e._events[a].fn ? e._events[a] = [e._events[a], o] : e._events[a].push(o) : (e._events[a] = o, e._eventsCount++), e
                    }

                    function s(e, t) {
                        0 == --e._eventsCount ? e._events = new o : delete e._events[t]
                    }

                    function r() {
                        this._events = new o, this._eventsCount = 0
                    }
                    Object.create && (o.prototype = Object.create(null), (new o).__proto__ || (n = !1)), r.prototype.eventNames = function() {
                        var e, o, i = [];
                        if (0 === this._eventsCount) return i;
                        for (o in e = this._events) t.call(e, o) && i.push(n ? o.slice(1) : o);
                        return Object.getOwnPropertySymbols ? i.concat(Object.getOwnPropertySymbols(e)) : i
                    }, r.prototype.listeners = function(e) {
                        e = n ? n + e : e;
                        var t = this._events[e];
                        if (!t) return [];
                        if (t.fn) return [t.fn];
                        for (var o = 0, i = t.length, a = new Array(i); o < i; o++) a[o] = t[o].fn;
                        return a
                    }, r.prototype.listenerCount = function(e) {
                        return e = n ? n + e : e, (e = this._events[e]) ? e.fn ? 1 : e.length : 0
                    }, r.prototype.emit = function(e, t, o, i, a, s) {
                        var r = n ? n + e : e;
                        if (!this._events[r]) return !1;
                        var c, u = this._events[r],
                            l = arguments.length;
                        if (u.fn) {
                            switch (u.once && this.removeListener(e, u.fn, void 0, !0), l) {
                                case 1:
                                    return u.fn.call(u.context), !0;
                                case 2:
                                    return u.fn.call(u.context, t), !0;
                                case 3:
                                    return u.fn.call(u.context, t, o), !0;
                                case 4:
                                    return u.fn.call(u.context, t, o, i), !0;
                                case 5:
                                    return u.fn.call(u.context, t, o, i, a), !0;
                                case 6:
                                    return u.fn.call(u.context, t, o, i, a, s), !0
                            }
                            for (_ = 1, c = new Array(l - 1); _ < l; _++) c[_ - 1] = arguments[_];
                            u.fn.apply(u.context, c)
                        } else
                            for (var d, p = u.length, _ = 0; _ < p; _++) switch (u[_].once && this.removeListener(e, u[_].fn, void 0, !0), l) {
                                case 1:
                                    u[_].fn.call(u[_].context);
                                    break;
                                case 2:
                                    u[_].fn.call(u[_].context, t);
                                    break;
                                case 3:
                                    u[_].fn.call(u[_].context, t, o);
                                    break;
                                case 4:
                                    u[_].fn.call(u[_].context, t, o, i);
                                    break;
                                default:
                                    if (!c)
                                        for (d = 1, c = new Array(l - 1); d < l; d++) c[d - 1] = arguments[d];
                                    u[_].fn.apply(u[_].context, c)
                            }
                        return !0
                    }, r.prototype.on = function(e, t, n) {
                        return a(this, e, t, n, !1)
                    }, r.prototype.once = function(e, t, n) {
                        return a(this, e, t, n, !0)
                    }, r.prototype.removeListener = function(e, t, o, i) {
                        if (e = n ? n + e : e, !this._events[e]) return this;
                        if (!t) return s(this, e), this;
                        var a = this._events[e];
                        if (a.fn) a.fn !== t || i && !a.once || o && a.context !== o || s(this, e);
                        else {
                            for (var r = 0, c = [], u = a.length; r < u; r++)(a[r].fn !== t || i && !a[r].once || o && a[r].context !== o) && c.push(a[r]);
                            c.length ? this._events[e] = 1 === c.length ? c[0] : c : s(this, e)
                        }
                        return this
                    }, r.prototype.removeAllListeners = function(e) {
                        return e ? (e = n ? n + e : e, this._events[e] && s(this, e)) : (this._events = new o, this._eventsCount = 0), this
                    }, r.prototype.off = r.prototype.removeListener, r.prototype.addListener = r.prototype.on, r.prefixed = n, e.exports = r.EventEmitter = r
                })),
                Ma = ["rich.my-imcloud.com", "imrich.qcloud.com"],
                ya = ["requestSnapshotUrl"],
                Ca = (c(ka, Rn), va = g(ka), s(ka, [{
                    key: "_init",
                    value: function() {
                        this._fileDownloadProxy = this.getFileDownloadProxy(), this._authKey = this.getDowloadFileAuthKey();
                        var e = this.get(18);
                        this.TIMUploadPlugin = e.getPlugin("tim-upload-plugin"), this.TIMUploadPlugin ? this._initUploaderMethod() : (this.COSSDK = e.getPlugin(e = Q ? "cos-wx-sdk" : "cos-js-sdk"), this.COSSDK ? (this._getAuthorizationKey(), this.warn("CosReplacement", e)) : this.warn("PluginUndetected"))
                    }
                }, {
                    key: "_onCloudConfig",
                    value: function() {
                        var e = this,
                            t = "".concat(this._n, "._onCloudConfig"),
                            n = this.getCloudConfig("upload_size_limit"),
                            o = this.getCloudConfig("simple_cos"),
                            i = this.getCloudConfig("file_dn_list");
                        if (Oe.l("".concat(t, " uploadSizeLimit:").concat(n, " simpleCos:").concat(o)), !ut(n)) try {
                            var a = JSON.parse(n);
                            this.UPLOAD_SIZE_LIMIT = {
                                A: a.a ? 1048576 * parseInt(a.a) : this.UPLOAD_SIZE_LIMIT.A,
                                F: a.f ? 1048576 * parseInt(a.f) : this.UPLOAD_SIZE_LIMIT.F,
                                I: a.i ? 1048576 * parseInt(a.i) : this.UPLOAD_SIZE_LIMIT.I,
                                V: a.v ? 1048576 * parseInt(a.v) : this.UPLOAD_SIZE_LIMIT.V
                            }
                        } catch (t) {}
                        if (ut(o) || (this.isSimpleCos = "1" === o), !ut(i)) try {
                            JSON.parse(i).forEach((function(t) {
                                e._fileDNList.includes(t) || e._fileDNList.push(t)
                            }))
                        } catch (t) {}
                    }
                }, {
                    key: "_getAuthorizationKey",
                    value: function() {
                        var e = this,
                            t = "".concat(this._n, ".").concat("_getAuthorizationKey"),
                            n = new Qn("_getAuthorizationKey"),
                            o = Math.ceil(Date.now() / 1e3);
                        this.req({
                            P: wn.COS_SIGN,
                            data: {
                                duration: this.expiredTimeLimit
                            }
                        }).then((function(i) {
                            i = i.data;
                            var a = (Oe.l("".concat(t, " ok. data:"), i), i.expiredTime - o);
                            n.setMessage("requestId:".concat(i.requestId, " requestTime:").concat(o, " expiredTime:").concat(i.expiredTime, " diff:").concat(a, "s")).end(), !Q && i.region && (e.region = i.region), e.appid = i.appid, e.bucketName = i.bucketName, e.ciUrl = i.ciUrl, e.directory = i.directory, e.downloadUrl = i.downloadUrl, e.uploadUrl = i.uploadUrl, e.cosOptions = {
                                secretId: i.secretId,
                                secretKey: i.secretKey,
                                sessionToken: i.sessionToken,
                                expiredTime: i.expiredTime
                            }, Oe.l("".concat(t, " ok. region:").concat(e.region, " bucketName:").concat(e.bucketName)), e._initUploaderMethod()
                        })).catch((function(e) {
                            n.setError(e).end(), Oe.w("".concat(t, " failed. error:"), e)
                        }))
                    }
                }, {
                    key: "_getCosPreSigUrl",
                    value: function(e) {
                        var t = this,
                            n = "".concat(this._n, ".").concat("_getCosPreSigUrl"),
                            o = Math.ceil(Date.now() / 1e3),
                            i = new Qn("_getCosPreSigUrl"),
                            a = {
                                uploadMethod: e.uploadMethod,
                                platform: this.getPlatform(),
                                SDKAppID: this.getSDKAppID(),
                                userID: e.userID,
                                conversationType: e.conversationType,
                                uploadConfig: [{
                                    fileID: 1,
                                    fileType: e.fileType,
                                    fileName: e.fileName
                                }]
                            },
                            s = wn.SIMPLE_COS_PRE_SIG;
                        return this.isSimpleCos || (a = {
                            fileType: e.fileType,
                            fileName: e.fileName,
                            uploadMethod: e.uploadMethod,
                            duration: e.duration
                        }, s = wn.COS_PRE_SIG), this.req({
                            P: s,
                            data: a
                        }).then((function(e) {
                            t.tryCount = 0, e = e.data || {};
                            var a, s, r = Oe.l("".concat(n, " ok. isSimpleCos:").concat(t.isSimpleCos, " data:"), e);
                            return r = t.isSimpleCos ? (a = (s = e.preSig[0]).uploadUrl, s = s.fileKey, "uploadIP:".concat(e.uploadIP, " uploadUrl:").concat(a, " fileKey:").concat(s, " cost:").concat(Yt(o))) : "requestId:".concat(e.requestId, " expiredTime:").concat(e.expiredTime, " diff:").concat(e.expiredTime - o, "s"), i.setMessage(r).end(), e
                        })).catch((function(o) {
                            return -1 === o.code && (o.code = Un.COS_GET_SIG_FAIL), i.setError(o).end(), Oe.w("".concat(n, " failed. error:"), o), t.tryCount < 1 ? (t.tryCount++, t._getCosPreSigUrl(e)) : (t.tryCount = 0, Mn({
                                code: Un.COS_GET_SIG_FAIL
                            }))
                        }))
                    }
                }, {
                    key: "_initUploaderMethod",
                    value: function() {
                        var e = this;
                        if (this.TIMUploadPlugin) return this.timUploadPlugin = new this.TIMUploadPlugin, void(this._cosUploadMethod = function(t, n) {
                            e.timUploadPlugin.uploadFile(t, n)
                        });
                        this.appid && (this.cos = Q ? new this.COSSDK({
                            ForcePathStyle: !0,
                            getAuthorization: this._getAuthorization.bind(this)
                        }) : new this.COSSDK({
                            getAuthorization: this._getAuthorization.bind(this)
                        }), this._cosUploadMethod = Q ? function(t, n) {
                            e.cos.postObject(t, n)
                        } : function(t, n) {
                            e.cos.uploadFiles(t, n)
                        })
                    }
                }, {
                    key: "onCheckTimer",
                    value: function(e) {
                        this.COSSDK && (this.TIMUploadPlugin || this.isLoggedIn() && e % 60 == 0 && Math.ceil(Date.now() / 1e3) >= this.cosOptions.expiredTime - 120 && this._getAuthorizationKey())
                    }
                }, {
                    key: "getFileDNList",
                    value: function() {
                        return this._fileDNList
                    }
                }, {
                    key: "_getAuthorization",
                    value: function(e, t) {
                        t({
                            TmpSecretId: this.cosOptions.secretId,
                            TmpSecretKey: this.cosOptions.secretKey,
                            XCosSecurityToken: this.cosOptions.sessionToken,
                            ExpiredTime: this.cosOptions.expiredTime
                        })
                    }
                }, {
                    key: "upload",
                    value: function(e) {
                        if (!0 === e._relayFlag) return Promise.resolve();
                        var t = this.get(26);
                        switch (e.type) {
                            case E.MSG_IMAGE:
                                return t.addTotalCount(Kn), this._uploadImage(e);
                            case E.MSG_FILE:
                                return t.addTotalCount(Kn), this._uploadFile(e);
                            case E.MSG_AUDIO:
                                return t.addTotalCount(Kn), this._uploadAudio(e);
                            case E.MSG_VIDEO:
                                return t.addTotalCount(Kn), this._uploadVideo(e);
                            default:
                                return Promise.resolve()
                        }
                    }
                }, {
                    key: "_uploadImage",
                    value: function(e) {
                        var n = this,
                            o = this.get(2),
                            i = e.getElements()[0],
                            a = o.getMessageOption(e.clientSequence);
                        return this.doUploadImage({
                            file: a.payload.file,
                            to: a.to,
                            message: e,
                            onProgress: function(e) {
                                if (i.updatePercent(e), ze(a.onProgress)) try {
                                    a.onProgress(e)
                                } catch (e) {
                                    return Mn({
                                        code: Un.MSG_ONPROGRESS_ERR
                                    })
                                }
                            }
                        }).then((function(o) {
                            var a = o.location,
                                s = o.fileType,
                                r = o.fileSize,
                                c = o.width,
                                u = o.height,
                                l = o.smallImageUrl,
                                d = o.smallImageWidth,
                                p = o.smallImageHeight,
                                _ = o.largeImageUrl,
                                h = o.largeImageWidth,
                                g = o.largeImageHeight,
                                f = o.imageInfoArray;
                            o = n.isPrivateNetWork() ? a : at(a), i.updateImageFormat(s);
                            var m, v, I = {
                                size: r,
                                url: o,
                                width: c,
                                height: u
                            };
                            if (f && 0 < f.length)
                                for (var M = 0; M < f.length; M++) {
                                    var y = f[M];
                                    1 === y.type ? m = y : 2 === y.type ? v = y : I = t(t({}, I), y)
                                } else v = l && _ ? (m = {
                                    url: l,
                                    width: d,
                                    height: p
                                }, {
                                    url: _,
                                    width: h,
                                    height: g
                                }) : (m = Ot({
                                    originUrl: o,
                                    originWidth: c,
                                    originHeight: u,
                                    min: 198
                                }), Ot({
                                    originUrl: o,
                                    originWidth: c,
                                    originHeight: u,
                                    min: 720
                                }));
                            return i.updateImageInfoArray([t({}, I), t({}, v), t({}, m)]), e
                        }))
                    }
                }, {
                    key: "_uploadFile",
                    value: function(e) {
                        var t = this,
                            n = this.get(2),
                            o = e.getElements()[0],
                            i = n.getMessageOption(e.clientSequence);
                        return this.doUploadFile({
                            file: i.payload.file,
                            to: i.to,
                            message: e,
                            onProgress: function(e) {
                                if (o.updatePercent(e), ze(i.onProgress)) try {
                                    i.onProgress(e)
                                } catch (e) {
                                    return Mn({
                                        code: Un.MSG_ONPROGRESS_ERR
                                    })
                                }
                            }
                        }).then((function(n) {
                            var i = n = n.location;
                            return t.isPrivateNetWork() || (i = io(i = at(n), t._fileDownloadProxy, t._authKey, t._fileDNList)), o.updateFileUrl(i), e
                        }))
                    }
                }, {
                    key: "_uploadAudio",
                    value: function(e) {
                        var t = this,
                            n = this.get(2),
                            o = e.getElements()[0],
                            i = n.getMessageOption(e.clientSequence);
                        return this.doUploadAudio({
                            file: i.payload.file,
                            to: i.to,
                            message: e,
                            onProgress: function(e) {
                                if (o.updatePercent(e), ze(i.onProgress)) try {
                                    i.onProgress(e)
                                } catch (e) {
                                    return Mn({
                                        code: Un.MSG_ONPROGRESS_ERR
                                    })
                                }
                            }
                        }).then((function(n) {
                            return n = n.location, n = t.isPrivateNetWork() ? n : at(n), o.updateAudioUrl(n), e
                        }))
                    }
                }, {
                    key: "_uploadVideo",
                    value: function(e) {
                        var t = this,
                            n = this.get(2),
                            o = e.getElements()[0],
                            i = n.getMessageOption(e.clientSequence);
                        return this.doUploadVideo({
                            file: i.payload.file,
                            to: i.to,
                            message: e,
                            onProgress: function(e) {
                                if (o.updatePercent(e), ze(i.onProgress)) try {
                                    i.onProgress(e)
                                } catch (e) {
                                    return Mn({
                                        code: Un.MSG_ONPROGRESS_ERR
                                    })
                                }
                            }
                        }).then((function(n) {
                            var i = n.location;
                            return n = n.snapshotInfo, i = t.isPrivateNetWork() ? i : at(i), o.updateVideoUrl(i), He(n) || o.updateSnapshotInfo(n), e
                        }))
                    }
                }, {
                    key: "_checkSizeError",
                    value: function(e) {
                        var t = "";
                        return "A" === e ? t = "audio" : "I" === e ? t = "image" : "V" === e ? t = "video" : "F" === e && (t = "file"), Mn({
                            code: Un["MSG_".concat(e, "_SIZE_LIMIT")],
                            message: this.getErrMsg("UploadSizeLimit", t, "".concat(this.UPLOAD_SIZE_LIMIT[e] / 1048576, "MB"))
                        })
                    }
                }, {
                    key: "doUploadImage",
                    value: function(e) {
                        var t = this;
                        if (!e.file || this._isEmptyFileList(e.file.files)) return Mn({
                            code: Un.MSG_I_SELECT_F_FIRST
                        });
                        var n = this._checkImageType(e.file);
                        if (!0 !== n) return n;
                        if (!0 !== (n = this._checkImageSize(e.file))) return n;
                        var o = null;
                        return this._setUploadFileType(1), this.uploadByCOS(e).then((function(n) {
                            if (o = n, t.isPrivateNetWork()) return St(a);
                            if (Je(o.imageInfoArray)) {
                                var i = o.imageInfoArray.find((function(e) {
                                    return 3 === e.type
                                }));
                                if (i) return i
                            }
                            if (ee) return {
                                width: e.file.width,
                                height: e.file.height
                            };
                            var a = at(n.location);
                            return t.COSSDK ? St(a) : St(a = io(a, t._fileDownloadProxy, t._authKey, t._fileDNList))
                        })).then((function(e) {
                            return o.width = e.width, o.height = e.height, Promise.resolve(o)
                        }))
                    }
                }, {
                    key: "_checkImageType",
                    value: function(e) {
                        var t = "";
                        return t = Q ? e.url.slice(e.url.lastIndexOf(".") + 1) : ee ? e.type.split("/")[1] : e.files[0].name.slice(e.files[0].name.lastIndexOf(".") + 1), 0 <= Qo.indexOf(t.toLowerCase()) || Mn({
                            code: Un.MSG_I_TYPES_LIMIT
                        })
                    }
                }, {
                    key: "_checkImageSize",
                    value: function(e) {
                        return 0 === (e = (Q || ee ? e : e.files[0]).size) ? Mn({
                            code: Un.MSG_F_IS_EMPTY
                        }) : e < this.UPLOAD_SIZE_LIMIT.I || this._checkSizeError("I")
                    }
                }, {
                    key: "doUploadFile",
                    value: function(e) {
                        return !e.file || this._isEmptyFileList(e.file.files) ? Mn({
                            code: Un.MSG_F_SELECT_F_FIRST
                        }) : e.file.files[0].size > this.UPLOAD_SIZE_LIMIT.F ? this._checkSizeError("F") : 0 === e.file.files[0].size ? Mn({
                            code: Un.MSG_F_IS_EMPTY
                        }) : (this._setUploadFileType(255), this.uploadByCOS(e))
                    }
                }, {
                    key: "doUploadVideo",
                    value: function(e) {
                        return e.file.videoFile.size > this.UPLOAD_SIZE_LIMIT.V ? this._checkSizeError("V") : 0 === e.file.videoFile.size ? Mn({
                            code: Un.MSG_F_IS_EMPTY
                        }) : -1 === $o.indexOf(e.file.videoFile.type) ? Mn({
                            code: Un.MSG_V_TYPES_LIMIT
                        }) : (this._setUploadFileType(2), Q || ee ? this.handleVideoUpload(t(t({}, e), {}, {
                            file: e.file.videoFile
                        })) : te ? this.handleVideoUpload(e) : void 0)
                    }
                }, {
                    key: "handleVideoUpload",
                    value: function(e) {
                        var t = this;
                        return new Promise((function(n, o) {
                            t.uploadByCOS(e).then((function(e) {
                                n(e)
                            })).catch((function() {
                                t.uploadByCOS(e).then((function(e) {
                                    n(e)
                                })).catch((function() {
                                    o(new Pn({
                                        code: Un.MSG_V_UPLOAD_FAIL
                                    }))
                                }))
                            }))
                        }))
                    }
                }, {
                    key: "doUploadAudio",
                    value: function(e) {
                        return e.file ? e.file.size > this.UPLOAD_SIZE_LIMIT.A ? this._checkSizeError("A") : 0 === e.file.size ? Mn({
                            code: Un.MSG_F_IS_EMPTY
                        }) : (this._setUploadFileType(3), this.uploadByCOS(e)) : Mn({
                            code: Un.MSG_A_UPLOAD_FAIL
                        })
                    }
                }, {
                    key: "uploadByCOS",
                    value: function(e) {
                        var t = this;
                        if (!ze(this._cosUploadMethod)) return this.warn("PluginUndetected"), Mn({
                            code: Un.COS_UNDETECTED
                        });
                        if (this.timUploadPlugin) return this._uploadWithPreSigUrl(e);
                        var n = new Qn("upload"),
                            o = "".concat(this._n, ".uploadByCOS"),
                            i = Date.now(),
                            a = this._getFile(e);
                        return new Promise((function(s, r) {
                            var c = Q ? t._createCosOptionsWXMiniApp(e) : t._createCosOptionsWeb(e),
                                u = t;
                            t._cosUploadMethod(c, (function(e, c) {
                                var l = Object.create(null);
                                if (c) {
                                    if (e || Je(c.files) && c.files[0].error) return d = new Pn({
                                        code: Un.MSG_F_UPLOAD_FAIL
                                    }), n.setError(d).end(), Oe.l("".concat(o, " failed. error:"), c.files[0].error), 403 === c.files[0].error.statusCode && t._getAuthorizationKey(), void r(d);
                                    l.fileName = a.name, l.fileSize = a.size, l.fileType = a.type.slice(a.type.indexOf("/") + 1).toLowerCase(), l.location = (Q ? c : c.files[0].data).Location;
                                    var d = Date.now() - i,
                                        p = (c = u._formatFileSize(a.size), u._formatSpeed(1e3 * a.size / d));
                                    return c = "size:".concat(c, " time:").concat(d, "ms speed:").concat(p), (Oe.l("".concat(o, " success. name:").concat(a.name, " ").concat(c)), s(l), p = t.get(26)).addCost(Kn, d), p.addFileSize(Kn, a.size), void n.setMessage(c).end()
                                }
                                l = new Pn({
                                    code: Un.MSG_F_UPLOAD_FAIL
                                }), n.setError(l).end(), Oe.w("".concat(o, " failed. error:"), e), 403 === e.statusCode && t._getAuthorizationKey(), r(l)
                            }))
                        }))
                    }
                }, {
                    key: "_uploadWithPreSigUrl",
                    value: function(e) {
                        var t = this,
                            n = "".concat(this._n, "._uploadWithPreSigUrl"),
                            o = this._getFile(e);
                        return this._createCosOptionsPreSigUrl(e).then((function(e) {
                            return new Promise((function(i, a) {
                                var s = new Qn("upload"),
                                    r = e.requestSnapshotUrl,
                                    c = void 0 === r ? void 0 : r,
                                    u = _(e, ya),
                                    l = Date.now();
                                t._cosUploadMethod(u, (function(r, d) {
                                    var p, _, h;
                                    return r || 403 === d.statusCode ? (s.setError(new Pn(r)).end(), _ = {
                                        HttpStatusCode: 9999,
                                        CostTime: Yt(l, !1),
                                        error: r,
                                        url: e.url
                                    }, d.data && d.data.uploadIP && (_.uploadIP = d.data.uploadIP), t._uploadSSOLog(_), Oe.l("".concat(n, " failed, error:"), r), void a(new Pn({
                                        code: Un.MSG_F_UPLOAD_FAIL
                                    }))) : (p = Object.create(null), _ = d.data.location || "", t.isPrivateNetWork() || 0 !== _.indexOf("https://") && 0 !== _.indexOf("http://") || (_ = _.split("//")[1]), p.fileName = o.name, p.fileSize = o.size, p.fileType = o.type.slice(o.type.indexOf("/") + 1).toLowerCase(), p.location = _, r = Yt(l, !1), _ = t._formatFileSize(o.size), h = t._formatSpeed(1e3 * o.size / r), _ = "size:".concat(_, " time:").concat(r, "ms speed:").concat(h, " res:").concat(JSON.stringify(d.data)), Oe.l("".concat(n, " ok. name:").concat(o.name, " ").concat(_)), s.setMessage(_).end(), h = {
                                        HttpStatusCode: d.statusCode,
                                        FileSize: o.size,
                                        CostTime: r,
                                        url: e.url
                                    }, d.data && d.data.uploadIP && (h.uploadIP = d.data.uploadIP), t._uploadSSOLog(h), (_ = t.get(26)).addCost(Kn, r), _.addFileSize(Kn, o.size), h = [], u.thumbUrl && u.largeUrl && h.push.apply(h, [t._getSmallImageInfoByUrl(u.thumbUrl, p), t._getLargeImageInfoByUrl(u.largeUrl, p)]), 1 === t.uploadFileType && t.isSimpleCos && !t.isPrivateNetWork() && (h.push(t._getImageInfoArray(u.downloadUrl, p)), d.data.uploadIP && h.push(t._getDownloadIP(u.downloadUrl.split("//")[1].split("/")[0], p))), c && h.push(t._getSnapshotInfoByUrl(c, p)), 0 < h.length ? Promise.all(h).then((function() {
                                        i(p)
                                    })) : void i(p))
                                }))
                            }))
                        }))
                    }
                }, {
                    key: "_getDownloadIP",
                    value: function(e, t) {
                        var n = "".concat(this._n, "._getDownloadIP"),
                            o = Date.now();
                        return this.req({
                            P: wn.GET_IP,
                            data: {
                                domainName: e
                            }
                        }).then((function(e) {
                            var i;
                            e.data && e.data.ip && (Oe.l("".concat(n, " ok. downloadIP:").concat(e.data.ip, " cost:").concat(Yt(o))), (i = t.location.split("/"))[0] = e.data.ip, t.location = i.join("/"))
                        })).catch((function(e) {}))
                    }
                }, {
                    key: "_getImageInfoArray",
                    value: function(e, t) {
                        var n = this,
                            o = "".concat(this._n, "._getImageInfoArray"),
                            i = Date.now();
                        return this.req({
                            P: wn.GET_IMAGE_INFO,
                            data: {
                                imageUrl: e
                            }
                        }).then((function(e) {
                            return e = e.data || {}, Oe.l("".concat(o, " ok. data: ").concat(JSON.stringify(e), " cost:").concat(Yt(i))), t.imageInfoArray = e.imageInfoArray, e
                        })).catch((function(o) {
                            t.imageInfoArray = void 0, n._uploadSSOLog({
                                HttpStatusCode: 1e4,
                                CostTime: Yt(i, !1),
                                url: e
                            })
                        }))
                    }
                }, {
                    key: "_uploadSSOLog",
                    value: function(e) {
                        var t, n;
                        this.isSimpleCos && ((t = new Qn).setEventType(18), e.error && t.setError(new Pn(e.error)), n = "HttpStatusCode:".concat(e.HttpStatusCode, "|CosRequestId:").concat(e.CosRequestId || "", "|") + "FileAlreadyExist:".concat(e.FileAlreadyExist || 0, "|FileSize:").concat(e.FileSize || 0, "|CostTime:").concat(e.CostTime), e.uploadIP && (n += "|FinalIP:".concat(e.uploadIP)), t.setMessage("OK").setMoreMessage(e.url).setExtension(n).end())
                    }
                }, {
                    key: "_getRawOrUploadProxyUrl",
                    value: function(e) {
                        var t = this.get(12).getFileUploadProxy(),
                            n = e;
                        return t ? e.replace(/^https:\/\/[^/]+/, t) : n
                    }
                }, {
                    key: "_getFile",
                    value: function(e) {
                        return Je(e.file.files) || Xe(e.file.files) ? e.file.files[0] : e.file
                    }
                }, {
                    key: "_formatFileSize",
                    value: function(e) {
                        return e < 1024 ? e + "B" : e < 1048576 ? Math.floor(e / 1024) + "KB" : Math.floor(e / 1048576) + "MB"
                    }
                }, {
                    key: "_formatSpeed",
                    value: function(e) {
                        return e <= 1048576 ? Pt(e / 1024, 1) + "KB/s" : Pt(e / 1048576, 1) + "MB/s"
                    }
                }, {
                    key: "_createCosOptionsWeb",
                    value: function(e) {
                        var t = this._getFile(e),
                            n = (n = t.name).slice(n.lastIndexOf("."));
                        return n = this._genFileName("".concat(nt(999999)).concat(n)), {
                            files: [{
                                Bucket: "".concat(this.bucketName, "-").concat(this.appid),
                                Region: this.region,
                                Key: "".concat(this.directory, "/").concat(n),
                                Body: t
                            }],
                            SliceSize: 1048576,
                            onProgress: function(t) {
                                if ("function" == typeof e.onProgress) try {
                                    e.onProgress(t.percent)
                                } catch (t) {
                                    Oe.w("onProgress callback error:", t)
                                }
                            },
                            onFileFinish: function(e, t, n) {}
                        }
                    }
                }, {
                    key: "_createCosOptionsWXMiniApp",
                    value: function(e) {
                        var t = this._getFile(e),
                            n = this._genFileName(t.name);
                        return t = t.url, {
                            Bucket: "".concat(this.bucketName, "-").concat(this.appid),
                            Region: this.region,
                            Key: "".concat(this.directory, "/").concat(n),
                            FilePath: t,
                            onProgress: function(t) {
                                if (Oe.l(JSON.stringify(t)), "function" == typeof e.onProgress) try {
                                    e.onProgress(t.percent)
                                } catch (t) {
                                    Oe.w("onProgress callback error:", t)
                                }
                            }
                        }
                    }
                }, {
                    key: "_createCosOptionsPreSigUrl",
                    value: function(e) {
                        var t, n = this,
                            o = "",
                            i = "",
                            a = this._getFile(e),
                            s = Q || ee ? (o = e.message.type === E.MSG_FILE ? (t = (t = a.name).slice(t.lastIndexOf(".")), this._genFileName("".concat(nt(999999)).concat(t))) : this._genFileName(a.name), i = a.url, 1) : (t = (t = a.name).slice(t.lastIndexOf(".")), o = this._genFileName("".concat(nt(999999)).concat(t)), i = a, 0);
                        return this._getCosPreSigUrl({
                            fileType: this.uploadFileType,
                            fileName: o,
                            uploadMethod: s,
                            duration: this.duration,
                            userID: e.message.from,
                            conversationType: Tt(e.message.conversationID) ? 1 : 2
                        }).then((function(t) {
                            var a = (l = n.isSimpleCos ? t.preSig[0] : t).uploadUrl,
                                s = l.downloadUrl,
                                r = void 0 === (r = l.requestSnapshotUrl) ? void 0 : r,
                                c = l.thumbUrl,
                                u = l.largeUrl,
                                l = l.fileKey;
                            return t = void 0 === (t = t.uploadIP) ? "" : t, {
                                url: n._getRawOrUploadProxyUrl(a),
                                fileType: n.uploadFileType,
                                fileName: o,
                                resources: i,
                                downloadUrl: s,
                                requestSnapshotUrl: r,
                                thumbUrl: c,
                                largeUrl: u,
                                fileKey: l,
                                uploadIP: !n.isPrivateNetWork() && t,
                                onProgress: function(t) {
                                    if ("function" == typeof e.onProgress) try {
                                        e.onProgress(t.percent)
                                    } catch (t) {
                                        Oe.w("onProgress callback error:", t), Oe.e(t)
                                    }
                                }
                            }
                        }))
                    }
                }, {
                    key: "_genFileName",
                    value: function(e) {
                        return "".concat(kt(), "-").concat(e)
                    }
                }, {
                    key: "_setUploadFileType",
                    value: function(e) {
                        this.uploadFileType = e
                    }
                }, {
                    key: "_getSnapshotInfoByUrl",
                    value: function(e, t) {
                        var n = this,
                            o = "_getSnapshotInfoByUrl",
                            i = new Qn(o);
                        return this.req({
                            P: wn.VIDEO_COVER,
                            data: {
                                platform: this.getPlatform(),
                                coverName: this._genFileName(nt(99999)),
                                requestSnapshotUrl: e
                            }
                        }).then((function(e) {
                            if (e = (e.data || {}).snapshotUrl, Oe.l("".concat(n._n, ".").concat(o, " ok. snapshotUrl:").concat(e)), i.setMessage("snapshotUrl:".concat(e)).end(), He(e)) return {};
                            var a = io(e, n._fileDownloadProxy, n._authKey, n._fileDNList);
                            return St(a).then((function(e) {
                                t.snapshotInfo = {
                                    snapshotUrl: a,
                                    snapshotWidth: e.width,
                                    snapshotHeight: e.height
                                }
                            }))
                        })).catch((function(e) {
                            return Oe.w("".concat(n._n, ".").concat(o, " failed. error:"), e), i.setCode(e.errorCode).setMessage(e.errorInfo).end(), {}
                        }))
                    }
                }, {
                    key: "_getSmallImageInfoByUrl",
                    value: function(e, t) {
                        return St(io(e, this._fileDownloadProxy, this._authKey, this._fileDNList)).then((function(n) {
                            t.smallImageUrl = e, t.smallImageWidth = n.width, t.smallImageHeight = n.height
                        }))
                    }
                }, {
                    key: "_getLargeImageInfoByUrl",
                    value: function(e, t) {
                        return St(io(e, this._fileDownloadProxy, this._authKey, this._fileDNList)).then((function(n) {
                            t.largeImageUrl = e, t.largeImageWidth = n.width, t.largeImageHeight = n.height
                        }))
                    }
                }, {
                    key: "_isEmptyFileList",
                    value: function(e) {
                        return !(!Xe(e) || 0 !== e.length)
                    }
                }, {
                    key: "reset",
                    value: function() {
                        Oe.l("".concat(this._n, ".reset"))
                    }
                }]), ka),
                Ta = ["downloadKey", "pbDownloadKey", "messageList"],
                Da = (s(Sa, [{
                    key: "uploadMergerMessage",
                    value: function(e, t) {
                        var n = "".concat(this._n, ".").concat("uploadMergerMessage"),
                            o = (Oe.d("".concat(n, " message:"), e, "messageBytes:".concat(t)), e = JSON.parse(JSON.stringify(e.payload)).messageList).length,
                            i = this._msgM.get(17).getFileDNList(),
                            a = new Qn("uploadMergerMessage");
                        return e.forEach((function(e) {
                            ao(e.messageBody[0].type, e.messageBody, i)
                        })), this._msgM.req({
                            P: wn.UPLOAD_MERGER_MSG,
                            data: {
                                messageList: e
                            }
                        }).then((function(e) {
                            Oe.d("".concat(n, " ok. response:"), e.data);
                            var i = {
                                pbDownloadKey: i = (e = e.data).pbDownloadKey,
                                downloadKey: e = e.downloadKey,
                                messageNumber: o
                            };
                            return a.setMessage("".concat(o, "-").concat(t, "-").concat(e)).end(), i
                        })).catch((function(e) {
                            throw Oe.w("".concat(n, " failed. error:"), e), a.setError(e).end(), e
                        }))
                    }
                }, {
                    key: "downloadMergerMessage",
                    value: function(e) {
                        var n = this,
                            o = "".concat(this._n, ".").concat("downloadMergerMessage"),
                            i = (Oe.d("".concat(o, " message:"), e), e.payload.downloadKey),
                            a = this._msgM.getFileDownloadProxy(),
                            s = this._msgM.getDowloadFileAuthKey(),
                            r = new Qn("downloadMergerMessage");
                        return r.setMessage("downloadKey:".concat(i)), this._msgM.req({
                            P: wn.DOWNLOAD_MERGER_MSG,
                            data: {
                                downloadKey: i
                            }
                        }).then((function(i) {
                            Oe.d("".concat(o, " ok. response:"), i.data);
                            var c, u, l = n._msgM.get(17).getFileDNList();
                            return ze(e.clearElement) ? ((c = e.payload).downloadKey, c.pbDownloadKey, c.messageList, c = _(c, Ta), e.clearElement(), e.setElement({
                                type: e.type,
                                content: t({
                                    messageList: i.data.messageList
                                }, c)
                            }, a, s, l)) : (u = [], i.data.messageList.forEach((function(e) {
                                He(e) || (e = new Mo(e, a, s, l), u.push(e))
                            })), e.payload.messageList = u, e.payload.downloadKey = "", e.payload.pbDownloadKey = ""), r.end(), e
                        })).catch((function(e) {
                            throw Oe.w("".concat(o, " failed. key:").concat(i, " error:"), e), r.setError(e).end(), e
                        }))
                    }
                }, {
                    key: "createMergerMessagePack",
                    value: function(e, t, n) {
                        return e.conversationType === E.CONV_C2C ? this._createC2CMergerMessagePack(e, t, n) : this._createGroupMergerMessagePack(e, t, n)
                    }
                }, {
                    key: "_createC2CMergerMessagePack",
                    value: function(e, t, n) {
                        var o = null,
                            i = (t && (t.offlinePushInfo && (o = t.offlinePushInfo), !0 === t.onlineUserOnly && (o ? o.disablePush = !0 : o = {
                                disablePush: !0
                            })), []),
                            a = (je(t) && je(t.messageControlInfo) && (a = (r = t.messageControlInfo).excludedFromUnreadCount, s = r.excludedFromLastMessage, r = r.excludedFromContentModeration, !0 === a && i.push("NoUnread"), !0 === s && i.push("NoLastMsg"), !0 === r && i.push("NoMsgCheck")), ""),
                            s = (ct(e.cloudCustomData) && 0 < e.cloudCustomData.length && (a = e.cloudCustomData), n.pbDownloadKey),
                            r = n.downloadKey,
                            c = (n = n.messageNumber, (l = e.payload).title),
                            u = l.abstractList,
                            l = l.compatibleText,
                            d = (d = this._msgM.get(6)) && d.isOnlineMessage(e, t) ? 0 : void 0;
                        return {
                            P: wn.SEND_C2C_MSG,
                            tjgID: this._msgM.generateTjgID(e),
                            data: {
                                fromAccount: this._msgM.getMyUserID(),
                                toAccount: e.to,
                                msgBody: [{
                                    msgType: e.type,
                                    msgContent: {
                                        pbDownloadKey: s,
                                        downloadKey: r,
                                        title: c,
                                        abstractList: u,
                                        compatibleText: l,
                                        messageNumber: n
                                    }
                                }],
                                cloudCustomData: a,
                                clientTime: e.clientTime,
                                msgSeq: e.sequence,
                                msgRandom: e.random,
                                msgLifeTime: d,
                                offlinePushInfo: bo(o),
                                messageControlInfo: 0 !== d ? i : void 0,
                                isSupportExtension: !0 === e.isSupportExtension ? 1 : 0,
                                isRelayMessage: !0 === e._relayFlag ? 1 : 0
                            }
                        }
                    }
                }, {
                    key: "_createGroupMergerMessagePack",
                    value: function(e, t, n) {
                        var o = null,
                            i = (t && t.offlinePushInfo && (o = t.offlinePushInfo), []),
                            a = (je(t) && je(t.messageControlInfo) && (a = (r = t.messageControlInfo).excludedFromUnreadCount, s = r.excludedFromLastMessage, r = r.excludedFromContentModeration, !0 === a && i.push("NoUnread"), !0 === s && i.push("NoLastMsg"), !0 === r && i.push("NoMsgCheck")), ""),
                            s = (ct(e.cloudCustomData) && 0 < e.cloudCustomData.length && (a = e.cloudCustomData), n.pbDownloadKey),
                            r = n.downloadKey,
                            c = (n = n.messageNumber, (l = e.payload).title),
                            u = l.abstractList,
                            l = l.compatibleText,
                            d = this._msgM.get(7);
                        return t = d && d.isOnlineMessage(e, t) ? 1 : 0, {
                            P: wn.SEND_GRP_MSG,
                            tjgID: this._msgM.generateTjgID(e),
                            data: {
                                fromAccount: this._msgM.getMyUserID(),
                                groupID: e.to,
                                msgBody: [{
                                    msgType: e.type,
                                    msgContent: {
                                        pbDownloadKey: s,
                                        downloadKey: r,
                                        title: c,
                                        abstractList: u,
                                        compatibleText: l,
                                        messageNumber: n
                                    }
                                }],
                                random: e.random,
                                priority: e.priority,
                                clientSequence: e.clientSequence,
                                groupAtInfo: void 0,
                                cloudCustomData: a,
                                onlineOnlyFlag: t,
                                offlinePushInfo: bo(o),
                                clientTime: e.clientTime,
                                needReadReceipt: !0 !== e.needReadReceipt || d.isMessageFromOrToAVChatroom(e.to) ? 0 : 1,
                                messageControlInfo: 0 == t ? i : void 0,
                                isSupportExtension: !0 === e.isSupportExtension ? 1 : 0,
                                isRelayMessage: !0 === e._relayFlag ? 1 : 0
                            }
                        }
                    }
                }]), Sa),
                Ea = {
                    ERR_SVR_COMM_SENSITIVE_TEXT: 80001,
                    ERR_SVR_COMM_BODY_SIZE_LIMIT: 80002,
                    OPEN_SERVICE_OVERLOAD_ERROR: 60022,
                    ERR_SVR_MSG_PKG_PARSE_FAILED: 20001,
                    ERR_SVR_MSG_INTERNAL_AUTH_FAILED: 20002,
                    ERR_SVR_MSG_INVALID_ID: 20003,
                    ERR_SVR_MSG_PUSH_DENY: 20006,
                    ERR_SVR_MSG_IN_PEER_BLACKLIST: 20007,
                    ERR_SVR_MSG_BOTH_NOT_FRIEND: 20009,
                    ERR_SVR_MSG_NOT_PEER_FRIEND: 20010,
                    ERR_SVR_MSG_NOT_SELF_FRIEND: 20011,
                    ERR_SVR_MSG_SHUTUP_DENY: 20012,
                    ERR_SVR_GROUP_INVALID_PARAMETERS: 10004,
                    ERR_SVR_GROUP_PERMISSION_DENY: 10007,
                    ERR_SVR_GROUP_NOT_FOUND: 10010,
                    ERR_SVR_GROUP_INVALID_GROUPID: 10015,
                    ERR_SVR_GROUP_REJECT_FROM_THIRDPARTY: 10016,
                    ERR_SVR_GROUP_SHUTUP_DENY: 10017,
                    MSG_SEND_FAIL: 2100,
                    OVER_FREQUENCY_LIMIT: 2996
                },
                La = [Un.MSG_ONPROGRESS_ERR, Un.MSG_I_SELECT_F_FIRST, Un.MSG_I_TYPES_LIMIT, Un.MSG_F_IS_EMPTY, Un.MSG_I_SIZE_LIMIT, Un.MSG_F_SELECT_F_FIRST, Un.MSG_F_SIZE_LIMIT, Un.MSG_V_SIZE_LIMIT, Un.MSG_V_TYPES_LIMIT, Un.MSG_A_UPLOAD_FAIL, Un.MSG_A_SIZE_LIMIT, Un.COS_UNDETECTED];

            function Sa(e) {
                i(this, Sa), this._n = "MergerMessageHandler", this._msgM = e
            }

            function ka(e) {
                i(this, ka), (e = va.call(this, e))._n = "UploadModule", e.TIMUploadPlugin = null, e.timUploadPlugin = null, e.COSSDK = null, e._cosUploadMethod = null, e.expiredTimeLimit = 600, e.appid = 0, e.bucketName = "", e.ciUrl = "", e.directory = "", e.downloadUrl = "", e.uploadUrl = "", e.region = "ap-shanghai", e.cos = null, e.cosOptions = {
                    secretId: "",
                    secretKey: "",
                    sessionToken: "",
                    expiredTime: 0
                }, e.uploadFileType = "", e.duration = 900, e.tryCount = 0, e.UPLOAD_SIZE_LIMIT = {
                    A: 20971520,
                    F: 104857600,
                    I: 20971520,
                    V: 104857600
                }, e.isSimpleCos = !1, e._fileDownloadProxy = "", e._authKey = "", e._fileDNList = Ma;
                var t = e.getIEmitInst();
                return t.on(qo.A2KEY_AND_TINYID_UPDATED, e._init, h(e)), t.on(qo.CLOUD_CONFIG, e._onCloudConfig, h(e)), e
            }

            function Aa(e) {
                var t = !1;
                return Object.values(Ea).includes(e) && (t = !0), 120001 <= e && e <= 13e4 || 10100 <= e && e <= 10200 || t
            }
            var Ra, Oa, Na, Ga, Pa, Ua, ba = ["conversationID", "timePosition", "timePeriod"],
                wa = (c(za, Rn), Ua = g(za), s(za, [{
                    key: "createTextMessage",
                    value: function(e) {
                        var t = this.getMyUserID(),
                            n = (e.currentUser = t, e.senderTinyID = this.getMyTinyID(), new To(e));
                        return e = ct(e.payload) ? e.payload : e.payload.text, e = new $n({
                            text: e
                        }), t = this._getNickAndAvatarByUserID(t), n.setElement(e), n.setNickAndAvatar(t), n.setNameCard(this._getNameCardByGroupID(n)), n
                    }
                }, {
                    key: "createImageMessage",
                    value: function(e) {
                        var t = this.getMyUserID(),
                            n = (e.currentUser = t, e.senderTinyID = this.getMyTinyID(), new To(e));
                        if (Q) {
                            if (Ke(i = e.payload.file)) return void this.warn("FileUnsupportedInMP", "createImageMessage");
                            var o = i.tempFiles[0].path || i.tempFiles[0].tempFilePath,
                                i = {
                                    url: o,
                                    name: o.slice(o.lastIndexOf("/") + 1),
                                    size: i.tempFiles && i.tempFiles[0].size || 1,
                                    type: o.slice(o.lastIndexOf(".") + 1).toLowerCase()
                                };
                            e.payload.file = i
                        } else ee ? (i = {
                            url: (o = e.payload.file).uri,
                            name: o.fileName,
                            size: o.fileSize || 1,
                            type: o.type,
                            width: o.width,
                            height: o.height
                        }, e.payload.file = i) : te && (Ke(e.payload.file) ? (o = e.payload.file, e.payload.file = {
                            files: [o]
                        }) : je(e.payload.file) && "undefined" != typeof uni && (i = e.payload.file.tempFiles[0], e.payload.file = {
                            files: [i]
                        }));
                        return o = new co({
                            imageFormat: Ne.UNKNOWN,
                            uuid: this._generateUUID(e.payload.file),
                            file: e.payload.file
                        }), i = this._getNickAndAvatarByUserID(t), n.setElement(o), n.setNickAndAvatar(i), n.setNameCard(this._getNameCardByGroupID(n)), this._messageOptionsMap.set(n.clientSequence, e), n
                    }
                }, {
                    key: "createAudioMessage",
                    value: function(e) {
                        var t = e.payload.file,
                            n = (Q && (n = {
                                url: t.tempFilePath,
                                name: t.tempFilePath.slice(t.tempFilePath.lastIndexOf("/") + 1),
                                size: t.fileSize,
                                second: parseInt(t.duration) / 1e3,
                                type: t.tempFilePath.slice(t.tempFilePath.lastIndexOf(".") + 1).toLowerCase()
                            }, e.payload.file = n), ee && (n = {
                                url: t.uri,
                                name: t.uri.slice(t.uri.lastIndexOf("/") + 1),
                                size: t.fileSize || 1,
                                second: Math.floor(t.duration / 1e3),
                                type: t.uri.slice(t.uri.lastIndexOf(".") + 1).toLowerCase()
                            }, e.payload.file = n), this.getMyUserID()),
                            o = (e.currentUser = n, e.senderTinyID = this.getMyTinyID(), new To(e));
                        return t = new lo({
                            second: Math.floor(t.duration / 1e3),
                            size: t.fileSize || t.size || 1,
                            url: t.tempFilePath,
                            uuid: this._generateUUID(e.payload.file)
                        }), n = this._getNickAndAvatarByUserID(n), o.setElement(t), o.setNickAndAvatar(n), o.setNameCard(this._getNameCardByGroupID(o)), this._messageOptionsMap.set(o.clientSequence, e), o
                    }
                }, {
                    key: "createVideoMessage",
                    value: function(e) {
                        var t = this.getMyUserID(),
                            n = (e.currentUser = t, e.senderTinyID = this.getMyTinyID(), e.payload.file.thumbUrl = "", e.payload.file.thumbSize = 0, {});
                        if (Q) {
                            if (j) return void this.warn("VideoUnsupportedInAlipay");
                            if (Ke(e.payload.file)) return void this.warn("FileUnsupportedInMP", "createVideoMessage");
                            var o = e.payload.file;
                            Je(o.tempFiles) && (o = o.tempFiles[0]), n.url = o.tempFilePath, n.name = o.tempFilePath.slice(o.tempFilePath.lastIndexOf("/") + 1), n.size = o.size || 1, n.second = o.duration || 0, n.type = o.tempFilePath.slice(o.tempFilePath.lastIndexOf(".") + 1).toLowerCase()
                        } else ee ? (o = e.payload.file, n.url = o.uri, n.name = o.fileName, n.size = o.fileSize || 1, n.second = o.duration || 0, n.type = o.type.split("/")[1]) : te && (Ke(e.payload.file) ? (o = e.payload.file, e.payload.file.files = [o]) : je(e.payload.file) && "undefined" != typeof uni && (o = e.payload.file.tempFile, e.payload.file.files = [o]), o = e.payload.file, n.url = window.URL.createObjectURL(o.files[0]), n.name = o.files[0].name, n.size = o.files[0].size || 1, n.second = o.files[0].duration || 0, n.type = o.files[0].type.split("/")[1]);
                        return e.payload.file.videoFile = n, o = new To(e), n = new vo({
                            videoFormat: n.type,
                            videoSecond: Pt(n.second, 0),
                            videoSize: n.size,
                            remoteVideoUrl: "",
                            videoUrl: n.url,
                            videoUUID: this._generateUUID(e.payload.file.videoFile),
                            thumbUUID: this._generateUUID(e.payload.file.videoFile),
                            thumbWidth: e.payload.file.width || 200,
                            thumbHeight: e.payload.file.height || 200,
                            thumbUrl: e.payload.file.thumbUrl,
                            thumbSize: e.payload.file.thumbSize,
                            thumbFormat: e.payload.file.thumbUrl.slice(e.payload.file.thumbUrl.lastIndexOf(".") + 1).toLowerCase()
                        }), t = this._getNickAndAvatarByUserID(t), o.setElement(n), o.setNickAndAvatar(t), o.setNameCard(this._getNameCardByGroupID(o)), this._messageOptionsMap.set(o.clientSequence, e), o
                    }
                }, {
                    key: "createCustomMessage",
                    value: function(e) {
                        var t = this.getMyUserID(),
                            n = (e.currentUser = t, e.senderTinyID = this.getMyTinyID(), new To(e));
                        return e = new mo({
                            data: e.payload.data,
                            description: e.payload.description,
                            extension: e.payload.extension
                        }), t = this._getNickAndAvatarByUserID(t), n.setElement(e), n.setNickAndAvatar(t), n.setNameCard(this._getNameCardByGroupID(n)), n
                    }
                }, {
                    key: "createFaceMessage",
                    value: function(e) {
                        var t = this.getMyUserID(),
                            n = (e.currentUser = t, e.senderTinyID = this.getMyTinyID(), new To(e));
                        return e = new uo(e.payload), t = this._getNickAndAvatarByUserID(t), n.setElement(e), n.setNickAndAvatar(t), n.setNameCard(this._getNameCardByGroupID(n)), n
                    }
                }, {
                    key: "createMergerMessage",
                    value: function(e) {
                        var t = this.getMyUserID(),
                            n = (e.currentUser = t, e.senderTinyID = this.getMyTinyID(), t = this._getNickAndAvatarByUserID(t), new To(e));
                        return e = new yo(e.payload), n.setElement(e), n.setNickAndAvatar(t), n.setNameCard(this._getNameCardByGroupID(n)), n.setRelayFlag(!0), n
                    }
                }, {
                    key: "createForwardMessage",
                    value: function(e) {
                        var t = e.to,
                            n = e.conversationType,
                            o = e.priority,
                            i = e.payload,
                            a = e.needReadReceipt,
                            s = e.receiverList;
                        if (!Je(i._elements)) return Mn({
                            code: Un.MSG_FORWARD_INVALID_ELEMENTS
                        });
                        var r = this.getMyUserID(),
                            c = this._getNickAndAvatarByUserID(r);
                        return i.type === E.MSG_GRP_TIP ? Mn({
                            code: Un.MSG_FORWARD_TYPE_INVALID
                        }) : (n = {
                            to: t,
                            conversationType: n,
                            conversationID: "".concat(n).concat(t),
                            priority: o,
                            isPlaceMessage: 0,
                            status: Cn,
                            currentUser: r,
                            senderTinyID: this.getMyTinyID(),
                            cloudCustomData: e.cloudCustomData || i.cloudCustomData || "",
                            needReadReceipt: a,
                            receiverList: s,
                            isSupportExtension: e.isSupportExtension || !1
                        }, (t = new To(n)).setElement(i._elements[0]), t.setNickAndAvatar(c), t.setNameCard(this._getNameCardByGroupID(i)), t.setRelayFlag(!0), t)
                    }
                }, {
                    key: "downloadMergerMessage",
                    value: function(e) {
                        return this._mergerMessageHandler.downloadMergerMessage(e)
                    }
                }, {
                    key: "createFileMessage",
                    value: function(e) {
                        if (Q) {
                            if (!H && !K && !z) return;
                            var n = ne.getSystemInfoSync().SDKVersion;
                            if (H && Rt(n, "2.5.0") < 0) return void this.warn("WXChooseMessageFile");
                            if (K && Rt(n, "1.18.0") < 0) return void this.warn("QQChooseMessageFile")
                        }
                        te || z ? Ke(e.payload.file) ? (n = e.payload.file, e.payload.file = {
                            files: [n]
                        }) : je(e.payload.file) && "undefined" != typeof uni && (i = (n = e.payload.file).tempFiles, n = n.files, o = null, Je(i) ? o = i[0] : Je(n) && (o = n[0]), e.payload.file = {
                            files: [o]
                        }) : H || K ? (n = t(t({}, (i = e.payload.file.tempFiles)[0]), {}, {
                            url: i[0].path
                        }), e.payload.file = {
                            files: [n]
                        }) : ee && (i = t(t({}, o = e.payload.file), {}, {
                            url: o.uri
                        }), e.payload.file = {
                            files: [i]
                        }), n = this.getMyUserID();
                        var o = (e.currentUser = n, e.senderTinyID = this.getMyTinyID(), new To(e)),
                            i = new fo({
                                uuid: this._generateUUID(e.payload.file),
                                file: e.payload.file
                            });
                        return n = this._getNickAndAvatarByUserID(n), o.setElement(i), o.setNickAndAvatar(n), o.setNameCard(this._getNameCardByGroupID(o)), this._messageOptionsMap.set(o.clientSequence, e), o
                    }
                }, {
                    key: "createLocationMessage",
                    value: function(e) {
                        var t = this.getMyUserID(),
                            n = (e.currentUser = t, e.senderTinyID = this.getMyTinyID(), new To(e));
                        return e = new Io(e.payload), t = this._getNickAndAvatarByUserID(t), n.setElement(e), n.setNickAndAvatar(t), n.setNameCard(this._getNameCardByGroupID(n)), n
                    }
                }, {
                    key: "_onNoModule",
                    value: function() {
                        return Mn({
                            code: Un.NO_MODULE
                        })
                    }
                }, {
                    key: "sendMessageInstance",
                    value: function(e, t) {
                        var n = this;
                        if (!1 === this.get(29).filterMessage(e, t)) return e.hasRiskContent = !0, this._onSendMessageFailed(e, new Pn({
                            code: Un.PROFANITY_FOUND
                        }));
                        var o = null;
                        if (e.conversationType === E.CONV_C2C) o = this.get(6);
                        else {
                            if (e.conversationType !== E.CONV_GROUP) return Mn({
                                code: Un.MSG_INVALID_CONV_TYPE
                            });
                            o = this.get(7)
                        }
                        if (!o) return this._onNoModule();
                        var i, a = "".concat(this._n, ".sendMessageInstance"),
                            s = this.get(11),
                            r = o.isOnlineMessage(e, t);
                        return this.get(17).upload(e).then((function() {
                            return n._getSendMessageSpecifiedKey(e) === Bn && n.get(26).addSuccessCount(Kn), n._guardForGroup(e).then((function() {
                                if (!e.isSendable()) return Mn({
                                    code: Un.MSG_F_URL_IS_EMPTY
                                });
                                n._addSendMessageTotalCount(e), i = Date.now();
                                var a = function(e) {
                                    var t = "utf-8";
                                    te && document && (t = document.charset.toLowerCase());
                                    var n, o = 0,
                                        i = e.length;
                                    if ("utf-8" === t || "utf8" === t)
                                        for (var a = 0; a < i; a++)(n = e.codePointAt(a)) <= 127 ? o += 1 : n <= 2047 ? o += 2 : n <= 65535 ? o += 3 : (o += 4, a++);
                                    else if ("utf-16" === t || "utf16" === t)
                                        for (var s = 0; s < i; s++)(n = e.codePointAt(s)) <= 65535 ? o += 2 : (o += 4, s++);
                                    else o = e.replace(/[^\x00-\xff]/g, "aa").length;
                                    return o
                                }(JSON.stringify(e));
                                return e.type === E.MSG_MERGER && 11264 < a ? n._mergerMessageHandler.uploadMergerMessage(e, a).then((function(o) {
                                    return o = n._mergerMessageHandler.createMergerMessagePack(e, t, o), n.req(o)
                                })) : (s.setMessageRandom(e), o.sendMessage(e, t))
                            })).then((function(o) {
                                var c, u = (o = o.data).time,
                                    l = o.sequence,
                                    d = o.readReceiptCode;
                                return o = o.messageDropReason, Ye(d) && 0 !== d && (new Qn("sendMessageWithReceipt").setMessage("from:".concat(e.from, " to:").concat(e.to, " sequence:").concat(l, " readReceiptCode:").concat(d)).end(), Oe.w("".concat(a, " readReceiptCode:").concat(d, " message:").concat(n.getErrMsg(d)))), o && (d = new Qn("messageDropReason"), o = "from:".concat(e.from, " to:").concat(e.to, " sequence:").concat(l, " messageDropReason:").concat(o), d.setMessage(o).end(), Oe.w("".concat(a, " ").concat(o))), n._addSendMessageSuccessCount(e, i), n._messageOptionsMap.delete(e.clientSequence), !0 === e.isResend && (c = s.findMessage(e.ID)) && (Oe.l("".concat(a, " resend ok. ID:").concat(c.ID)), s.deleteLocalMessage(c)), e.status = Tn, e.time = u, d = !1, e.conversationType === E.CONV_GROUP ? e.sequence = l : e.conversationType !== E.CONV_C2C || (o = s.getLatestMessageSentByMe(e.conversationID)) && (c = o.nick, u = o.avatar, c === e.nick && u === e.avatar || (d = !0)), d && s.modifyMessageSentByMe({
                                    conversationID: e.conversationID,
                                    latestNick: e.nick,
                                    latestAvatar: e.avatar
                                }), !0 === r ? e._onlineOnlyFlag = !0 : (s.appendToMessageList(e), l = e, je(t) && je(t.messageControlInfo) && (!0 === t.messageControlInfo.excludedFromLastMessage && (e._isExcludedFromLastMessage = !0, l = ""), !0 === t.messageControlInfo.excludedFromUnreadCount && (e._isExcludedFromUnreadCount = !0)), o = e.conversationType, Ct(e.to) && (o = E.CONV_TOPIC, n.get(10).onMessageSent({
                                    groupID: wt(e.to),
                                    topicID: e.to,
                                    lastMessage: l
                                })), s.onMessageSent({
                                    conversationOptionsList: [{
                                        conversationID: e.conversationID,
                                        unreadCount: 0,
                                        type: o,
                                        subType: e.conversationSubType,
                                        lastMessage: l
                                    }]
                                })), e._relayFlag || "TIMImageElem" !== e.type || Nt(e.payload.imageInfoArray), vn({
                                    message: e
                                })
                            }))
                        })).catch((function(t) {
                            return n._onSendMessageFailed(e, t, r)
                        }))
                    }
                }, {
                    key: "_guardForGroup",
                    value: function(e) {
                        if (e.conversationType !== E.CONV_GROUP) return Promise.resolve();
                        var t = this.get(7);
                        if (!t) return this._onNoModule();
                        if (yt({
                                groupID: e.to
                            })) {
                            var n = t.getLocalGroupProfile(e.to);
                            if (n && n.isSupportTopic) return Mn({
                                code: Un.MSG_SEND_GRP_WITH_TOPIC_FAIL
                            })
                        }
                        return t.guardForAVChatRoom(e)
                    }
                }, {
                    key: "_onSendMessageFailed",
                    value: function(e, t) {
                        var n = 2 < arguments.length && void 0 !== arguments[2] && arguments[2],
                            o = "".concat(this._n, "._onSendMessageFailed"),
                            i = (e.status = Dn, 80001 !== t.code && 80004 !== t.code || (e.hasRiskContent = !0), this.get(11)),
                            a = (i.deleteMessageRandom(e), 10100 <= t.code && t.code <= 10200 || 120001 <= t.code && t.code <= 13e4);
                        return n || a || !0 === i.appendToMessageList(e) && Oe.l("".concat(o, " message stored, ID:").concat(e.ID)), this._addSendMessageFailCountOnUser(e, t), n = new Qn("sendMessage"), a = "tjg_id:".concat(this.generateTjgID(e), " type:").concat(e.type, " from:").concat(e.from, " to:").concat(e.to), te && ("connection" in navigator && (i = navigator.connection, a += " downlink:".concat(i.downlink, " effectiveType:").concat(i.effectiveType, " rtt:").concat(i.rtt)), "memory" in window.performance && (i = window.performance.memory, a += " usedJSHeapSize:".concat(i.usedJSHeapSize, " totalJSHeapSize:").concat(i.totalJSHeapSize, " jsHeapSizeLimit:").concat(i.jsHeapSizeLimit))), n.setMessage(a).setError(t).end(), Oe.e("".concat(o, " error:"), t), Mn(new Pn({
                            code: t && t.code ? t.code : Un.MSG_SEND_FAIL,
                            message: t && t.message ? t.message : void 0,
                            data: {
                                message: e
                            }
                        }))
                    }
                }, {
                    key: "_getSendMessageSpecifiedKey",
                    value: function(e) {
                        if ([E.MSG_IMAGE, E.MSG_AUDIO, E.MSG_VIDEO, E.MSG_FILE].includes(e.type)) return Bn;
                        if (e.conversationType === E.CONV_C2C) return xn;
                        if (e.conversationType === E.CONV_GROUP) {
                            var t = this.get(7);
                            if (t && (t = t.getLocalGroupProfile(e.to))) return Mt(e = t.type) ? Hn : Vn
                        }
                    }
                }, {
                    key: "_addSendMessageTotalCount",
                    value: function(e) {
                        (e = this._getSendMessageSpecifiedKey(e)) && this.get(26).addTotalCount(e)
                    }
                }, {
                    key: "_addSendMessageSuccessCount",
                    value: function(e, t) {
                        var n;
                        (e = this._getSendMessageSpecifiedKey(e)) && ((n = this.get(26)).addSuccessCount(e), n.addCost(e, Yt(t, !1)))
                    }
                }, {
                    key: "_addSendMessageFailCountOnUser",
                    value: function(e, t) {
                        t = void 0 === (t = t.code) ? -1 : t;
                        var n, o = this.get(26);
                        (e = this._getSendMessageSpecifiedKey(e)) === Bn && (n = !1, n = !!La.includes(t) || n) ? o.addFailedCountOfUserSide(Kn) : Aa(t) && e && o.addFailedCountOfUserSide(e)
                    }
                }, {
                    key: "resendMessage",
                    value: function(e, t) {
                        return e.isResend = !0, e.status = Cn, this.sendMessageInstance(e, t)
                    }
                }, {
                    key: "revokeMessage",
                    value: function(e) {
                        var t = this,
                            n = null;
                        if (e.conversationType === E.CONV_C2C ? n = this.get(6) : e.conversationType === E.CONV_GROUP && (n = this.get(7)), !n) return this._onNoModule();
                        var o = new Qn("revokeMessage"),
                            i = (o.setMessage("tjg_id:".concat(this.generateTjgID(e), " type:").concat(e.type, " from:").concat(e.from, " to:").concat(e.to)), "".concat(this._n, ".").concat("revokeMessage"));
                        return n.revokeMessage(e).then((function(n) {
                            return He(n = n.data.recallRetList) || 0 === n[0].retCode ? (Oe.i("".concat(i, " ok. ID:").concat(e.ID)), e.isRevoked = !0, o.end(), t.get(11).onMessageRevoked([e]), vn({
                                message: e
                            })) : (n = new Pn({
                                code: n[0].retCode,
                                data: {
                                    message: e
                                }
                            }), o.setCode(n.code).setMoreMessage(n.message).end(), Mn(n))
                        })).catch((function(t) {
                            o.setError(t).end();
                            var n = new Pn({
                                code: t && t.code ? t.code : Un.MSG_REVOKE_FAIL,
                                message: t && t.message ? t.message : void 0,
                                data: {
                                    message: e
                                }
                            });
                            return Oe.w("".concat(i, " failed. error:"), t), Mn(n)
                        }))
                    }
                }, {
                    key: "deleteMessage",
                    value: function(e) {
                        var t = this,
                            n = null,
                            o = e[0],
                            i = o.conversationID,
                            a = "",
                            s = [],
                            r = [];
                        if (o.conversationType === E.CONV_C2C) n = this.get(6), a = i.replace(E.CONV_C2C, ""), e.forEach((function(e) {
                            e && e.status === Tn && e.conversationID === i && (e._onlineOnlyFlag || s.push("".concat(e.sequence, "_").concat(e.random, "_").concat(e.time)), r.push(e))
                        }));
                        else if (o.conversationType === E.CONV_GROUP) n = this.get(7), a = i.replace(E.CONV_GROUP, ""), e.forEach((function(e) {
                            e && e.status === Tn && e.conversationID === i && (e._onlineOnlyFlag || s.push("".concat(e.sequence)), r.push(e))
                        }));
                        else if (o.conversationType === E.CONV_SYSTEM) return Mn({
                            code: Un.CANNOT_DELETE_GRP_SYSTEM_NOTICE
                        });
                        if (!n) return this._onNoModule();
                        if (0 === s.length) return this._onMessageDeleted(r);
                        30 < s.length && (s = s.slice(0, 30), r = r.slice(0, 30));
                        var c = new Qn("deleteMessage"),
                            u = (c.setMessage("to:".concat(a, " count:").concat(s.length)), "".concat(this._n, ".").concat("deleteMessage"));
                        return n.deleteMessage({
                            to: a,
                            keyList: s
                        }).then((function(e) {
                            return c.end(), Oe.i("".concat(u, " ok")), t._onMessageDeleted(r)
                        })).catch((function(e) {
                            return c.setError(e).end(), Oe.w("".concat(u, " failed. error:"), e), Mn(e = new Pn({
                                code: e && e.code ? e.code : Un.MSG_DELETE_FAIL,
                                message: e && e.message ? e.message : void 0
                            }))
                        }))
                    }
                }, {
                    key: "_onMessageDeleted",
                    value: function(e) {
                        return this.get(11).onMessageDeleted(e), In({
                            messageList: e
                        })
                    }
                }, {
                    key: "translateText",
                    value: function(e) {
                        var n = "".concat(this._n, ".").concat("translateText"),
                            o = e.sourceTextList,
                            i = e.sourceLanguage,
                            a = (e = e.targetLanguage, new Qn("translateText"));
                        return a.setMessage("sourceLanguage:".concat(i, " targetLanguage:").concat(e)), this.req({
                            P: wn.TRANSLATE_TEXT,
                            data: {
                                sourceTextList: o,
                                source: i || "auto",
                                target: e,
                                from: this.getMyTinyID(),
                                SDKAppID: this.getSDKAppID()
                            }
                        }).then((function(e) {
                            var o = (e = e.data).error,
                                i = e.requestID;
                            if (e = e.translatedTextList, 0 === o.code) return a.end(), Oe.i("".concat(n, " ok. requestID:").concat(i)), vn({
                                translatedTextList: e
                            });
                            throw t(t({}, o), {}, {
                                requestID: i
                            })
                        })).catch((function(e) {
                            return a.setCode(e.code).setMoreMessage(e.requestID).end(), Oe.w("".concat(n, " failed. error:"), e), Mn({
                                code: Un.TRANSLATE_TEXT_FAIL
                            })
                        }))
                    }
                }, {
                    key: "convertVoiceToText",
                    value: function(e) {
                        var n = e.message,
                            o = (e = e.language, n.payload.url);
                        if (!(n.from === this.getMyUserID() && "out" === n.flow && (o = n.payload.remoteAudioUrl), n = /\.(wav|pcm|ogg-opus|speex|silk|mp3|m4a|aac|amr)/).test(o)) return Mn({
                            code: Un.UNSUPPORTED_VOICE_FORMAT
                        });
                        n = n.exec(o)[1] || "mp3";
                        var i = "16k_zh-PY",
                            a = (e ? "zh (cmn-Hans-CN)" === e ? i = "16k_zh" : "en-US" === e ? i = "16k_en" : "yue-Hant-HK" === e ? i = "16k_yue" : "ja-JP" === e && (i = "16k_ja") : i = "16k_zh-PY", e = "serviceType:".concat(i, " url:").concat(o), "".concat(this._n, ".").concat("convertVoiceToText")),
                            s = (Oe.i("".concat(a, " ").concat(e)), new Qn("convertVoiceToText"));
                        return s.setMessage(e), this.req({
                            P: wn.VOICE_TO_TEXT,
                            data: {
                                url: o,
                                language: i,
                                SDKAppID: this.getSDKAppID(),
                                format: n
                            }
                        }).then((function(e) {
                            var n = (e = e.data).error,
                                o = e.requestID;
                            if (e = e.result, 0 === n.code) return s.end(), Oe.i("".concat(a, " ok. requestID:").concat(o)), vn({
                                result: e
                            });
                            throw t(t({}, n), {}, {
                                requestID: o
                            })
                        })).catch((function(e) {
                            return s.setCode(e.code).setMoreMessage(e.requestID || "").end(), Oe.w("".concat(a, " failed. error:"), e), Mn({
                                code: Un.VOICE_TO_TEXT_FAIL
                            })
                        }))
                    }
                }, {
                    key: "modifyRemoteMessage",
                    value: function(e) {
                        var t = this,
                            n = null,
                            o = e.conversationType,
                            i = e.to,
                            a = this.get(7);
                        if (!a) return this._onNoModule();
                        if (a.isMessageFromOrToAVChatroom(i)) return Mn({
                            code: Un.MSG_MODIFY_DISABLED_IN_AV,
                            data: {
                                message: e
                            }
                        });
                        if (!1 === this.get(29).filterMessage(e)) return e.hasRiskContent = !0, Mn({
                            code: Un.PROFANITY_FOUND,
                            data: {
                                message: e
                            }
                        });
                        o === E.CONV_C2C ? n = this.get(6) : o === E.CONV_GROUP && (n = this.get(7));
                        var s = new Qn("modifyMessage"),
                            r = (s.setMessage("to:".concat(i)), "".concat(this._n, ".modifyRemoteMessage"));
                        return n.modifyRemoteMessage(e).then((function(n) {
                            return s.end(), Oe.i("".concat(r, " ok")), vn({
                                message: n = t._onModifyRemoteMessageResp(e, n.data)
                            })
                        })).catch((function(n) {
                            var o;
                            return s.setCode(n.code).setMoreMessage(n.message).end(), Oe.w("".concat(r, " failed. error:"), n), 20027 === n.code ? (o = t._onModifyRemoteMessageResp(e, n.data), Mn({
                                code: Un.MSG_MODIFY_CONFLICT,
                                data: {
                                    message: o
                                }
                            })) : Mn({
                                code: n.code,
                                message: n.message,
                                data: {
                                    message: e
                                }
                            })
                        }))
                    }
                }, {
                    key: "_generateSearchdata",
                    value: function(e) {
                        var t = e.conversationID,
                            n = e.timePosition,
                            o = e.timePeriod;
                        return e = _(e, ba), ut(t) || (Tt(t) && (e.account = t.replace(E.CONV_C2C, "")), Dt(t) && (e.groupID = t.replace(E.CONV_GROUP, ""))), Ye(o) && 0 < o && (Ye(n) && 0 < n ? e.startTime = n - o : e.startTime = De() - o), e.startTime && e.startTime < 0 && (e.startTime = void 0), Ye(n) && 0 < n && (e.endTime = n), e
                    }
                }, {
                    key: "searchCloudMessages",
                    value: function(e) {
                        var t = this,
                            n = "searchCloudMessages",
                            o = "".concat(this._n, ".").concat(n);
                        if (!e) return Mn({
                            code: Un.OPTIONS_IS_EMPTY,
                            message: this.getErrMsg(Un.OPTIONS_IS_EMPTY, n)
                        });
                        var i = e.keywordList,
                            a = e.keywordListMatchType,
                            s = e.conversationID,
                            r = e.cursor,
                            c = Je(e.senderUserIDList) && 0 < e.senderUserIDList.length,
                            u = Je(e.messageTypeList) && 0 < e.messageTypeList.length;
                        if (!i && !c && !u) throw Oe.e("[".concat(n, '] Missing required params: "keywordList".')), new Error("Params validate failed.");
                        var l = Date.now(),
                            d = new Qn(n),
                            p = "keywordList:".concat(i, " keywordListMatchType:").concat(a, " ") + "convID:".concat(s, " cursor:").concat(r);
                        return Oe.l("".concat(o, " ").concat(p)), this.req({
                            P: wn.MSG_CLOUD_SEARCH,
                            data: this._generateSearchdata(e)
                        }).then((function(n) {
                            var i = (a = n.data).code,
                                a = a.message;
                            if (0 !== i) return a = t.getErrMsg(60020 === i ? "SearchCloudMessagesUnavailable" : i) || a, i = new Pn({
                                code: i,
                                message: a
                            }), d.setMessage(p).setError(i).end(), Mn(i);
                            t.get(27).isSearchCloudMessagesEnabled(), i = (a = n.data).cursor, n = a.totalCount, a = a.searchResult;
                            var s = "totalCount:".concat(n, " cost:").concat(Yt(l));
                            return vn({
                                searchResultList: (Oe.l("".concat(o, " ok. cursor:").concat(i, " ").concat(s)), d.setMessage("".concat(p, " ").concat(s)).end(), s = t._handleSearchResults(a, !e.conversationID)),
                                cursor: i,
                                totalCount: n
                            })
                        })).catch((function(e) {
                            return d.setMessage(p).setError(e).end(), Mn(e)
                        }))
                    }
                }, {
                    key: "_handleSearchResults",
                    value: function(e, t) {
                        var n = this.get(11);
                        return Je(e) && 0 !== e.length ? e.map((function(e) {
                            var o = e.groupID,
                                i = e.userID,
                                a = e.messageCount,
                                s = (e = void 0 === (e = e.messageList) ? [] : e, {
                                    conversationID: i = o ? "".concat(E.CONV_GROUP).concat(o) : "".concat(E.CONV_C2C).concat(i),
                                    messageCount: a,
                                    messageList: []
                                });
                            return t && 1 < a || 0 < (a = e.filter((function(e) {
                                return !!e
                            }))).length && (e = n.onRoamingMessage(a, i, !1), o && e.reverse(), s.messageList = e, s.messageCount = e.length), s
                        })) : []
                    }
                }, {
                    key: "_onModifyRemoteMessageResp",
                    value: function(e, t) {
                        Oe.d("".concat(this._n, "._onModifyRemoteMessageResp options:"), t);
                        var n = e.conversationType,
                            o = e.from,
                            i = e.to,
                            a = e.random,
                            s = e.sequence,
                            r = (e = e.time, t.elements),
                            c = t.messageVersion;
                        return t = void 0 === (t = t.cloudCustomData) ? "" : t, this.get(11).onMessageModified({
                            conversationType: n,
                            from: o,
                            to: i,
                            time: e,
                            random: a,
                            sequence: s,
                            elements: r,
                            cloudCustomData: t,
                            messageVersion: c
                        })
                    }
                }, {
                    key: "_generateUUID",
                    value: function(e) {
                        var t = this.get(12);
                        return t = "".concat(t.getSDKAppID(), "-").concat(t.getUserID(), "-").concat(ot()), (e = (e = e.name || e.value || e.url || e.tempFilePath) && e.slice(e.lastIndexOf(".") + 1)) ? "".concat(t, ".").concat(e) : t
                    }
                }, {
                    key: "getMessageOption",
                    value: function(e) {
                        return this._messageOptionsMap.get(e)
                    }
                }, {
                    key: "_getNickAndAvatarByUserID",
                    value: function(e) {
                        return this.get(4).getNickAndAvatarByUserID(e)
                    }
                }, {
                    key: "_getNameCardByGroupID",
                    value: function(e) {
                        if (e.conversationType === E.CONV_GROUP) {
                            var t = this.get(7);
                            if (t) return t.getMyNameCardByGroupID(e.to)
                        }
                        return ""
                    }
                }, {
                    key: "reset",
                    value: function() {
                        Oe.l("".concat(this._n, ".reset")), this._messageOptionsMap.clear()
                    }
                }]), za),
                Fa = (c(Ja, Rn), Pa = g(Ja), s(Ja, [{
                    key: "onMsgExtNotify",
                    value: function(e) {
                        var t = this,
                            n = (e = e.dataList).messageInfo,
                            o = e.operateType,
                            i = e.operateResultList,
                            a = e.tinyID,
                            s = (e = e.globalSequence, n.clientTime),
                            r = (n = n.random, "".concat(a, "-").concat(s, "-").concat(n)),
                            c = [],
                            u = [],
                            l = (Oe.l("".concat(this._n, ".onMsgExtNotify messageID:").concat(r, " operateType:").concat(o, " globalSequence:").concat(e)), this._updateGlobalSeq(r, e), !1),
                            d = !1;
                        i.forEach((function(e) {
                            var n = void 0 === (n = e.extensions) ? [] : n,
                                i = e.clearSequence;
                            1 === o ? (l = !0, n.forEach((function(e) {
                                c.push({
                                    key: e.key,
                                    value: e.value
                                })
                            })), t._updateLocalExt(r, n)) : 2 === o ? (d = !0, n.forEach((function(e) {
                                u.push(e.key)
                            })), t._updateLocalExt(r, n)) : 3 === o && (d = !0, t._hasLocalExt(r) && t._getLocalExt(r).forEach((function(e, t) {
                                e.seq <= i && !He(e.value) && u.push(t)
                            })), t._clearLocalExt(r, i))
                        })), l && this.emitOEvt(D.MESSAGE_EXTENSIONS_UPDATED, {
                            messageID: r,
                            extensions: c
                        }), d && this.emitOEvt(D.MESSAGE_EXTENSIONS_DELETED, {
                            messageID: r,
                            keyList: u
                        })
                    }
                }, {
                    key: "setMessageExtensions",
                    value: function(e, t) {
                        var n = "setMessageExtensions";
                        if (!this.canIUse(U.MSG_EXT)) return this.noUse(n);
                        var o = "".concat(this._n, ".").concat(n),
                            i = e.ID,
                            a = e.conversationID,
                            s = e.sequence,
                            r = e.time,
                            c = m(t),
                            u = (20 < t.length && (c = t.slice(0, 20), Oe.w("".concat(o, ". the length of extensions cannot exceed 20."))), t = "convID:".concat(a, " messageID:").concat(i, " sequence:").concat(s, " time:").concat(r, " count:").concat(c.length), new Qn(n));
                        return u.setMessage(t), Oe.l("".concat(o, " ").concat(t)), this._modifyMsgExts(e, c).then((function(e) {
                            var t = e.resultList,
                                n = e.successCount;
                            return e = e.failureCount, n = "successCount:".concat(n, " failCount:").concat(e), u.setMoreMessage(n).end(), Oe.l("".concat(o, " ok. ").concat(n)), vn({
                                extensions: t
                            })
                        })).catch((function(e) {
                            return u.setError(e).end(), Oe.e("".concat(o, " failed. error:"), e), Mn(e)
                        }))
                    }
                }, {
                    key: "getMessageExtensions",
                    value: function(e) {
                        var t = this,
                            n = "getMessageExtensions";
                        if (!this.canIUse(U.MSG_EXT)) return this.noUse(n);
                        var o = "".concat(this._n, ".").concat(n),
                            i = e.ID,
                            a = e.conversationID,
                            s = e.sequence,
                            r = e.time,
                            c = (a = "convID:".concat(a, " messageID:").concat(i, " sequence:").concat(s, " time:").concat(r), new Qn(n)),
                            u = (c.setMessage(a), void Oe.l("".concat(o, " ").concat(a)));
                        return this.getMsgExtsMap.has(i) && (u = this._getGlobalSeq(i)), this._getMsgExts(e, u).then((function(e) {
                            return c.end(), Oe.l("".concat(o, " ok. extCount:").concat(e.length)), ut(u) && 0 < e.length && t.getMsgExtsMap.set(i, 1), vn({
                                extensions: e
                            })
                        })).catch((function(e) {
                            return c.setError(e).end(), Oe.e("".concat(o, " failed. error:"), e), Mn(e)
                        }))
                    }
                }, {
                    key: "deleteMessageExtensions",
                    value: function(e, t) {
                        var n = "deleteMessageExtensions";
                        if (!this.canIUse(U.MSG_EXT)) return this.noUse(n);
                        var o = "".concat(this._n, ".").concat(n),
                            i = [],
                            a = 3,
                            s = (He(t) || (a = 2, t.forEach((function(e) {
                                i.push({
                                    key: e,
                                    value: "",
                                    seq: 0
                                })
                            }))), t = e.ID, e.conversationID),
                            r = e.sequence,
                            c = e.time,
                            u = (s = "convID:".concat(s, " messageID:").concat(t, " sequence:").concat(r, " time:").concat(c, " operateType:").concat(a), new Qn(n));
                        return u.setMessage(s), Oe.l("".concat(o, " ").concat(s)), this._modifyMsgExts(e, i, a).then((function(e) {
                            var t = e.resultList,
                                n = e.successCount,
                                i = (e = e.failureCount, "");
                            return 2 === a && (i = "success count:".concat(n, " fail count:").concat(e)), u.setMoreMessage("".concat(i)).end(), Oe.l("".concat(o, " ok. ").concat(i)), vn({
                                extensions: t
                            })
                        })).catch((function(e) {
                            return u.setError(e).end(), Oe.e("".concat(o, " failed. error:"), e), Mn(e)
                        }))
                    }
                }, {
                    key: "_modifyMsgExts",
                    value: function(e, t) {
                        var n = this,
                            o = 2 < arguments.length && void 0 !== arguments[2] ? arguments[2] : 1,
                            i = Ct(e.to) ? E.CONV_TOPIC : e.conversationType,
                            a = void 0,
                            s = (3 !== o && (a = this._getReqExts(e, t)), null);
                        switch (i) {
                            case E.CONV_C2C:
                                s = this.get(6);
                                break;
                            case E.CONV_GROUP:
                                s = this.get(7);
                                break;
                            case E.CONV_TOPIC:
                                s = this.get(10);
                                break;
                            default:
                                return Mn({
                                    code: Un.NO_MODULE
                                })
                        }
                        return s.modifyMsgExts(e, a, o).then((function(t) {
                            var o = (t = t.data).extensions,
                                i = (t = t.seq, []),
                                a = 0,
                                s = 0,
                                r = [];
                            return (o = He(o) ? [] : o).forEach((function(e) {
                                var t = e.errorCode,
                                    n = (e = e.extension).key,
                                    o = e.value;
                                e = e.seq, i.push({
                                    code: t,
                                    key: n,
                                    value: o
                                }), 0 === t ? a++ : s++, r.push({
                                    key: n,
                                    value: o,
                                    seq: e
                                })
                            })), n._updateGlobalSeq(e.ID, t), 0 < r.length && (n._updateLocalExt(e.ID, r), r = null), {
                                resultList: i,
                                successCount: a,
                                failureCount: s
                            }
                        })).catch((function(e) {
                            return Mn(e)
                        }))
                    }
                }, {
                    key: "_getReqExts",
                    value: function(e, t) {
                        var n, o = [];
                        return this._hasLocalExt(e.ID) ? (n = this._getLocalExt(e.ID), t.forEach((function(e) {
                            var t = e.key,
                                i = (e = e.value, 0);
                            n.has(t) && (i = n.get(t).seq), o.push({
                                key: t,
                                value: e,
                                seq: i
                            })
                        }))) : t.forEach((function(e) {
                            var t = e.key;
                            e = e.value, o.push({
                                key: t,
                                value: e,
                                seq: 0
                            })
                        })), o
                    }
                }, {
                    key: "_getMsgExts",
                    value: function(e, t) {
                        var n = this,
                            o = "".concat(this._n, "._getMsgExts"),
                            i = e.ID,
                            a = null;
                        switch (Ct(e.to) ? E.CONV_TOPIC : e.conversationType) {
                            case E.CONV_C2C:
                                a = this.get(6);
                                break;
                            case E.CONV_GROUP:
                                a = this.get(7);
                                break;
                            case E.CONV_TOPIC:
                                a = this.get(10);
                                break;
                            default:
                                return Mn({
                                    code: Un.NO_MODULE
                                })
                        }
                        return a.getMessageExtensions(e, t).then((function(t) {
                            var a = (t = t.data).extensions,
                                s = t.completeFlag,
                                r = t.globalSequence;
                            return t = t.clearSequence, a = He(a) ? [] : a, Oe.l("".concat(o, " ok. completeFlag:").concat(s, " globalSequence:").concat(r, " clearSequence:").concat(t, " count:").concat(a.length)), n._updateLocalExt(i, a), n._clearLocalExt(i, t), n._updateGlobalSeq(i, r), 1 !== s ? (t = a.slice(-1)[0].seq + 1, n._getMsgExts(e, t)) : n._getLocalExtList(i)
                        })).catch((function(e) {
                            return Mn(e)
                        }))
                    }
                }, {
                    key: "_hasLocalExt",
                    value: function(e) {
                        return this.msgExtMap.has(e)
                    }
                }, {
                    key: "_getLocalExt",
                    value: function(e) {
                        return this.msgExtMap.get(e)
                    }
                }, {
                    key: "_updateLocalExt",
                    value: function(e, t) {
                        this._hasLocalExt(e) || this.msgExtMap.set(e, new Map);
                        var n = this._getLocalExt(e);
                        t.forEach((function(e) {
                            var t = e.key,
                                o = e.value;
                            e = e.seq, n.set(t, {
                                value: void 0 === o ? "" : o,
                                seq: e
                            })
                        }))
                    }
                }, {
                    key: "_clearLocalExt",
                    value: function(e, t) {
                        var n;
                        t <= 0 || !this._hasLocalExt(e) || (n = this._getLocalExt(e)).forEach((function(e, o) {
                            e.seq <= t && n.delete(o)
                        }))
                    }
                }, {
                    key: "_getLocalExtList",
                    value: function(e) {
                        var t = [];
                        return this._hasLocalExt(e) && this._getLocalExt(e).forEach((function(e, n) {
                            He(e = e.value) || t.push({
                                key: n,
                                value: e
                            })
                        })), t
                    }
                }, {
                    key: "_getGlobalSeq",
                    value: function(e) {
                        return this.globalSeqMap.get(e)
                    }
                }, {
                    key: "_updateGlobalSeq",
                    value: function(e, t) {
                        this.globalSeqMap.set(e, t)
                    }
                }, {
                    key: "reset",
                    value: function() {
                        Oe.l("".concat(this._n, ".reset")), this.msgExtMap.clear(), this.globalSeqMap.clear(), this.getMsgExtsMap.clear()
                    }
                }]), Ja),
                qa = (c(ja, Rn), Ga = g(ja), s(ja, [{
                    key: "onReactionNotifyList",
                    value: function(e) {
                        var n = this;
                        (void 0 === (e = (e || {}).dataList) ? [] : e).forEach((function(e) {
                            var o = e.C2CMessageInfo,
                                i = void 0 === (i = e.groupMessageInfo) ? {} : i,
                                a = (e = void 0 === (e = e.reactionList) ? [] : e, i = (o = t(t({}, void 0 === o ? {} : o), i)).tinyID, o.clientTime),
                                s = (o = o.random, i = "".concat(i, "-").concat(a, "-").concat(o), []);
                            e.forEach((function(e) {
                                ut(e.userIDList) && (e.userIDList = [], e.count = 0), s.push.apply(s, m(e.userIDList))
                            })), Oe.l("".concat(n._n, ".onReactionNotifyList messageID:").concat(i, " reactionList:").concat(e.length)), n._handleReactionSummary([{
                                messageID: i,
                                reactionList: e
                            }], s).then((function(e) {
                                n.emitOEvt(D.MESSAGE_REACTIONS_UPDATED, t({}, e[0]))
                            }))
                        }))
                    }
                }, {
                    key: "onReactionNotify",
                    value: function(e) {
                        var n = (e = e.dataList || {}).C2CMessageInfo,
                            o = void 0 === (o = e.groupMessageInfo) ? {} : o,
                            i = e.reactionID,
                            a = (e = e.operateType, o = (n = t(t({}, void 0 === n ? {} : n), o)).tinyID, n.clientTime);
                        n = n.random, o = "".concat(o, "-").concat(a, "-").concat(n), Oe.l("".concat(this._n, ".onReactionNotify messageID:").concat(o, " reactionID:").concat(i, " operateType:").concat(e)), 1 === e ? this._addReactedByMyselfMap(o, i) : this._removeReactedByMyselfMap(o, i), a = "".concat(o, "-").concat(i), this._reactionInfoMap.has(a) && ((n = this._reactionInfoMap.get(a)).reactedByMyself = 1 === e, this.emitOEvt(D.MESSAGE_REACTIONS_UPDATED, {
                            messageID: o,
                            reactionList: [n]
                        }))
                    }
                }, {
                    key: "addMessageReaction",
                    value: function(e, t) {
                        var n = this,
                            o = "addMessageReaction";
                        if (!this.canIUse(U.MSG_REACTION)) return this.noUse(o);
                        var i = "".concat(this._n, ".").concat(o),
                            a = e.ID,
                            s = e.conversationID,
                            r = (s = "convID:".concat(s, " messageID:").concat(a, " reactionID:").concat(t), new Qn(o));
                        return r.setMessage(s), Oe.l("".concat(i, " ").concat(s)), a = this._createReactionOperationPack(e, t, 1), this._addReactedByMyselfMap(e.ID, t), this.req(a).then((function() {
                            return r.end(), Oe.l("".concat(i, " ok.")), vn()
                        })).catch((function(o) {
                            return n._removeReactedByMyselfMap(e.ID, t), r.setError(o).end(), Oe.e("".concat(i, " failed. error:"), o), Mn(o)
                        }))
                    }
                }, {
                    key: "removeMessageReaction",
                    value: function(e, t) {
                        var n = "removeMessageReaction";
                        if (!this.canIUse(U.MSG_REACTION)) return this.noUse(n);
                        var o = "".concat(this._n, ".").concat(n),
                            i = e.ID,
                            a = e.conversationID,
                            s = (a = "convID:".concat(a, " messageID:").concat(i, " reactionID:").concat(t), new Qn(n));
                        return s.setMessage(a), Oe.l("".concat(o, " ").concat(a)), i = this._createReactionOperationPack(e, t, 2), this._removeReactedByMyselfMap(e.ID, t), this.req(i).then((function() {
                            return s.end(), Oe.l("".concat(o, " ok.")), vn()
                        })).catch((function(e) {
                            return s.setError(e).end(), Oe.e("".concat(o, " failed. error:"), e), Mn(e)
                        }))
                    }
                }, {
                    key: "getMessageReactions",
                    value: function(e) {
                        var n = this,
                            o = "getMessageReactions";
                        if (!this.canIUse(U.MSG_REACTION)) return this.noUse(o);
                        var i = "".concat(this._n, ".").concat(o),
                            a = e.messageList,
                            s = e.maxUserCountPerReaction,
                            r = a[0].conversationID,
                            c = (r = "convID:".concat(r, " maxUserCountPerReaction:").concat(s, " msgCount:").concat(a.length), new Qn(o)),
                            u = (c.setMessage(r), Oe.l("".concat(i, " ").concat(r)), new Map);
                        return s = this._createReactionSummaryPack(t(t({}, e), {}, {
                            messageIDMap: u
                        })), this.req(s).then((function(e) {
                            e = e.data.resultList;
                            var t = [],
                                o = [];
                            return (void 0 === e ? [] : e).forEach((function(e) {
                                var n = void 0 === (n = e.messageKey) ? void 0 : n,
                                    i = void 0 === (i = e.messageSequence) ? void 0 : i;
                                e = void 0 === (e = e.reactionList) ? [] : e, i = ut(n) ? u.get(i) : u.get(n), t.push({
                                    messageID: i,
                                    reactionList: e
                                }), e.forEach((function(e) {
                                    o.push.apply(o, m(e.userIDList))
                                }))
                            })), n._handleReactionSummary(t, o)
                        })).then((function(e) {
                            return c.end(), Oe.l("".concat(i, " ok.")), u.clear(), vn({
                                resultList: e
                            })
                        })).catch((function(e) {
                            return c.setError(e).end(), Oe.e("".concat(i, " failed. error:"), e), Mn(e)
                        }))
                    }
                }, {
                    key: "getAllUserListOfMessageReaction",
                    value: function(e) {
                        var t = this,
                            n = "getAllUserListOfMessageReaction";
                        if (!this.canIUse(U.MSG_REACTION)) return this.noUse(n);
                        var o = "".concat(this._n, ".").concat(n),
                            i = e.message,
                            a = e.reactionID,
                            s = e.nextSeq,
                            r = e.count,
                            c = i.ID,
                            u = (i = i.conversationID, i = "convID:".concat(i, " messageID:").concat(c, " reactionID:").concat(a, " nextSeq:").concat(s, " count:").concat(r), new Qn(n)),
                            l = (u.setMessage(i), Oe.l("".concat(o, " ").concat(i)), {
                                userList: [],
                                nextSeq: 0,
                                isCompleted: !1
                            });
                        return c = this._createReactionUserListPack(e), this.req(c).then((function(e) {
                            var n = void 0 === (n = (e = e.data).userIDList) ? [] : n;
                            return e = void 0 === (e = e.nextSeq) ? 0 : e, l.nextSeq = e, l.isCompleted = 0 === e, t.get(4).getUserNickAndAvatar(n)
                        })).then((function(e) {
                            return l.userList = e, u.end(), Oe.l("".concat(o, " ok.")), vn(l)
                        })).catch((function(e) {
                            return u.setError(e).end(), Oe.e("".concat(o, " failed. error:"), e), Mn(e)
                        }))
                    }
                }, {
                    key: "_createReactionOperationPack",
                    value: function(e, t, n) {
                        var o, i, a = void 0;
                        return t = {
                            reactionID: t,
                            userIDList: [this.getMyUserID()]
                        }, e.conversationType === E.CONV_C2C && (o = this.get(6), a = 1 === n ? wn.ADD_C2C_MSG_REACTION : wn.RM_C2C_MSG_REACTION, t.from = e.from, t.to = e.to, t.messageKey = o.getMessageKey(e)), e.conversationType === E.CONV_GROUP && (o = void 0, i = e.to, Ct(e.to) && (i = wt(o = e.to)), a = 1 === n ? wn.ADD_GRP_MSG_REACTION : wn.RM_GRP_MSG_REACTION, t.groupID = i, t.topicID = o, t.messageSequence = e.sequence), {
                            P: a,
                            data: t
                        }
                    }
                }, {
                    key: "_createReactionSummaryPack",
                    value: function(e) {
                        var t, n, o, i = e.messageList,
                            a = void 0 === (a = e.maxUserCountPerReaction) ? 10 : a,
                            s = e.messageIDMap,
                            r = void 0,
                            c = void 0;
                        return (e = i[0]).conversationType === E.CONV_C2C && (t = this.get(6), n = i.map((function(e) {
                            var n = t.getMessageKey(e);
                            return s.set(n, e.ID), n
                        })), r = wn.GET_C2C_MSG_REACTIONS, c = {
                            from: e.from,
                            to: e.to,
                            messageKeyList: n,
                            count: a
                        }), e.conversationType === E.CONV_GROUP && (n = void 0, o = e.to, Ct(e.to) && (o = wt(n = e.to)), e = i.map((function(e) {
                            return s.set(e.sequence, e.ID), e.sequence
                        })), r = wn.GET_GRP_MSG_REACTIONS, c = {
                            groupID: o,
                            topicID: n,
                            messageSequenceList: e,
                            count: a
                        }), {
                            P: r,
                            data: c
                        }
                    }
                }, {
                    key: "_createReactionUserListPack",
                    value: function(e) {
                        var t = e.message,
                            n = e.reactionID,
                            o = e.nextSeq,
                            i = void 0;
                        return n = {
                            reactionID: n,
                            nextSeq: void 0 === o ? 0 : o,
                            count: 100 < (e = void 0 === (e = e.count) ? 100 : e) ? 100 : e
                        }, t.conversationType === E.CONV_C2C && (o = this.get(6), i = wn.GET_C2C_MSG_REACTION_USER_LIST, n.from = t.from, n.to = t.to, n.messageKey = o.getMessageKey(t)), t.conversationType === E.CONV_GROUP && (e = void 0, o = t.to, Ct(t.to) && (o = wt(e = t.to)), i = wn.GET_GRP_MSG_REACTION_USER_LIST, n.groupID = o, n.topicID = e, n.messageSequence = t.sequence), {
                            P: i,
                            data: n
                        }
                    }
                }, {
                    key: "_handleReactionSummary",
                    value: function(e, t) {
                        var n = this;
                        return this.get(4).getUserNickAndAvatar(t).then((function(t) {
                            var o = [];
                            return e.forEach((function(e) {
                                var i = [];
                                e.reactionList.forEach((function(o) {
                                    var a = o.reactionID,
                                        s = o.count,
                                        r = o.userIDList,
                                        c = (o = void 0 === (o = o.reactedByMyself) ? void 0 : o, []);
                                    r.forEach((function(e) {
                                        t.forEach((function(t) {
                                            e === t.userID && c.push(t)
                                        }))
                                    })), r = {
                                        reactionID: a,
                                        totalUserCount: s,
                                        partialUserList: c,
                                        reactedByMyself: n._computeReactedByMyself({
                                            reactedByMyself: o,
                                            messageID: e.messageID,
                                            reactionID: a
                                        })
                                    }, i.push(r), ut(o) && !n._reactedByMyselfMap.has(e.messageID) && (s = "".concat(e.messageID, "-").concat(a), n._reactionInfoMap.set(s, r))
                                })), o.push({
                                    messageID: e.messageID,
                                    reactionList: i
                                })
                            })), o
                        }))
                    }
                }, {
                    key: "_addReactedByMyselfMap",
                    value: function(e, t) {
                        this._reactedByMyselfMap.has(e) || this._reactedByMyselfMap.set(e, []), -1 === (e = this._reactedByMyselfMap.get(e)).indexOf(t) && e.push(t)
                    }
                }, {
                    key: "_removeReactedByMyselfMap",
                    value: function(e, t) {
                        !this._reactedByMyselfMap.has(e) || -1 < (t = (e = this._reactedByMyselfMap.get(e)).indexOf(t)) && e.splice(t, 1)
                    }
                }, {
                    key: "_computeReactedByMyself",
                    value: function(e) {
                        var t = e.reactedByMyself,
                            n = e.messageID;
                        return e = e.reactionID, ut(t) ? !!this._reactedByMyselfMap.has(n) && this._reactedByMyselfMap.get(n).includes(e) : 1 === t
                    }
                }, {
                    key: "reset",
                    value: function() {
                        Oe.l("".concat(this._n, ".reset")), this._reactedByMyselfMap.clear(), this._reactionInfoMap.clear()
                    }
                }]), ja),
                xa = (c(Wa, Rn), Na = g(Wa), s(Wa, [{
                    key: "sendMessage",
                    value: function(e) {
                        var t = this,
                            n = this._createMsg(e);
                        if (null === n) return Mn({
                            code: Un.MSG_SEND_FAIL
                        });
                        this._addSendMessageTotalCount(n);
                        var o = Date.now();
                        return this.get(11).setMessageRandom(n), this._sendComboMessage(n, e).then((function(e) {
                            var i = (e = e.data).time,
                                a = e.sequence;
                            return Ye(e = e.readReceiptCode) && 0 !== e && (new Qn("sendMessageWithReceipt").setMessage("from:".concat(n.from, " to:").concat(n.to, " sequence:").concat(a, " readReceiptCode:").concat(e)).end(), Oe.w("".concat(t._n, ".sendMessage readReceiptCode:").concat(e, " message:").concat(t.getErrMsg(e)))), t._addSendMessageSuccessCount(n, o), e = t.get(11), n.status = Tn, n.time = i, n.conversationType === E.CONV_GROUP && (n.sequence = a), e.appendToMessageList(n), i = n, !0 === n._isExcludedFromLastMessage && (i = ""), e.onMessageSent({
                                conversationOptionsList: [{
                                    conversationID: n.conversationID,
                                    unreadCount: 0,
                                    type: n.conversationType,
                                    subType: n.conversationSubType,
                                    lastMessage: i
                                }]
                            }), vn({
                                message: n
                            })
                        })).catch((function(e) {
                            return t._onSendMessageFailed(n, e)
                        }))
                    }
                }, {
                    key: "_sendComboMessage",
                    value: function(e, t) {
                        var n = this._m.get(20),
                            o = "";
                        return e.conversationType === E.CONV_C2C && (o = "".concat(P.NAME.OPEN_IM, ".").concat(wn.SEND_C2C_MSG)), e.conversationType === E.CONV_GROUP && (o = "".concat(P.NAME.GRP, ".").concat(wn.SEND_GRP_MSG)), n.sendComboMessage({
                            servcmd: o,
                            data: t
                        })
                    }
                }, {
                    key: "_createMsg",
                    value: function(e) {
                        var t = "".concat(this._n, "._createMsg"),
                            n = null;
                        try {
                            var o, i = this.getMyUserID(),
                                a = {};
                            a.senderTinyID = this.getMyTinyID(), a.currentUser = i, a.from = e.From_Account || i, e.GroupId ? (a.conversationID = "".concat(E.CONV_GROUP).concat(e.GroupId), a.conversationType = E.CONV_GROUP, a.to = e.GroupId) : e.To_Account && (a.conversationID = "".concat(E.CONV_C2C).concat(e.To_Account), a.conversationType = E.CONV_C2C, a.to = e.To_Account), a.time = e.MsgTimeStamp || 0, a.random = e.Random || e.MsgRandom || 0, a.priority = e.MsgPriority, ct(e.CloudCustomData) && 0 < e.CloudCustomData.length && (a.cloudCustomData = e.CloudCustomData), Je(e.SendMsgControl) && (a.messageControlInfo = {}, e.SendMsgControl.includes("NoUnread") && (a.messageControlInfo.excludedFromUnreadCount = 1), e.SendMsgControl.includes("NoLastMsg") && (a.messageControlInfo.excludedFromLastMessage = 1)), a.conversationType === E.CONV_GROUP && Je(e.To_Account) && 0 < e.To_Account.length && (o = e.To_Account, 50 < e.To_Account.length && (o = e.To_Account.slice(0, 50), Oe.w("".concat(t, " To_Account must be less than or equal to 50."))), a.receiverList = m(o), e.To_Account = m(o)), 1 !== e.IsNeedReadReceipt && 1 !== e.NeedReadReceipt || (a.needReadReceipt = !0), 1 === e.SupportMessageExtension && (a.isSupportExtension = !0), (n = new To(a)).status = Cn, e.MsgClientTime = n.clientTime, n.conversationType === E.CONV_C2C && (e.MsgSeq = n.sequence);
                            for (var s, r = e.MsgBody.length, c = 0; c < r; c++) "TIMTextElem" === (s = e.MsgBody[c]).MsgType ? n.setTextElement(s.MsgContent.Text) : "TIMCustomElem" === s.MsgType ? n.setCustomElement({
                                data: s.MsgContent.Data || "",
                                description: s.MsgContent.Desc || "",
                                extension: s.MsgContent.Ext || ""
                            }) : "TIMFaceElem" === s.MsgType && n.setFaceElement({
                                index: s.MsgContent.Index,
                                data: s.MsgContent.Data
                            });
                            var u = n.getElements();
                            n.payload = u[0].content, n.type = u[0].type
                        } catch (e) {
                            n = null, Oe.e("".concat(t, " failed. error:"), e)
                        }
                        return n
                    }
                }, {
                    key: "_onSendMessageFailed",
                    value: function(e, t) {
                        return e.status = Dn, this.get(11).deleteMessageRandom(e), this._addSendMessageFailCountOnUser(e, t), new Qn("sendMessage").setMessage("tjg_id:".concat(this.generateTjgID(e), " type:").concat(e.type, " from:").concat(e.from, " to:").concat(e.to)).setError(t).end(), Oe.e("".concat(this._n, "._onSendMessageFailed error:"), t), Mn(new Pn({
                            code: t && t.code ? t.code : Un.MSG_SEND_FAIL,
                            message: t && t.message ? t.message : void 0,
                            data: {
                                message: e
                            }
                        }))
                    }
                }, {
                    key: "_getSendMessageSpecifiedKey",
                    value: function(e) {
                        return e.conversationType === E.CONV_C2C ? xn : e.conversationType === E.CONV_GROUP && (e = this.get(7).getLocalGroupProfile(e.to)) ? Mt(e = e.type) ? Hn : Vn : void 0
                    }
                }, {
                    key: "_addSendMessageTotalCount",
                    value: function(e) {
                        (e = this._getSendMessageSpecifiedKey(e)) && this.get(26).addTotalCount(e)
                    }
                }, {
                    key: "_addSendMessageSuccessCount",
                    value: function(e, t) {
                        var n;
                        (e = this._getSendMessageSpecifiedKey(e)) && ((n = this.get(26)).addSuccessCount(e), n.addCost(e, Yt(t, !1)))
                    }
                }, {
                    key: "_addSendMessageFailCountOnUser",
                    value: function(e, t) {
                        t = void 0 === (t = t.code) ? -1 : t;
                        var n = this.get(26);
                        e = this._getSendMessageSpecifiedKey(e), Aa(t) && e && n.addFailedCountOfUserSide(e)
                    }
                }]), Wa),
                Va = (c(Ya, Rn), Oa = g(Ya), s(Ya, [{
                    key: "registerPlugin",
                    value: function(e) {
                        var t = this,
                            n = "0";
                        Object.keys(e).forEach((function(o) {
                            t.plugins[o] = e[o], "tim-upload-plugin" === o && "function" == typeof e[o].getVersion && (n = e[o].getVersion())
                        })), new Qn("registerPlugin").setMessage("".concat(Object.keys(e))).setMoreMessage("version:".concat(n)).end()
                    }
                }, {
                    key: "getPlugin",
                    value: function(e) {
                        return this.plugins[e]
                    }
                }, {
                    key: "reset",
                    value: function() {}
                }]), Ya),
                Ha = (c(Ka, Rn), Ra = g(Ka), s(Ka, [{
                    key: "_init",
                    value: function() {
                        this._startSync({
                            cookie: this._cookie,
                            syncFlag: 0,
                            isOnlineSync: 0
                        })
                    }
                }, {
                    key: "_startSync",
                    value: function(e) {
                        var n = this,
                            o = e.cookie,
                            i = e.syncFlag,
                            a = e.isOnlineSync,
                            s = "".concat(this._n, "._startSync");
                        Oe.l("".concat(s, " options:"), e), this.req({
                            P: wn.SYNC_UNREAD_MSG,
                            data: {
                                cookie: o,
                                syncFlag: i,
                                isOnlineSync: a
                            }
                        }).then((function(e) {
                            var o = (i = e.data).cookie,
                                i = i.syncFlag;
                            Oe.l("".concat(s, " ok. cookie:").concat(o, " syncFlag:").concat(i)), He(n._cookie = o) || (0 === i || 1 === i ? (n._dispatch(t(t({}, e.data), {}, {
                                isSyncingEnded: !1
                            })), n._startSync({
                                cookie: o,
                                syncFlag: i,
                                isOnlineSync: 0
                            })) : 2 === i && n._dispatch(t(t({}, e.data), {}, {
                                isSyncingEnded: !0
                            })))
                        })).catch((function(e) {
                            Oe.e("".concat(s, " failed. error:"), e)
                        }))
                    }
                }, {
                    key: "_dispatch",
                    value: function(e) {
                        e.eventArray && this.get(20).onMessage({
                            head: {},
                            body: {
                                eventArray: e.eventArray,
                                isInstantMessage: this._onlineSyncFlag,
                                isSyncingEnded: e.isSyncingEnded
                            }
                        }), this.get(6).onNewMessage({
                            dataList: e.messageList,
                            isInstantMessage: !!e.isSyncingEnded && this._onlineSyncFlag,
                            C2CRemainingUnreadList: e.C2CRemainingUnreadList,
                            C2CPairUnreadList: e.C2CPairUnreadList,
                            isSyncingEnded: e.isSyncingEnded
                        })
                    }
                }, {
                    key: "syncOnNeed",
                    value: function() {
                        Oe.l("".concat(this._n, ".syncOnNeed cookie:").concat(this._cookie)), this._onlineSyncFlag = !0, this._startSync({
                            cookie: this._cookie,
                            syncFlag: 0,
                            isOnlineSync: 1
                        })
                    }
                }, {
                    key: "syncOnReconnected",
                    value: function() {
                        Oe.l("".concat(this._n, ".syncOnReconnected cookie:").concat(this._cookie)), this._onlineSyncFlag = !0, this._startSync({
                            cookie: this._cookie,
                            syncFlag: 0,
                            isOnlineSync: 0
                        })
                    }
                }, {
                    key: "reset",
                    value: function() {
                        Oe.l("".concat(this._n, ".reset")), this._onlineSyncFlag = !1, this._cookie = ""
                    }
                }]), Ka),
                Ba = {
                    req: {
                        toAccount: "To_Account",
                        fromAccount: "From_Account",
                        to: "To_Account",
                        from: "From_Account",
                        groupID: "GroupId",
                        groupAtUserID: "GroupAt_Account",
                        extension: "Ext",
                        data: "Data",
                        description: "Desc",
                        elements: "MsgBody",
                        sizeType: "Type",
                        downloadFlag: "Download_Flag",
                        thumbUUID: "ThumbUUID",
                        videoUUID: "VideoUUID",
                        remoteAudioUrl: "Url",
                        remoteVideoUrl: "VideoUrl",
                        videoUrl: "",
                        imageUrl: "URL",
                        fileUrl: "Url",
                        uuid: "UUID",
                        priority: "MsgPriority",
                        receiverUserID: "To_Account",
                        receiverGroupID: "GroupId",
                        messageSender: "SenderId",
                        messageReceiver: "ReceiverId",
                        nick: "From_AccountNick",
                        avatar: "From_AccountHeadurl",
                        messageNumber: "MsgNum",
                        pbDownloadKey: "PbMsgKey",
                        downloadKey: "JsonMsgKey",
                        applicationType: "PendencyType",
                        userIDList: "To_Account",
                        groupNameList: "GroupName",
                        userID: "To_Account",
                        groupAttributeList: "GroupAttr",
                        mainSequence: "AttrMainSeq",
                        avChatRoomKey: "BytesKey",
                        attributeControl: "AttrControl",
                        sequence: "seq",
                        messageControlInfo: "SendMsgControl",
                        updateSequence: "UpdateSeq",
                        clientTime: "MsgClientTime",
                        sequenceList: "MsgSeqList",
                        topicID: "TopicId",
                        customData: "CustomString",
                        isSupportTopic: "SupportTopic",
                        isWebUniapp: "is_web_uniapp",
                        isSupportExtension: "SupportMessageExtension",
                        messageSequence: "MsgSeq",
                        messageKey: "MsgKey",
                        startSequence: "startSeq",
                        simplifiedMessage: "DownsizeFlag",
                        isRelayMessage: "IsRelayMsg",
                        reactionID: "Reaction",
                        messageSequenceList: "MsgSeqList",
                        messageKeyList: "MsgKeyList",
                        cmConfigID: "CustomModerationConfigID"
                    },
                    res: {
                        MsgPriority: "priority",
                        ThumbUUID: "thumbUUID",
                        VideoUUID: "videoUUID",
                        Download_Flag: "downloadFlag",
                        GroupId: "groupID",
                        Member_Account: "userID",
                        MsgList: "messageList",
                        SyncFlag: "syncFlag",
                        To_Account: "to",
                        From_Account: "from",
                        MsgSeq: "sequence",
                        MsgRandom: "random",
                        MsgTime: "time",
                        MsgTimeStamp: "time",
                        MsgContent: "content",
                        MsgBody: "elements",
                        From_AccountNick: "nick",
                        From_AccountHeadurl: "avatar",
                        GroupWithdrawInfoArray: "revokedInfos",
                        GroupReadInfoArray: "groupMessageReadNotice",
                        LastReadMsgSeq: "lastMessageSeq",
                        WithdrawC2cMsgNotify: "c2cMessageRevokedNotify",
                        C2cWithdrawInfoArray: "revokedInfos",
                        C2cReadedReceipt: "c2cMessageReadReceipt",
                        ReadC2cMsgNotify: "c2cMessageReadNotice",
                        LastReadTime: "peerReadTime",
                        MsgRand: "random",
                        MsgType: "type",
                        MsgShow: "messageShow",
                        NextMsgSeq: "nextMessageSeq",
                        FaceUrl: "avatar",
                        ProfileDataMod: "profileModify",
                        Profile_Account: "userID",
                        ValueBytes: "value",
                        ValueNum: "value",
                        NoticeSeq: "noticeSequence",
                        NotifySeq: "notifySequence",
                        MsgFrom_AccountExtraInfo: "messageFromAccountExtraInformation",
                        Operator_Account: "operatorID",
                        OpType: "operationType",
                        ReportType: "operationType",
                        UserId: "userID",
                        User_Account: "userID",
                        List_Account: "userIDList",
                        MsgOperatorMemberExtraInfo: "operatorInfo",
                        MsgMemberExtraInfo: "memberInfoList",
                        ImageUrl: "avatar",
                        NickName: "nick",
                        MsgGroupNewInfo: "newGroupProfile",
                        MsgAppDefinedData: "groupCustomField",
                        Owner_Account: "ownerID",
                        GroupFaceUrl: "avatar",
                        GroupIntroduction: "introduction",
                        GroupNotification: "notification",
                        GroupApplyJoinOption: "joinOption",
                        MsgKey: "messageKey",
                        GroupInfo: "groupProfile",
                        ShutupTime: "muteTime",
                        Desc: "description",
                        Ext: "extension",
                        GroupAt_Account: "groupAtUserID",
                        MsgNum: "messageNumber",
                        PbMsgKey: "pbDownloadKey",
                        JsonMsgKey: "downloadKey",
                        MsgModifiedFlag: "isModified",
                        PendencyItem: "applicationItem",
                        PendencyType: "applicationType",
                        AddTime: "time",
                        AddSource: "source",
                        AddWording: "wording",
                        ProfileImImage: "avatar",
                        PendencyAdd: "friendApplicationAdded",
                        FrienPencydDel_Account: "friendApplicationDeletedUserIDList",
                        Peer_Account: "userID",
                        GroupAttr: "groupAttributeList",
                        GroupAttrAry: "groupAttributeList",
                        AttrMainSeq: "mainSequence",
                        seq: "sequence",
                        GroupAttrOption: "groupAttributeOption",
                        BytesChangedKeys: "changedKeyList",
                        GroupAttrInfo: "groupAttributeList",
                        GroupAttrSeq: "mainSequence",
                        PushChangedAttrValFlag: "isWithChangedAttributeInfo",
                        SubKeySeq: "sequence",
                        Val: "value",
                        MsgGroupFromCardName: "senderNameCard",
                        MsgGroupFromNickName: "senderNick",
                        C2cNick: "peerNick",
                        C2cImage: "peerAvatar",
                        SendMsgControl: "messageControlInfo",
                        NoLastMsg: "excludedFromLastMessage",
                        NoUnread: "excludedFromUnreadCount",
                        UpdateSeq: "updateSequence",
                        MuteNotifications: "muteFlag",
                        MsgClientTime: "clientTime",
                        TinyId: "tinyID",
                        GroupMsgReceiptList: "readReceiptList",
                        ReadNum: "readCount",
                        UnreadNum: "unreadCount",
                        TopicId: "topicID",
                        MillionGroupFlag: "communityType",
                        SupportTopic: "isSupportTopic",
                        MsgTopicNewInfo: "newTopicInfo",
                        ShutupAll: "muteAllMembers",
                        CustomString: "customData",
                        TopicFaceUrl: "avatar",
                        TopicIntroduction: "introduction",
                        TopicNotification: "notification",
                        TopicIdArray: "topicIDList",
                        MsgVersion: "messageVersion",
                        C2cMsgModNotifys: "c2cMessageModified",
                        GroupMsgModNotifys: "groupMessageModified",
                        ApplyJoinOption: "joinOption",
                        MsgFlag: "messageRemindType",
                        AtInfoList: "groupAtInfoList",
                        AtFlagList: "groupAtType",
                        AtMsgSeq: "sequence",
                        BanDuration: "duration",
                        BanDescription: "reason",
                        NotVisible: "invisible",
                        BytesTag: "tag",
                        BytesValue: "value",
                        RptBytesValue: "value",
                        LatestSeq: "globalSequence",
                        ClearSeq: "clearSequence",
                        SupportMessageExtension: "isSupportExtension",
                        ExtensionList: "extensions",
                        GroupCounter: "counterList",
                        Revoker_Account: "revoker",
                        MsgExtensionNotify: "messageExtensionNotify",
                        ExtensionC2cMsgInfo: "messageInfo",
                        ExtensionGroupMsgInfo: "messageInfo",
                        MsgOptType: "operateType",
                        SetKVInfo: "operateResultList",
                        DeleteKVInfo: "operateResultList",
                        ClearKVInfo: "operateResultList",
                        MsgKeyValue: "extensions",
                        ClearMsgSeq: "clearSequence",
                        MsgLastSeq: "globalSequence",
                        InviteJoinOption: "inviteOption",
                        MemberList_Account: "inviteeList",
                        MsgMemberExtraInfoList: "inviteeInfoList",
                        E: "event",
                        GInf: "groupProfile",
                        MCT: "clientTime",
                        MR: "random",
                        MP: "priority",
                        MTS: "time",
                        GId: "groupID",
                        MS: "sequence",
                        CCD: "cloudCustomData",
                        F_Account: "from",
                        F_Hd: "avatar",
                        F_NN: "nick",
                        GN: "groupName",
                        GT: "groupType",
                        IsSys: "isSystemMessage",
                        OpInf: "operatorInfo",
                        Img: "avatar",
                        NN: "nick",
                        OnlineInf: "onlineMemberInfo",
                        ET: "expireTime",
                        Num: "onlineMemberNum",
                        Opt: "operationType",
                        O_Account: "operatorID",
                        RT: "operationType",
                        UDF: "userDefinedField",
                        L_Account: "userIDList",
                        IsPlaceMsg: "isPlaceMessage",
                        MsgCheckResult: "checkResult",
                        Results: "resultList",
                        Reaction: "reactionID",
                        Reaction_Account: "userIDList",
                        MsgReactionNotifyList: "messageReactionNotifyList",
                        MsgReactionNotify: "messageReactionNotify",
                        MsgReactionSummary: "reactionList",
                        C2CMsgInfo: "C2CMessageInfo",
                        GroupMsgInfo: "groupMessageInfo",
                        int32_err_code: "errorCode",
                        str_err_msg: "errorMsg",
                        MsgDropReason: "messageDropReason",
                        ReactedByMe: "reactedByMyself",
                        Level: "messageRemindType",
                        PeerReadTime: "timestamp",
                        NoUnreadSeqList: "excludedUnreadSequenceList",
                        NewMsg: "topicLatestMessage"
                    },
                    ignoreKeyWord: ["C2C", "ID", "USP"]
                };

            function Ka(e) {
                return i(this, Ka), (e = Ra.call(this, e))._n = "SyncUnreadMsgModule", e._cookie = "", e._onlineSyncFlag = !1, e.getIEmitInst().on(qo.A2KEY_AND_TINYID_UPDATED, e._init, h(e)), e
            }

            function Ya(e) {
                return i(this, Ya), (e = Oa.call(this, e))._n = "PluginModule", e.plugins = {}, e
            }

            function Wa(e) {
                return i(this, Wa), (e = Na.call(this, e))._n = "ComboMsgModule", e
            }

            function ja(e) {
                return i(this, ja), (e = Ga.call(this, e))._n = "MsgReactionModule", e._reactedByMyselfMap = new Map, e._reactionInfoMap = new Map, e
            }

            function Ja(e) {
                return i(this, Ja), (e = Pa.call(this, e))._n = "MsgExtModule", e.msgExtMap = new Map, e.globalSeqMap = new Map, e.getMsgExtsMap = new Map, e
            }

            function za(e) {
                return i(this, za), (e = Ua.call(this, e))._n = "MessageModule", e._messageOptionsMap = new Map, e._mergerMessageHandler = new Da(h(e)), e
            }

            function Xa(e, t) {
                if ("string" != typeof e && !Array.isArray(e)) throw new TypeError("Expected the input to be `string | string[]`");
                return t = Object.assign({
                    pascalCase: !1
                }, t), 0 === (e = Array.isArray(e) ? e.map((function(e) {
                    return e.trim()
                })).filter((function(e) {
                    return e.length
                })).join("-") : e.trim()).length ? "" : 1 === e.length ? t.pascalCase ? e.toUpperCase() : e.toLowerCase() : (e = e = (e = e !== e.toLowerCase() ? Qa(e) : e).replace(/^[_.\- ]+/, "").toLowerCase().replace(/[_.\- ]+(\w|$)/g, (function(e, t) {
                    return t.toUpperCase()
                })).replace(/\d+(\w|$)/g, (function(e) {
                    return e.toUpperCase()
                })), t.pascalCase ? e.charAt(0).toUpperCase() + e.slice(1) : e)
            }
            for (var Za, Qa = function(e) {
                    for (var t = !1, n = !1, o = !1, i = 0; i < e.length; i++) {
                        var a = e[i];
                        t && /[a-zA-Z]/.test(a) && a.toUpperCase() === a ? (e = e.slice(0, i) + "-" + e.slice(i), o = n, n = !(t = !1), i++) : n && o && /[a-zA-Z]/.test(a) && a.toLowerCase() === a ? (e = e.slice(0, i - 1) + "-" + e.slice(i - 1), o = n, t = !(n = !1)) : (t = a.toLowerCase() === a && a.toUpperCase() !== a, o = n, n = a.toUpperCase() === a && a.toLowerCase() !== a)
                    }
                    return e
                }, $a = String.fromCharCode, es = function(e) {
                    var t = 0 | e.charCodeAt(0);
                    if (55296 <= t)
                        if (t < 56320)
                            if (56320 <= (e = 0 | e.charCodeAt(1)) && e <= 57343) {
                                if (65535 < (t = (t << 10) + e - 56613888 | 0)) return $a(240 | t >>> 18, 128 | t >>> 12 & 63, 128 | t >>> 6 & 63, 128 | 63 & t)
                            } else t = 65533;
                    else t <= 57343 && (t = 65533);
                    return t <= 2047 ? $a(192 | t >>> 6, 128 | 63 & t) : $a(224 | t >>> 12, 128 | t >>> 6 & 63, 128 | 63 & t)
                }, ts = function(e) {
                    for (var t = void 0 === e ? "" : ("" + e).replace(/[\x80-\uD7ff\uDC00-\uFFFF]|[\uD800-\uDBFF][\uDC00-\uDFFF]?/g, es), n = 0 | t.length, o = new Uint8Array(n), i = 0; i < n; i = i + 1 | 0) o[i] = 0 | t.charCodeAt(i);
                    return o
                }, ns = (s(Es, [{
                    key: "getID",
                    value: function() {
                        return this._id
                    }
                }, {
                    key: "_onOpen",
                    value: function(e) {
                        this._handler.onOpen({
                            id: this._id,
                            res: JSON.stringify(e)
                        })
                    }
                }, {
                    key: "_onClose",
                    value: function(e) {
                        this._handler.onClose({
                            id: this._id,
                            e: e
                        })
                    }
                }, {
                    key: "_onMessage",
                    value: function(e) {
                        e = this._canIUseBinaryFrame ? this._isAppCompressedData(e.data) ? this._handler.inflate(e.data) : function(e) {
                            for (var t = new Uint8Array(e), n = "", o = 0, i = t.length; o < i;) {
                                var a = t[o],
                                    s = 0,
                                    r = 0;
                                if (a <= 127 ? (s = 0, r = 255 & a) : a <= 223 ? (s = 1, r = 31 & a) : a <= 239 ? (s = 2, r = 15 & a) : a <= 244 && (s = 3, r = 7 & a), 0 < i - o - s)
                                    for (var c = 0; c < s;) r = r << 6 | 63 & (a = t[o + c + 1]), c += 1;
                                else r = 65533, s = i - o;
                                n += String.fromCodePoint(r), o += s + 1
                            }
                            return n
                        }(e.data) : e.data, this._handler.onMessage({
                            data: e
                        })
                    }
                }, {
                    key: "_isAppCompressedData",
                    value: function(e) {
                        return 67 === (e = new Uint8Array(e))[0] && 79 === e[1] && 77 === e[2] && 80 === e[3]
                    }
                }, {
                    key: "_onError",
                    value: function(e) {
                        this._handler.onError({
                            id: this._id,
                            e: e
                        })
                    }
                }, {
                    key: "setIsWorkerEnabled",
                    value: function(e) {
                        this._isWorkerEnabled = !0
                    }
                }, {
                    key: "close",
                    value: function(e) {
                        if (this._workerSocket && (this._workerSocket.postMessage({
                                cmd: "stop",
                                code: e
                            }), this._workerSocket.terminate(), this._workerSocket = null), j) return ne.offSocketClose(), ne.offSocketMessage(), ne.offSocketOpen(), ne.offSocketError(), void ne.closeSocket();
                        this._socket && (Q ? (this._socket.onClose((function() {})), this._socket.onOpen((function() {})), this._socket.onMessage((function() {})), this._socket.onError((function() {}))) : (this._socket.onopen = null, this._socket.onmessage = null, this._socket.onclose = null, this._socket.onerror = null), W ? this._socket.close({
                            code: e
                        }) : this._socket.close(e), this._socket = null)
                    }
                }, {
                    key: "send",
                    value: function(e) {
                        this._workerSocket ? this._workerSocket.postMessage({
                            cmd: "sendMessage",
                            data: this._canIUseBinaryFrame ? ts(e.data).buffer : e.data
                        }) : j ? ne.sendSocketMessage({
                            data: e.data,
                            fail: function() {
                                e.fail && e.requestID && e.fail(e.requestID)
                            }
                        }) : this._socket && (Q ? this._socket.send({
                            data: this._canIUseBinaryFrame ? ts(e.data).buffer : e.data,
                            fail: function() {
                                e.fail && e.requestID && e.fail(e.requestID)
                            }
                        }) : this._socket.send(this._canIUseBinaryFrame ? ts(e.data) : e.data))
                    }
                }]), Es), os = ["keyMap"], is = ["keyMap"], as = "connected", ss = "connecting", rs = "disconnected", cs = (s(Ds, [{
                    key: "_setWebsocketHost",
                    value: function() {
                        var e = this._chM.get(12);
                        this._currentSite = G, this._chM.isOversea() && (this._currentSite = "OVERSEA"), e.isSingaporeSite() ? this._currentSite = "SINGAPORE" : e.isKoreaSite() ? this._currentSite = "KOREA" : e.isGermanySite() ? this._currentSite = "GERMANY" : e.isIndiaSite() ? this._currentSite = "IND" : e.isJapanSite() ? this._currentSite = "JPN" : e.isUSASite() ? this._currentSite = "USA" : e.isIndonesiaSite() && (this._currentSite = "INDONESIA"), P.HOST.setCurrent(this._currentSite)
                    }
                }, {
                    key: "_initConnection",
                    value: function() {
                        ut(P.HOST.CURRENT.BACKUP) || "" === this._url ? this._url = P.HOST.CURRENT.DEFAULT : this._url === P.HOST.CURRENT.DEFAULT ? this._url = P.HOST.CURRENT.BACKUP : this._url === P.HOST.CURRENT.BACKUP ? this._url = this._canIUseAnyCast() ? P.HOST.CURRENT.ANYCAST : P.HOST.CURRENT.DEFAULT : this._url === P.HOST.CURRENT.ANYCAST && (P.HOST.CURRENT.ANYCAST = "", this._url = P.HOST.CURRENT.DEFAULT);
                        var e = this._chM.get(12),
                            t = e.getProxyServer();
                        He(t) || (this._url = t), e.isTestEnv() && (this._url = A.TEST[this._currentSite].DEFAULT), this._connect(), this._nextPingTs = 0
                    }
                }, {
                    key: "_canIUseAnyCast",
                    value: function() {
                        return te && P.HOST.CURRENT.ANYCAST
                    }
                }, {
                    key: "onCheckTimer",
                    value: function(e) {
                        e % 1 == 0 && (this._checkPromiseMap(), this._checkNativeAppWS())
                    }
                }, {
                    key: "_checkPromiseMap",
                    value: function() {
                        var e = this;
                        0 !== this._promiseMap.size && this._promiseMap.forEach((function(t, n) {
                            var o = t.reject,
                                i = (t = t.timestamp, 15e3); - 1 !== n.indexOf(wn.LOGIN) ? i = 9e4 : -1 !== n.indexOf(wn.PING) && (i = 3e3), Date.now() - t >= i && (Oe.l("".concat(e._n, "._checkPromiseMap request timeout, delete requestID:").concat(n)), e._promiseMap.delete(n), o(new Pn({
                                code: Un.NETWORK_TIMEOUT
                            })), e._chM.onRequestTimeout())
                        }))
                    }
                }, {
                    key: "_checkNativeAppWS",
                    value: function() {
                        z && !this.isConnected() && this._reConnect()
                    }
                }, {
                    key: "onOpen",
                    value: function(e) {
                        var t, n;
                        this._readyState !== rs && (this._onOpenTs = Date.now(), n = e.id, e = e.res, this._socketID = n, t = Yt(this._startTs, !1), n = "socketID:".concat(n, " res:").concat(e), Oe.l("".concat(this._n, "._onOpen cost:").concat(t, " ms. ").concat(n)), new Qn("wsOnOpen").setMessage(t).setCostTime(t).setMoreMessage(n).end(), this._readyState = as, this._reConnectCount = 0, this._resend(), !0 === this._reConnectFlag && (this._chM.onReconnected(), this._reConnectFlag = !1), this._chM.onOpen())
                    }
                }, {
                    key: "onClose",
                    value: function(e) {
                        var t = new Qn("wsOnClose"),
                            n = e.id,
                            o = (e = e.e, "sourceSocketID:".concat(n, " currentSocketID:").concat(this._socketID, " code:").concat(e.code, " reason:").concat(e.reason)),
                            i = 0;
                        0 !== this._onOpenTs && (i = Date.now() - this._onOpenTs), t.setMessage(i).setCostTime(i).setMoreMessage(o).setCode(e.code).end(!0), Oe.l("".concat(this._n, "._onClose ").concat(o, " onlineTime:").concat(i)), n === this._socketID && (this._readyState = rs, i < 1e3 ? this._chM.onReconnectFailed() : this._chM.onClose())
                    }
                }, {
                    key: "onError",
                    value: function(e) {
                        var t = e.id,
                            n = (e = e.e, "sourceSocketID:".concat(t, " currentSocketID:").concat(this._socketID));
                        new Qn("wsOnError").setMessage(e.errMsg || _t(e)).setMoreMessage(n).setLevel("error").end(!0), Oe.w("".concat(this._n, "._onError"), e, n), t === this._socketID && (this._readyState = rs, this._chM.onError())
                    }
                }, {
                    key: "onMessage",
                    value: function(e) {
                        var t;
                        try {
                            t = JSON.parse(e.data)
                        } catch (t) {
                            new Qn("jsonParseError").setMessage(e.data).end()
                        }
                        if (t && t.head) {
                            e = this._getRequestIDFromHead(t.head);
                            var n, o, i, a = t.body;
                            if (this._chM.get(30).isTRTCCommand(e) || (i = Gt(t.head), a = function e(t, n) {
                                    return Je(t) ? t.map((function(t) {
                                        return We(t) ? e(t, n) : t
                                    })) : We(t) ? (o = t, i = function(e, t) {
                                        return ut(n[t]) ? Xa(t) : n[t]
                                    }, a = {}, Object.keys(o).forEach((function(e) {
                                        a[i(o[e], e)] = o[e]
                                    })), Lt(a, (function(t) {
                                        return Je(t) || We(t) ? e(t, n) : t
                                    }))) : void 0;
                                    var o, i, a
                                }(t.body, this._getResKeyMap(i))), Oe.d("".concat(this._n, ".onMessage ret:").concat(JSON.stringify(a), " requestID:").concat(e, " has:").concat(this._promiseMap.has(e))), this._setNextPingTs(), this._promiseMap.has(e)) return n = (i = this._promiseMap.get(e)).resolve, o = i.reject, i = i.timestamp, this._promiseMap.delete(e), this._calcRTT(i), void(a.errorCode && 0 !== a.errorCode ? (this._chM.onErrorCodeNotZero(a), o(new Pn({
                                code: a.errorCode,
                                message: a.errorInfo || "",
                                data: e.includes(wn.MODIFY_C2C_MSG) || e.includes(wn.MODIFY_GRP_MSG) ? {
                                    elements: a.elements,
                                    messageVersion: a.messageVersion,
                                    cloudCustomData: a.cloudCustomData
                                } : void 0
                            }))) : n(vn(a)));
                            this._chM.onMessage({
                                head: t.head,
                                body: a
                            })
                        }
                    }
                }, {
                    key: "_calcRTT",
                    value: function(e) {
                        e = Date.now() - e, this._chM.get(26).addRTT(e)
                    }
                }, {
                    key: "_connect",
                    value: function() {
                        this._readyState !== ss && this._readyState !== as && (this._startTs = Date.now(), this._onOpenTs = 0, this._readyState = ss, this._socket = new ns(this), this._socketID = this._socket.getID(), Oe.l("".concat(this._n, "._connect isWorkerEnabled:").concat(this.getIsWorkerEnabled(), " socketID:").concat(this._socketID, " url:").concat(this.getURL())), new Qn("wsConnect").setMessage("socketID:".concat(this._socketID, " url:").concat(this.getURL())).end())
                    }
                }, {
                    key: "getURL",
                    value: function() {
                        this._chM.isDevMode() && (this._canIUseBinaryFrame = !1);
                        var e = At(),
                            t = ((j || H && "windows" === e || z) && (this._canIUseBinaryFrame = !1), -1),
                            n = ("ios" === e ? t = se || -1 : "android" === e && (t = ce || -1), this._chM.get(12)),
                            o = this._chM.getPlatform(),
                            i = n.getSDKAppID();
                        return n = n.getInstanceID(), i = "sdkappid=".concat(i, "&instanceid=").concat(n, "&random=").concat(this._getRandom(), "&platform=").concat(o, "&host=").concat(e) + "&version=".concat(t, "&sdkversion=").concat("3.4.3"), B && (i += "&isminigame=1"), this._chM.canIUseInflate() && (i += "&compress=gzip"), (this._canIUseBinaryFrame ? "".concat(this._url, "/binfo?") : "".concat(this._url, "/info?")).concat(i)
                    }
                }, {
                    key: "_closeConnection",
                    value: function(e) {
                        Oe.l("".concat(this._n, "._closeConnection socketID:").concat(this._socketID)), this._socket && (this._socket.close(e), this._socketID = -1, this._socket = null, this._readyState = rs)
                    }
                }, {
                    key: "_resend",
                    value: function() {
                        var e = this;
                        if (Oe.l("".concat(this._n, "._resend reConnectFlag:").concat(this._reConnectFlag), "promiseMap.size:".concat(this._promiseMap.size, " simpleRequestMap.size:").concat(this._simpleRequestMap.size)), 0 < this._promiseMap.size && this._promiseMap.forEach((function(t, n) {
                                var o = t.uplinkData,
                                    i = t.resolve;
                                t = t.reject, -1 !== n.indexOf(wn.AV_POLLING) ? e._promiseMap.delete(n) : (e._promiseMap.set(n, {
                                    resolve: i,
                                    reject: t,
                                    timestamp: Date.now(),
                                    uplinkData: o
                                }), e._execute(n, o))
                            })), 0 < this._simpleRequestMap.size) {
                            var t, n = T(this._simpleRequestMap);
                            try {
                                for (n.s(); !(t = n.n()).done;) {
                                    var o = f(t.value, 2),
                                        i = o[0],
                                        a = o[1];
                                    this._execute(i, a)
                                }
                            } catch (t) {
                                n.e(t)
                            } finally {
                                n.f()
                            }
                            this._simpleRequestMap.clear()
                        }
                    }
                }, {
                    key: "send",
                    value: function(e) {
                        var t = this,
                            n = (e.head.seq = this._getSequence(), e.head.reqtime = Math.floor(Date.now() / 1e3), e.keyMap, _(e, os)),
                            o = this._getRequestIDFromHead(e.head),
                            i = JSON.stringify(n);
                        return new Promise((function(e, a) {
                            t._promiseMap.set(o, {
                                resolve: e,
                                reject: a,
                                timestamp: Date.now(),
                                uplinkData: i
                            }), Oe.d("".concat(t._n, ".send uplinkData:").concat(JSON.stringify(n), " requestID:").concat(o, " readyState:").concat(t._readyState)), t._readyState !== as ? t._reConnect() : (t._execute(o, i), t._chM.get(26).addRequestCount())
                        }))
                    }
                }, {
                    key: "simplySend",
                    value: function(e) {
                        e.head.seq = this._getSequence(), e.head.reqtime = Math.floor(Date.now() / 1e3), e.keyMap;
                        var t = _(e, is);
                        e = this._getRequestIDFromHead(e.head), t = JSON.stringify(t), this._readyState !== as ? (this._simpleRequestMap.size < this.MAX_SIZE ? this._simpleRequestMap.set(e, t) : Oe.l("".concat(this._n, ".simplySend. simpleRequestMap is full, drop request!")), this._reConnect()) : this._execute(e, t)
                    }
                }, {
                    key: "_execute",
                    value: function(e, t) {
                        this._socket.send({
                            data: t,
                            fail: Q ? this._onSendFail.bind(this) : void 0,
                            requestID: e
                        })
                    }
                }, {
                    key: "_onSendFail",
                    value: function(e) {
                        Oe.l("".concat(this._n, "._onSendFail requestID:").concat(e)), this._chM.onSendFail()
                    }
                }, {
                    key: "_getSequence",
                    value: function() {
                        var e;
                        if (this._startSequence < 2415919103) return e = this._startSequence, this._startSequence += 1, 2415919103 === this._startSequence && (this._startSequence = nt()), e
                    }
                }, {
                    key: "_getRequestIDFromHead",
                    value: function(e) {
                        return e.servcmd + e.seq
                    }
                }, {
                    key: "_getResKeyMap",
                    value: function(e) {
                        return e = this._chM.getKeyMap(e), t(t({}, Ba.res), e.res)
                    }
                }, {
                    key: "_reConnect",
                    value: function() {
                        this._readyState !== as && this._readyState !== ss && this.forcedReconnect()
                    }
                }, {
                    key: "forcedReconnect",
                    value: function() {
                        var e = "".concat(this._n, ".forcedReconnect");
                        Oe.l("".concat(e, " count:").concat(this._reConnectCount, " readyState:").concat(this._readyState)), this._reConnectFlag = !0, this._resetRandom(), this._reConnectCount < this.MAX_RECONNECT_COUNT ? (this._reConnectCount += 1, this._closeConnection(4001), this._initConnection()) : (this._reConnectCount = 0, this._chM.get(15).isOnline() ? (Oe.w("".concat(e, " disconnected from wsserver but network is ok, continue...")), this._closeConnection(4001), this._initConnection()) : this._chM.onReconnectFailed())
                    }
                }, {
                    key: "getReconnectFlag",
                    value: function() {
                        return this._reConnectFlag
                    }
                }, {
                    key: "_setNextPingTs",
                    value: function() {
                        this._nextPingTs = z ? Date.now() + 5e3 : Date.now() + 1e4
                    }
                }, {
                    key: "getNextPingTs",
                    value: function() {
                        return this._nextPingTs
                    }
                }, {
                    key: "isConnected",
                    value: function() {
                        return this._readyState === as
                    }
                }, {
                    key: "canIUseBinaryFrame",
                    value: function() {
                        return this._canIUseBinaryFrame
                    }
                }, {
                    key: "getSocketID",
                    value: function() {
                        return this._socketID
                    }
                }, {
                    key: "inflate",
                    value: function(e) {
                        if (this._chM.canIUseInflate()) return this._chM.get(37).inflate(e)
                    }
                }, {
                    key: "setIsWorkerEnabled",
                    value: function(e) {
                        Oe.l("".concat(this._n, ".setIsWorkerEnabled flag:").concat(e)), this._isWorkerEnabled = e
                    }
                }, {
                    key: "getIsWorkerEnabled",
                    value: function() {
                        return this._isWorkerEnabled && he
                    }
                }, {
                    key: "_getRandom",
                    value: function() {
                        return 0 === this._random && (this._random = Math.random()), this._random
                    }
                }, {
                    key: "_resetRandom",
                    value: function() {
                        this._random = 0
                    }
                }, {
                    key: "close",
                    value: function() {
                        Oe.l("".concat(this._n, ".close")), this._closeConnection(4e3), this._promiseMap.clear(), this._startSequence = nt(), this._readyState = rs, this._simpleRequestMap.clear(), this._reConnectFlag = !1, this._reConnectCount = 0, this._onOpenTs = 0, this._url = "", this._random = 0, this._canIUseBinaryFrame = !0, this._isWorkerEnabled = !0
                    }
                }]), Ds), us = function(e, t, n) {
                    return new Promise((function(o, i) {
                        var a, s, r = "application/x-www-form-urlencoded;charset=UTF-8";
                        Q ? ne.request({
                            url: t,
                            data: n,
                            method: e,
                            timeout: 3e3,
                            header: {
                                "content-type": r
                            },
                            success: function(e) {
                                e && e.data && e.data.NetCheckInfo && Oe.l("".concat("getconninfo ok in", " miniapp. ret:"), e.data), o()
                            },
                            fail: function() {
                                i(new Pn({
                                    code: Un.NETWORK_ERROR
                                }))
                            }
                        }) : (a = new XMLHttpRequest, s = setTimeout((function() {
                            a.abort(), i(new Pn({
                                code: Un.NETWORK_TIMEOUT
                            }))
                        }), 3e3), a.onreadystatechange = function() {
                            4 === a.readyState && (clearTimeout(s), 200 === a.status || 304 === a.status ? (a.responseText && -1 < a.responseText.indexOf("NetCheckInfo") && Oe.l("".concat("getconninfo ok in", " web. ret:"), JSON.parse(a.responseText)), o()) : i(new Pn({
                                code: Un.NETWORK_ERROR
                            })))
                        }, a.open(e, t, !0), a.setRequestHeader("Content-type", r), n ? a.send(n) : a.send())
                    }))
                }, ls = (c(Ts, Rn), Za = g(Ts), s(Ts, [{
                    key: "onCheckTimer",
                    value: function(e) {
                        this._socketHandler && (this.isLoggedIn() ? (0 < this._timerForNotLoggedIn && (clearInterval(this._timerForNotLoggedIn), this._timerForNotLoggedIn = -1), this._socketHandler.onCheckTimer(e)) : this._socketHandler.onCheckTimer(1), this._checkNextPing())
                    }
                }, {
                    key: "onErrorCodeNotZero",
                    value: function(e) {
                        this.get(20).onErrorCodeNotZero(e)
                    }
                }, {
                    key: "onMessage",
                    value: function(e) {
                        this.get(20).onMessage(e)
                    }
                }, {
                    key: "send",
                    value: function(e) {
                        return this._socketHandler ? this._previousState !== E.NET_STATE_CONNECTED && e.head.servcmd.includes(wn.SSO_STAT) ? (this.reConnect(), this.isPrivateNetWork() ? Promise.resolve() : this._sendLogViaHTTP(e)) : this._socketHandler.send(e) : Promise.reject()
                    }
                }, {
                    key: "_sendLogViaHTTP",
                    value: function(e) {
                        var t = P.HOST.CURRENT.STAT;
                        return t = "".concat(t, "/v4/imopenstat/tim_web_report_v2?sdkappid=").concat(e.head.sdkappid, "&reqtime=").concat(Date.now()), e = JSON.stringify(e.body), us("POST", t, e)
                    }
                }, {
                    key: "simplySend",
                    value: function(e) {
                        return this._socketHandler ? this._socketHandler.simplySend(e) : Promise.reject()
                    }
                }, {
                    key: "onOpen",
                    value: function() {
                        this._ping()
                    }
                }, {
                    key: "onClose",
                    value: function() {
                        this._socketHandler && this._socketHandler.getReconnectFlag() && this._emitNetStateChangeEvent(E.NET_STATE_DISCONNECTED), this.reConnect()
                    }
                }, {
                    key: "onError",
                    value: function() {
                        Q && !z && this.warn("DomainNameInMP"), this._emitNetStateChangeEvent(E.NET_STATE_DISCONNECTED)
                    }
                }, {
                    key: "getKeyMap",
                    value: function(e) {
                        return this.get(20).getKeyMap(e)
                    }
                }, {
                    key: "onRequestTimeout",
                    value: function() {
                        3e4 <= Date.now() - this._lastDiagnoseTS && this.diagnose()
                    }
                }, {
                    key: "onSendFail",
                    value: function() {
                        this._emitNetStateChangeEvent(E.NET_STATE_DISCONNECTED)
                    }
                }, {
                    key: "onReconnected",
                    value: function() {
                        Oe.l("".concat(this._n, ".onReconnected cost:").concat(Yt(this._disconnectedTS, !0, !0))), this._m.restartTimer(), this.get(20).onReconnected(Yt(this._disconnectedTS, !1, !1)), this._disconnectedTS = 0, this._emitNetStateChangeEvent(E.NET_STATE_CONNECTED)
                    }
                }, {
                    key: "onReconnectFailed",
                    value: function() {
                        Oe.l("".concat(this._n, ".onReconnectFailed")), this._emitNetStateChangeEvent(E.NET_STATE_DISCONNECTED)
                    }
                }, {
                    key: "setIsWorkerEnabled",
                    value: function(e) {
                        this._socketHandler && this._socketHandler.setIsWorkerEnabled(!1)
                    }
                }, {
                    key: "offline",
                    value: function() {
                        this._emitNetStateChangeEvent(E.NET_STATE_DISCONNECTED)
                    }
                }, {
                    key: "reConnect",
                    value: function() {
                        var e = 0 < arguments.length && void 0 !== arguments[0] && arguments[0],
                            t = !1,
                            n = (this._socketHandler && (t = this._socketHandler.getReconnectFlag()), "forcedFlag:".concat(e, " fatalErrorFlag:").concat(this._fatalErrorFlag, " previousState:").concat(this._previousState, " reconnectFlag:").concat(t));
                        if (Oe.l("".concat(this._n, ".reConnect ").concat(n)), !this._fatalErrorFlag && this._socketHandler) {
                            if (!0 === e) this._socketHandler.forcedReconnect();
                            else {
                                if (this._previousState === E.NET_STATE_CONNECTING && t) return;
                                this._socketHandler.forcedReconnect()
                            }
                            this._emitNetStateChangeEvent(E.NET_STATE_CONNECTING)
                        }
                    }
                }, {
                    key: "_emitNetStateChangeEvent",
                    value: function(e) {
                        this._previousState !== e && (Oe.l("".concat(this._n, "._emitNetStateChangeEvent from ").concat(this._previousState, " to ").concat(e)), e === E.NET_STATE_DISCONNECTED && 0 === this._disconnectedTS && (this._disconnectedTS = Date.now(), this.diagnose()), this._previousState = e, this.emitOEvt(D.NET_STATE_CHANGE, {
                            state: e
                        }))
                    }
                }, {
                    key: "_ping",
                    value: function() {
                        var e, t = this;
                        !0 !== this._probing && (this._probing = !0, e = this.get(20).getProtocolData({
                            P: wn.PING
                        }), this.send(e).then((function() {
                            t._probing = !1
                        })).catch((function(e) {
                            t._probing = !1;
                            var n = t.get(15).isOnline();
                            if (Oe.w("".concat(t._n, "._ping failed. bOnline:").concat(n, " error:"), e), e && 60002 === e.code) return new Qn("error").setMessage("code:".concat(e.code, " message:").concat(e.message)).end(), t._fatalErrorFlag = !0, void t._emitNetStateChangeEvent(E.NET_STATE_DISCONNECTED);
                            n ? t.reConnect() : t._emitNetStateChangeEvent(E.NET_STATE_DISCONNECTED)
                        })))
                    }
                }, {
                    key: "_checkNextPing",
                    value: function() {
                        this._socketHandler && this._socketHandler.isConnected() && Date.now() >= this._socketHandler.getNextPingTs() && this._ping()
                    }
                }, {
                    key: "dealloc",
                    value: function() {
                        this._socketHandler && (this._socketHandler.close(), this._socketHandler = null), -1 < this._timerForNotLoggedIn && clearInterval(this._timerForNotLoggedIn)
                    }
                }, {
                    key: "onRestApiKickedOut",
                    value: function() {
                        this._socketHandler && (this._socketHandler.close(), this.reConnect(!0))
                    }
                }, {
                    key: "canIUseInflate",
                    value: function() {
                        return this._m.canIUseInflate()
                    }
                }, {
                    key: "getSocketID",
                    value: function() {
                        if (this._socketHandler) return this._socketHandler.getSocketID()
                    }
                }, {
                    key: "diagnose",
                    value: function() {
                        this.isPrivateNetWork() || (this._lastDiagnoseTS = Date.now(), this._diagnoseBySSO(), this._diagnoseByCDN())
                    }
                }, {
                    key: "_diagnoseBySSO",
                    value: function() {
                        var e = this,
                            t = this._socketHandler.getURL(),
                            n = t.split("/")[2];
                        n.startsWith("ws") && (t = t.slice(t.indexOf("info?") + 5), n = "https://".concat(n, "/v3/netcheck/getconninfo?").concat(t, "&reqtime=").concat(Date.now()), us("GET", n).catch((function(t) {
                            Oe.w("".concat(e._n, "._diagnoseBySSO failed. error:"), t)
                        })))
                    }
                }, {
                    key: "_diagnoseByCDN",
                    value: function() {
                        var e = this,
                            t = (t = this._socketHandler.getURL()).slice(t.indexOf("info?") + 5);
                        t = "https://boce-cdn.my-imcloud.com/v3/netcheck/getconninfo?".concat(t, "&reqtime=").concat(Date.now()), us("GET", t).catch((function(t) {
                            Oe.w("".concat(e._n, "._diagnoseByCDN failed. error:"), t)
                        }))
                    }
                }, {
                    key: "reset",
                    value: function() {
                        Oe.l("".concat(this._n, ".reset")), this._previousState = E.NET_STATE_CONNECTED, this._probing = !1, this._fatalErrorFlag = !1, this._timerForNotLoggedIn = setInterval(this.onCheckTimer.bind(this), 1e3), this._disconnectedTS = 0, this._lastDiagnoseTS = 0
                    }
                }]), Ts), ds = ["a2", "tinyid"], ps = ["a2", "tinyid"], _s = (s(Cs, [{
                    key: "_fillMap",
                    value: function() {
                        this._map.clear();
                        var e = this._sessionM.genCommonHead(),
                            n = this._sessionM.genCosSpecifiedHead(),
                            o = this._sessionM.genSSOReportHead();
                        this._map.set(wn.LOGIN, {
                            head: t(t({}, e), {}, {
                                servcmd: "".concat(P.NAME.IM_OPEN_STATUS, ".").concat(wn.LOGIN)
                            }),
                            body: {
                                state: "Online",
                                isWebUniapp: 0,
                                deviceBrand: 0
                            },
                            keyMap: {
                                req: {
                                    deviceBrand: "InstType"
                                },
                                res: {
                                    InstId: "instanceID",
                                    HelloInterval: "helloInterval",
                                    RichMsgAuthKey: "authKey"
                                }
                            }
                        }), this._map.set(wn.LOGOUT, {
                            head: t(t({}, e), {}, {
                                servcmd: "".concat(P.NAME.IM_OPEN_STATUS, ".").concat(wn.LOGOUT)
                            }),
                            body: {
                                type: 0
                            },
                            keyMap: {
                                req: {
                                    type: "wslogout_type"
                                }
                            }
                        }), this._map.set(wn.HELLO, {
                            head: t(t({}, e), {}, {
                                servcmd: "".concat(P.NAME.IM_OPEN_STATUS, ".").concat(wn.HELLO)
                            }),
                            body: {
                                isWebUniapp: 0
                            },
                            keyMap: {
                                res: {
                                    NewInstInfo: "newInstanceInfo"
                                }
                            }
                        }), this._map.set(wn.KICK_OTHER, {
                            head: t(t({}, e), {}, {
                                servcmd: "".concat(P.NAME.STAT_SERVICE, ".").concat(wn.KICK_OTHER)
                            }),
                            body: {}
                        }), this._map.set(wn.COS_SIGN, {
                            head: t(t({}, n), {}, {
                                servcmd: "".concat(P.NAME.IM_COS_SIGN, ".").concat(wn.COS_SIGN)
                            }),
                            body: {
                                cmd: "open_im_cos_svc",
                                subCmd: "get_cos_token",
                                duration: 300,
                                version: 2
                            },
                            keyMap: {
                                req: {
                                    userSig: "usersig",
                                    subCmd: "sub_cmd",
                                    cmd: "cmd",
                                    duration: "duration",
                                    version: "version"
                                },
                                res: {
                                    expired_time: "expiredTime",
                                    bucket_name: "bucketName",
                                    session_token: "sessionToken",
                                    tmp_secret_id: "secretId",
                                    tmp_secret_key: "secretKey"
                                }
                            }
                        }), this._map.set(wn.COS_PRE_SIG, {
                            head: t(t({}, n), {}, {
                                servcmd: "".concat(P.NAME.CUSTOM_UPLOAD, ".").concat(wn.COS_PRE_SIG)
                            }),
                            body: {
                                fileType: void 0,
                                fileName: void 0,
                                uploadMethod: 0,
                                duration: 900
                            },
                            keyMap: {
                                req: {
                                    userSig: "usersig",
                                    fileType: "file_type",
                                    fileName: "file_name",
                                    uploadMethod: "upload_method"
                                },
                                res: {
                                    expired_time: "expiredTime",
                                    request_id: "requestId",
                                    head_url: "headUrl",
                                    upload_url: "uploadUrl",
                                    download_url: "downloadUrl",
                                    ci_url: "ciUrl",
                                    snapshot_url: "requestSnapshotUrl"
                                }
                            }
                        }), this._map.set(wn.SIMPLE_COS_PRE_SIG, {
                            head: t(t({}, n), {}, {
                                servcmd: "".concat(P.NAME.CUSTOM_UPLOAD, ".").concat(wn.SIMPLE_COS_PRE_SIG)
                            }),
                            body: {
                                uploadMethod: 0,
                                platform: 2,
                                SDKAppID: 0,
                                userID: "",
                                conversationType: 1,
                                uploadConfig: [{
                                    fileID: 1,
                                    fileType: 1,
                                    fileName: ""
                                }]
                            },
                            keyMap: {
                                req: {
                                    platform: "uint32_platform",
                                    SDKAppID: "uint32_sdkappid",
                                    userID: "str_user_id",
                                    uploadMethod: "uint32_upload_method",
                                    conversationType: "uint32_scene",
                                    uploadConfig: "rpt_upload_object",
                                    fileID: "uint32_file_id",
                                    fileType: "uint32_file_type",
                                    fileName: "str_file_name"
                                },
                                res: {
                                    str_final_ip: "uploadIP",
                                    rpt_pre_sig: "preSig",
                                    uint32_file_id: "fileID",
                                    uint32_exist_flag: "existFlag",
                                    str_download_url: "downloadUrl",
                                    str_upload_url: "uploadUrl",
                                    str_snapshot_url: "requestSnapshotUrl",
                                    str_file_key: "fileKey"
                                }
                            }
                        }), this._map.set(wn.GET_IMAGE_INFO, {
                            head: t(t({}, n), {}, {
                                servcmd: "".concat(P.NAME.CUSTOM_UPLOAD, ".").concat(wn.GET_IMAGE_INFO)
                            }),
                            body: {
                                imageUrl: ""
                            },
                            keyMap: {
                                req: {
                                    imageUrl: "str_image_url"
                                },
                                res: {
                                    rpt_msg_image_info: "imageInfoArray",
                                    uint32_image_type: "type",
                                    str_url: "url",
                                    uint32_width: "width",
                                    uint32_height: "height",
                                    str_image_format: "imageFormat"
                                }
                            }
                        }), this._map.set(wn.GET_IP, {
                            head: t(t({}, n), {}, {
                                servcmd: "".concat(P.NAME.CUSTOM_UPLOAD, ".").concat(wn.GET_IP)
                            }),
                            body: {
                                domainName: ""
                            },
                            keyMap: {
                                req: {
                                    domainName: "str_domain"
                                },
                                res: {
                                    str_final_ip: "ip"
                                }
                            }
                        }), this._map.set(wn.VIDEO_COVER, {
                            head: t(t({}, n), {}, {
                                servcmd: "".concat(P.NAME.CUSTOM_UPLOAD, ".").concat(wn.VIDEO_COVER)
                            }),
                            body: {
                                version: 1,
                                platform: void 0,
                                coverName: void 0,
                                requestSnapshotUrl: void 0
                            },
                            keyMap: {
                                req: {
                                    version: "version",
                                    platform: "platform",
                                    coverName: "cover_name",
                                    requestSnapshotUrl: "snapshot_url"
                                },
                                res: {
                                    error_code: "errorCode",
                                    error_msg: "errorInfo",
                                    download_url: "snapshotUrl"
                                }
                            }
                        }), this._map.set(wn.FETCH_COMMERCIAL_CONFIG, {
                            head: t(t({}, e), {}, {
                                servcmd: "".concat(P.NAME.IM_CONFIG_MANAGER, ".").concat(wn.FETCH_COMMERCIAL_CONFIG)
                            }),
                            body: {
                                SDKAppID: 0
                            },
                            keyMap: {
                                req: {
                                    SDKAppID: "uint32_sdkappid"
                                },
                                res: {
                                    int32_error_code: "errorCode",
                                    str_error_message: "errorMessage",
                                    str_purchase_bits: "purchaseBits",
                                    uint32_expired_time: "expiredTime"
                                }
                            }
                        }), this._map.set(wn.PUSHED_COMMERCIAL_CONFIG, {
                            head: t(t({}, e), {}, {
                                servcmd: "".concat(P.NAME.IM_CONFIG_MANAGER, ".").concat(wn.PUSHED_COMMERCIAL_CONFIG)
                            }),
                            body: {},
                            keyMap: {
                                res: {
                                    int32_error_code: "errorCode",
                                    str_error_message: "errorMessage",
                                    str_purchase_bits: "purchaseBits",
                                    uint32_expired_time: "expiredTime"
                                }
                            }
                        }), this._map.set(wn.FETCH_CLOUD_CTRL_CONFIG, {
                            head: t(t({}, e), {}, {
                                servcmd: "".concat(P.NAME.IM_CONFIG_MANAGER, ".").concat(wn.FETCH_CLOUD_CTRL_CONFIG)
                            }),
                            body: {
                                SDKAppID: 0,
                                version: 0
                            },
                            keyMap: {
                                req: {
                                    SDKAppID: "uint32_sdkappid",
                                    version: "uint64_version"
                                },
                                res: {
                                    int32_error_code: "errorCode",
                                    str_error_message: "errorMessage",
                                    str_json_config: "cloudControlConfig",
                                    uint32_expired_time: "expiredTime",
                                    uint32_sdkappid: "SDKAppID",
                                    uint64_version: "version"
                                }
                            }
                        }), this._map.set(wn.PUSHED_CLOUD_CTRL_CONFIG, {
                            head: t(t({}, e), {}, {
                                servcmd: "".concat(P.NAME.IM_CONFIG_MANAGER, ".").concat(wn.PUSHED_CLOUD_CTRL_CONFIG)
                            }),
                            body: {},
                            keyMap: {
                                res: {
                                    int32_error_code: "errorCode",
                                    str_error_message: "errorMessage",
                                    str_json_config: "cloudControlConfig",
                                    uint32_expired_time: "expiredTime",
                                    uint32_sdkappid: "SDKAppID",
                                    uint64_version: "version"
                                }
                            }
                        }), this._map.set(wn.OVERLOAD_NOTIFY, {
                            head: t(t({}, e), {}, {
                                servcmd: "".concat(P.NAME.OVERLOAD_PUSH, ".").concat(wn.OVERLOAD_NOTIFY)
                            }),
                            body: {},
                            keyMap: {
                                res: {
                                    OverLoadServCmd: "overloadCommand",
                                    DelaySecs: "waitingTime"
                                }
                            }
                        }), this._map.set(wn.SYNC_UNREAD_MSG, {
                            head: t(t({}, e), {}, {
                                servcmd: "".concat(P.NAME.OPEN_IM, ".").concat(wn.SYNC_UNREAD_MSG)
                            }),
                            body: {
                                cookie: "",
                                syncFlag: 0,
                                needAbstract: 1,
                                isOnlineSync: 0,
                                needSignaling: 1,
                                needCachedMsg: 1
                            },
                            keyMap: {
                                req: {
                                    fromAccount: "From_Account",
                                    toAccount: "To_Account",
                                    from: "From_Account",
                                    to: "To_Account",
                                    time: "MsgTimeStamp",
                                    sequence: "MsgSeq",
                                    random: "MsgRandom",
                                    elements: "MsgBody"
                                },
                                res: {
                                    MsgList: "messageList",
                                    SyncFlag: "syncFlag",
                                    To_Account: "to",
                                    From_Account: "from",
                                    ClientSeq: "clientSequence",
                                    MsgSeq: "sequence",
                                    NoticeSeq: "noticeSequence",
                                    NotifySeq: "notifySequence",
                                    MsgRandom: "random",
                                    MsgTimeStamp: "time",
                                    MsgContent: "content",
                                    ToGroupId: "to",
                                    MsgKey: "messageKey",
                                    GroupTips: "groupTips",
                                    MsgBody: "elements",
                                    MsgType: "type",
                                    C2CRemainingUnreadCount: "C2CRemainingUnreadList",
                                    C2CPairUnreadCount: "C2CPairUnreadList"
                                }
                            }
                        }), this._map.set(wn.GET_PROFANITY_LIST, {
                            head: t(t({}, e), {}, {
                                servcmd: "".concat(P.NAME.IM_MSG_AUDIT_MGR, ".").concat(wn.GET_PROFANITY_LIST)
                            }),
                            body: {
                                version: 0,
                                deviceID: "",
                                startIndex: void 0
                            },
                            keyMap: {
                                req: {
                                    version: "uint64_version",
                                    deviceID: "str_device_id",
                                    startIndex: "uint64_start_index"
                                },
                                res: {
                                    msg_cmd_error_code: "errorInfo",
                                    str_err_msg: "errorMessage",
                                    uint32_code: "errorCode",
                                    msg_scene_ctl_config: "filterConfig",
                                    uint64_c2c_custom_msg_flag: "c2c_custom_message",
                                    uint64_c2c_text_msg_flag: "c2c_text_message",
                                    uint64_group_custom_msg_flag: "group_custom_message",
                                    uint64_group_text_msg_flag: "group_text_message",
                                    uint64_group_info_flag: "group_profile",
                                    uint64_group_member_info_flag: "group_member_profile",
                                    uint64_relation_chain_flag: "sns",
                                    uint64_user_info_flag: "user_profile",
                                    rpt_msg_dirty_word: "lexicon",
                                    str_dirty_word: "profanity",
                                    str_replaced_content: "replacement",
                                    uint64_filter_type: "filterType",
                                    uint64_id: "id",
                                    uint64_word_type: "profanityType",
                                    uint64_complete_flag: "completeFlag",
                                    uint64_next_start_index: "nextStartIndex",
                                    uint64_version: "version",
                                    uint64_expired_time: "expiredTime"
                                }
                            }
                        }), this._map.set(wn.SEND_C2C_MSG, {
                            head: t(t({}, e), {}, {
                                servcmd: "".concat(P.NAME.OPEN_IM, ".").concat(wn.SEND_C2C_MSG)
                            }),
                            body: {
                                fromAccount: "",
                                toAccount: "",
                                msgSeq: 0,
                                msgRandom: 0,
                                msgBody: [],
                                cloudCustomData: void 0,
                                nick: "",
                                avatar: "",
                                msgLifeTime: void 0,
                                offlinePushInfo: {
                                    pushFlag: 0,
                                    title: "",
                                    desc: "",
                                    ext: "",
                                    apnsInfo: {
                                        sound: "",
                                        badgeMode: 0,
                                        isVoipPush: void 0,
                                        image: ""
                                    },
                                    androidInfo: {
                                        sound: "",
                                        XiaoMiChannelID: "",
                                        OPPOChannelID: "",
                                        GoogleChannelID: "",
                                        VIVOClassification: 1,
                                        VIVOCategory: "",
                                        HuaWeiCategory: "",
                                        HuaWeiImage: "",
                                        HonorImage: "",
                                        GoogleImage: ""
                                    }
                                },
                                messageControlInfo: void 0,
                                clientTime: void 0,
                                needReadReceipt: 0,
                                isSupportExtension: 0,
                                isRelayMessage: 0,
                                cmConfigID: void 0
                            },
                            keyMap: {
                                req: {
                                    fromAccount: "From_Account",
                                    toAccount: "To_Account",
                                    msgTimeStamp: "MsgTimeStamp",
                                    msgSeq: "MsgSeq",
                                    msgRandom: "MsgRandom",
                                    msgBody: "MsgBody",
                                    count: "MaxCnt",
                                    lastMessageTime: "LastMsgTime",
                                    messageKey: "MsgKey",
                                    peerAccount: "Peer_Account",
                                    data: "Data",
                                    description: "Desc",
                                    extension: "Ext",
                                    type: "MsgType",
                                    content: "MsgContent",
                                    sizeType: "Type",
                                    uuid: "UUID",
                                    url: "",
                                    imageUrl: "URL",
                                    fileUrl: "Url",
                                    remoteAudioUrl: "Url",
                                    remoteVideoUrl: "VideoUrl",
                                    thumbUUID: "ThumbUUID",
                                    videoUUID: "VideoUUID",
                                    videoUrl: "",
                                    downloadFlag: "Download_Flag",
                                    nick: "From_AccountNick",
                                    avatar: "From_AccountHeadurl",
                                    from: "From_Account",
                                    time: "MsgTimeStamp",
                                    messageRandom: "MsgRandom",
                                    messageSequence: "MsgSeq",
                                    elements: "MsgBody",
                                    clientSequence: "ClientSeq",
                                    payload: "MsgContent",
                                    messageList: "MsgList",
                                    messageNumber: "MsgNum",
                                    abstractList: "AbstractList",
                                    messageBody: "MsgBody",
                                    needReadReceipt: "IsNeedReadReceipt",
                                    GoogleChannelID: "GoogleChannelID",
                                    XiaoMiChannelID: "XiaoMiChannelID"
                                }
                            }
                        }), this._map.set(wn.SEND_GRP_MSG, {
                            head: t(t({}, e), {}, {
                                servcmd: "".concat(P.NAME.GRP, ".").concat(wn.SEND_GRP_MSG)
                            }),
                            body: {
                                fromAccount: "",
                                groupID: "",
                                random: 0,
                                clientSequence: 0,
                                priority: "",
                                msgBody: [],
                                cloudCustomData: void 0,
                                onlineOnlyFlag: 0,
                                offlinePushInfo: {
                                    pushFlag: 0,
                                    title: "",
                                    desc: "",
                                    ext: "",
                                    apnsInfo: {
                                        sound: "",
                                        badgeMode: 0,
                                        isVoipPush: void 0,
                                        image: ""
                                    },
                                    androidInfo: {
                                        sound: "",
                                        XiaoMiChannelID: "",
                                        OPPOChannelID: "",
                                        GoogleChannelID: "",
                                        VIVOClassification: 1,
                                        VIVOCategory: "",
                                        HuaWeiCategory: "",
                                        HuaWeiImage: "",
                                        HonorImage: "",
                                        GoogleImage: ""
                                    }
                                },
                                groupAtInfo: [],
                                messageControlInfo: void 0,
                                clientTime: void 0,
                                needReadReceipt: 0,
                                topicID: void 0,
                                receiverList: void 0,
                                isSupportExtension: 0,
                                isRelayMessage: 0,
                                cmConfigID: void 0
                            },
                            keyMap: {
                                req: {
                                    to: "GroupId",
                                    extension: "Ext",
                                    data: "Data",
                                    description: "Desc",
                                    random: "Random",
                                    sequence: "ReqMsgSeq",
                                    count: "ReqMsgNumber",
                                    type: "MsgType",
                                    priority: "MsgPriority",
                                    content: "MsgContent",
                                    elements: "MsgBody",
                                    sizeType: "Type",
                                    uuid: "UUID",
                                    url: "",
                                    imageUrl: "URL",
                                    fileUrl: "Url",
                                    remoteAudioUrl: "Url",
                                    remoteVideoUrl: "VideoUrl",
                                    thumbUUID: "ThumbUUID",
                                    videoUUID: "VideoUUID",
                                    videoUrl: "",
                                    downloadFlag: "Download_Flag",
                                    clientSequence: "ClientSeq",
                                    from: "From_Account",
                                    time: "MsgTimeStamp",
                                    messageRandom: "MsgRandom",
                                    messageSequence: "MsgSeq",
                                    payload: "MsgContent",
                                    messageList: "MsgList",
                                    messageNumber: "MsgNum",
                                    abstractList: "AbstractList",
                                    messageBody: "MsgBody",
                                    needReadReceipt: "NeedReadReceipt",
                                    receiverList: "To_Account",
                                    GoogleChannelID: "GoogleChannelID",
                                    XiaoMiChannelID: "XiaoMiChannelID"
                                },
                                res: {
                                    MsgTime: "time",
                                    MsgSeq: "sequence"
                                }
                            }
                        }), this._map.set(wn.REVOKE_C2C_MSG, {
                            head: t(t({}, e), {}, {
                                servcmd: "".concat(P.NAME.OPEN_IM, ".").concat(wn.REVOKE_C2C_MSG)
                            }),
                            body: {
                                msgInfo: {
                                    fromAccount: "",
                                    toAccount: "",
                                    msgTimeStamp: 0,
                                    msgSeq: 0,
                                    msgRandom: 0
                                }
                            },
                            keyMap: {
                                req: {
                                    msgInfo: "MsgInfo",
                                    msgTimeStamp: "MsgTimeStamp",
                                    msgSeq: "MsgSeq",
                                    msgRandom: "MsgRandom"
                                }
                            }
                        }), this._map.set(wn.REVOKE_GRP_MSG, {
                            head: t(t({}, e), {}, {
                                servcmd: "".concat(P.NAME.GRP, ".").concat(wn.REVOKE_GRP_MSG)
                            }),
                            body: {
                                groupID: "",
                                msgSeqList: void 0,
                                topicID: ""
                            },
                            keyMap: {
                                req: {
                                    msgSeqList: "MsgSeqList",
                                    msgSeq: "MsgSeq"
                                }
                            }
                        }), this._map.set(wn.GET_C2C_ROAMING_MSG, {
                            head: t(t({}, e), {}, {
                                servcmd: "".concat(P.NAME.OPEN_IM, ".").concat(wn.GET_C2C_ROAMING_MSG)
                            }),
                            body: {
                                peerAccount: "",
                                count: 15,
                                lastMessageTime: 0,
                                messageKey: "",
                                withRecalledMessage: 1,
                                direction: 0
                            },
                            keyMap: {
                                req: {
                                    messageKey: "MsgKey",
                                    peerAccount: "Peer_Account",
                                    count: "MaxCnt",
                                    lastMessageTime: "LastMsgTime",
                                    withRecalledMessage: "WithRecalledMsg",
                                    direction: "GetDirection"
                                },
                                res: {
                                    LastMsgTime: "lastMessageTime",
                                    IsNeedReadReceipt: "needReadReceipt",
                                    IsPeerRead: "readReceiptSentByPeer"
                                }
                            }
                        }), this._map.set(wn.MODIFY_C2C_MSG, {
                            head: t(t({}, e), {}, {
                                servcmd: "".concat(P.NAME.OPEN_IM, ".").concat(wn.MODIFY_C2C_MSG)
                            }),
                            body: {
                                from: "",
                                to: "",
                                sequence: 0,
                                random: 0,
                                time: 0,
                                version: 0,
                                elements: void 0,
                                cloudCustomData: void 0
                            },
                            keyMap: {
                                req: {
                                    sequence: "MsgSeq",
                                    random: "MsgRandom",
                                    time: "MsgTime",
                                    version: "MsgVersion",
                                    type: "MsgType",
                                    content: "MsgContent"
                                }
                            }
                        }), this._map.set(wn.GET_GRP_ROAMING_MSG, {
                            head: t(t({}, e), {}, {
                                servcmd: "".concat(P.NAME.GRP, ".").concat(wn.GET_GRP_ROAMING_MSG)
                            }),
                            body: {
                                withRecalledMsg: 1,
                                groupID: "",
                                count: 15,
                                sequence: "",
                                topicID: void 0
                            },
                            keyMap: {
                                req: {
                                    sequence: "ReqMsgSeq",
                                    count: "ReqMsgNumber",
                                    withRecalledMessage: "WithRecalledMsg"
                                },
                                res: {
                                    Random: "random",
                                    MsgTime: "time",
                                    MsgSeq: "sequence",
                                    ReqMsgSeq: "sequence",
                                    RspMsgList: "messageList",
                                    IsSystemMsg: "isSystemMessage",
                                    ToGroupId: "to",
                                    EnumFrom_AccountType: "fromAccountType",
                                    EnumTo_AccountType: "toAccountType",
                                    GroupCode: "groupCode",
                                    MsgPriority: "priority",
                                    MsgBody: "elements",
                                    MsgType: "type",
                                    MsgContent: "content",
                                    IsFinished: "complete",
                                    Download_Flag: "downloadFlag",
                                    ClientSeq: "clientSequence",
                                    ThumbUUID: "thumbUUID",
                                    VideoUUID: "videoUUID",
                                    ToTopicId: "topicID",
                                    InvisibleMsgSeq: "invisibleSequenceList",
                                    NextReqMsgSeq: "nextSequence"
                                }
                            }
                        }), this._map.set(wn.SET_C2C_MSG_READ, {
                            head: t(t({}, e), {}, {
                                servcmd: "".concat(P.NAME.OPEN_IM, ".").concat(wn.SET_C2C_MSG_READ)
                            }),
                            body: {
                                C2CMsgReaded: void 0
                            },
                            keyMap: {
                                req: {
                                    lastMessageTime: "LastedMsgTime"
                                }
                            }
                        }), this._map.set(wn.SET_C2C_PEER_MUTE_NOTIFICATIONS, {
                            head: t(t({}, e), {}, {
                                servcmd: "".concat(P.NAME.OPEN_IM, ".").concat(wn.SET_C2C_PEER_MUTE_NOTIFICATIONS)
                            }),
                            body: {
                                userIDList: void 0,
                                muteFlag: 0
                            },
                            keyMap: {
                                req: {
                                    userIDList: "Peer_Account",
                                    muteFlag: "Mute_Notifications"
                                }
                            }
                        }), this._map.set(wn.GET_C2C_PEER_MUTE_NOTIFICATIONS, {
                            head: t(t({}, e), {}, {
                                servcmd: "".concat(P.NAME.OPEN_IM, ".").concat(wn.GET_C2C_PEER_MUTE_NOTIFICATIONS)
                            }),
                            body: {
                                toAccount: void 0,
                                userIDList: void 0
                            },
                            keyMap: {
                                req: {
                                    userIDList: "Peer_Account"
                                },
                                res: {
                                    MuteNotificationsList: "muteFlagList"
                                }
                            }
                        }), this._map.set(wn.SET_GRP_MSG_READ, {
                            head: t(t({}, e), {}, {
                                servcmd: "".concat(P.NAME.GRP, ".").concat(wn.SET_GRP_MSG_READ)
                            }),
                            body: {
                                groupID: void 0,
                                messageReadSeq: void 0,
                                topicID: void 0
                            },
                            keyMap: {
                                req: {
                                    messageReadSeq: "MsgReadedSeq"
                                }
                            }
                        }), this._map.set(wn.SET_ALL_MSG_READ, {
                            head: t(t({}, e), {}, {
                                servcmd: "".concat(P.NAME.OPEN_IM, ".").concat(wn.SET_ALL_MSG_READ)
                            }),
                            body: {
                                readAllC2CMessage: 0,
                                groupMessageReadInfoList: []
                            },
                            keyMap: {
                                req: {
                                    readAllC2CMessage: "C2CReadAllMsg",
                                    groupMessageReadInfoList: "GroupReadInfo",
                                    messageSequence: "MsgSeq"
                                },
                                res: {
                                    C2CReadAllMsg: "readAllC2CMessage",
                                    GroupReadInfoArray: "groupMessageReadInfoList"
                                }
                            }
                        }), this._map.set(wn.DEL_C2C_MSG, {
                            head: t(t({}, e), {}, {
                                servcmd: "".concat(P.NAME.OPEN_IM, ".").concat(wn.DEL_C2C_MSG)
                            }),
                            body: {
                                fromAccount: "",
                                to: "",
                                keyList: void 0
                            },
                            keyMap: {
                                req: {
                                    keyList: "MsgKeyList"
                                }
                            }
                        }), this._map.set(wn.DEL_GRP_MSG, {
                            head: t(t({}, e), {}, {
                                servcmd: "".concat(P.NAME.GRP, ".").concat(wn.DEL_GRP_MSG)
                            }),
                            body: {
                                groupID: "",
                                deleter: "",
                                keyList: void 0,
                                topicID: void 0
                            },
                            keyMap: {
                                req: {
                                    deleter: "Deleter_Account",
                                    keyList: "Seqs"
                                }
                            }
                        }), this._map.set(wn.TRANSLATE_TEXT, {
                            head: t(t({}, e), {}, {
                                servcmd: "".concat(P.NAME.IM_OPEN_TRANSLATE, ".").concat(wn.TRANSLATE_TEXT)
                            }),
                            body: {
                                sourceTextList: void 0,
                                SDKAppID: 0,
                                from: 0,
                                source: "",
                                target: ""
                            },
                            keyMap: {
                                req: {
                                    sourceTextList: "SourceText",
                                    SDKAppID: "SdkAppId",
                                    from: "FromAccount"
                                },
                                res: {
                                    TargetText: "translatedTextList",
                                    RequestId: "requestID",
                                    CmdErrorCode: "error",
                                    ErrorCode: "code",
                                    ErrorInfo: "message"
                                }
                            }
                        }), this._map.set(wn.VOICE_TO_TEXT, {
                            head: t(t({}, e), {}, {
                                servcmd: "".concat(P.NAME.IM_OPEN_SPEECH, ".").concat(wn.VOICE_TO_TEXT)
                            }),
                            body: {
                                url: "",
                                SDKAppID: 0,
                                format: "",
                                sourceType: 0,
                                language: ""
                            },
                            keyMap: {
                                req: {
                                    url: "BytesUrl",
                                    SDKAppID: "Uint32Sdkappid",
                                    format: "BytesVoiceFormat",
                                    sourceType: "Uint64SourceType",
                                    language: "BytesEngServiceType"
                                },
                                res: {
                                    BytesRequestid: "requestID",
                                    BytesResult: "result",
                                    CmdErrorCode: "error",
                                    ErrorCode: "code",
                                    ErrorInfo: "message"
                                }
                            }
                        }), this._map.set(wn.MODIFY_GRP_MSG, {
                            head: t(t({}, e), {}, {
                                servcmd: "".concat(P.NAME.OPEN_IM, ".").concat(wn.MODIFY_GRP_MSG)
                            }),
                            body: {
                                groupID: "",
                                topicID: void 0,
                                sequence: 0,
                                version: 0,
                                elements: void 0,
                                cloudCustomData: void 0
                            },
                            keyMap: {
                                req: {
                                    sequence: "MsgSeq",
                                    version: "MsgVersion",
                                    type: "MsgType",
                                    content: "MsgContent"
                                }
                            }
                        }), this._map.set(wn.GET_READ_RECEIPT, {
                            head: t(t({}, e), {}, {
                                servcmd: "".concat(P.NAME.GRP, ".").concat(wn.GET_READ_RECEIPT)
                            }),
                            body: {
                                groupID: "",
                                sequenceList: void 0
                            },
                            keyMap: {
                                req: {
                                    sequence: "MsgSeq"
                                }
                            }
                        }), this._map.set(wn.SEND_C2C_READ_RECEIPT, {
                            head: t(t({}, e), {}, {
                                servcmd: "".concat(P.NAME.OPEN_IM, ".").concat(wn.SEND_C2C_READ_RECEIPT)
                            }),
                            body: {
                                peerAccount: "",
                                messageInfoList: void 0
                            },
                            keyMap: {
                                req: {
                                    peerAccount: "Peer_Account",
                                    messageInfoList: "C2CMsgInfo",
                                    fromAccount: "From_Account",
                                    toAccount: "To_Account",
                                    sequence: "MsgSeq",
                                    random: "MsgRandom",
                                    time: "MsgTime",
                                    clientTime: "MsgClientTime"
                                }
                            }
                        }), this._map.set(wn.SEND_READ_RECEIPT, {
                            head: t(t({}, e), {}, {
                                servcmd: "".concat(P.NAME.GRP, ".").concat(wn.SEND_READ_RECEIPT)
                            }),
                            body: {
                                groupID: "",
                                sequenceList: void 0
                            },
                            keyMap: {
                                req: {
                                    sequenceList: "MsgSeqList",
                                    sequence: "MsgSeq"
                                }
                            }
                        }), this._map.set(wn.GET_READ_RECEIPT_DETAIL, {
                            head: t(t({}, e), {}, {
                                servcmd: "".concat(P.NAME.GRP, ".").concat(wn.GET_READ_RECEIPT_DETAIL)
                            }),
                            body: {
                                groupID: "",
                                sequence: void 0,
                                flag: 0,
                                cursor: 0,
                                count: 0
                            },
                            keyMap: {
                                req: {
                                    sequence: "MsgSeq",
                                    count: "Num"
                                },
                                res: {
                                    ReadList: "readUserIDList",
                                    Read_Account: "userID",
                                    UnreadList: "unreadUserIDList",
                                    Unread_Account: "userID",
                                    IsFinish: "isCompleted"
                                }
                            }
                        }), this._map.set(wn.MODIFY_C2C_MSG_EXT, {
                            head: t(t({}, e), {}, {
                                servcmd: "".concat(P.NAME.OPEN_IM_MSG_EXT, ".").concat(wn.MODIFY_C2C_MSG_EXT)
                            }),
                            body: {
                                from: void 0,
                                to: void 0,
                                messageKey: void 0,
                                operateType: void 0,
                                extensionList: void 0
                            }
                        }), this._map.set(wn.GET_C2C_MSG_EXT, {
                            head: t(t({}, e), {}, {
                                servcmd: "".concat(P.NAME.OPEN_IM_MSG_EXT, ".").concat(wn.GET_C2C_MSG_EXT)
                            }),
                            body: {
                                from: void 0,
                                to: void 0,
                                messageKey: void 0,
                                startSequence: void 0
                            }
                        }), this._map.set(wn.MODIFY_GRP_MSG_EXT, {
                            head: t(t({}, e), {}, {
                                servcmd: "".concat(P.NAME.OPEN_IM_MSG_EXT, ".").concat(wn.MODIFY_GRP_MSG_EXT)
                            }),
                            body: {
                                groupID: void 0,
                                topicID: void 0,
                                messageSequence: void 0,
                                operateType: void 0,
                                extensionList: void 0
                            }
                        }), this._map.set(wn.GET_GRP_MSG_EXT, {
                            head: t(t({}, e), {}, {
                                servcmd: "".concat(P.NAME.OPEN_IM_MSG_EXT, ".").concat(wn.GET_GRP_MSG_EXT)
                            }),
                            body: {
                                groupID: void 0,
                                topicID: void 0,
                                messageSequence: void 0,
                                startSequence: void 0
                            }
                        }), this._map.set(wn.MSG_CLOUD_SEARCH, {
                            head: t(t({}, e), {}, {
                                servcmd: "".concat(P.NAME.MSG_SEARCH, ".").concat(wn.MSG_CLOUD_SEARCH)
                            }),
                            body: {
                                keywordList: void 0,
                                keywordListMatchType: "or",
                                account: void 0,
                                groupID: void 0,
                                count: 100,
                                cursor: void 0,
                                messageTypeList: void 0,
                                senderUserIDList: void 0,
                                startTime: void 0,
                                endTime: void 0
                            },
                            keyMap: {
                                req: {
                                    keywordListMatchType: "MatchType",
                                    account: "PeerAccount",
                                    groupID: "GroupID",
                                    messageTypeList: "MsgTypeList",
                                    senderUserIDList: "SendUserIDList"
                                },
                                res: {
                                    GroupID: "groupID",
                                    UserID: "userID",
                                    Count: "messageCount",
                                    LastMsgTime: "lastMessageTime",
                                    ConversationMsgs: "searchResult",
                                    IsNeedReadReceipt: "needReadReceipt",
                                    IsPeerRead: "readReceiptSentByPeer",
                                    MsgSeq: "sequence",
                                    ReqMsgSeq: "sequence",
                                    IsSystemMsg: "isSystemMessage",
                                    ToGroupId: "to",
                                    EnumFrom_AccountType: "fromAccountType",
                                    EnumTo_AccountType: "toAccountType",
                                    GroupCode: "groupCode",
                                    MsgContent: "content",
                                    ClientSeq: "clientSequence",
                                    ToTopicId: "topicID",
                                    InvisibleMsgSeq: "invisibleSequenceList",
                                    ErrorCode: "code",
                                    ErrorInfo: "message"
                                }
                            }
                        }), this._map.set(wn.ADD_C2C_MSG_REACTION, {
                            head: t(t({}, e), {}, {
                                servcmd: "".concat(P.NAME.OPEN_IM_MSG_EXT, ".").concat(wn.ADD_C2C_MSG_REACTION)
                            }),
                            body: {
                                from: void 0,
                                to: void 0,
                                reactionID: void 0,
                                messageKey: void 0,
                                userIDList: void 0
                            },
                            keyMap: {
                                req: {
                                    userIDList: "Add_Account"
                                }
                            }
                        }), this._map.set(wn.RM_C2C_MSG_REACTION, {
                            head: t(t({}, e), {}, {
                                servcmd: "".concat(P.NAME.OPEN_IM_MSG_EXT, ".").concat(wn.RM_C2C_MSG_REACTION)
                            }),
                            body: {
                                from: void 0,
                                to: void 0,
                                reactionID: void 0,
                                messageKey: void 0,
                                userIDList: void 0
                            },
                            keyMap: {
                                req: {
                                    userIDList: "Del_Account"
                                }
                            }
                        }), this._map.set(wn.GET_C2C_MSG_REACTIONS, {
                            head: t(t({}, e), {}, {
                                servcmd: "".concat(P.NAME.OPEN_IM_MSG_EXT, ".").concat(wn.GET_C2C_MSG_REACTIONS)
                            }),
                            body: {
                                from: void 0,
                                to: void 0,
                                messageKeyList: void 0,
                                count: void 0
                            }
                        }), this._map.set(wn.GET_C2C_MSG_REACTION_USER_LIST, {
                            head: t(t({}, e), {}, {
                                servcmd: "".concat(P.NAME.OPEN_IM_MSG_EXT, ".").concat(wn.GET_C2C_MSG_REACTION_USER_LIST)
                            }),
                            body: {
                                from: void 0,
                                to: void 0,
                                reactionID: void 0,
                                messageKey: void 0,
                                count: void 0
                            }
                        }), this._map.set(wn.ADD_GRP_MSG_REACTION, {
                            head: t(t({}, e), {}, {
                                servcmd: "".concat(P.NAME.OPEN_IM_MSG_EXT, ".").concat(wn.ADD_GRP_MSG_REACTION)
                            }),
                            body: {
                                groupID: void 0,
                                topicID: void 0,
                                reactionID: void 0,
                                messageSequence: void 0,
                                userIDList: void 0
                            },
                            keyMap: {
                                req: {
                                    userIDList: "Add_Account"
                                }
                            }
                        }), this._map.set(wn.RM_GRP_MSG_REACTION, {
                            head: t(t({}, e), {}, {
                                servcmd: "".concat(P.NAME.OPEN_IM_MSG_EXT, ".").concat(wn.RM_GRP_MSG_REACTION)
                            }),
                            body: {
                                groupID: void 0,
                                topicID: void 0,
                                reactionID: void 0,
                                messageSequence: void 0,
                                userIDList: void 0
                            },
                            keyMap: {
                                req: {
                                    userIDList: "Del_Account"
                                }
                            }
                        }), this._map.set(wn.GET_GRP_MSG_REACTIONS, {
                            head: t(t({}, e), {}, {
                                servcmd: "".concat(P.NAME.OPEN_IM_MSG_EXT, ".").concat(wn.GET_GRP_MSG_REACTIONS)
                            }),
                            body: {
                                groupID: void 0,
                                topicID: void 0,
                                messageSequenceList: void 0,
                                count: void 0
                            },
                            keyMap: {
                                res: {
                                    MsgSeq: "messageSequence"
                                }
                            }
                        }), this._map.set(wn.GET_GRP_MSG_REACTION_USER_LIST, {
                            head: t(t({}, e), {}, {
                                servcmd: "".concat(P.NAME.OPEN_IM_MSG_EXT, ".").concat(wn.GET_GRP_MSG_REACTION_USER_LIST)
                            }),
                            body: {
                                groupID: void 0,
                                topicID: void 0,
                                reactionID: void 0,
                                messageSequence: void 0,
                                nextSeq: void 0,
                                count: void 0
                            }
                        }), this._map.set(wn.GET_C2C_PEER_READ_TIME, {
                            head: t(t({}, e), {}, {
                                servcmd: "".concat(P.NAME.OPEN_IM, ".").concat(wn.GET_C2C_PEER_READ_TIME)
                            }),
                            body: {
                                userIDList: void 0
                            },
                            keyMap: {
                                req: {
                                    userIDList: "To_Account"
                                },
                                res: {
                                    ReadTime: "peerReadTimeList"
                                }
                            }
                        }), this._map.set(wn.PAGING_GET_CONV_LIST, {
                            head: t(t({}, e), {}, {
                                servcmd: "".concat(P.NAME.RECENT_CONTACT, ".").concat(wn.PAGING_GET_CONV_LIST)
                            }),
                            body: {
                                fromAccount: void 0,
                                timeStamp: void 0,
                                startIndex: void 0,
                                pinnedTimeStamp: void 0,
                                pinnedStartIndex: void 0,
                                orderType: void 0,
                                messageAssistFlag: 15,
                                assistFlag: 31
                            },
                            keyMap: {
                                req: {
                                    messageAssistFlag: "MsgAssistFlags",
                                    assistFlag: "AssistFlags",
                                    pinnedTimeStamp: "TopTimeStamp",
                                    pinnedStartIndex: "TopStartIndex"
                                },
                                res: {
                                    SessionItem: "conversations",
                                    ToAccount: "groupID",
                                    To_Account: "userID",
                                    UnreadMsgCount: "unreadCount",
                                    MsgGroupReadedSeq: "messageReadSeq",
                                    C2cPeerReadTime: "c2cPeerReadTime",
                                    LastMsgFlags: "lastMessageFlag",
                                    TopFlags: "isPinned",
                                    TopTimeStamp: "pinnedTimeStamp",
                                    TopStartIndex: "pinnedStartIndex",
                                    GroupId: "convGroupID",
                                    C2cRemark: "friendRemark",
                                    MsgRecvOption: "messageRemindType",
                                    GroupIgnoredUnreadSeqCount: "noUnreadCount",
                                    GroupNextMsgSeq: "nextMessageSeq"
                                }
                            }
                        }), this._map.set(wn.DEL_CONV, {
                            head: t(t({}, e), {}, {
                                servcmd: "".concat(P.NAME.RECENT_CONTACT, ".").concat(wn.DEL_CONV)
                            }),
                            body: {
                                fromAccount: "",
                                conversationList: void 0,
                                clearHistoryMessage: void 0
                            },
                            keyMap: {
                                req: {
                                    toGroupID: "ToGroupid",
                                    clearHistoryMessage: "ClearRamble",
                                    conversationList: "ContactItem"
                                },
                                res: {
                                    ResultItem: "resultList",
                                    ToGroupid: "groupID",
                                    ResultCode: "code",
                                    ResultInfo: "info"
                                }
                            }
                        }), this._map.set(wn.CLEAR_HISTORY_MSG, {
                            head: t(t({}, e), {}, {
                                servcmd: "".concat(P.NAME.RECENT_CONTACT, ".").concat(wn.CLEAR_HISTORY_MSG)
                            }),
                            body: {
                                fromAccount: "",
                                toAccount: void 0,
                                type: 1,
                                toGroupID: void 0
                            },
                            keyMap: {
                                req: {
                                    toGroupID: "ToGroupid"
                                }
                            }
                        }), this._map.set(wn.PIN_CONV, {
                            head: t(t({}, e), {}, {
                                servcmd: "".concat(P.NAME.RECENT_CONTACT, ".").concat(wn.PIN_CONV)
                            }),
                            body: {
                                fromAccount: "",
                                operationType: 1,
                                itemList: void 0
                            },
                            keyMap: {
                                req: {
                                    itemList: "RecentContactItem"
                                }
                            }
                        }), this._map.set(wn.DEL_GROUP_AT_TIPS, {
                            head: t(t({}, e), {}, {
                                servcmd: "".concat(P.NAME.OPEN_IM, ".").concat(wn.DEL_GROUP_AT_TIPS)
                            }),
                            body: {
                                messageListToDelete: void 0
                            },
                            keyMap: {
                                req: {
                                    messageListToDelete: "DelMsgList",
                                    messageSeq: "MsgSeq",
                                    messageRandom: "MsgRandom"
                                }
                            }
                        }), this._map.set(wn.SET_CONV_CUSTOM_DATA, {
                            head: t(t({}, e), {}, {
                                servcmd: "".concat(P.NAME.RECENT_CONTACT, ".").concat(wn.MARK_CONV)
                            }),
                            body: {
                                fromAccount: "",
                                itemList: void 0
                            },
                            keyMap: {
                                req: {
                                    itemList: "MarkItem",
                                    operationType: "OptType",
                                    groupID: "ToGroupId"
                                },
                                res: {
                                    ToGroupId: "groupID",
                                    OptType: "operationType"
                                }
                            }
                        }), this._map.set(wn.MARK_CONV, {
                            head: t(t({}, e), {}, {
                                servcmd: "".concat(P.NAME.RECENT_CONTACT, ".").concat(wn.MARK_CONV)
                            }),
                            body: {
                                fromAccount: "",
                                itemList: void 0
                            },
                            keyMap: {
                                req: {
                                    itemList: "MarkItem",
                                    operationType: "OptType",
                                    groupID: "ToGroupId"
                                },
                                res: {
                                    ToGroupId: "groupID",
                                    OptType: "operationType"
                                }
                            }
                        }), this._map.set(wn.CREATE_CONV_GRP, {
                            head: t(t({}, e), {}, {
                                servcmd: "".concat(P.NAME.RECENT_CONTACT, ".").concat(wn.CREATE_CONV_GRP)
                            }),
                            body: {
                                fromAccount: "",
                                itemList: void 0
                            },
                            keyMap: {
                                req: {
                                    itemList: "GroupContactItem",
                                    groupID: "ToGroupId"
                                },
                                res: {
                                    GroupId: "convGroupID",
                                    ToGroupId: "groupID",
                                    OptType: "operationType"
                                }
                            }
                        }), this._map.set(wn.DEL_CONV_GRP, {
                            head: t(t({}, e), {}, {
                                servcmd: "".concat(P.NAME.RECENT_CONTACT, ".").concat(wn.DEL_CONV_GRP)
                            }),
                            body: {
                                fromAccount: "",
                                groupName: void 0
                            },
                            keyMap: {
                                res: {
                                    GroupId: "convGroupID"
                                }
                            }
                        }), this._map.set(wn.RENAME_CONV_GRP, {
                            head: t(t({}, e), {}, {
                                servcmd: "".concat(P.NAME.RECENT_CONTACT, ".").concat(wn.RENAME_CONV_GRP)
                            }),
                            body: {
                                fromAccount: "",
                                updateType: void 0,
                                updateGroup: void 0
                            },
                            keyMap: {
                                req: {
                                    oldName: "OldGroupName",
                                    newName: "NewGroupName",
                                    groupID: "ToGroupId",
                                    operationType: "ContactOptType",
                                    groupName: "OldGroupName",
                                    updateItem: "ContactUpdateItem"
                                },
                                res: {
                                    ContactOptType: "operationType",
                                    ToGroupId: "groupID",
                                    GroupId: "convGroupID"
                                }
                            }
                        }), this._map.set(wn.ADD_CONV_TO_GRP, {
                            head: t(t({}, e), {}, {
                                servcmd: "".concat(P.NAME.RECENT_CONTACT, ".").concat(wn.RENAME_CONV_GRP)
                            }),
                            body: {
                                fromAccount: "",
                                updateType: void 0,
                                updateGroup: {
                                    groupName: void 0,
                                    updateGroupType: void 0,
                                    updateItem: void 0
                                }
                            }
                        }), this._map.set(wn.DEL_CONV_FROM_GRP, {
                            head: t(t({}, e), {}, {
                                servcmd: "".concat(P.NAME.RECENT_CONTACT, ".").concat(wn.RENAME_CONV_GRP)
                            }),
                            body: {
                                fromAccount: "",
                                updateType: void 0,
                                updateGroup: void 0
                            }
                        }), this._map.set(wn.GET_CONV_GRP_LIST, {
                            head: t(t({}, e), {}, {
                                servcmd: "".concat(P.NAME.RECENT_CONTACT, ".").concat(wn.GET_CONV_GRP_LIST)
                            }),
                            body: {
                                fromAccount: "",
                                startIndex: void 0
                            },
                            keyMap: {
                                res: {
                                    GroupId: "convGroupID",
                                    ToGroupId: "groupID",
                                    OptType: "operationType",
                                    CustomMark: "customData",
                                    ContactGroupId: "convGroupIDList"
                                }
                            }
                        }), this._map.set(wn.SEARCH_CONV_GRP_MARK, {
                            head: t(t({}, e), {}, {
                                servcmd: "".concat(P.NAME.RECENT_CONTACT, ".").concat(wn.SEARCH_CONV_GRP_MARK)
                            }),
                            body: {
                                fromAccount: "",
                                contactItem: void 0
                            },
                            keyMap: {
                                req: {
                                    groupID: "ToGroupId"
                                },
                                res: {
                                    GroupId: "convGroupID",
                                    ToGroupId: "groupID",
                                    OptType: "operationType",
                                    CustomMark: "customData",
                                    ContactGroupId: "convGroupIDList",
                                    ContactResultItem: "contactItem"
                                }
                            }
                        }), this._map.set(wn.GET_USER_PROFILE, {
                            head: t(t({}, e), {}, {
                                servcmd: "".concat(P.NAME.PROFILE, ".").concat(wn.GET_USER_PROFILE)
                            }),
                            body: {
                                fromAccount: "",
                                userItem: []
                            },
                            keyMap: {
                                req: {
                                    toAccount: "To_Account",
                                    standardSequence: "StandardSequence",
                                    customSequence: "CustomSequence"
                                }
                            }
                        }), this._map.set(wn.UPDATE_MY_PROFILE, {
                            head: t(t({}, e), {}, {
                                servcmd: "".concat(P.NAME.PROFILE, ".").concat(wn.UPDATE_MY_PROFILE)
                            }),
                            body: {
                                fromAccount: "",
                                profileItem: [{
                                    tag: Ge.NICK,
                                    value: ""
                                }, {
                                    tag: Ge.GENDER,
                                    value: ""
                                }, {
                                    tag: Ge.ALLOWTYPE,
                                    value: ""
                                }, {
                                    tag: Ge.AVATAR,
                                    value: ""
                                }]
                            },
                            keyMap: {
                                req: {
                                    toAccount: "To_Account",
                                    standardSequence: "StandardSequence",
                                    customSequence: "CustomSequence"
                                }
                            }
                        }), this._map.set(wn.GET_BL, {
                            head: t(t({}, e), {}, {
                                servcmd: "".concat(P.NAME.FD, ".").concat(wn.GET_BL)
                            }),
                            body: {
                                fromAccount: "",
                                startIndex: 0,
                                maxLimited: 30,
                                lastSequence: 0
                            },
                            keyMap: {
                                res: {
                                    CurruentSequence: "currentSequence"
                                }
                            }
                        }), this._map.set(wn.ADD_TO_BL, {
                            head: t(t({}, e), {}, {
                                servcmd: "".concat(P.NAME.FD, ".").concat(wn.ADD_TO_BL)
                            }),
                            body: {
                                fromAccount: "",
                                toAccount: []
                            }
                        }), this._map.set(wn.RM_FROM_BL, {
                            head: t(t({}, e), {}, {
                                servcmd: "".concat(P.NAME.FD, ".").concat(wn.RM_FROM_BL)
                            }),
                            body: {
                                fromAccount: "",
                                toAccount: []
                            }
                        }), this._map.set(wn.SET_SELF_STATUS, {
                            head: t(t({}, e), {}, {
                                servcmd: "".concat(P.NAME.IM_OPEN_STATUS, ".").concat(wn.SET_SELF_STATUS)
                            }),
                            body: {
                                customStatus: ""
                            }
                        }), this._map.set(wn.GET_USER_STATUS, {
                            head: t(t({}, e), {}, {
                                servcmd: "".concat(P.NAME.IM_OPEN_STATUS, ".").concat(wn.GET_USER_STATUS)
                            }),
                            body: {
                                userIDList: void 0
                            },
                            keyMap: {
                                res: {
                                    UserStatusList: "successUserList",
                                    ErrorList: "failureUserList",
                                    To_Account: "userID",
                                    Invalid_Account: "invalidUserID",
                                    Status: "statusType"
                                }
                            }
                        }), this._map.set(wn.SUB_USER_STATUS, {
                            head: t(t({}, e), {}, {
                                servcmd: "".concat(P.NAME.IM_OPEN_STATUS, ".").concat(wn.SUB_USER_STATUS)
                            }),
                            body: {
                                userIDList: void 0
                            },
                            keyMap: {
                                res: {
                                    ErrorList: "failureUserList",
                                    To_Account: "userID",
                                    Invalid_Account: "invalidUserID"
                                }
                            }
                        }), this._map.set(wn.UNSUB_USER_STATUS, {
                            head: t(t({}, e), {}, {
                                servcmd: "".concat(P.NAME.IM_OPEN_STATUS, ".").concat(wn.UNSUB_USER_STATUS)
                            }),
                            body: {
                                userIDList: void 0,
                                unsubscribeAll: void 0
                            },
                            keyMap: {
                                res: {
                                    ErrorList: "failureUserList",
                                    To_Account: "userID",
                                    Invalid_Account: "invalidUserID"
                                }
                            }
                        }), this._map.set(wn.GET_FD_LIST, {
                            head: t(t({}, e), {}, {
                                servcmd: "".concat(P.NAME.FD, ".").concat(wn.GET_FD_LIST)
                            }),
                            body: {
                                fromAccount: "",
                                startIndex: 0,
                                standardSequence: 0,
                                customSequence: 0
                            },
                            keyMap: {
                                res: {
                                    FriendNum: "friendCount",
                                    UserDataItem: "resultList",
                                    ValueItem: "tagValueList"
                                }
                            }
                        }), this._map.set(wn.ADD_FD, {
                            head: t(t({}, e), {}, {
                                servcmd: "".concat(P.NAME.FD, ".").concat(wn.ADD_FD)
                            }),
                            body: {
                                fromAccount: "",
                                addFriendItem: [],
                                type: ""
                            },
                            keyMap: {
                                req: {
                                    source: "AddSource",
                                    wording: "AddWording",
                                    type: "AddType"
                                },
                                res: {
                                    ResultItem: "resultList"
                                }
                            }
                        }), this._map.set(wn.UPDATE_FD, {
                            head: t(t({}, e), {}, {
                                servcmd: "".concat(P.NAME.FD, ".").concat(wn.UPDATE_FD)
                            }),
                            body: {
                                fromAccount: "",
                                updateItem: void 0
                            },
                            keyMap: {
                                req: {
                                    snsItem: "SnsItem"
                                },
                                res: {
                                    ResultItem: "resultList"
                                }
                            }
                        }), this._map.set(wn.DEL_FD, {
                            head: t(t({}, e), {}, {
                                servcmd: "".concat(P.NAME.FD, ".").concat(wn.DEL_FD)
                            }),
                            body: {
                                fromAccount: "",
                                userIDList: [],
                                type: ""
                            },
                            keyMap: {
                                req: {
                                    type: "DeleteType"
                                },
                                res: {
                                    ResultItem: "resultList"
                                }
                            }
                        }), this._map.set(wn.GET_FD_PROFILE, {
                            head: t(t({}, e), {}, {
                                servcmd: "".concat(P.NAME.FD, ".").concat(wn.GET_FD_PROFILE)
                            }),
                            body: {
                                fromAccount: "",
                                userIDList: void 0
                            },
                            keyMap: {
                                res: {
                                    InfoItem: "resultList",
                                    SnsProfileItem: "tagValueList"
                                }
                            }
                        }), this._map.set(wn.CHECK_FD, {
                            head: t(t({}, e), {}, {
                                servcmd: "".concat(P.NAME.FD, ".").concat(wn.CHECK_FD)
                            }),
                            body: {
                                fromAccount: "",
                                userIDList: [],
                                type: ""
                            },
                            keyMap: {
                                req: {
                                    type: "CheckType"
                                },
                                res: {
                                    InfoItem: "resultList"
                                }
                            }
                        }), this._map.set(wn.GET_FD_APPLICATION_LIST, {
                            head: t(t({}, e), {}, {
                                servcmd: "".concat(P.NAME.FD, ".").concat(wn.GET_FD_APPLICATION_LIST)
                            }),
                            body: {
                                fromAccount: "",
                                applicationType: "",
                                startTime: 0,
                                maxLimited: 0,
                                lastSequence: 0
                            },
                            keyMap: {
                                res: {
                                    PendencyItem: "resultList",
                                    AddSource: "source",
                                    AddTime: "time",
                                    AddWording: "wording",
                                    Image: "avatar",
                                    UnreadPendencyCount: "unreadCount",
                                    To_Account: "userID",
                                    PendencyType: "type"
                                }
                            }
                        }), this._map.set(wn.RESPOND_FD_APPLICATION, {
                            head: t(t({}, e), {}, {
                                servcmd: "".concat(P.NAME.FD, ".").concat(wn.RESPOND_FD_APPLICATION)
                            }),
                            body: {
                                fromAccount: "",
                                responseFriendItem: []
                            },
                            keyMap: {
                                req: {
                                    tag: "TagName",
                                    action: "ResponseAction"
                                },
                                res: {
                                    ResultItem: "resultList"
                                }
                            }
                        }), this._map.set(wn.DEL_FD_APPLICATION, {
                            head: t(t({}, e), {}, {
                                servcmd: "".concat(P.NAME.FD, ".").concat(wn.DEL_FD_APPLICATION)
                            }),
                            body: {
                                fromAccount: "",
                                type: "",
                                userIDList: void 0
                            },
                            keyMap: {
                                req: {
                                    type: "PendencyType",
                                    userIDList: "To_Account"
                                },
                                res: {
                                    ResultItem: "resultList"
                                }
                            }
                        }), this._map.set(wn.REPORT_FD_APPLICATION, {
                            head: t(t({}, e), {}, {
                                servcmd: "".concat(P.NAME.FD, ".").concat(wn.REPORT_FD_APPLICATION)
                            }),
                            body: {
                                fromAccount: "",
                                latestTimeStamp: ""
                            },
                            keyMap: {
                                req: {
                                    latestTimeStamp: "LatestPendencyTimeStamp"
                                }
                            }
                        }), this._map.set(wn.CREATE_FD_GRP, {
                            head: t(t({}, e), {}, {
                                servcmd: "".concat(P.NAME.FD, ".").concat(wn.CREATE_FD_GRP)
                            }),
                            body: {
                                fromAccount: "",
                                groupName: void 0,
                                userIDList: void 0
                            },
                            keyMap: {
                                req: {
                                    groupName: "GroupName",
                                    userIDList: "To_Account"
                                },
                                res: {
                                    ResultItem: "resultList"
                                }
                            }
                        }), this._map.set(wn.DEL_FD_GRP, {
                            head: t(t({}, e), {}, {
                                servcmd: "".concat(P.NAME.FD, ".").concat(wn.DEL_FD_GRP)
                            }),
                            body: {
                                fromAccount: "",
                                nameList: void 0
                            },
                            keyMap: {
                                req: {
                                    nameList: "GroupName"
                                }
                            }
                        }), this._map.set(wn.GET_FD_GRP_LIST, {
                            head: t(t({}, e), {}, {
                                servcmd: "".concat(P.NAME.FD, ".").concat(wn.GET_FD_GRP_LIST)
                            }),
                            body: {
                                fromAccount: "",
                                lastSequence: 0,
                                needFriend: "Need_Friend_Type_Yes"
                            },
                            keyMap: {
                                res: {
                                    ResultItem: "resultList",
                                    GroupName: "name",
                                    FriendNumber: "friendCount",
                                    To_Account: "userIDList"
                                }
                            }
                        }), this._map.set(wn.UPDATE_FD_GRP, {
                            head: t(t({}, e), {}, {
                                servcmd: "".concat(P.NAME.FD, ".").concat(wn.UPDATE_FD_GRP)
                            }),
                            body: {
                                fromAccount: "",
                                oldName: "",
                                newName: void 0,
                                updateGroupItem: void 0
                            },
                            keyMap: {
                                req: {
                                    oldName: "GroupOldName",
                                    newName: "GroupNewName"
                                },
                                res: {
                                    UpdateType: "type",
                                    ResultItem: "resultList"
                                }
                            }
                        }), this._map.set(wn.GET_GRP_LIST, {
                            head: t(t({}, e), {}, {
                                servcmd: "".concat(P.NAME.GRP, ".").concat(wn.GET_GRP_LIST)
                            }),
                            body: {
                                memberAccount: "",
                                limit: void 0,
                                offset: void 0,
                                groupType: void 0,
                                responseFilter: {
                                    groupBaseInfoFilter: void 0,
                                    selfInfoFilter: void 0
                                },
                                isSupportTopic: 0,
                                needAppDefineData: 1
                            },
                            keyMap: {
                                req: {
                                    memberAccount: "Member_Account"
                                },
                                res: {
                                    GroupIdList: "groups",
                                    MsgSeq: "readedSequence",
                                    LastRecallTime: "_lastRevokedTime",
                                    AppDefinedData: "groupCustomField"
                                }
                            }
                        }), this._map.set(wn.GET_GRP_PROFILE, {
                            head: t(t({}, e), {}, {
                                servcmd: "".concat(P.NAME.GRP, ".").concat(wn.GET_GRP_PROFILE)
                            }),
                            body: {
                                groupIDList: void 0,
                                responseFilter: {
                                    groupBaseInfoFilter: void 0,
                                    groupCustomFieldFilter: void 0,
                                    memberInfoFilter: void 0,
                                    memberCustomFieldFilter: void 0
                                }
                            },
                            keyMap: {
                                req: {
                                    groupIDList: "GroupIdList",
                                    groupCustomField: "AppDefinedData",
                                    memberCustomField: "AppMemberDefinedData",
                                    groupCustomFieldFilter: "AppDefinedDataFilter_Group",
                                    memberCustomFieldFilter: "AppDefinedDataFilter_GroupMember"
                                },
                                res: {
                                    GroupIdList: "groups",
                                    AppDefinedData: "groupCustomField",
                                    AppMemberDefinedData: "memberCustomField",
                                    AppDefinedDataFilter_Group: "groupCustomFieldFilter",
                                    AppDefinedDataFilter_GroupMember: "memberCustomFieldFilter",
                                    InfoSeq: "infoSequence",
                                    MemberList: "members",
                                    GroupInfo: "groups",
                                    ShutUpUntil: "muteUntil",
                                    ShutUpAllMember: "muteAllMembers"
                                }
                            }
                        }), this._map.set(wn.CREATE_GRP, {
                            head: t(t({}, e), {}, {
                                servcmd: "".concat(P.NAME.GRP, ".").concat(wn.CREATE_GRP)
                            }),
                            body: {
                                type: void 0,
                                name: void 0,
                                groupID: void 0,
                                ownerID: void 0,
                                introduction: void 0,
                                notification: void 0,
                                maxMemberNum: void 0,
                                joinOption: void 0,
                                memberList: void 0,
                                groupCustomField: void 0,
                                memberCustomField: void 0,
                                webPushFlag: 1,
                                avatar: "",
                                isSupportTopic: void 0,
                                inviteOption: void 0
                            },
                            keyMap: {
                                req: {
                                    ownerID: "Owner_Account",
                                    userID: "Member_Account",
                                    avatar: "FaceUrl",
                                    maxMemberNum: "MaxMemberCount",
                                    joinOption: "ApplyJoinOption",
                                    groupCustomField: "AppDefinedData",
                                    memberCustomField: "AppMemberDefinedData",
                                    inviteOption: "InviteJoinOption"
                                },
                                res: {
                                    HugeGroupFlag: "avChatRoomFlag",
                                    OverJoinedGroupLimit_Account: "overLimitUserIDList"
                                }
                            }
                        }), this._map.set(wn.DISMISS_GRP, {
                            head: t(t({}, e), {}, {
                                servcmd: "".concat(P.NAME.GRP, ".").concat(wn.DISMISS_GRP)
                            }),
                            body: {
                                groupID: void 0
                            }
                        }), this._map.set(wn.UPDATE_GRP_PROFILE, {
                            head: t(t({}, e), {}, {
                                servcmd: "".concat(P.NAME.GRP, ".").concat(wn.UPDATE_GRP_PROFILE)
                            }),
                            body: {
                                groupID: void 0,
                                name: void 0,
                                introduction: void 0,
                                notification: void 0,
                                avatar: void 0,
                                joinOption: void 0,
                                groupCustomField: void 0,
                                muteAllMembers: void 0,
                                inviteOption: void 0
                            },
                            keyMap: {
                                req: {
                                    groupCustomField: "AppDefinedData",
                                    muteAllMembers: "ShutUpAllMember",
                                    joinOption: "ApplyJoinOption",
                                    avatar: "FaceUrl",
                                    inviteOption: "InviteJoinOption"
                                },
                                res: {
                                    AppDefinedData: "groupCustomField",
                                    ShutUpAllMember: "muteAllMembers"
                                }
                            }
                        }), this._map.set(wn.APPLY_JOIN_GRP, {
                            head: t(t({}, e), {}, {
                                servcmd: "".concat(P.NAME.GRP, ".").concat(wn.APPLY_JOIN_GRP)
                            }),
                            body: {
                                groupID: void 0,
                                applyMessage: void 0,
                                userDefinedField: void 0,
                                webPushFlag: 1,
                                historyMessageFlag: void 0
                            },
                            keyMap: {
                                req: {
                                    applyMessage: "ApplyMsg",
                                    historyMessageFlag: "HugeGroupHistoryMsgFlag"
                                },
                                res: {
                                    HugeGroupFlag: "avChatRoomFlag",
                                    AVChatRoomKey: "avChatRoomKey",
                                    RspMsgList: "messageList",
                                    ToGroupId: "to"
                                }
                            }
                        }), this._map.set(wn.APPLY_JOIN_GRP_NOAUTH, (e.a2, e.tinyid, {
                            head: t(t({}, _(e, ds)), {}, {
                                servcmd: "".concat(P.NAME.BIG_GRP_NO_AUTH, ".").concat(wn.APPLY_JOIN_GRP)
                            }),
                            body: {
                                groupID: void 0,
                                applyMessage: void 0,
                                userDefinedField: void 0,
                                webPushFlag: 1
                            },
                            keyMap: {
                                req: {
                                    applyMessage: "ApplyMsg"
                                },
                                res: {
                                    HugeGroupFlag: "avChatRoomFlag"
                                }
                            }
                        })), this._map.set(wn.QUIT_GRP, {
                            head: t(t({}, e), {}, {
                                servcmd: "".concat(P.NAME.GRP, ".").concat(wn.QUIT_GRP)
                            }),
                            body: {
                                groupID: void 0
                            }
                        }), this._map.set(wn.SEARCH_GRP, {
                            head: t(t({}, e), {}, {
                                servcmd: "".concat(P.NAME.GRP, ".").concat(wn.SEARCH_GRP)
                            }),
                            body: {
                                groupIDList: void 0,
                                responseFilter: {
                                    groupBasePublicInfoFilter: ["Type", "Name", "Introduction", "Notification", "FaceUrl", "CreateTime", "Owner_Account", "LastInfoTime", "LastMsgTime", "NextMsgSeq", "MemberNum", "MaxMemberNum", "ApplyJoinOption", "InviteJoinOption"]
                                }
                            }
                        }), this._map.set(wn.CHANGE_GRP_OWNER, {
                            head: t(t({}, e), {}, {
                                servcmd: "".concat(P.NAME.GRP, ".").concat(wn.CHANGE_GRP_OWNER)
                            }),
                            body: {
                                groupID: void 0,
                                newOwnerID: void 0
                            },
                            keyMap: {
                                req: {
                                    newOwnerID: "NewOwner_Account"
                                }
                            }
                        }), this._map.set(wn.HANDLE_GRP_APPLICATION, {
                            head: t(t({}, e), {}, {
                                servcmd: "".concat(P.NAME.GRP, ".").concat(wn.HANDLE_GRP_APPLICATION)
                            }),
                            body: {
                                groupID: void 0,
                                applicant: void 0,
                                handleAction: void 0,
                                handleMessage: void 0,
                                authentication: void 0,
                                messageKey: void 0,
                                userDefinedField: void 0
                            },
                            keyMap: {
                                req: {
                                    applicant: "Applicant_Account",
                                    handleAction: "HandleMsg",
                                    handleMessage: "ApprovalMsg",
                                    messageKey: "MsgKey"
                                }
                            }
                        }), this._map.set(wn.HANDLE_INVITE_JOIN_GRP, {
                            head: t(t({}, e), {}, {
                                servcmd: "".concat(P.NAME.GRP, ".").concat(wn.HANDLE_INVITE_JOIN_GRP)
                            }),
                            body: {
                                groupID: void 0,
                                applicant: void 0,
                                invitee: void 0,
                                handleAction: void 0,
                                handleMessage: void 0,
                                authentication: void 0,
                                userDefinedField: void 0
                            },
                            keyMap: {
                                req: {
                                    applicant: "Applicant_Account",
                                    invitee: "Invited_Account",
                                    handleAction: "HandleMsg",
                                    handleMessage: "ApprovalMsg"
                                }
                            }
                        }), this._map.set(wn.HANDLE_GRP_INVITATION, {
                            head: t(t({}, e), {}, {
                                servcmd: "".concat(P.NAME.GRP, ".").concat(wn.HANDLE_GRP_INVITATION)
                            }),
                            body: {
                                groupID: void 0,
                                inviter: void 0,
                                handleAction: void 0,
                                handleMessage: void 0,
                                authentication: void 0,
                                messageKey: void 0,
                                userDefinedField: void 0
                            },
                            keyMap: {
                                req: {
                                    inviter: "Inviter_Account",
                                    handleAction: "HandleMsg",
                                    handleMessage: "ApprovalMsg",
                                    messageKey: "MsgKey"
                                }
                            }
                        }), this._map.set(wn.GET_GRP_PENDENCY, {
                            head: t(t({}, e), {}, {
                                servcmd: "".concat(P.NAME.GRP, ".").concat(wn.GET_GRP_PENDENCY)
                            }),
                            body: {
                                startTime: void 0,
                                limit: void 0,
                                handleAccount: void 0
                            },
                            keyMap: {
                                req: {
                                    handleAccount: "Handle_Account"
                                },
                                res: {
                                    To_Account: "userID",
                                    ApplyInviteMsg: "note"
                                }
                            }
                        }), this._map.set(wn.DEL_GRP_SYSTEM_NOTICE, {
                            head: t(t({}, e), {}, {
                                servcmd: "".concat(P.NAME.OPEN_IM, ".").concat(wn.DEL_GRP_SYSTEM_NOTICE)
                            }),
                            body: {
                                messageListToDelete: void 0
                            },
                            keyMap: {
                                req: {
                                    messageListToDelete: "DelMsgList",
                                    messageSeq: "MsgSeq",
                                    messageRandom: "MsgRandom"
                                }
                            }
                        }), this._map.set(wn.AV_POLLING, {
                            head: t(t({}, e), {}, {
                                servcmd: "".concat(P.NAME.BIG_GRP_POLLING, ".").concat(wn.AV_POLLING)
                            }),
                            body: {
                                USP: 1,
                                startSeq: 1,
                                startBroadcastSeq: void 0,
                                holdTime: 90,
                                key: void 0,
                                simplifiedMessage: void 0
                            },
                            keyMap: {
                                req: {
                                    USP: "USP"
                                },
                                res: {
                                    ToGroupId: "groupID",
                                    RspBroadcastMsgList: "broadcastMessageList",
                                    IsSystemMsg: "isSystemMessage"
                                }
                            }
                        }), this._map.set(wn.AV_NOAUTH_POLLING, (e.a2, e.tinyid, {
                            head: t(t({}, _(e, ps)), {}, {
                                servcmd: "".concat(P.NAME.BIG_GRP_POLLING_NO_AUTH, ".").concat(wn.AV_POLLING)
                            }),
                            body: {
                                USP: 1,
                                startSeq: 1,
                                holdTime: 90,
                                key: void 0,
                                simplifiedMessage: void 0
                            },
                            keyMap: {
                                req: {
                                    USP: "USP"
                                },
                                res: {
                                    ToGroupId: "groupID",
                                    RspBroadcastMsgList: "broadcastMessageList",
                                    IsSystemMsg: "isSystemMessage"
                                }
                            }
                        })), this._map.set(wn.GET_ONLINE_MBR_NUM, {
                            head: t(t({}, e), {}, {
                                servcmd: "".concat(P.NAME.GRP, ".").concat(wn.GET_ONLINE_MBR_NUM)
                            }),
                            body: {
                                groupID: void 0
                            },
                            keyMap: {
                                res: {
                                    OnlineMemberNum: "memberCount"
                                }
                            }
                        }), this._map.set(wn.SET_GRP_ATTR, {
                            head: t(t({}, e), {}, {
                                servcmd: "".concat(P.NAME.GRP, ".").concat(wn.SET_GRP_ATTR)
                            }),
                            body: {
                                groupID: void 0,
                                groupAttributeList: void 0,
                                mainSequence: void 0,
                                avChatRoomKey: void 0,
                                attributeControl: ["RaceConflict"]
                            },
                            keyMap: {
                                req: {
                                    key: "key",
                                    value: "value"
                                }
                            }
                        }), this._map.set(wn.MODIFY_GRP_ATTR, {
                            head: t(t({}, e), {}, {
                                servcmd: "".concat(P.NAME.GRP, ".").concat(wn.MODIFY_GRP_ATTR)
                            }),
                            body: {
                                groupID: void 0,
                                groupAttributeList: void 0,
                                mainSequence: void 0,
                                avChatRoomKey: void 0,
                                attributeControl: ["RaceConflict"]
                            },
                            keyMap: {
                                req: {
                                    key: "key",
                                    value: "value"
                                }
                            }
                        }), this._map.set(wn.DEL_GRP_ATTR, {
                            head: t(t({}, e), {}, {
                                servcmd: "".concat(P.NAME.GRP, ".").concat(wn.DEL_GRP_ATTR)
                            }),
                            body: {
                                groupID: void 0,
                                groupAttributeList: void 0,
                                mainSequence: void 0,
                                avChatRoomKey: void 0,
                                attributeControl: ["RaceConflict"]
                            },
                            keyMap: {
                                req: {
                                    key: "key"
                                }
                            }
                        }), this._map.set(wn.CLEAR_GRP_ATTR, {
                            head: t(t({}, e), {}, {
                                servcmd: "".concat(P.NAME.GRP, ".").concat(wn.CLEAR_GRP_ATTR)
                            }),
                            body: {
                                groupID: void 0,
                                mainSequence: void 0,
                                avChatRoomKey: void 0,
                                attributeControl: ["RaceConflict"]
                            }
                        }), this._map.set(wn.GET_GRP_ATTR, {
                            head: t(t({}, e), {}, {
                                servcmd: "".concat(P.NAME.GRP_ATTR, ".").concat(wn.GET_GRP_ATTR)
                            }),
                            body: {
                                groupID: void 0,
                                avChatRoomKey: void 0,
                                groupType: 1
                            },
                            keyMap: {
                                req: {
                                    avChatRoomKey: "Key",
                                    groupType: "GroupType"
                                }
                            }
                        }), this._map.set(wn.GET_GRP_NOTIFY, {
                            head: t(t({}, e), {}, {
                                servcmd: "".concat(P.NAME.GRP, ".").concat(wn.GET_GRP_NOTIFY)
                            }),
                            body: {
                                notifyReqList: []
                            },
                            keyMap: {
                                req: {
                                    notifyReqList: "NotifyReqList"
                                },
                                res: {
                                    NextMsgTime: "nextRevokedTime",
                                    NotifyMsgList: "notifyList",
                                    NotifyRspList: "notifyRspList"
                                }
                            }
                        }), this._map.set(wn.UPDATE_GRP_COUNTER, {
                            head: t(t({}, e), {}, {
                                servcmd: "".concat(P.NAME.GRP, ".").concat(wn.UPDATE_GRP_COUNTER)
                            }),
                            body: {
                                groupID: void 0,
                                counterList: void 0,
                                avChatRoomKey: void 0,
                                mode: void 0
                            },
                            keyMap: {
                                req: {
                                    counterList: "GroupCounter"
                                }
                            }
                        }), this._map.set(wn.GET_GRP_COUNTER, {
                            head: t(t({}, e), {}, {
                                servcmd: "".concat(P.NAME.GRP, ".").concat(wn.GET_GRP_COUNTER)
                            }),
                            body: {
                                groupID: void 0,
                                keyList: [],
                                avChatRoomKey: void 0
                            },
                            keyMap: {
                                req: {
                                    keyList: "GroupCounterKeys"
                                }
                            }
                        }), this._map.set(wn.CREATE_TOPIC, {
                            head: t(t({}, e), {}, {
                                servcmd: "".concat(P.NAME.GRP_COMMUNITY, ".").concat(wn.CREATE_TOPIC)
                            }),
                            body: {
                                groupID: void 0,
                                topicName: void 0,
                                avatar: void 0,
                                customData: void 0,
                                topicID: void 0,
                                notification: void 0,
                                introduction: void 0
                            },
                            keyMap: {
                                req: {
                                    avatar: "FaceUrl"
                                }
                            }
                        }), this._map.set(wn.DEL_TOPIC, {
                            head: t(t({}, e), {}, {
                                servcmd: "".concat(P.NAME.GRP_COMMUNITY, ".").concat(wn.DEL_TOPIC)
                            }),
                            body: {
                                groupID: void 0,
                                topicIDList: void 0
                            },
                            keyMap: {
                                req: {
                                    topicIDList: "TopicIdList"
                                },
                                res: {
                                    DestroyResultItem: "resultList"
                                }
                            }
                        }), this._map.set(wn.UPDATE_TOPIC_PROFILE, {
                            head: t(t({}, e), {}, {
                                servcmd: "".concat(P.NAME.GRP_COMMUNITY, ".").concat(wn.UPDATE_TOPIC_PROFILE)
                            }),
                            body: {
                                groupID: void 0,
                                topicID: void 0,
                                avatar: void 0,
                                customData: void 0,
                                notification: void 0,
                                introduction: void 0,
                                muteAllMembers: void 0,
                                topicName: void 0
                            },
                            keyMap: {
                                req: {
                                    avatar: "FaceUrl",
                                    muteAllMembers: "ShutUpAllMember"
                                }
                            }
                        }), this._map.set(wn.GET_TOPIC_LIST, {
                            head: t(t({}, e), {}, {
                                servcmd: "".concat(P.NAME.GRP_COMMUNITY, ".").concat(wn.GET_TOPIC_LIST)
                            }),
                            body: {
                                groupID: void 0,
                                topicIDList: void 0,
                                MemberInfoFilter: ["NoUnreadSeqList"]
                            },
                            keyMap: {
                                req: {
                                    topicIDList: "TopicIdList"
                                },
                                res: {
                                    TopicAndSelfInfo: "topicInfoList",
                                    TopicInfo: "topic",
                                    GroupID: "groupID",
                                    ShutUpTime: "muteTime",
                                    ShutUpAllFlag: "muteAllMembers",
                                    LastMsgTime: "lastMessageTime",
                                    MsgSeq: "readedSequence",
                                    LastMsgSeq: "sequence"
                                }
                            }
                        }), this._map.set(wn.GET_GRP_MBR_LIST, {
                            head: t(t({}, e), {}, {
                                servcmd: "".concat(P.NAME.GRP, ".").concat(wn.GET_GRP_MBR_LIST)
                            }),
                            body: {
                                groupID: void 0,
                                limit: 0,
                                offset: void 0,
                                next: void 0,
                                memberRoleFilter: void 0,
                                memberInfoFilter: void 0,
                                memberCustomFieldFilter: void 0
                            },
                            keyMap: {
                                req: {
                                    memberCustomFieldFilter: "AppDefinedDataFilter_GroupMember"
                                },
                                res: {
                                    AppMemberDefinedData: "memberCustomField",
                                    AppDefinedDataFilter_GroupMember: "memberCustomFieldFilter",
                                    MemberList: "members",
                                    ShutUpUntil: "muteUntil"
                                }
                            }
                        }), this._map.set(wn.GET_AV_MBR_LIST, {
                            head: t(t({}, e), {}, {
                                servcmd: "".concat(P.NAME.GRP_AV, ".").concat(wn.GET_AV_MBR_LIST)
                            }),
                            body: {
                                groupID: void 0,
                                offset: void 0,
                                filter: void 0
                            },
                            keyMap: {
                                req: {
                                    offset: "Timestamp",
                                    filter: "Mark"
                                },
                                res: {
                                    NextTimestamp: "offset"
                                }
                            }
                        }), this._map.set(wn.GET_GRP_MBR_PROFILE, {
                            head: t(t({}, e), {}, {
                                servcmd: "".concat(P.NAME.GRP, ".").concat(wn.GET_GRP_MBR_PROFILE)
                            }),
                            body: {
                                groupID: void 0,
                                userIDList: void 0,
                                memberInfoFilter: void 0,
                                memberCustomFieldFilter: void 0
                            },
                            keyMap: {
                                req: {
                                    userIDList: "Member_List_Account",
                                    memberCustomFieldFilter: "AppDefinedDataFilter_GroupMember"
                                },
                                res: {
                                    MemberList: "members",
                                    ShutUpUntil: "muteUntil",
                                    AppDefinedDataFilter_GroupMember: "memberCustomFieldFilter",
                                    AppMemberDefinedData: "memberCustomField"
                                }
                            }
                        }), this._map.set(wn.ADD_GRP_MBR, {
                            head: t(t({}, e), {}, {
                                servcmd: "".concat(P.NAME.GRP, ".").concat(wn.ADD_GRP_MBR)
                            }),
                            body: {
                                groupID: void 0,
                                silence: void 0,
                                userIDList: void 0
                            },
                            keyMap: {
                                req: {
                                    userID: "Member_Account",
                                    userIDList: "MemberList"
                                },
                                res: {
                                    MemberList: "members"
                                }
                            }
                        }), this._map.set(wn.DEL_GRP_MBR, {
                            head: t(t({}, e), {}, {
                                servcmd: "".concat(P.NAME.GRP, ".").concat(wn.DEL_GRP_MBR)
                            }),
                            body: {
                                groupID: void 0,
                                userIDList: void 0,
                                reason: void 0
                            },
                            keyMap: {
                                req: {
                                    userIDList: "MemberToDel_Account"
                                }
                            }
                        }), this._map.set(wn.BAN_AV_MBR, {
                            head: t(t({}, e), {}, {
                                servcmd: "".concat(P.NAME.GRP, ".").concat(wn.BAN_AV_MBR)
                            }),
                            body: {
                                groupID: void 0,
                                userIDList: void 0,
                                duration: void 0,
                                reason: ""
                            },
                            keyMap: {
                                req: {
                                    userIDList: "Members_Account",
                                    duration: "Duration",
                                    reason: "Description"
                                }
                            }
                        }), this._map.set(wn.MODIFY_GRP_MBR_INFO, {
                            head: t(t({}, e), {}, {
                                servcmd: "".concat(P.NAME.GRP, ".").concat(wn.MODIFY_GRP_MBR_INFO)
                            }),
                            body: {
                                groupID: void 0,
                                topicID: void 0,
                                userID: void 0,
                                messageRemindType: void 0,
                                nameCard: void 0,
                                role: void 0,
                                memberCustomField: void 0,
                                muteTime: void 0
                            },
                            keyMap: {
                                req: {
                                    userID: "Member_Account",
                                    memberCustomField: "AppMemberDefinedData",
                                    muteTime: "ShutUpTime",
                                    messageRemindType: "MsgFlag"
                                }
                            }
                        }), this._map.set(wn.MARK_AV_MBR_INFO, {
                            head: t(t({}, e), {}, {
                                servcmd: "".concat(P.NAME.GRP_AV, ".").concat(wn.MARK_AV_MBR_INFO)
                            }),
                            body: {
                                groupID: void 0,
                                operationType: 1,
                                memberList: []
                            },
                            keyMap: {
                                req: {
                                    operationType: "CommandType",
                                    memberList: "MemberList",
                                    markType: "Marks",
                                    userID: "Member_Account"
                                },
                                res: {
                                    CommandType: "operationType",
                                    Marks: "markType",
                                    Member_Account: "userID"
                                }
                            }
                        }), this._map.set(wn.SSO_STAT, {
                            head: t(t({}, o), {}, {
                                servcmd: "".concat(P.NAME.IM_OPEN_STAT, ".").concat(wn.SSO_STAT)
                            }),
                            body: {
                                header: {},
                                event: [],
                                quality: []
                            },
                            keyMap: {
                                req: {
                                    SDKType: "sdk_type",
                                    SDKVersion: "sdk_version",
                                    deviceType: "device_type",
                                    platform: "platform",
                                    instanceID: "instance_id",
                                    traceID: "trace_id",
                                    SDKAppID: "sdk_app_id",
                                    userID: "user_id",
                                    tinyID: "tiny_id",
                                    extension: "extension",
                                    timestamp: "timestamp",
                                    networkType: "network_type",
                                    eventType: "event_type",
                                    code: "error_code",
                                    message: "error_message",
                                    moreMessage: "more_message",
                                    duplicate: "duplicate",
                                    costTime: "cost_time",
                                    level: "level",
                                    qualityType: "quality_type",
                                    reportIndex: "report_index",
                                    wholePeriod: "whole_period",
                                    totalCount: "total_count",
                                    rttCount: "success_count_business",
                                    successRateOfRequest: "percent_business",
                                    countLessThan1Second: "success_count_business",
                                    percentOfCountLessThan1Second: "percent_business",
                                    countLessThan3Second: "success_count_platform",
                                    percentOfCountLessThan3Second: "percent_platform",
                                    successCountOfBusiness: "success_count_business",
                                    successRateOfBusiness: "percent_business",
                                    successCountOfPlatform: "success_count_platform",
                                    successRateOfPlatform: "percent_platform",
                                    successCountOfMessageReceived: "success_count_business",
                                    successRateOfMessageReceived: "percent_business",
                                    avgRTT: "average_value",
                                    avgDelay: "average_value",
                                    avgValue: "average_value",
                                    uiPlatform: "ui_platform"
                                }
                            }
                        }), this._map.set(wn.PING, {
                            head: t(t({}, e), {}, {
                                servcmd: "".concat(P.NAME.HEARTBEAT, ".").concat(wn.PING)
                            }),
                            body: {}
                        }), this._map.set(wn.MSG_PUSH, {
                            head: t(t({}, e), {}, {
                                servcmd: "".concat(P.NAME.IM_OPEN_PUSH, ".").concat(wn.MSG_PUSH)
                            }),
                            body: {},
                            keyMap: {
                                res: {
                                    C2cMsgArray: "C2CMessageArray",
                                    GroupMsgArray: "groupMessageArray",
                                    GroupTips: "groupTips",
                                    C2cNotifyMsgArray: "C2CNotifyMessageArray",
                                    C2cMsgInfo: "C2CReadReceiptArray",
                                    ClientSeq: "clientSequence",
                                    MsgPriority: "priority",
                                    NoticeSeq: "noticeSequence",
                                    MsgContent: "content",
                                    MsgType: "type",
                                    MsgBody: "elements",
                                    ToGroupId: "to",
                                    Desc: "description",
                                    Ext: "extension",
                                    IsSyncMsg: "isSyncMessage",
                                    Flag: "needSync",
                                    NeedAck: "needAck",
                                    PendencyAdd_Account: "userID",
                                    ProfileImNick: "nick",
                                    PendencyType: "applicationType",
                                    C2CReadAllMsg: "readAllC2CMessage",
                                    IsNeedReadReceipt: "needReadReceipt",
                                    Status: "statusType",
                                    CurrFollowType: "followType",
                                    Follow_Account: "userID"
                                }
                            }
                        }), this._map.set(wn.MULTI_MSG_PUSH, {
                            head: t(t({}, e), {}, {
                                servcmd: "".concat(P.NAME.IM_OPEN_PUSH, ".").concat(wn.MULTI_MSG_PUSH)
                            }),
                            body: {},
                            keyMap: {
                                res: {
                                    GroupMsgArray: "groupMessageArray",
                                    GroupTips: "groupTips",
                                    ClientSeq: "clientSequence",
                                    MsgPriority: "priority",
                                    NoticeSeq: "noticeSequence",
                                    MsgContent: "content",
                                    MsgType: "type",
                                    MsgBody: "elements",
                                    ToGroupId: "to",
                                    Desc: "description",
                                    Ext: "extension",
                                    IsSyncMsg: "isSyncMessage",
                                    Flag: "needSync",
                                    NeedAck: "needAck",
                                    PendencyType: "applicationType"
                                }
                            }
                        }), this._map.set(wn.MSG_PUSH_ACK, {
                            head: t(t({}, e), {}, {
                                servcmd: "".concat(P.NAME.OPEN_IM, ".").concat(wn.MSG_PUSH_ACK)
                            }),
                            body: {
                                sessionData: void 0
                            },
                            keyMap: {
                                req: {
                                    sessionData: "SessionData"
                                }
                            }
                        }), this._map.set(wn.STATUS_FORCE_OFFLINE, {
                            head: t(t({}, e), {}, {
                                servcmd: "".concat(P.NAME.IM_OPEN_STATUS, ".").concat(wn.STATUS_FORCE_OFFLINE)
                            }),
                            body: {},
                            keyMap: {
                                res: {
                                    C2cNotifyMsgArray: "C2CNotifyMessageArray",
                                    NoticeSeq: "noticeSequence",
                                    KickoutMsgNotify: "kickoutMsgNotify",
                                    NewInstInfo: "newInstanceInfo"
                                }
                            }
                        }), this._map.set(wn.DOWNLOAD_MERGER_MSG, {
                            head: t(t({}, e), {}, {
                                servcmd: "".concat(P.NAME.IM_LONG_MSG, ".").concat(wn.DOWNLOAD_MERGER_MSG)
                            }),
                            body: {
                                downloadKey: ""
                            },
                            keyMap: {
                                res: {
                                    Data: "data",
                                    Desc: "description",
                                    Ext: "extension",
                                    Download_Flag: "downloadFlag",
                                    ThumbUUID: "thumbUUID",
                                    VideoUUID: "videoUUID"
                                }
                            }
                        }), this._map.set(wn.UPLOAD_MERGER_MSG, {
                            head: t(t({}, e), {}, {
                                servcmd: "".concat(P.NAME.IM_LONG_MSG, ".").concat(wn.UPLOAD_MERGER_MSG)
                            }),
                            body: {
                                messageList: []
                            },
                            keyMap: {
                                req: {
                                    fromAccount: "From_Account",
                                    toAccount: "To_Account",
                                    msgTimeStamp: "MsgTimeStamp",
                                    msgSeq: "MsgSeq",
                                    msgRandom: "MsgRandom",
                                    msgBody: "MsgBody",
                                    type: "MsgType",
                                    content: "MsgContent",
                                    data: "Data",
                                    description: "Desc",
                                    extension: "Ext",
                                    sizeType: "Type",
                                    uuid: "UUID",
                                    url: "",
                                    imageUrl: "URL",
                                    fileUrl: "Url",
                                    remoteAudioUrl: "Url",
                                    remoteVideoUrl: "VideoUrl",
                                    thumbUUID: "ThumbUUID",
                                    videoUUID: "VideoUUID",
                                    videoUrl: "",
                                    downloadFlag: "Download_Flag",
                                    from: "From_Account",
                                    time: "MsgTimeStamp",
                                    messageRandom: "MsgRandom",
                                    messageSequence: "MsgSeq",
                                    elements: "MsgBody",
                                    clientSequence: "ClientSeq",
                                    payload: "MsgContent",
                                    messageList: "MsgList",
                                    messageNumber: "MsgNum",
                                    abstractList: "AbstractList",
                                    messageBody: "MsgBody"
                                }
                            }
                        }), this._map.set(wn.FOLLOW, {
                            head: t(t({}, e), {}, {
                                servcmd: "".concat(P.NAME.FOLLOW, ".").concat(wn.FOLLOW)
                            }),
                            body: {
                                fromAccount: "",
                                userIDList: []
                            },
                            keyMap: {
                                req: {
                                    userIDList: "FollowItem"
                                },
                                res: {
                                    ResultItem: "resultList",
                                    To_Account: "userID"
                                }
                            }
                        }), this._map.set(wn.UNFOLLOW, {
                            head: t(t({}, e), {}, {
                                servcmd: "".concat(P.NAME.FOLLOW, ".").concat(wn.UNFOLLOW)
                            }),
                            body: {
                                fromAccount: "",
                                userIDList: []
                            },
                            keyMap: {
                                req: {
                                    userIDList: "To_Account"
                                },
                                res: {
                                    ResultItem: "resultList",
                                    To_Account: "userID"
                                }
                            }
                        }), this._map.set(wn.GET_FOLLOW_INFO, {
                            head: t(t({}, e), {}, {
                                servcmd: "".concat(P.NAME.FOLLOW, ".").concat(wn.GET_FOLLOW_INFO)
                            }),
                            body: {
                                fromAccount: "",
                                userIDList: []
                            },
                            keyMap: {
                                req: {
                                    userIDList: "To_Account"
                                },
                                res: {
                                    FollowInfo: "followInfoList",
                                    To_Account: "userID",
                                    FollowerCount: "followersCount",
                                    FollowingCount: "followingCount",
                                    MutualFollowingCount: "mutualFollowersCount"
                                }
                            }
                        }), this._map.set(wn.GET_FOLLOW, {
                            head: t(t({}, e), {}, {
                                servcmd: "".concat(P.NAME.FOLLOW, ".").concat(wn.GET_FOLLOW)
                            }),
                            body: {
                                fromAccount: "",
                                type: 1,
                                nextCursor: "",
                                count: 500
                            },
                            keyMap: {
                                req: {
                                    type: "FollowType",
                                    nextCursor: "StartCursor",
                                    count: "WantNum"
                                },
                                res: {
                                    FollowItem: "resultList",
                                    To_Account: "userID",
                                    ProfileItem: "profileList"
                                }
                            }
                        }), this._map.set(wn.CHECK_FOLLOW_TYPE, {
                            head: t(t({}, e), {}, {
                                servcmd: "".concat(P.NAME.FOLLOW, ".").concat(wn.CHECK_FOLLOW_TYPE)
                            }),
                            body: {
                                fromAccount: "",
                                userIDList: []
                            },
                            keyMap: {
                                req: {
                                    userIDList: "To_Account"
                                },
                                res: {
                                    ResultItem: "resultList",
                                    To_Account: "userID"
                                }
                            }
                        }), this._map.set(wn.SET_TOKEN, {
                            head: t(t({}, e), {}, {
                                servcmd: "".concat(P.NAME.IM_OPEN_STATUS, ".").concat(wn.SET_TOKEN)
                            }),
                            body: {
                                tokenID: "",
                                pushMsg: 0,
                                sdkAppID: 0,
                                businessID: "",
                                deviceBrand: "",
                                deviceToken: "",
                                isTpns: 0,
                                isWebUniapp: 0,
                                notificationStatus: 0,
                                deviceModel: "",
                                systemVersion: "",
                                pushVersion: ""
                            },
                            keyMap: {
                                req: {
                                    tokenID: "TokenID",
                                    pushMsg: "PushMsg",
                                    sdkAppID: "EnterVersion",
                                    businessID: "BusiID",
                                    deviceBrand: "InstType",
                                    deviceToken: "VarToken",
                                    isTpns: "IsTpns",
                                    notificationStatus: "NotificationStatus",
                                    deviceModel: "DeviceModel",
                                    systemVersion: "SystemVersion",
                                    pushVersion: "PushPluginVersion"
                                }
                            }
                        }), this._map.set(wn.STAT_FOREGROUND, {
                            head: t(t({}, e), {}, {
                                servcmd: "".concat(P.NAME.IM_OPEN_STATUS, ".").concat(wn.STAT_FOREGROUND)
                            }),
                            body: {
                                isWebUniapp: 0
                            }
                        }), this._map.set(wn.STAT_BACKGROUND, {
                            head: t(t({}, e), {}, {
                                servcmd: "".concat(P.NAME.IM_OPEN_STATUS, ".").concat(wn.STAT_BACKGROUND)
                            }),
                            body: {
                                C2CUnread: 0,
                                GroupUnread: 0,
                                isWebUniapp: 0
                            },
                            keyMap: {
                                req: {
                                    c2cUnreadCount: "C2cUnread",
                                    groupUnreadCount: "GrpUnread"
                                }
                            }
                        }), this._map.set(wn.PUSH_REPORT, {
                            head: t(t({}, e), {}, {
                                servcmd: "".concat(P.NAME.OFFLINE_PUSH_REPORT, ".").concat(wn.PUSH_REPORT)
                            }),
                            body: {
                                eventList: []
                            },
                            keyMap: {
                                req: {
                                    eventList: "UinappPushEvents",
                                    type: "EventType",
                                    time: "EventTime",
                                    pushId: "ClickExt"
                                }
                            }
                        }), this._map.set(wn.SET_ALL_RECEIVE_MSG_OPT, {
                            head: t(t({}, e), {}, {
                                servcmd: "".concat(P.NAME.IM_MSG_LOGIC, ".").concat(wn.SET_ALL_RECEIVE_MSG_OPT)
                            }),
                            body: {
                                startTime: 0,
                                endTime: 0,
                                isRepeated: 0,
                                messageRemindType: 0
                            },
                            keyMap: {
                                req: {
                                    messageRemindType: "Level"
                                }
                            }
                        }), this._map.set(wn.GET_ALL_RECEIVE_MSG_OPT, {
                            head: t(t({}, e), {}, {
                                servcmd: "".concat(P.NAME.IM_MSG_LOGIC, ".").concat(wn.GET_ALL_RECEIVE_MSG_OPT)
                            }),
                            body: {
                                toAccount: void 0
                            }
                        })
                    }
                }, {
                    key: "has",
                    value: function(e) {
                        return this._map.has(e)
                    }
                }, {
                    key: "get",
                    value: function(e) {
                        return this._map.get(e)
                    }
                }, {
                    key: "update",
                    value: function() {
                        this._fillMap()
                    }
                }, {
                    key: "getKeyMap",
                    value: function(e) {
                        return this.has(e) ? this.get(e).keyMap || {} : (Oe.w("".concat(this._n, ".getKeyMap unknown P:").concat(e)), {})
                    }
                }, {
                    key: "getProtocolData",
                    value: function(e) {
                        var t = e.P,
                            n = e.data;
                        if (e = this.get(t), t = null, n) {
                            var o, i = this._simpleDeepCopy(e),
                                a = (i = this._updateService(n, i)).body,
                                s = Object.create(null);
                            for (o in a)
                                if (Object.prototype.hasOwnProperty.call(a, o)) {
                                    if (s[o] = a[o], void 0 === n[o]) continue;
                                    s[o] = n[o]
                                }
                            i.body = s, t = this._getUplinkData(i)
                        } else t = this._getUplinkData(e);
                        return t
                    }
                }, {
                    key: "_getUplinkData",
                    value: function(e) {
                        var t = Gt((e = this._dataCleaner(e)).head);
                        return t = function(e, t) {
                            var n = 0;
                            return function e(t, o) {
                                return 100 < ++n ? (n--, t) : Je(t) ? (i = t.map((function(t) {
                                    return We(t) ? e(t, o) : t
                                })), n--, i) : We(t) ? (a = t, s = function(e, t) {
                                    if (!Ze(t)) return !1;
                                    if (t !== Xa(t))
                                        for (var n = 0; n < Ba.ignoreKeyWord.length && !t.includes(Ba.ignoreKeyWord[n]); n++);
                                    var i;
                                    return ut(o[t]) ? "OPPOChannelID" === (i = t) ? i : i[0].toUpperCase() + Xa(i).slice(1) : o[t]
                                }, r = Object.create(null), Object.keys(a).forEach((function(e) {
                                    var t = s(a[e], e);
                                    t && (r[t] = a[e])
                                })), i = Lt(i = r, (function(t, n) {
                                    return Je(t) || We(t) ? e(t, o) : t
                                })), n--, i) : void 0;
                                var i, a, s, r
                            }(e, t)
                        }(e.body, this._getReqKeyMap(t)), e.body = t, e
                    }
                }, {
                    key: "_updateService",
                    value: function(e, t) {
                        var n, o, i = Gt(t.head);
                        return this._isFromGroupRequest(t) && (n = e.type, o = e.groupID, e = void 0 === (e = e.groupIDList) ? [] : e, ut(o = void 0 === o ? void 0 : o) && (o = e[0] || ""), yt({
                            type: n,
                            groupID: o
                        }) && (t.head.servcmd = "".concat(P.NAME.GRP_COMMUNITY, ".").concat(i))), t
                    }
                }, {
                    key: "_isFromGroupRequest",
                    value: function(e) {
                        return e.head.servcmd.includes(P.NAME.GRP) || e.head.servcmd.includes(P.NAME.GRP_ATTR)
                    }
                }, {
                    key: "_getReqKeyMap",
                    value: function(e) {
                        return e = this.getKeyMap(e), t(t({}, Ba.req), e.req)
                    }
                }, {
                    key: "_dataCleaner",
                    value: function(e) {
                        var t, n = Array.isArray(e) ? [] : Object.create(null);
                        for (t in e) Object.prototype.hasOwnProperty.call(e, t) && Ze(t) && null !== e[t] && void 0 !== e[t] && ("object" !== o(e[t]) ? n[t] = e[t] : n[t] = this._dataCleaner.bind(this)(e[t]));
                        return n
                    }
                }, {
                    key: "_simpleDeepCopy",
                    value: function(e) {
                        for (var t, n = Object.keys(e), o = {}, i = 0, a = n.length; i < a; i++) Je(e[t = n[i]]) ? o[t] = Array.from(e[t]) : We(e[t]) ? o[t] = this._simpleDeepCopy(e[t]) : o[t] = e[t];
                        return o
                    }
                }]), Cs), hs = [wn.MSG_PUSH_ACK], gs = (s(ys, [{
                    key: "_onC2CMsgArray",
                    value: function(e) {
                        var t = this._sessionM.get(6);
                        e.dataList.forEach((function(e) {
                            var t;
                            1 === e.isSyncMessage && (t = e.from, e.from = e.to, e.to = t)
                        })), 1 === e.needSync && this._sessionM.get(19).syncOnNeed(), t.onNewMessage({
                            dataList: e.dataList,
                            isInstantMessage: !0
                        })
                    }
                }, {
                    key: "_onC2CMsgModified",
                    value: function(e) {
                        this._sessionM.get(6).onMsgModified(e)
                    }
                }, {
                    key: "_onGroupMsgArray",
                    value: function(e) {
                        var t = this._sessionM.get(7);
                        t && t.onNewMessage({
                            event: e.event,
                            dataList: e.dataList,
                            isInstantMessage: !0
                        })
                    }
                }, {
                    key: "_onGroupMsgModified",
                    value: function(e) {
                        var t = this._sessionM.get(7);
                        t && t.onMsgModified(e)
                    }
                }, {
                    key: "_onGroupTips",
                    value: function(e) {
                        var t = this._sessionM.get(7);
                        if (t) {
                            var n = e.event,
                                o = e.dataList,
                                i = e.isInstantMessage,
                                a = void 0 === i || i,
                                s = e.isSyncingEnded;
                            switch (n) {
                                case 4:
                                case 6:
                                    t.onNewGroupTips({
                                        event: n,
                                        dataList: o
                                    });
                                    break;
                                case 5:
                                    for (var r = 0; r < o.length; r++)
                                        if (Je(o[r].elements.revokedInfos)) t.onMsgRevoked({
                                            dataList: o
                                        });
                                        else if (Je(o[r].elements.groupMessageReadNotice)) t.onMsgReadNotice({
                                        dataList: o
                                    });
                                    else {
                                        if (!Je(o[r].elements.readReceiptList)) {
                                            t.onNewGroupSystemNotice({
                                                dataList: o,
                                                isInstantMessage: a,
                                                isSyncingEnded: s
                                            });
                                            break
                                        }
                                        t.onReadReceiptList({
                                            dataList: o
                                        })
                                    }
                                    break;
                                case 12:
                                    this._sessionM.get(11).onNewGroupAtTips({
                                        dataList: o
                                    });
                                    break;
                                default:
                                    Oe.l("".concat(this._n, "._onGroupTips unknown event:").concat(n, " dataList:"), o)
                            }
                        }
                    }
                }, {
                    key: "_onC2CNotifyMsgArray",
                    value: function(e) {
                        var t, n = this,
                            o = e.dataList;
                        Je(o) && (t = this._sessionM.get(6), o.forEach((function(e) {
                            var i, a;
                            je(e) && (e.hasOwnProperty("kickoutMsgNotify") ? (i = (a = e.kickoutMsgNotify).kickType, a = void 0 === (a = a.newInstanceInfo) ? {} : a, 1 === i ? n._sessionM.onMultipleAccountKickedOut(a) : 2 === i ? n._sessionM.onMultipleDeviceKickedOut(a) : 3 === i && n._sessionM.onRestApiKickedOut(a)) : e.hasOwnProperty("c2cMessageRevokedNotify") ? t && t.onMsgRevoked({
                                dataList: o
                            }) : e.hasOwnProperty("c2cMessageReadReceipt") ? t && t.onMsgReadReceipt({
                                dataList: o
                            }) : e.hasOwnProperty("c2cMessageReadNotice") ? t && t.onMsgReadNotice({
                                dataList: o
                            }) : e.hasOwnProperty("muteNotificationsSync") && n._sessionM.get(11).onC2CMsgRemindTypeSynced({
                                dataList: o
                            }))
                        })))
                    }
                }, {
                    key: "_onC2CReadReceiptArray",
                    value: function(e) {
                        this._sessionM.get(6).onReadReceiptList(e)
                    }
                }, {
                    key: "_onProfileModified",
                    value: function(e) {
                        this._sessionM.get(4).onProfileModified({
                            dataList: e.dataList
                        });
                        var t = this._sessionM.get(8);
                        t && t.onFriendProfileModified({
                            dataList: e.dataList
                        })
                    }
                }, {
                    key: "_onRelationChainModified",
                    value: function(e) {
                        this._sessionM.get(4).onRelationChainModified({
                            dataList: e.dataList
                        });
                        var t = this._sessionM.get(8);
                        t && t.onRelationChainModified({
                            dataList: e.dataList
                        })
                    }
                }, {
                    key: "_onRecentContact",
                    value: function(e) {
                        var t;
                        !Je(e = e.dataList) || (t = this._sessionM.get(11)) && e.forEach((function(e) {
                            var n, o, i = e.pushType;
                            1 === i ? (n = e.recentContactDeleteItem, t.onConvDeleted(n.recentContactList)) : 2 === i ? (n = e.recentContactTopItem, t.onConvPinnedStatus(n.recentContactList, !0)) : 3 === i ? (n = e.recentContactTopItem, t.onConvPinnedStatus(n.recentContactList, !1)) : 4 === i ? (n = e.recentContactMarkContact, t.onConvMarkUpdated(n.recentContactMarkContactItem)) : 5 === i ? (n = e.recentContactCreateContactGroup, t.onConvGroupCreated(n.msgContactGroupContactItem)) : 6 === i ? (n = e.recentContactDelContactGroup, t.onConvGroupDeleted(n.msgGroupItem)) : 7 === i && (i = (n = e.recentContactUpdateContactGroup).updateType, e = n.msgUpdateGroup, n = n.msgUpdateContact, 1 === i ? 1 === (o = e.updateGroupType) ? t.onConvGroupNameUpdated(e) : 2 === o && t.onConvInGroupUpdated(e) : 2 === i && t.onConvAddedToOrDeletedFromGroup(n))
                        }))
                    }
                }, {
                    key: "_onAllMsgRead",
                    value: function(e) {
                        e = e.dataList;
                        var t = this._sessionM.get(11);
                        t && t.onPushedAllMessageRead(e)
                    }
                }, {
                    key: "_onUserStatusList",
                    value: function(e) {
                        this._sessionM.get(4).onUserStatusUpdated(e)
                    }
                }, {
                    key: "_onMsgExtNotify",
                    value: function(e) {
                        this._sessionM.get(3).onMsgExtNotify(e)
                    }
                }, {
                    key: "_onMsgReactionNotifyList",
                    value: function(e) {
                        this._sessionM.get(34).onReactionNotifyList(e)
                    }
                }, {
                    key: "_onMsgReactionNotify",
                    value: function(e) {
                        this._sessionM.get(34).onReactionNotify(e)
                    }
                }, {
                    key: "_onFollowInfo",
                    value: function(e) {
                        this._sessionM.get(35).onFollowInfoNotify(e)
                    }
                }, {
                    key: "_onTopicLatestMsg",
                    value: function(e) {
                        this._sessionM.get(10).onTopicLatestMsg(e)
                    }
                }, {
                    key: "onMessage",
                    value: function(e) {
                        var t = this,
                            n = e.body;
                        if (this._filterMsgFromIMOpenPush(e)) {
                            var o, i = n.eventArray,
                                a = n.isInstantMessage,
                                s = n.isSyncingEnded,
                                r = n.needSync;
                            if (Je(i))
                                for (var c, u, l, d = 0, p = i.length; d < p; d++) 100 !== (l = (c = i[d]).event) ? 24 !== l ? 26 !== l ? (o = Object.keys(c).find((function(e) {
                                    return -1 !== t._keys.indexOf(e)
                                }))) ? (u = 14 === l ? {
                                    readAllC2CMessage: c[o],
                                    groupMessageReadInfoList: c.groupMessageReadNotice || []
                                } : 16 === l ? {
                                    userID: c.userID,
                                    timestamp: c.timestamp,
                                    readReceiptList: c[o]
                                } : c[o], this._eventHandlerMap.get(o)({
                                    event: l,
                                    dataList: u,
                                    isInstantMessage: a,
                                    isSyncingEnded: s,
                                    needSync: r
                                })) : Oe.l("".concat(this._n, ".onMessage unknown eventItem:").concat(c)) : this._onTopicLatestMsg(c) : this._onAllRcvMsgOptNotify(c) : this._onRoomCustomData(c.content)
                        }
                    }
                }, {
                    key: "_onRoomCustomData",
                    value: function(e) {
                        this._sessionM.get(30).onRoomCustomDataReceived(e), Oe.l("".concat(this._n, "._onRoomCustomData data:").concat(e))
                    }
                }, {
                    key: "_onAllRcvMsgOptNotify",
                    value: function(e) {
                        this._sessionM.get(11).onAllRcvMsgOptNotify(e)
                    }
                }, {
                    key: "_filterMsgFromIMOpenPush",
                    value: function(e) {
                        var t = e.head,
                            n = (e = e.body, t = t.servcmd, !1);
                        return !(n = ut(t) ? n : t.includes(P.NAME.IM_CONFIG_MANAGER) || t.includes(P.NAME.OVERLOAD_PUSH) || t.includes(P.NAME.STAT_SERVICE)) || (t.includes(wn.PUSHED_CLOUD_CTRL_CONFIG) ? this._sessionM.get(23).onPushedConfig(e) : t.includes(wn.PUSHED_COMMERCIAL_CONFIG) ? this._sessionM.get(27).onPushedConfig(e) : t.includes(wn.OVERLOAD_NOTIFY) ? this._sessionM.onPushedServerOverload(e) : t.includes(wn.KICK_OTHER) && (n = Date.now(), this._sessionM.reLoginOnKickOther(), e = new Qn("kickOther"), n -= t = this._sessionM.get(1).getLastWsHelloTs(), e.setMessage("last wshello time:".concat(t, " diff:").concat(n, "ms")).end()), !1)
                    }
                }]), ys), fs = [{
                    cmd: wn.GET_GRP_PROFILE,
                    interval: 1,
                    count: 8
                }, {
                    cmd: wn.UPDATE_GRP_PROFILE,
                    interval: 1,
                    count: 8
                }, {
                    cmd: wn.GET_AV_MBR_LIST,
                    interval: 3,
                    count: 1
                }, {
                    cmd: wn.GET_GRP_PENDENCY,
                    interval: 1,
                    count: 15
                }, {
                    cmd: wn.GET_TOPIC_LIST,
                    interval: 1,
                    count: 10
                }, {
                    cmd: wn.SET_GRP_ATTR,
                    interval: 5,
                    count: 10
                }, {
                    cmd: wn.MODIFY_GRP_ATTR,
                    interval: 5,
                    count: 10
                }, {
                    cmd: wn.DEL_GRP_ATTR,
                    interval: 5,
                    count: 10
                }, {
                    cmd: wn.CLEAR_GRP_ATTR,
                    interval: 5,
                    count: 10
                }, {
                    cmd: wn.GET_GRP_ATTR,
                    interval: 5,
                    count: 20
                }, {
                    cmd: wn.UPDATE_GRP_COUNTER,
                    interval: 5,
                    count: 20
                }, {
                    cmd: wn.GET_GRP_COUNTER,
                    interval: 5,
                    count: 20
                }, {
                    cmd: wn.SET_ALL_MSG_READ,
                    interval: 1,
                    count: 1
                }, {
                    cmd: wn.GET_USER_STATUS,
                    interval: 5,
                    count: 20
                }, {
                    cmd: wn.SUB_USER_STATUS,
                    interval: 5,
                    count: 20
                }, {
                    cmd: wn.UNSUB_USER_STATUS,
                    interval: 5,
                    count: 20
                }, {
                    cmd: wn.MSG_CLOUD_SEARCH,
                    interval: 1,
                    count: 2
                }, {
                    cmd: wn.CHECK_FOLLOW_TYPE,
                    interval: 5,
                    count: 20
                }, {
                    cmd: wn.GET_GRP_ROAMING_MSG,
                    interval: 1,
                    count: 20
                }, {
                    cmd: wn.GET_C2C_ROAMING_MSG,
                    interval: 1,
                    count: 20
                }], ms = new Map, vs = ["0", "1", "2", "3", "4", "5", "6", "7", "8", "9", "A", "B", "C", "D", "E", "F"], Is = 0, Ms = vs.length; Is < Ms; Is++) ms.set(Is, vs[Is]);

            function ys(e) {
                i(this, ys), this._sessionM = e, this._n = "MsgDispatcher", this._eventHandlerMap = new Map, this._eventHandlerMap.set("C2CMessageArray", this._onC2CMsgArray.bind(this)), this._eventHandlerMap.set("groupMessageArray", this._onGroupMsgArray.bind(this)), this._eventHandlerMap.set("groupTips", this._onGroupTips.bind(this)), this._eventHandlerMap.set("C2CNotifyMessageArray", this._onC2CNotifyMsgArray.bind(this)), this._eventHandlerMap.set("C2CReadReceiptArray", this._onC2CReadReceiptArray.bind(this)), this._eventHandlerMap.set("profileModify", this._onProfileModified.bind(this)), this._eventHandlerMap.set("friendListMod", this._onRelationChainModified.bind(this)), this._eventHandlerMap.set("recentContactMod", this._onRecentContact.bind(this)), this._eventHandlerMap.set("readAllC2CMessage", this._onAllMsgRead.bind(this)), this._eventHandlerMap.set("c2cMessageModified", this._onC2CMsgModified.bind(this)), this._eventHandlerMap.set("groupMessageModified", this._onGroupMsgModified.bind(this)), this._eventHandlerMap.set("userStatusList", this._onUserStatusList.bind(this)), this._eventHandlerMap.set("messageExtensionNotify", this._onMsgExtNotify.bind(this)), this._eventHandlerMap.set("messageReactionNotifyList", this._onMsgReactionNotifyList.bind(this)), this._eventHandlerMap.set("messageReactionNotify", this._onMsgReactionNotify.bind(this)), this._eventHandlerMap.set("follow", this._onFollowInfo.bind(this)), this._keys = m(this._eventHandlerMap.keys())
            }

            function Cs(e) {
                i(this, Cs), this._n = "PHandler", this._sessionM = e, this._map = new Map, this._fillMap()
            }

            function Ts(e) {
                return i(this, Ts), (e = Za.call(this, e))._n = "ChannelModule", e._socketHandler = new cs(h(e)), e._probing = !1, e._isAppShowing = !0, e._previousState = E.NET_STATE_CONNECTED, e._timerForNotLoggedIn = -1, e._timerForNotLoggedIn = setInterval(e.onCheckTimer.bind(h(e)), 1e3), e._fatalErrorFlag = !1, e._disconnectedTS = 0, e._lastDiagnoseTS = 0, e
            }

            function Ds(e) {
                i(this, Ds), this._chM = e, this._n = "SocketHandler", this._promiseMap = new Map, this._readyState = rs, this._simpleRequestMap = new Map, this.MAX_SIZE = 100, this._startSequence = nt(), this._startTs = 0, this._reConnectFlag = !1, this._nextPingTs = 0, this._reConnectCount = 0, this.MAX_RECONNECT_COUNT = 3, this._socketID = -1, this._random = 0, this._socket = null, this._url = "", this._onOpenTs = 0, this._canIUseBinaryFrame = !0, this._isWorkerEnabled = !0, this._currentSite = G, this._setWebsocketHost(), this._initConnection()
            }

            function Es(e) {
                i(this, Es);
                var t, n, o = (this._handler = e).getURL();
                this._socket = null, this._workerSocket = null, this._id = nt(), this._handler.getIsWorkerEnabled() ? (t = URL.createObjectURL(new Blob([';let _socket = null;onmessage = function(event) {  if (event.data.cmd === "start") {    const url = event.data.url;    _socket = new WebSocket(url);    _socket.binaryType = "arraybuffer";    _socket.onopen = function() {      postMessage({ callback: "onOpen", extensions: _socket.extensions });    };    _socket.onclose = function(e) {      postMessage({ callback: "onOpen", e: { code: e.code, reason: e.reason } });    };    _socket.onmessage = function(e) {      postMessage({ callback: "onMessage", data: e.data });    };    _socket.onerror = function(e) {      postMessage({ callback: "onError", e: { isTrusted: "true" } });    };  } else if (event.data.cmd === "sendMessage") {    if (_socket !== null) {      _socket.send(event.data.data);    }  } else if (event.data.cmd === "stop") {    if (_socket !== null) {      _socket.close(event.data.code);      _socket = null;    }  }};'], {
                    type: "application/javascript; charset=utf-8"
                })), this._workerSocket = new Worker(t), (n = this)._workerSocket.onmessage = function(e) {
                    var t = (i = e.data).callback,
                        o = i.e,
                        i = i.extensions;
                    "onOpen" === t ? n._onOpen(i) : "onClose" === t ? n._onClose(o) : "onError" === t ? n._onError(o) : "onMessage" === t && n._onMessage(e.data)
                }, this._workerSocket.postMessage({
                    cmd: "start",
                    id: this._id,
                    url: o
                })) : Q ? j ? (ne.connectSocket({
                    url: o,
                    header: {
                        "content-type": "application/json"
                    }
                }), ne.onSocketClose(this._onClose.bind(this)), ne.onSocketOpen(this._onOpen.bind(this)), ne.onSocketMessage(this._onMessage.bind(this)), ne.onSocketError(this._onError.bind(this))) : (this._socket = ne.connectSocket({
                    url: o,
                    header: {
                        "content-type": "application/json"
                    },
                    complete: function() {}
                }), this._socket.onClose(this._onClose.bind(this)), this._socket.onOpen(this._onOpen.bind(this)), this._socket.onMessage(this._onMessage.bind(this)), this._socket.onError(this._onError.bind(this))) : (this._socket = new WebSocket(o), this._socket.binaryType = "arraybuffer", this._socket.onopen = this._onOpen.bind(this, this._socket.extensions), this._socket.onmessage = this._onMessage.bind(this), this._socket.onclose = this._onClose.bind(this), this._socket.onerror = this._onError.bind(this)), this._canIUseBinaryFrame = e.canIUseBinaryFrame()
            }

            function Ls(e) {
                for (var t, n, o = e, i = "", a = 0, s = (o = e.length % 8 != 0 ? "0".repeat(8 - e.length % 8) + e : o).length; a < s; a += 8) t = parseInt(o.slice(a, a + 4), 2), n = parseInt(o.slice(a + 4, a + 8), 2), i += ms.get(t) + ms.get(n);
                return i
            }

            function Ss(e) {
                if (e < 0 || 53 < e) return NaN;
                var t = 0 | 1073741824 * Math.random();
                return 30 < e ? t + 1073741824 * (0 | Math.random() * (1 << e - 30)) : t >>> 30 - e
            }

            function ks(e, t) {
                for (var n = e.toString(16), o = t - n.length, i = "0"; 0 < o; o >>>= 1, i += i) 1 & o && (n = i + n);
                return n
            }
            c(Wr, Rn), qs = g(Wr), s(Wr, [{
                key: "_init",
                value: function() {
                    this._updateCmdFreqLimitMap(fs)
                }
            }, {
                key: "_onCloudConfig",
                value: function() {
                    var e = this.getCloudConfig("cmd_frequency_limit");
                    ut(e) || (e = JSON.parse(e), this._updateCmdFreqLimitMap(e))
                }
            }, {
                key: "_updateCmdFreqLimitMap",
                value: function(e) {
                    var t = this;
                    e.forEach((function(e) {
                        t._cmdFreqLimitMap.set(e.cmd, {
                            interval: e.interval,
                            count: e.count
                        })
                    }))
                }
            }, {
                key: "updateProtocolConfig",
                value: function() {
                    this._pHandler.update()
                }
            }, {
                key: "req",
                value: function(e) {
                    Oe.d("".concat(this._n, ".req options:"), e);
                    var t = e.P,
                        n = e.tjgID;
                    if (!this._pHandler.has(t)) return Oe.w("".concat(this._n, ".req unknown P:").concat(t)), Mn({
                        code: Un.NO_PROTOCOL
                    });
                    var o = (e = this.getProtocolData(e)).head.servcmd;
                    if (this._isFreqOverLimit(o)) return Mn({
                        code: i = Un.OVER_FREQUENCY_LIMIT,
                        message: this.getErrMsg(i, this._getCmd(o))
                    });
                    if (this._isServerOverload(o)) return Mn({
                        code: i = Un.OPEN_SERVICE_OVERLOAD_ERROR,
                        message: this.getErrMsg(i, this._getCmd(o))
                    });
                    He(n) || (e.head.tjgID = n);
                    var i = this.get(21);
                    return hs.includes(t) ? i.simplySend(e) : i.send(e)
                }
            }, {
                key: "getKeyMap",
                value: function(e) {
                    return this._pHandler.getKeyMap(e)
                }
            }, {
                key: "genCommonHead",
                value: function() {
                    var e = this.get(12);
                    return {
                        ver: "v4",
                        platform: this._platform,
                        websdkappid: N,
                        websdkversion: O,
                        a2: e.getA2Key() || void 0,
                        tinyid: e.getTinyID() || void 0,
                        status_instid: e.getStatusInstanceID(),
                        sdkappid: e.getSDKAppID(),
                        contenttype: e.getContentType(),
                        reqtime: 0,
                        identifier: e.getA2Key() ? void 0 : e.getUserID(),
                        usersig: e.getA2Key() ? void 0 : e.getUserSig(),
                        sdkability: 4386675,
                        sdkability_ext: Ls(""),
                        cappid: e.getApplicationID(),
                        tjgID: ""
                    }
                }
            }, {
                key: "genCosSpecifiedHead",
                value: function() {
                    var e = this.get(12);
                    return {
                        ver: "v4",
                        platform: this._platform,
                        websdkappid: N,
                        websdkversion: O,
                        sdkappid: e.getSDKAppID(),
                        contenttype: e.getContentType(),
                        reqtime: 0,
                        identifier: e.getUserID(),
                        usersig: e.getUserSig(),
                        status_instid: e.getStatusInstanceID(),
                        sdkability: 4386675,
                        sdkability_ext: Ls(""),
                        cappid: e.getApplicationID()
                    }
                }
            }, {
                key: "genSSOReportHead",
                value: function() {
                    var e = this.get(12);
                    return {
                        ver: "v4",
                        platform: this._platform,
                        websdkappid: N,
                        websdkversion: O,
                        sdkappid: e.getSDKAppID(),
                        contenttype: "",
                        reqtime: 0,
                        identifier: "",
                        usersig: "",
                        status_instid: e.getStatusInstanceID(),
                        sdkability: 4386675,
                        sdkability_ext: Ls(""),
                        cappid: e.getApplicationID()
                    }
                }
            }, {
                key: "getProtocolData",
                value: function(e) {
                    return this._pHandler.getProtocolData(e)
                }
            }, {
                key: "trans",
                value: function(e) {
                    var n = e.servcmd;
                    return e = e.data, n = {
                        head: t(t({}, this.genCommonHead()), {}, {
                            servcmd: n
                        }),
                        body: e
                    }, this.get(21).send(n)
                }
            }, {
                key: "sendComboMessage",
                value: function(e) {
                    var n = e.servcmd;
                    return e = e.data, n = {
                        head: t(t({}, this.genCommonHead()), {}, {
                            servcmd: n
                        }),
                        body: e
                    }, this.get(21).send(n)
                }
            }, {
                key: "onErrorCodeNotZero",
                value: function(e) {
                    var t, n = e.errorCode;
                    n === Un.HELLO_ANSWER_KICKED_OUT && (t = e.kickType, e = void 0 === (e = e.newInstanceInfo) ? {} : e, 1 === t ? this.onMultipleAccountKickedOut(e) : 2 === t ? this.onMultipleDeviceKickedOut(e) : 3 === t && this.onRestApiKickedOut(e)), n !== Un.MSG_A2KEY_EXPIRED && n !== Un.ACCOUNT_A2KEY_EXPIRED || (this._onUserSigExpired(), this.get(21).reConnect())
                }
            }, {
                key: "onMessage",
                value: function(e) {
                    var t = (n = e.body).needAck,
                        n = n.sessionData;
                    1 === (void 0 === t ? 0 : t) && this._sendACK(n), this._msgDispatcher.onMessage(e)
                }
            }, {
                key: "onReconnected",
                value: function(e) {
                    this._incrementalPullContactFlag = e <= 300, this._reLoginOnReconnected()
                }
            }, {
                key: "reLoginOnKickOther",
                value: function() {
                    Oe.l("".concat(this._n, ".reLoginOnKickOther")), this._reLogin()
                }
            }, {
                key: "_reLoginOnReconnected",
                value: function() {
                    Oe.l("".concat(this._n, "._reLoginOnReconnected")), this._reLogin()
                }
            }, {
                key: "_reLogin",
                value: function() {
                    var e, t, n, o = this,
                        i = "".concat(this._n, "._reLogin");
                    this.isLoggedIn() && (e = 0, (t = this.get(1).getPushModule()) && (e = t.getUniAppPlatform()), n = new Qn("reLogin"), this.req({
                        P: wn.LOGIN,
                        data: {
                            isWebUniapp: e
                        }
                    }).then((function(e) {
                        var t = (e = e.data).instanceID,
                            a = (e = e.customStatus, o.get(12)),
                            s = Wo(e),
                            r = (a.setStatusInstanceID(t), o.get(21)),
                            c = r.getSocketID();
                        c = "socketID:".concat(c, " instanceID:").concat(t, " customStatus:").concat(s), n.setMessage(c).end(!0), Oe.l("".concat(i, " ok. ").concat(c)), a.getCustomStatus() !== s && o.get(4).onUserStatusUpdated({
                            dataList: [{
                                to: o.getMyUserID(),
                                statusType: E.USER_STATUS_ONLINE,
                                customStatus: e
                            }]
                        }), r.diagnose(), o.get(11).syncConvList(o._incrementalPullContactFlag).then((function() {
                            Oe.l("".concat(i, ", sync conv list ok.")), o.get(25).start()
                        })), ((t = o.get(7)) && t.updateLocalMainSequenceOnReconnected(), c = o.get(10)).resetGetTopicTime(), c.getTopicListOnReconnected(), (a = o.get(35)) && a.clearCacheOnReconnected()
                    })))
                }
            }, {
                key: "onMultipleAccountKickedOut",
                value: function(e) {
                    this.get(1).onMultipleAccountKickedOut(e)
                }
            }, {
                key: "onMultipleDeviceKickedOut",
                value: function(e) {
                    this.get(1).onMultipleDeviceKickedOut(e)
                }
            }, {
                key: "_onUserSigExpired",
                value: function() {
                    this.get(1).onUserSigExpired()
                }
            }, {
                key: "onRestApiKickedOut",
                value: function(e) {
                    this.get(1).onRestApiKickedOut(e)
                }
            }, {
                key: "_sendACK",
                value: function(e) {
                    this.req({
                        P: wn.MSG_PUSH_ACK,
                        data: {
                            sessionData: e
                        }
                    })
                }
            }, {
                key: "_isFreqOverLimit",
                value: function(e) {
                    if (e = e.split(".")[1], !this._cmdFreqLimitMap.has(e)) return !1;
                    if (!this._cmdReqInfoMap.has(e)) return this._cmdReqInfoMap.set(e, {
                        startTime: Date.now(),
                        requestCount: 1
                    }), !1;
                    var t = (n = this._cmdFreqLimitMap.get(e)).count,
                        n = n.interval,
                        o = (i = this._cmdReqInfoMap.get(e)).startTime,
                        i = i.requestCount;
                    return Date.now() - o > 1e3 * n ? (this._cmdReqInfoMap.set(e, {
                        startTime: Date.now(),
                        requestCount: 1
                    }), !1) : (this._cmdReqInfoMap.set(e, {
                        startTime: o,
                        requestCount: i += 1
                    }), t < i)
                }
            }, {
                key: "_isServerOverload",
                value: function(e) {
                    if (!this._serverOverloadInfoMap.has(e)) return !1;
                    var t = (n = this._serverOverloadInfoMap.get(e)).overloadTime,
                        n = n.waitingTime;
                    return Date.now() - t <= 1e3 * n || (this._serverOverloadInfoMap.delete(e), !1)
                }
            }, {
                key: "_getCmd",
                value: function(e) {
                    var t = "";
                    if (!e.includes(".")) return t;
                    var n, o = e.split(".")[1];
                    for (n in wn)
                        if (wn[n] === o) {
                            t = n;
                            break
                        }
                    return t
                }
            }, {
                key: "onPushedServerOverload",
                value: function(e) {
                    var t = e.overloadCommand;
                    e = e.waitingTime, this._serverOverloadInfoMap.set(t, {
                        overloadTime: Date.now(),
                        waitingTime: e
                    }), Oe.w("".concat(this._n, ".onPushedServerOverload waitingTime:").concat(e, "s cmd:").concat(this._getCmd(t)))
                }
            }, {
                key: "reset",
                value: function() {
                    Oe.l("".concat(this._n, ".reset")), this._updateCmdFreqLimitMap(fs), this._cmdReqInfoMap.clear(), this._serverOverloadInfoMap.clear(), this._incrementalPullContactFlag = !0
                }
            }]);
            var As, Rs, Os, Ns, Gs, Ps, Us, bs, ws, Fs, qs, xs = Wr,
                Vs = (c(Yr, Rn), Fs = g(Yr), s(Yr, [{
                    key: "getCloudConfig",
                    value: function(e) {
                        return ut(e) ? this._cloudConfig : this._cloudConfig.has(e) ? this._cloudConfig.get(e) : void 0
                    }
                }, {
                    key: "getServerConfig",
                    value: function(e) {
                        var t = {
                            code: 0,
                            data: ""
                        };
                        return !ut(e) && this._cloudConfig.has(e) && (t.data = this._cloudConfig.get(e)), Promise.resolve(t)
                    }
                }, {
                    key: "_canFetch",
                    value: function() {
                        return this.isLoggedIn() && !this._isFetching && Date.now() >= this._expiredTime
                    }
                }, {
                    key: "fetchConfig",
                    value: function() {
                        var e, t = this,
                            n = "".concat(this._n, ".fetchConfig"),
                            o = this._canFetch();
                        Oe.l("".concat(n, " canFetch:").concat(o)), o && (e = new Qn("fetchCloudCtrlConfig"), o = this.get(12).getSDKAppID(), this._isFetching = !0, this.req({
                            P: wn.FETCH_CLOUD_CTRL_CONFIG,
                            data: {
                                SDKAppID: o,
                                version: this._version
                            }
                        }).then((function(o) {
                            t._isFetching = !1;
                            var i = (a = o.data).version,
                                a = a.cloudControlConfig;
                            e.setMessage("version:".concat(t._version, " newVersion:").concat(i, " config:").concat(a)).end(), Oe.l("".concat(n, " ok")), t._parse(o.data)
                        })).catch((function(o) {
                            t._isFetching = !1, e.setError(o).end(), Oe.l("".concat(n, " failed. error:"), o), t._setExpiredTime(12e4)
                        })))
                    }
                }, {
                    key: "onPushedConfig",
                    value: function(e) {
                        Oe.l("".concat(this._n, ".onPushedConfig config:"), e), new Qn("pushedCloudCtrlConfig").setMessage("newVersion:".concat(e.version, " config:").concat(e.cloudControlConfig)).end(), this._parse(e)
                    }
                }, {
                    key: "onCheckTimer",
                    value: function(e) {
                        this._canFetch() && this.fetchConfig()
                    }
                }, {
                    key: "_parse",
                    value: function(e) {
                        var t = this,
                            n = "".concat(this._n, "._parse"),
                            o = e.errorCode,
                            i = e.errorMessage,
                            a = e.cloudControlConfig,
                            s = e.version,
                            r = e.expiredTime;
                        if (0 === o) {
                            if (this._version !== s) {
                                var c = null;
                                try {
                                    c = JSON.parse(a)
                                } catch (e) {
                                    this.isPrivateNetWork() || Oe.e("".concat(n, " failed. config:"), a)
                                }
                                c && (this._cloudConfig.clear(), Object.keys(c).forEach((function(e) {
                                    t._cloudConfig.set(e, c[e])
                                })), this._version = s, this.emitIEvt(qo.CLOUD_CONFIG))
                            }
                            this._setExpiredTime(1e3 * r)
                        } else ut(o) ? (Oe.l("".concat(n, " failed. Invalid message format:"), e), this._setExpiredTime(36e5)) : (Oe.e("".concat(n, " errorCode:").concat(o, " errorMessage:").concat(i)), this._setExpiredTime(12e4))
                    }
                }, {
                    key: "_setExpiredTime",
                    value: function(e) {
                        this._expiredTime = Date.now() + e
                    }
                }, {
                    key: "reset",
                    value: function() {
                        Oe.l("".concat(this._n, ".reset")), this._cloudConfig.clear(), this._expiredTime = 0, this._version = 0, this._isFetching = !1
                    }
                }]), Yr),
                Hs = (c(Kr, Rn), ws = g(Kr), s(Kr, [{
                    key: "start",
                    value: function() {
                        this._recoverGroupChat(), this._recoverC2CChat()
                    }
                }, {
                    key: "_recoverGroupChat",
                    value: function() {
                        var e, t, n, o, i = this,
                            a = this._getLocalConvList().filter((function(e) {
                                return e.type === E.CONV_GROUP && e.groupProfile.type !== E.GRP_AVCHATROOM
                            })),
                            s = this.get(11),
                            r = [];
                        a.forEach((function(a) {
                            var c = a.conversationID;
                            a = a.lastMessage, e = c.replace(E.CONV_GROUP, ""), t = s.getLocalLastMessage(c), a && 0 !== a.lastSequence && t ? (n = a.lastSequence, t = t.sequence, o = n - t, 0 < t && 1 <= o && o < 300 ? i._recoverGroupMsg({
                                groupID: e,
                                localLastMessageSequence: t,
                                remoteLastMessageSequence: n
                            }) : r.push(e)) : r.push(e)
                        })), this._getGroupNotice(r)
                    }
                }, {
                    key: "_recoverC2CChat",
                    value: function() {
                        var e, t, n, o = this,
                            i = this._getLocalConvList().filter((function(e) {
                                return e.type === E.CONV_C2C
                            })),
                            a = this.get(11),
                            s = [Promise.resolve()];
                        i.forEach((function(i) {
                            var r = i.conversationID;
                            i = i.lastMessage, e = a.getLocalLastMessage(r), i && 0 !== i.lastTime && e && (t = i.lastTime, e = e.time, n = t - e, 0 < e && 1 <= n && n <= 600 && s.push(o._recoverC2CMsg({
                                conversationID: r,
                                localLastMessageTime: e,
                                remoteLastMessageTime: t
                            })))
                        })), Promise.all(s).then((function() {
                            Oe.l("".concat(o._n, "._recoverC2CChat all done")), o.get(19).syncOnReconnected()
                        }))
                    }
                }, {
                    key: "_getLocalConvList",
                    value: function() {
                        return this.get(11).getLocalConvList()
                    }
                }, {
                    key: "_recoverGroupMsg",
                    value: function(e) {
                        var t = this,
                            n = "".concat(this._n, ".").concat("_recoverGroupMsg"),
                            o = (Oe.l("".concat(n, " options:"), e), e.groupID),
                            i = e.localLastMessageSequence,
                            a = e.remoteLastMessageSequence,
                            s = JSON.stringify(e),
                            r = new Qn("_recoverGroupMsg");
                        r.setMessage(s), this._getGroupRoamingMsg({
                            groupID: o,
                            sequence: i
                        }).then((function(e) {
                            var c = (e = e.data).complete,
                                u = e.messageList;
                            if (!ut(u)) {
                                e = u[0].sequence;
                                var l = u.map((function(e) {
                                        return e.sequence
                                    })),
                                    d = (l = "".concat(s, " complete:").concat(c, " sequenceList:").concat(l), Oe.l("".concat(n, " ").concat(l)), e !== i && e < a && 2 !== c && t._recoverGroupMsg({
                                        groupID: o,
                                        localLastMessageSequence: e,
                                        remoteLastMessageSequence: a
                                    }), r.setMessage(l).end(), t.get(7));
                                1 < u.length && u.sort((function(e, t) {
                                    return e.sequence - t.sequence
                                }));
                                for (var p = !1, _ = 0, h = u.length; _ < h; _++)
                                    if (u[_].from === E.CONV_SYSTEM) {
                                        p = !0;
                                        break
                                    }
                                if (p)
                                    for (var g = 0, f = u.length; g < f; g++) {
                                        var m = u[g];
                                        m.from !== E.CONV_SYSTEM ? d.onNewMessage({
                                            dataList: [m],
                                            isInstantMessage: !1,
                                            updateUnreadCount: !1
                                        }) : d.onNewGroupTips({
                                            event: m.event,
                                            dataList: [m]
                                        })
                                    } else d.onNewMessage({
                                        dataList: u,
                                        isInstantMessage: !1,
                                        updateUnreadCount: !1
                                    })
                            }
                        })).catch((function(e) {
                            r.setError(e).end(), Oe.w("".concat(n, " failed. error:"), e)
                        }))
                    }
                }, {
                    key: "_getGroupNotice",
                    value: function(e) {
                        var t = e.length;
                        if (Oe.l("".concat(this._n, "._getGroupNotice length:").concat(t)), 0 !== t) {
                            var n = this.get(7);
                            if (t <= 10) n.getNotice(e);
                            else {
                                var o = Math.floor(t / 10);
                                5 <= o && (o = 5);
                                for (var i = 0; i <= o; i++) n.getNotice(e.slice(10 * i, 10 * (i + 1)))
                            }
                        }
                    }
                }, {
                    key: "_getGroupRoamingMsg",
                    value: function(e) {
                        var t = e.groupID;
                        return e = e.sequence, this.req({
                            P: wn.GET_GRP_ROAMING_MSG,
                            data: {
                                groupID: t,
                                count: this.PULL_LIMIT_COUNT,
                                sequence: e + this.PULL_LIMIT_COUNT - 1
                            }
                        })
                    }
                }, {
                    key: "_recoverC2CMsg",
                    value: function(e) {
                        var t = this,
                            n = "".concat(this._n, ".").concat("_recoverC2CMsg"),
                            o = (Oe.l("".concat(n, " options:"), e), e.conversationID),
                            i = e.localLastMessageTime,
                            a = e.remoteLastMessageTime,
                            s = JSON.stringify(e),
                            r = new Qn("_recoverC2CMsg");
                        return r.setMessage(s), this._getC2CRoamingMsg({
                            conversationID: o,
                            time: i
                        }).then((function(e) {
                            var i = (e = e.data).complete;
                            if (e = e.messageList, !ut(e)) {
                                var c = e.length;
                                if (t.get(6).onNewMessage({
                                        dataList: e,
                                        isInstantMessage: !0
                                    }), c = e[c - 1].time, e = e.map((function(e) {
                                        return e.random
                                    })), e = "".concat(s, " complete:").concat(i, " randomList:").concat(e), Oe.l("".concat(n, " ").concat(e)), r.setMessage(e).end(), c < a && 1 !== i) return t._recoverC2CMsg({
                                    conversationID: o,
                                    localLastMessageTime: c,
                                    remoteLastMessageTime: a
                                })
                            }
                        })).catch((function(e) {
                            r.setError(e).end(), Oe.w("".concat(n, " failed. error:"), e)
                        }))
                    }
                }, {
                    key: "_getC2CRoamingMsg",
                    value: function(e) {
                        var t = e.conversationID;
                        return e = e.time, this.req({
                            P: wn.GET_C2C_ROAMING_MSG,
                            data: {
                                peerAccount: t.replace(E.CONV_C2C, ""),
                                count: this.PULL_LIMIT_COUNT + 1,
                                lastMessageTime: e,
                                direction: 1
                            }
                        })
                    }
                }, {
                    key: "reset",
                    value: function() {
                        Oe.l("".concat(this._n, ".reset"))
                    }
                }]), Kr),
                Bs = (s(Br, [{
                    key: "addMessageDelay",
                    value: function(e) {
                        0 <= (e = De() - e) && this._e2eDelayArray.push(e)
                    }
                }, {
                    key: "_calcAvg",
                    value: function(e, t) {
                        if (0 === t) return 0;
                        var n = 0;
                        return e.forEach((function(e) {
                            n += e
                        })), Pt(n / t, 1)
                    }
                }, {
                    key: "_calcCountWithLimit",
                    value: function(e) {
                        var t = e.e2eDelayArray,
                            n = e.min,
                            o = e.max;
                        return t.filter((function(e) {
                            return n <= e && e < o
                        })).length
                    }
                }, {
                    key: "_calcPercent",
                    value: function(e, t) {
                        return 100 < (e = Pt(e / t * 100, 2)) ? 100 : e
                    }
                }, {
                    key: "_checkE2EDelayException",
                    value: function(e, t) {
                        var n, o, i, a = e.filter((function(e) {
                            return t < e
                        }));
                        0 < a.length && (n = a.length, o = Math.min.apply(Math, m(a)), i = Math.max.apply(Math, m(a)), a = this._calcAvg(a, n), 50 < (e = Pt(n / e.length * 100, 2)) && new Qn("messageE2EDelayException").setMessage("count:".concat(n, " min:").concat(o, " max:").concat(i, " avg:").concat(a, " percent:").concat(e)).setLevel("warning").end())
                    }
                }, {
                    key: "getStatResult",
                    value: function() {
                        var e = this._e2eDelayArray.length;
                        if (0 === e) return null;
                        var t = m(this._e2eDelayArray),
                            n = this._calcCountWithLimit({
                                e2eDelayArray: t,
                                min: 0,
                                max: 1
                            }),
                            o = this._calcCountWithLimit({
                                e2eDelayArray: t,
                                min: 1,
                                max: 3
                            }),
                            i = this._calcPercent(n, e),
                            a = this._calcPercent(o, e),
                            s = this._calcAvg(t, e);
                        return this._checkE2EDelayException(t, 3), t.length = 0, this.reset(), {
                            totalCount: e,
                            countLessThan1Second: n,
                            percentOfCountLessThan1Second: i,
                            countLessThan3Second: o,
                            percentOfCountLessThan3Second: a,
                            avgDelay: s
                        }
                    }
                }, {
                    key: "reset",
                    value: function() {
                        this._e2eDelayArray.length = 0
                    }
                }]), Br),
                Ks = (s(Hr, [{
                    key: "addRequestCount",
                    value: function() {
                        this._requestCount += 1
                    }
                }, {
                    key: "addRTT",
                    value: function(e) {
                        this._rttArray.push(e)
                    }
                }, {
                    key: "_calcTotalCount",
                    value: function() {
                        return this._requestCount
                    }
                }, {
                    key: "_calcRTTCount",
                    value: function(e) {
                        return e.length
                    }
                }, {
                    key: "_calcSuccessRateOfRequest",
                    value: function(e, t) {
                        return 0 === t ? 0 : 100 < (e = Pt(e / t * 100, 2)) ? 100 : e
                    }
                }, {
                    key: "_calcAvg",
                    value: function(e, t) {
                        if (0 === t) return 0;
                        var n = 0;
                        return e.forEach((function(e) {
                            n += e
                        })), parseInt(n / t)
                    }
                }, {
                    key: "_calcMax",
                    value: function() {
                        return Math.max.apply(Math, m(this._rttArray))
                    }
                }, {
                    key: "_calcMin",
                    value: function() {
                        return Math.min.apply(Math, m(this._rttArray))
                    }
                }, {
                    key: "getStatResult",
                    value: function() {
                        var e = this._calcTotalCount(),
                            t = m(this._rttArray);
                        if (0 === e) return null;
                        var n = this._calcRTTCount(t),
                            o = this._calcSuccessRateOfRequest(n, e);
                        return t = this._calcAvg(t, n), Oe.l("".concat(this._n, ".getStatResult max:").concat(this._calcMax(), " min:").concat(this._calcMin(), " avg:").concat(t)), this.reset(), {
                            totalCount: e,
                            rttCount: n,
                            successRateOfRequest: o,
                            avgRTT: t
                        }
                    }
                }, {
                    key: "reset",
                    value: function() {
                        this._requestCount = 0, this._rttArray.length = 0
                    }
                }]), Hr),
                Ys = (s(Vr, [{
                    key: "initMap",
                    value: function(e) {
                        var t = this;
                        e.forEach((function(e) {
                            t._map.set(e, {
                                totalCount: 0,
                                successCount: 0,
                                failedCountOfUserSide: 0,
                                costArray: [],
                                fileSizeArray: []
                            })
                        }))
                    }
                }, {
                    key: "addTotalCount",
                    value: function(e) {
                        return !(ut(e) || !this._map.has(e) || (this._map.get(e).totalCount += 1, 0))
                    }
                }, {
                    key: "addSuccessCount",
                    value: function(e) {
                        return !(ut(e) || !this._map.has(e) || (this._map.get(e).successCount += 1, 0))
                    }
                }, {
                    key: "addFailedCountOfUserSide",
                    value: function(e) {
                        return !(ut(e) || !this._map.has(e) || (this._map.get(e).failedCountOfUserSide += 1, 0))
                    }
                }, {
                    key: "addCost",
                    value: function(e, t) {
                        return !(ut(e) || !this._map.has(e) || (this._map.get(e).costArray.push(t), 0))
                    }
                }, {
                    key: "addFileSize",
                    value: function(e, t) {
                        return !(ut(e) || !this._map.has(e) || (this._map.get(e).fileSizeArray.push(t), 0))
                    }
                }, {
                    key: "_calcSuccessRateOfBusiness",
                    value: function(e) {
                        return ut(e) || !this._map.has(e) ? -1 : 100 < (e = Pt((e = this._map.get(e)).successCount / e.totalCount * 100, 2)) ? 100 : e
                    }
                }, {
                    key: "_calcSuccessRateOfPlatform",
                    value: function(e) {
                        if (ut(e) || !this._map.has(e)) return -1;
                        var t = this._map.get(e);
                        return 100 < (e = Pt(e = this._calcSuccessCountOfPlatform(e) / t.totalCount * 100, 2)) ? 100 : e
                    }
                }, {
                    key: "_calcTotalCount",
                    value: function(e) {
                        return ut(e) || !this._map.has(e) ? -1 : this._map.get(e).totalCount
                    }
                }, {
                    key: "_calcSuccessCountOfBusiness",
                    value: function(e) {
                        return ut(e) || !this._map.has(e) ? -1 : this._map.get(e).successCount
                    }
                }, {
                    key: "_calcSuccessCountOfPlatform",
                    value: function(e) {
                        return ut(e) || !this._map.has(e) ? -1 : (e = this._map.get(e)).successCount + e.failedCountOfUserSide
                    }
                }, {
                    key: "_calcAvg",
                    value: function(e) {
                        return ut(e) || !this._map.has(e) ? -1 : e === Kn ? this._calcAvgSpeed(e) : this._calcAvgCost(e)
                    }
                }, {
                    key: "_calcAvgCost",
                    value: function(e) {
                        var t = this._map.get(e).costArray.length;
                        if (0 === t) return 0;
                        var n = 0;
                        return this._map.get(e).costArray.forEach((function(e) {
                            n += e
                        })), parseInt(n / t)
                    }
                }, {
                    key: "_calcAvgSpeed",
                    value: function(e) {
                        var t = 0,
                            n = 0;
                        return this._map.get(e).costArray.forEach((function(e) {
                            t += e
                        })), this._map.get(e).fileSizeArray.forEach((function(e) {
                            n += e
                        })), parseInt(1e3 * n / t)
                    }
                }, {
                    key: "getStatResult",
                    value: function(e) {
                        var t = this._calcTotalCount(e);
                        if (0 === t) return null;
                        var n = this._calcSuccessCountOfBusiness(e),
                            o = this._calcSuccessRateOfBusiness(e),
                            i = this._calcSuccessCountOfPlatform(e),
                            a = this._calcSuccessRateOfPlatform(e),
                            s = this._calcAvg(e);
                        return this.reset(e), {
                            totalCount: t,
                            successCountOfBusiness: n,
                            successRateOfBusiness: o,
                            successCountOfPlatform: i,
                            successRateOfPlatform: a,
                            avgValue: s
                        }
                    }
                }, {
                    key: "reset",
                    value: function(e) {
                        ut(e) ? this._map.clear() : this._map.set(e, {
                            totalCount: 0,
                            successCount: 0,
                            failedCountOfUserSide: 0,
                            costArray: [],
                            fileSizeArray: []
                        })
                    }
                }]), Vr),
                Ws = (s(xr, [{
                    key: "initMap",
                    value: function(e) {
                        var t = this;
                        e.forEach((function(e) {
                            t._lastMap.set(e, new Map), t._currentMap.set(e, new Map)
                        }))
                    }
                }, {
                    key: "addMessageSequence",
                    value: function(e) {
                        var t = e.key,
                            n = e.message;
                        if (ut(t) || !this._lastMap.has(t) || !this._currentMap.has(t)) return !1;
                        var o, i, a = n.conversationID;
                        return n = n.sequence, a = a.replace(E.CONV_GROUP, ""), 0 !== this._lastMap.get(t).size && this._lastMap.get(t).has(a) ? (i = (o = this._lastMap.get(t).get(a)).length - 1, n > o[0] && n < o[i] ? (o.push(n), o.sort(), this._lastMap.get(t).set(a, o)) : this._addCurrentMap(e)) : this._addCurrentMap(e), !0
                    }
                }, {
                    key: "_addCurrentMap",
                    value: function(e) {
                        var t = e.key,
                            n = (e = e.message).conversationID;
                        e = e.sequence, n = n.replace(E.CONV_GROUP, ""), this._currentMap.get(t).has(n) || this._currentMap.get(t).set(n, []), this._currentMap.get(t).get(n).push(e)
                    }
                }, {
                    key: "_copyData",
                    value: function(e) {
                        if (!ut(e)) {
                            this._lastMap.set(e, new Map);
                            var t, n = this._lastMap.get(e),
                                o = T(this._currentMap.get(e));
                            try {
                                for (o.s(); !(t = o.n()).done;) {
                                    var i = f(t.value, 2),
                                        a = i[0],
                                        s = i[1];
                                    n.set(a, s)
                                }
                            } catch (e) {
                                o.e(e)
                            } finally {
                                o.f()
                            }
                            n = null, this._currentMap.set(e, new Map)
                        }
                    }
                }, {
                    key: "getStatResult",
                    value: function(e) {
                        if (ut(this._currentMap.get(e)) || ut(this._lastMap.get(e))) return null;
                        if (0 === this._lastMap.get(e).size) return this._copyData(e), null;
                        var t = 0,
                            n = 0;
                        if (this._lastMap.get(e).forEach((function(e, o) {
                                var i = (e = m(e.values())).length;
                                e = e[i - 1] - e[0] + 1, t += e, n += i
                            })), 0 === t) return null;
                        var o = Pt(n / t * 100, 2);
                        return 100 < o && (o = 100), this._copyData(e), {
                            totalCount: t,
                            successCountOfMessageReceived: n,
                            successRateOfMessageReceived: o
                        }
                    }
                }, {
                    key: "reset",
                    value: function() {
                        this._currentMap.clear(), this._lastMap.clear()
                    }
                }]), xr),
                js = (c(qr, Rn), bs = g(qr), s(qr, [{
                    key: "_onLoginSuccess",
                    value: function() {
                        var e = this,
                            t = (this._rateMessageSent.initMap(this._messageSentItems), this._rateMessageReceived.initMap(this._messageReceivedItems), this.get(13)),
                            n = t.getItem(this.TAG, !1);
                        !He(n) && ze(n.forEach) && (Oe.l("".concat(this._n, "._onLoginSuccess. logs count:").concat(n.length)), n.forEach((function(t) {
                            e._statInfoArr.push(t)
                        })), t.removeItem(this.TAG, !1))
                    }
                }, {
                    key: "_onCloudConfig",
                    value: function() {
                        var e = this.getCloudConfig("q_rpt_interval"),
                            t = this.getCloudConfig("q_rpt_sdkappid_bl"),
                            n = this.getCloudConfig("q_rpt_tinyid_wl");
                        ut(e) || (this.REPORT_INTERVAL = Number(e)), ut(t) || (this.REPORT_SDKAPPID_BLACKLIST = t.split(",").map((function(e) {
                            return Number(e)
                        }))), ut(n) || (this.REPORT_TINYID_WHITELIST = n.split(","))
                    }
                }, {
                    key: "onCheckTimer",
                    value: function(e) {
                        this.isLoggedIn() && e % this.REPORT_INTERVAL == 0 && (this.wholePeriod = !0, this._report())
                    }
                }, {
                    key: "addRequestCount",
                    value: function() {
                        this._avgRTT.addRequestCount()
                    }
                }, {
                    key: "addRTT",
                    value: function(e) {
                        this._avgRTT.addRTT(e)
                    }
                }, {
                    key: "addMessageDelay",
                    value: function(e) {
                        this._avgE2EDelay.addMessageDelay(e)
                    }
                }, {
                    key: "addTotalCount",
                    value: function(e) {
                        this._rateMessageSent.addTotalCount(e) || Oe.w("".concat(this._n, ".addTotalCount invalid key:"), e)
                    }
                }, {
                    key: "addSuccessCount",
                    value: function(e) {
                        this._rateMessageSent.addSuccessCount(e) || Oe.w("".concat(this._n, ".addSuccessCount invalid key:"), e)
                    }
                }, {
                    key: "addFailedCountOfUserSide",
                    value: function(e) {
                        this._rateMessageSent.addFailedCountOfUserSide(e) || Oe.w("".concat(this._n, ".addFailedCountOfUserSide invalid key:"), e)
                    }
                }, {
                    key: "addCost",
                    value: function(e, t) {
                        this._rateMessageSent.addCost(e, t) || Oe.w("".concat(this._n, ".addCost invalid key or cost:"), e, t)
                    }
                }, {
                    key: "addFileSize",
                    value: function(e, t) {
                        this._rateMessageSent.addFileSize(e, t) || Oe.w("".concat(this._n, ".addFileSize invalid key or size:"), e, t)
                    }
                }, {
                    key: "addMessageSequence",
                    value: function(e) {
                        this._rateMessageReceived.addMessageSequence(e) || Oe.w("".concat(this._n, ".addMessageSequence invalid key:"), e.key)
                    }
                }, {
                    key: "_getQualityItem",
                    value: function(e) {
                        var n = {},
                            o = Xn[this.get(15).getNetworkType()];
                        switch (ut(o) && (o = 8), o = {
                            qualityType: Jn[e],
                            timestamp: Se(),
                            networkType: o,
                            extension: ""
                        }, e) {
                            case Fn:
                                n = this._avgRTT.getStatResult();
                                break;
                            case qn:
                                n = this._avgE2EDelay.getStatResult();
                                break;
                            case xn:
                            case Vn:
                            case Hn:
                            case Bn:
                            case Kn:
                                n = this._rateMessageSent.getStatResult(e);
                                break;
                            case Yn:
                            case Wn:
                            case jn:
                                n = this._rateMessageReceived.getStatResult(e)
                        }
                        return null === n ? null : t(t({}, o), n)
                    }
                }, {
                    key: "_report",
                    value: function(e) {
                        var t = this,
                            n = [],
                            o = null,
                            i = (ut(e) ? this._qualityItems.forEach((function(e) {
                                null !== (o = t._getQualityItem(e)) && (o.reportIndex = t.reportIndex, o.wholePeriod = t.wholePeriod, n.push(o))
                            })) : null !== (o = this._getQualityItem(e)) && (o.reportIndex = this.reportIndex, o.wholePeriod = this.wholePeriod, n.push(o)), Oe.d("".concat(this._n, "._report"), n), 0 < this._statInfoArr.length && (n = n.concat(this._statInfoArr), this._statInfoArr = []), e = this.get(12)).getSDKAppID();
                        e = e.getTinyID(), 0 < (n = Ut(this.REPORT_SDKAPPID_BLACKLIST, i) && !bt(this.REPORT_TINYID_WHITELIST, e) ? [] : n).length && this._doReport(n)
                    }
                }, {
                    key: "_doReport",
                    value: function(e) {
                        var n = this,
                            o = {
                                header: aa(this),
                                quality: e
                            };
                        this.req({
                            P: wn.SSO_STAT,
                            data: t({}, o)
                        }).then((function() {
                            n.reportIndex++, n.wholePeriod = !1
                        })).catch((function(t) {
                            Oe.w("".concat(n._n, "._doReport failed. error:"), t), n._statInfoArr = n._statInfoArr.concat(e), n._flushAtOnce()
                        }))
                    }
                }, {
                    key: "_flushAtOnce",
                    value: function() {
                        var e = this.get(13),
                            t = e.getItem(this.TAG, !1),
                            n = this._statInfoArr,
                            o = "".concat(this._n, "._flushAtOnce");
                        He(t) ? (Oe.l("".concat(o, " count:").concat(n.length)), e.setItem(this.TAG, n, !0, !1)) : (10 < (n = n.concat(t)).length && (n = n.slice(0, 10)), Oe.l("".concat(o, " count:").concat(n.length)), e.setItem(this.TAG, n, !0, !1)), this._statInfoArr = []
                    }
                }, {
                    key: "reset",
                    value: function() {
                        Oe.l("".concat(this._n, ".reset")), this._report(), this.reportIndex = 0, this.wholePeriod = !1, this.REPORT_SDKAPPID_BLACKLIST = [], this.REPORT_TINYID_WHITELIST = [], this._avgRTT.reset(), this._avgE2EDelay.reset(), this._rateMessageSent.reset(), this._rateMessageReceived.reset()
                    }
                }]), qr),
                Js = s((function e(t) {
                    i(this, e), He(t) || (this.userID = t.userID || "", this.nick = t.nick || "", this.avatar = t.avatar || "", this.time = t.time || 0, this.source = t.source || "", this.wording = t.wording || "", this.type = t.type || "")
                })),
                zs = (s(Fr, [{
                    key: "getLocalApplicationList",
                    value: function() {
                        return {
                            friendApplicationList: m(this._map.values()),
                            unreadCount: this._unreadCount
                        }
                    }
                }, {
                    key: "_onApplicationListUpdated",
                    value: function() {
                        this._snsM.emitOEvt(D.FRIEND_APPLICATION_LIST_UPDATED, {
                            friendApplicationList: m(this._map.values()),
                            unreadCount: this._unreadCount
                        })
                    }
                }, {
                    key: "onApplicationRead",
                    value: function() {
                        this._unreadCount = 0, this._onApplicationListUpdated()
                    }
                }, {
                    key: "onApplicationAdded",
                    value: function(e, n) {
                        var o, i, a = this;
                        He(e) || (o = n === this._snsM.getMyUserID() ? E.SNS_APPLICATION_SENT_BY_ME : E.SNS_APPLICATION_SENT_TO_ME, i = !1, e.forEach((function(e) {
                            var n = "".concat(e.userID, "_").concat(o);
                            o !== E.SNS_APPLICATION_SENT_TO_ME || a._map.has(n) || (a._unreadCount += 1), a._map.set(n, new Js(t(t({}, e), {}, {
                                type: o
                            }))), i = !0
                        })), i && this._onApplicationListUpdated())
                    }
                }, {
                    key: "onApplicationDeleted",
                    value: function(e) {
                        He(e) || (this._startTime = 0, this._currentSeq = 0, this.getApplicationList())
                    }
                }, {
                    key: "getApplicationList",
                    value: function() {
                        var e = this,
                            t = "".concat(this._n, ".").concat("getApplicationList"),
                            n = new Qn("getApplicationList");
                        return this._snsM.req({
                            P: wn.GET_FD_APPLICATION_LIST,
                            data: {
                                applicationType: E.SNS_APPLICATION_TYPE_BOTH,
                                fromAccount: this._snsM.getMyUserID(),
                                maxLimited: this._maxLimited,
                                startTime: this._startTime,
                                lastSequence: this._currentSeq
                            }
                        }).then((function(o) {
                            var i = (o = o.data).resultList,
                                a = o.unreadCount,
                                s = o.startTime,
                                r = (o = o.currentSequence, e._startTime = s, e._currentSeq = o, e._unreadCount = a, Je(i) ? i.length : 0);
                            r = "applicationCount:".concat(r, " unreadCount:").concat(a, " startTime:").concat(s, " currentSequence:").concat(o), n.setMessage(r).end(), Oe.i("".concat(t, " ok. ").concat(r)), e._map.clear(), Je(i) && i.forEach((function(t) {
                                var n = t.userID,
                                    o = t.type;
                                t = new Js(t), e._map.set("".concat(n, "_").concat(o), t)
                            })), e._onApplicationListUpdated()
                        })).catch((function(e) {
                            return n.setError(e).end(), Oe.w("".concat(t, " failed. error:"), e), Mn(e)
                        }))
                    }
                }, {
                    key: "deleteApplication",
                    value: function(e) {
                        var t = "".concat(this._n, ".").concat("deleteApplication"),
                            n = e.userID,
                            o = e.type;
                        if (o && (o === E.SNS_APPLICATION_SENT_BY_ME || o === E.SNS_APPLICATION_SENT_TO_ME) || (o = E.SNS_APPLICATION_SENT_TO_ME), !this._map.has("".concat(n, "_").concat(o))) return Mn({
                            code: Un.FRIEND_APPLICATION_NOT_EXIST
                        });
                        var i = new Qn("deleteApplication");
                        return i.setMessage("userID:".concat(n, " type:").concat(o)), this._snsM.req({
                            P: wn.DEL_FD_APPLICATION,
                            data: {
                                fromAccount: this._snsM.getMyUserID(),
                                userIDList: [n],
                                type: o
                            }
                        }).then((function(e) {
                            var a = (r = (e = e.data.resultList)[0]).to,
                                s = r.resultCode,
                                r = r.resultInfo;
                            return i.setMoreMessage("resultList:".concat(JSON.stringify(e))).end(), Oe.i("".concat(t, " ok. userID:").concat(n, " type:").concat(o)), 0 === s ? vn() : Mn({
                                userID: a,
                                code: s,
                                message: r
                            })
                        })).catch((function(e) {
                            return i.setError(e).end(), Oe.w("".concat(t, " failed. error:"), e), Mn(e)
                        }))
                    }
                }, {
                    key: "acceptApplication",
                    value: function(e) {
                        var t = "".concat(this._n, ".").concat("acceptApplication"),
                            n = e.userID,
                            o = e.remark,
                            i = e.tag,
                            a = e.type,
                            s = (a && (a === E.SNS_APPLICATION_AGREE || a === E.SNS_APPLICATION_AGREE_AND_ADD) || (a = E.SNS_APPLICATION_AGREE_AND_ADD), new Qn("acceptApplication"));
                        return s.setMessage("userID:".concat(n, " type:").concat(a)), this._snsM.req({
                            P: wn.RESPOND_FD_APPLICATION,
                            data: {
                                fromAccount: this._snsM.getMyUserID(),
                                responseFriendItem: [{
                                    userID: n,
                                    remark: o,
                                    tag: i,
                                    action: a
                                }]
                            }
                        }).then((function(e) {
                            s.end();
                            var o = (e = e.data.resultList[0]).resultCode;
                            if (e = e.resultInfo, 0 !== o) return Mn({
                                code: o,
                                message: e
                            });
                            Oe.i("".concat(t, " ok. userID:").concat(n, " type:").concat(a))
                        })).catch((function(e) {
                            return s.setError(e).end(), Oe.w("".concat(t, " failed. error:"), e), Mn(e)
                        }))
                    }
                }, {
                    key: "refuseApplication",
                    value: function(e) {
                        var t = "".concat(this._n, ".").concat("refuseApplication"),
                            n = e.userID,
                            o = new Qn("refuseApplication");
                        return o.setMessage("userID:".concat(n)), this._snsM.req({
                            P: wn.RESPOND_FD_APPLICATION,
                            data: {
                                fromAccount: this._snsM.getMyUserID(),
                                responseFriendItem: [{
                                    userID: n,
                                    action: "Response_Action_Reject"
                                }]
                            }
                        }).then((function(e) {
                            o.end();
                            var i = (e = e.data.resultList[0]).resultCode;
                            if (e = e.resultInfo, 0 !== i) return Mn({
                                code: i,
                                message: e
                            });
                            Oe.i("".concat(t, " ok. userID:").concat(n))
                        })).catch((function(e) {
                            return o.setError(e).end(), Oe.w("".concat(t, " failed. error:"), e), Mn(e)
                        }))
                    }
                }, {
                    key: "setApplicationRead",
                    value: function() {
                        var e = this,
                            t = "".concat(this._n, ".").concat("setApplicationRead"),
                            n = new Qn("setApplicationRead");
                        return this._snsM.req({
                            P: wn.REPORT_FD_APPLICATION,
                            data: {
                                fromAccount: this._snsM.getMyUserID(),
                                latestTimeStamp: Pt(Se() / 1e3, 0)
                            }
                        }).then((function(o) {
                            n.end(), Oe.i("".concat(t, " ok")), e._unreadCount = 0
                        })).catch((function(e) {
                            return n.setError(e).end(), Oe.w("".concat(t, " failed. error:"), e), Mn(e)
                        }))
                    }
                }, {
                    key: "reset",
                    value: function() {
                        this._maxLimited = 100, this._currentSeq = 0, this._unreadCount = 0, this._map.clear()
                    }
                }]), Fr),
                Xs = (s(wr, [{
                    key: "validate",
                    value: function(e) {
                        var t, n = !0,
                            o = "";
                        if (He(e)) return {
                            valid: !1,
                            tips: "empty options"
                        };
                        if (e.profileCustomField)
                            for (var i = e.profileCustomField.length, a = null, s = 0; s < i; s++) {
                                if (a = e.profileCustomField[s], !ct(a.key) || -1 === a.key.indexOf("Tag_Profile_Custom")) return {
                                    valid: !1,
                                    tips: "The prefix of keys of the custom profile key-value pairs (which is profileCustomField) must be Tag_Profile_Custom"
                                };
                                if (!ct(a.value)) return {
                                    valid: !1,
                                    tips: "The type of values of the custom profile key-value pairs (which is profileCustomField) must be String"
                                }
                            }
                        for (t in e)
                            if (Object.prototype.hasOwnProperty.call(e, t)) {
                                if ("profileCustomField" === t) continue;
                                if (He(e[t]) && !ct(e[t]) && !Ye(e[t])) {
                                    o = "key:" + t + ", invalid value:" + e[t], n = !1;
                                    continue
                                }
                                switch (t) {
                                    case "nick":
                                        ct(e[t]) || (n = !(o = "nick must be a string")), 500 < et(e[t]) && (o = "nick name limited: must less than or equal to ".concat(500, " bytes, current size: ").concat(et(e[t]), " bytes"), n = !1);
                                        break;
                                    case "gender":
                                        it(Ue, e.gender) || (o = "key:gender, invalid value:" + e.gender, n = !1);
                                        break;
                                    case "birthday":
                                        Ye(e.birthday) || (n = !(o = "birthday must be a number"));
                                        break;
                                    case "location":
                                        ct(e.location) || (n = !(o = "location must be a string"));
                                        break;
                                    case "selfSignature":
                                        ct(e.selfSignature) || (n = !(o = "selfSignature must be a string"));
                                        break;
                                    case "allowType":
                                        it(we, e.allowType) || (o = "key:allowType, invalid value:" + e.allowType, n = !1);
                                        break;
                                    case "language":
                                        Ye(e.language) || (n = !(o = "language must be a number"));
                                        break;
                                    case "avatar":
                                        ct(e.avatar) || (n = !(o = "avatar must be a string"));
                                        break;
                                    case "messageSettings":
                                        0 !== e.messageSettings && 1 !== e.messageSettings && (n = !(o = "messageSettings must be 0 or 1"));
                                        break;
                                    case "adminForbidType":
                                        it(be, e.adminForbidType) || (o = "key:adminForbidType, invalid value:" + e.adminForbidType, n = !1);
                                        break;
                                    case "level":
                                        Ye(e.level) || (n = !(o = "level must be a number"));
                                        break;
                                    case "role":
                                        Ye(e.role) || (n = !(o = "role must be a number"));
                                        break;
                                    default:
                                        o = "unknown key:" + t + "  " + e[t], n = !1
                                }
                            }
                        return {
                            valid: n,
                            tips: o
                        }
                    }
                }, {
                    key: "update",
                    value: function(e) {
                        var t, n = "",
                            o = [];
                        this.friendCustomField.forEach((function(e) {
                            o.push(e.key)
                        }));
                        for (var i = 0, a = e.length; i < a; i++)
                            if (n = e[i].tag, t = e[i].value, -1 < n.indexOf("Tag_SNS_Custom")) - 1 < o.indexOf(n) ? this.friendCustomField.forEach((function(e) {
                                e.key === n && (e.value = t)
                            })) : this.friendCustomField.push({
                                key: n,
                                value: t
                            });
                            else if (-1 < n.indexOf("Tag_Profile_Custom")) {
                            var s = !1;
                            this.profile.profileCustomField.forEach((function(e) {
                                e.key === n && (e.value = t, s = !0)
                            })), s || this.profile.profileCustomField.push({
                                key: n,
                                value: t
                            })
                        } else switch (n) {
                            case Ge.NICK:
                                this.profile.nick = t;
                                break;
                            case Ge.GENDER:
                                this.profile.gender = t;
                                break;
                            case Ge.BIRTHDAY:
                                this.profile.birthday = t;
                                break;
                            case Ge.LOCATION:
                                this.profile.location = t;
                                break;
                            case Ge.SELFSIGNATURE:
                                this.profile.selfSignature = t;
                                break;
                            case Ge.ALLOWTYPE:
                                this.profile.allowType = t;
                                break;
                            case Ge.LANGUAGE:
                                this.profile.language = t;
                                break;
                            case Ge.AVATAR:
                                this.profile.avatar = t;
                                break;
                            case Ge.MESSAGESETTINGS:
                                this.profile.messageSettings = t;
                                break;
                            case Ge.ADMINFORBIDTYPE:
                                this.profile.adminForbidType = t;
                                break;
                            case Ge.LEVEL:
                                this.profile.level = t;
                                break;
                            case Ge.ROLE:
                                this.profile.role = t;
                                break;
                            case Pe.REMARK:
                                this.remark = t;
                                break;
                            case Pe.ADDTIME:
                                this.addTime = t;
                                break;
                            case Pe.GROUP:
                                this.groupList = JSON.parse(JSON.stringify(t));
                                break;
                            case Pe.ADDSOURCE:
                                this.source = t;
                                break;
                            case Pe.ADDWORDING:
                                break;
                            default:
                                Oe.d("snsProfileItem unkown tag->", e[i].tag)
                        }
                        this.timestamp = Date.now(), o.length = 0
                    }
                }, {
                    key: "updateProfile",
                    value: function(e) {
                        this.profile = JSON.parse(JSON.stringify(e)), this.timestamp = Date.now()
                    }
                }, {
                    key: "addToGroupList",
                    value: function(e) {
                        -1 === this.groupList.indexOf(e) && (this.groupList.push(e), this.count = this.groupList.length)
                    }
                }, {
                    key: "removeFromGroupList",
                    value: function(e) {
                        -1 < (e = this.groupList.indexOf(e)) && (this.groupList.splice(e, 1), this.count = this.groupList.length)
                    }
                }]), wr),
                Zs = (s(br, [{
                    key: "getLocalFriendList",
                    value: function() {
                        return m(this._map.values())
                    }
                }, {
                    key: "getFriendRemark",
                    value: function(e) {
                        return this._map.has(e) ? this._map.get(e).remark : ""
                    }
                }, {
                    key: "onFriendProfileModified",
                    value: function(e) {
                        var t, n = this;
                        He(e = e.dataList) || (t = this._snsM.get(11), e.forEach((function(e) {
                            var o, i = e.userID;
                            e = e.profileList, n.isMyFriend(i) && (Oe.l("".concat(n._n, ".onFriendProfileModified. friend account:").concat(i, ", profileList:").concat(JSON.stringify(e))), (o = n._map.get(i)).update(e), t.modifyMessageSentByPeer({
                                conversationID: "".concat(E.CONV_C2C).concat(i),
                                latestNick: o.profile.nick,
                                latestAvatar: o.profile.avatar
                            }))
                        })), this._onFriendListUpdated())
                    }
                }, {
                    key: "onFriendAdded",
                    value: function(e) {
                        var t = this;
                        0 !== e.length && (Oe.l("".concat(this._n, ".onFriendAdded userIDList:").concat(e)), e.forEach((function(e) {
                            t._map.set(e, new Xs(e))
                        })), this.getFriendProfile({
                            userIDList: e
                        }).then((function(n) {
                            e.forEach((function(e) {
                                var n = t._map.get(e);
                                0 < n.groupList.length && t._snsM.updateWhenFriendAdded({
                                    nameList: n.groupList,
                                    userID: e
                                })
                            })), t._onFriendListUpdated()
                        })))
                    }
                }, {
                    key: "onFriendDeleted",
                    value: function(e) {
                        var t = this;
                        0 !== e.length && (Oe.l("".concat(this._n, ".onFriendDeleted userIDList:").concat(e)), e.forEach((function(e) {
                            var n = t._map.get(e);
                            0 < n.groupList.length && t._snsM.updateWhenFriendDeleted({
                                nameList: n.groupList,
                                userID: e
                            }), t._map.delete(e)
                        })), this._onFriendListUpdated())
                    }
                }, {
                    key: "_onFriendListUpdated",
                    value: function() {
                        this._snsM.emitOEvt(D.FRIEND_LIST_UPDATED), this._snsM.get(11).checkAndPatchRemark()
                    }
                }, {
                    key: "getFriendProfile",
                    value: function(e) {
                        var t = this,
                            n = "".concat(this._n, ".").concat("getFriendProfile"),
                            o = (e = e.userIDList, []),
                            i = [],
                            a = [];
                        if (e.forEach((function(e) {
                                var n;
                                t._map.has(e) ? (n = t._map.get(e), Date.now() - n.timestamp < t._expirationTime ? i.push(n) : a.push(e)) : o.push({
                                    userID: e,
                                    code: Un.NOT_MY_FRIEND,
                                    message: t._snsM.getErrMsg(Un.NOT_MY_FRIEND)
                                })
                            })), 0 === a.length) return Oe.i("".concat(n, " newUserIDList is empty")), In({
                            friendList: i,
                            failureUserIDList: o
                        });
                        var s = new Qn("getFriendProfile");
                        return s.setMessage("userIDList:".concat(a)), Oe.i("".concat(n, " userIDList:").concat(a)), this._snsM.req({
                            P: wn.GET_FD_PROFILE,
                            data: {
                                fromAccount: this._snsM.getMyUserID(),
                                userIDList: a
                            }
                        }).then((function(e) {
                            return s.end(), Oe.i("".concat(n, " ok")), e.data.resultList.forEach((function(e) {
                                var n, a = e.to,
                                    s = e.resultCode,
                                    r = e.resultInfo;
                                e = e.tagValueList, ut(s) || 0 === s ? (t._map.has(a) ? (n = t._map.get(a)).update(e) : (n = new Xs(a, e), t._map.set(a, n)), i.push(n)) : o.push({
                                    userID: a,
                                    code: s,
                                    message: r
                                })
                            })), vn({
                                friendList: i,
                                failureUserIDList: o
                            })
                        })).catch((function(e) {
                            return s.setError(e).end(), Oe.w("".concat(n, " failed. error:"), e), Mn(e)
                        }))
                    }
                }, {
                    key: "isMyFriend",
                    value: function(e) {
                        return this._map.has(e)
                    }
                }, {
                    key: "pagingGetFriendList",
                    value: function() {
                        var e = this,
                            t = "".concat(this._n, ".").concat("getFriendList"),
                            n = new Qn("getFriendList"),
                            o = Date.now();
                        this._snsM.req({
                            P: wn.GET_FD_LIST,
                            data: {
                                fromAccount: this._snsM.getMyUserID(),
                                startIndex: this._startIdx,
                                standardSequence: this._standardSeq,
                                customSequence: this._customSeq
                            }
                        }).then((function(i) {
                            var a = (i = i.data).friendCount,
                                s = i.resultList,
                                r = i.nextStartIndex,
                                c = i.standardSequence,
                                u = i.customSequence;
                            i = i.completeFlag, e._startIdx = r, e._standardSeq = c, e._customSeq = u, a = "friendCount:".concat(a, " nextStartIndex:").concat(r, " standardSequence:").concat(c, " ") + "customSequence:".concat(u, " completeFlag:").concat(i, " cost:").concat(Yt(o)), n.setMessage(a).end(), Oe.i("".concat(t, " ok."), a), He(s) || s.forEach((function(t) {
                                var n = t.to;
                                t = t.tagValueList, e._map.set(n, new Xs(n, t))
                            })), 0 === i ? e.pagingGetFriendList() : (e._snsM.emitOEvt(D.FRIEND_LIST_UPDATED), e._pagingGetFriendProfile())
                        })).catch((function(e) {
                            return n.setError(e).end(), Oe.w("".concat(t, " failed. error:"), e), Mn(e)
                        }))
                    }
                }, {
                    key: "_pagingGetFriendProfile",
                    value: function() {
                        var e = this,
                            t = m(this._map.keys()),
                            n = this._snsM.get(4),
                            o = t.length,
                            i = o <= 100 ? 1 : Math.ceil(o / 100);
                        Oe.l("".concat(this._n, "._pagingGetFriendProfile friendCount:").concat(o, " pageCount:").concat(i));
                        for (var a = 0; a < i; a++) n.getUserProfile({
                            userIDList: t.slice(100 * a, 100 * (a + 1))
                        }).then((function(t) {
                            t.data.forEach((function(t) {
                                var n = e._map.get(t.userID);
                                n && n.updateProfile(t)
                            })), e._onFriendListUpdated()
                        }))
                    }
                }, {
                    key: "addFriend",
                    value: function(e) {
                        var t = this,
                            n = "".concat(this._n, ".").concat("addFriend");
                        if (this._map.has(e.to)) return Mn({
                            code: Un.ALREADY_MY_FRIEND
                        });
                        if (e.wording && !1 === this._snsM.filterProfanity("wording", e)) return Mn({
                            code: Un.PROFANITY_FOUND
                        });
                        var o = e.to,
                            i = e.source,
                            a = e.type,
                            s = e.wording,
                            r = e.remark,
                            c = (e = e.groupName, a),
                            u = (c && (c === E.SNS_ADD_TYPE_SINGLE || c === E.SNS_ADD_TYPE_BOTH) || (c = E.SNS_ADD_TYPE_BOTH), new Qn("addFriend"));
                        return u.setMessage("to:".concat(o, " source:").concat(i, " type:").concat(c)), this._snsM.req({
                            P: wn.ADD_FD,
                            data: {
                                fromAccount: this._snsM.getMyUserID(),
                                addFriendItem: [{
                                    to: o,
                                    source: i,
                                    wording: s,
                                    remark: r,
                                    groupName: e
                                }],
                                type: c
                            }
                        }).then((function(e) {
                            e = e.data.resultList;
                            var o = (u.setMoreMessage("resultList:".concat(JSON.stringify(e))).end(), e = e[0]).to,
                                i = e.resultCode;
                            return e = e.resultInfo, Oe.i("".concat(n, " ok. to:").concat(o, " type:").concat(c, " code:").concat(i)), ut(i) || 0 === i ? vn({
                                userID: o,
                                code: 0
                            }) : 30539 === i ? vn({
                                userID: o,
                                code: i,
                                message: t._snsM.getErrMsg(i)
                            }) : Mn({
                                userID: o,
                                code: i,
                                message: t._snsM.getErrMsg(i) || e
                            })
                        })).catch((function(e) {
                            return u.setError(e).end(), Oe.w("".concat(n, " failed. error:"), e), Mn(e)
                        }))
                    }
                }, {
                    key: "deleteFriend",
                    value: function(e) {
                        var t = this,
                            n = "".concat(this._n, ".").concat("deleteFriend"),
                            o = e.userIDList,
                            i = (e = e.type, 1e3 < o.length && (Oe.w("".concat(n, " ").concat(Ht(1e3))), o.length = 1e3), []),
                            a = [],
                            s = [];
                        if (o.forEach((function(e) {
                                t._map.has(e) ? s.push(e) : i.push({
                                    userID: e,
                                    code: Un.NOT_MY_FRIEND,
                                    message: t._snsM.getErrMsg(Un.NOT_MY_FRIEND)
                                })
                            })), 0 === s.length) return In({
                            successUserIDList: a,
                            failureUserIDList: i
                        });
                        var r = ((o = e) && (o === E.SNS_DELETE_TYPE_SINGLE || o === E.SNS_DELETE_TYPE_BOTH) || (o = E.SNS_DELETE_TYPE_BOTH), new Qn("deleteFriend"));
                        return r.setMessage("userIDList:".concat(s, " type:").concat(o)), this._snsM.req({
                            P: wn.DEL_FD,
                            data: {
                                fromAccount: this._snsM.getMyUserID(),
                                userIDList: s,
                                type: o
                            }
                        }).then((function(e) {
                            return r.end(), Oe.i("".concat(n, " ok")), He(e = e.data.resultList) || e.forEach((function(e) {
                                var t = e.to,
                                    n = e.resultCode;
                                e = e.resultInfo, ut(n) || 0 === n ? a.push({
                                    userID: t
                                }) : i.push({
                                    userID: t,
                                    code: n,
                                    message: e
                                })
                            })), vn({
                                successUserIDList: a,
                                failureUserIDList: i
                            })
                        })).catch((function(e) {
                            return r.setError(e).end(), Oe.w("".concat(n, " error:"), e), Mn(e)
                        }))
                    }
                }, {
                    key: "updateFriend",
                    value: function(e) {
                        var t = this,
                            n = e.userID,
                            o = e.remark,
                            i = e.friendCustomField;
                        if (!this._map.has(n)) return Mn({
                            code: Un.NOT_MY_FRIEND
                        });
                        var a = "".concat(this._n, ".").concat("updateFriend"),
                            s = new Qn("updateFriend"),
                            r = (s.setMessage("userID:".concat(n, " remark:").concat(o, " friendCustomField:").concat(i)), []);
                        return ut(o) || r.push({
                            tag: Pe.REMARK,
                            value: o
                        }), Je(i) && 0 < i.length && i.forEach((function(e) {
                            r.push({
                                tag: e.key,
                                value: e.value
                            })
                        })), this._snsM.req({
                            P: wn.UPDATE_FD,
                            data: {
                                fromAccount: this._snsM.getMyUserID(),
                                updateItem: [{
                                    to: n,
                                    snsItem: r
                                }]
                            }
                        }).then((function(e) {
                            s.end(), Oe.i("".concat(a, " ok"));
                            var n = (e = e.data.resultList[0]).to,
                                r = e.resultCode;
                            return e = e.resultInfo, ut(r) || 0 === r ? ((n = t._map.get(n)) && (ut(o) || (n.remark = o), Je(i) && 0 < i.length && mt(n.friendCustomField, i), t._onFriendListUpdated()), vn(n)) : Mn({
                                code: r,
                                message: e
                            })
                        })).catch((function(e) {
                            return s.setError(e).end(), Oe.w("".concat(a, " failed. error:"), e), Mn(e)
                        }))
                    }
                }, {
                    key: "checkFriend",
                    value: function(e) {
                        var t = "".concat(this._n, ".").concat("checkFriend"),
                            n = e.userIDList,
                            o = e.type,
                            i = (o && (o === E.SNS_CHECK_TYPE_SINGLE || o === E.SNS_CHECK_TYPE_BOTH) || (o = E.SNS_CHECK_TYPE_BOTH), new Qn("checkFriend"));
                        return i.setMessage("userIDList:".concat(n, " type:").concat(o)), this._snsM.req({
                            P: wn.CHECK_FD,
                            data: {
                                fromAccount: this._snsM.getMyUserID(),
                                userIDList: n,
                                type: o
                            }
                        }).then((function(e) {
                            i.end(), Oe.i("".concat(t, " ok. userIDList:").concat(n, " type:").concat(o));
                            var a = [],
                                s = [];
                            return Je(e = e.data.resultList) && e.forEach((function(e) {
                                var t = e.to,
                                    n = e.relation,
                                    o = e.resultCode;
                                e = e.resultInfo, ut(o) || 0 === o ? a.push({
                                    userID: t,
                                    code: 0,
                                    relation: n
                                }) : s.push({
                                    userID: t,
                                    code: o,
                                    message: e
                                })
                            })), vn({
                                successUserIDList: a,
                                failureUserIDList: s
                            })
                        })).catch((function(e) {
                            return i.setError(e).end(), Oe.w("".concat(t, " failed. error:"), e), Mn(e)
                        }))
                    }
                }, {
                    key: "onAddedToFriendGroup",
                    value: function(e) {
                        var t = this,
                            n = e.name;
                        e = e.userIDList, Oe.l("".concat(this._n, ".onAddedToFriendGroup groupName:").concat(n, " userIDList:").concat(e)), n && !He(e) && e.forEach((function(e) {
                            t._map.has(e) && t._map.get(e).addToGroupList(n)
                        }))
                    }
                }, {
                    key: "onRemovedFromFriendGroup",
                    value: function(e) {
                        var t = this,
                            n = e.name;
                        e = e.userIDList, Oe.l("".concat(this._n, ".onRemovedFromFriendGroup groupName:").concat(n, " userIDList:").concat(e)), n && !He(e) && e.forEach((function(e) {
                            t._map.has(e) && t._map.get(e).removeFromGroupList(n)
                        }))
                    }
                }, {
                    key: "reset",
                    value: function() {
                        this._map.clear(), this._startIdx = 0, this._standardSeq = 0, this._customSeq = 0
                    }
                }]), br),
                Qs = (s(Ur, [{
                    key: "addToUserIDList",
                    value: function(e) {
                        -1 === this.userIDList.indexOf(e) && (this.userIDList.push(e), this.count = this.userIDList.length)
                    }
                }, {
                    key: "removeFromUserIDList",
                    value: function(e) {
                        -1 < (e = this.userIDList.indexOf(e)) && (this.userIDList.splice(e, 1), this.count = this.userIDList.length)
                    }
                }]), Ur),
                $s = (s(Pr, [{
                    key: "getLocalGroupList",
                    value: function() {
                        return m(this._map.values())
                    }
                }, {
                    key: "_onGroupListUpdated",
                    value: function() {
                        var e = m(this._map.values());
                        this._snsM.emitOEvt(D.FRIEND_GROUP_LIST_UPDATED, e)
                    }
                }, {
                    key: "getGroupList",
                    value: function() {
                        var e = this,
                            t = "".concat(this._n, ".").concat("getGroupList"),
                            n = new Qn("getGroupList");
                        return this._snsM.req({
                            P: wn.GET_FD_GRP_LIST,
                            data: {
                                fromAccount: this._snsM.getMyUserID()
                            }
                        }).then((function(o) {
                            n.end(), He(o = o.data.resultList) ? Oe.i("".concat(t, " ok. count:0")) : (Oe.i("".concat(t, " ok. count:").concat(o.length)), e._map.clear(), o.forEach((function(t) {
                                var n = new Qs(t);
                                e._map.set(t.name, n)
                            })), e._onGroupListUpdated())
                        })).catch((function(e) {
                            return n.setError(e).end(), Oe.w("".concat(t, " error:"), e), Mn(e)
                        }))
                    }
                }, {
                    key: "createGroup",
                    value: function(e) {
                        var t = this,
                            n = "".concat(this._n, ".").concat("createGroup"),
                            o = e.name;
                        if (e = e.userIDList, this._map.has(o)) return Mn({
                            code: Un.FRIEND_GRP_EXISTED
                        });
                        var i = "name:".concat(o, " userIDList:").concat(e),
                            a = new Qn("createGroup");
                        return a.setMessage(i), this._snsM.req({
                            P: wn.CREATE_FD_GRP,
                            data: {
                                fromAccount: this._snsM.getMyUserID(),
                                groupName: [o],
                                userIDList: Je(e) ? e : void 0
                            }
                        }).then((function(e) {
                            a.end(), Oe.l("".concat(n, " ok. ").concat(i)), e = e.data.resultList;
                            var s = [],
                                r = [];
                            return e && e.forEach((function(e) {
                                var t = e.to,
                                    n = e.resultCode,
                                    o = e.resultInfo;
                                ut(n) || 0 === n ? s.push(t) : (t = {
                                    userID: e.to,
                                    code: n,
                                    message: o
                                }, r.push(t))
                            })), e = new Qs({
                                name: o,
                                userIDList: s
                            }), t._map.set(o, e), t._snsM.onAddedToFriendGroup({
                                name: o,
                                userIDList: s
                            }), t._onGroupListUpdated(), vn({
                                friendGroup: e,
                                failureUserIDList: r
                            })
                        })).catch((function(e) {
                            return a.setError(e).end(), Oe.w("".concat(n, " failed. error:"), e), Mn(e)
                        }))
                    }
                }, {
                    key: "deleteGroup",
                    value: function(e) {
                        var t = this,
                            n = "".concat(this._n, ".").concat("deleteGroup"),
                            o = e.name;
                        if (!this._map.has(o)) return this._onGroupNotExist();
                        var i = "name:".concat(o),
                            a = new Qn("deleteGroup");
                        return a.setMessage(i), this._snsM.req({
                            P: wn.DEL_FD_GRP,
                            data: {
                                fromAccount: this._snsM.getMyUserID(),
                                nameList: [o]
                            }
                        }).then((function(e) {
                            a.end(), Oe.l("".concat(n, " ok. ").concat(i));
                            var s = t._map.get(o);
                            return s && (t._snsM.onRemovedFromFriendGroup({
                                name: o,
                                userIDList: s.userIDList
                            }), t._map.delete(o), s.userIDList.length = 0), t._onGroupListUpdated(), vn(s)
                        })).catch((function(e) {
                            return a.setError(e).end(), Oe.w("".concat(n, " failed. error:"), e), Mn(e)
                        }))
                    }
                }, {
                    key: "renameGroup",
                    value: function(e) {
                        var t = this,
                            n = "".concat(this._n, ".").concat("renameGroup"),
                            o = e.oldName,
                            i = e.newName;
                        if (!this._map.has(o)) return this._onGroupNotExist();
                        var a = "oldName:".concat(o, " newName:").concat(i),
                            s = new Qn("renameGroup");
                        return s.setMessage(a), this._snsM.req({
                            P: wn.UPDATE_FD_GRP,
                            data: {
                                fromAccount: this._snsM.getMyUserID(),
                                oldName: o,
                                newName: i
                            }
                        }).then((function() {
                            var e;
                            return s.end(), Oe.l("".concat(n, " ok. ").concat(a)), t._map.has(o) ? ((e = t._map.get(o)).name = i, t._map.delete(o), t._map.set(i, e), t._snsM.onRemovedFromFriendGroup({
                                name: o,
                                userIDList: e.userIDList
                            }), t._snsM.onAddedToFriendGroup({
                                name: i,
                                userIDList: e.userIDList
                            }), t._onGroupListUpdated(), vn(e)) : vn()
                        })).catch((function(e) {
                            return s.setError(e).end(), Oe.w("".concat(n, " failed. error:"), e), Mn(e)
                        }))
                    }
                }, {
                    key: "addToGroup",
                    value: function(e) {
                        var t = this,
                            n = "".concat(this._n, ".").concat("addToGroup"),
                            o = e.name;
                        if (e = e.userIDList, !this._map.has(o)) return this._onGroupNotExist();
                        var i = "name:".concat(o, " userIDList:").concat(e),
                            a = new Qn("addToGroup");
                        return a.setMessage(i), this._snsM.req({
                            P: wn.UPDATE_FD_GRP,
                            data: {
                                fromAccount: this._snsM.getMyUserID(),
                                oldName: o,
                                updateGroupItem: e.filter((function(e) {
                                    return t._snsM.isMyFriend(e)
                                })).map((function(e) {
                                    return {
                                        to: e,
                                        updateType: "Update_Type_Add"
                                    }
                                }))
                            }
                        }).then((function(e) {
                            return a.end(), Oe.l("".concat(n, " ok. ").concat(i)), t._onGroupUpdated(o, e)
                        })).catch((function(e) {
                            return a.setError(e).end(), Oe.w("".concat(n, " failed. error:"), e), Mn(e)
                        }))
                    }
                }, {
                    key: "removeFromGroup",
                    value: function(e) {
                        var t = this,
                            n = "".concat(this._n, ".").concat("removeFromGroup"),
                            o = e.name;
                        if (e = e.userIDList, !this._map.has(o)) return this._onGroupNotExist();
                        var i = "name:".concat(o, " userIDList:").concat(e),
                            a = new Qn("removeFromGroup");
                        return a.setMessage(i), this._snsM.req({
                            P: wn.UPDATE_FD_GRP,
                            data: {
                                fromAccount: this._snsM.getMyUserID(),
                                oldName: o,
                                updateGroupItem: e.filter((function(e) {
                                    return t._snsM.isMyFriend(e)
                                })).map((function(e) {
                                    return {
                                        to: e,
                                        updateType: "Update_Type_Delete"
                                    }
                                }))
                            }
                        }).then((function(e) {
                            return a.end(), Oe.l("".concat(n, " ok. ").concat(i)), t._onGroupUpdated(o, e)
                        })).catch((function(e) {
                            return a.setError(e).end(), Oe.w("".concat(n, " failed. error:"), e), Mn(e)
                        }))
                    }
                }, {
                    key: "_onGroupUpdated",
                    value: function(e, t) {
                        t = t.data.resultList;
                        var n = this._map.get(e),
                            o = [],
                            i = [],
                            a = [];
                        return Je(t) && t.forEach((function(e) {
                            var t = e.to,
                                s = e.resultCode,
                                r = e.resultInfo,
                                c = e.type;
                            0 === s ? "Update_Type_Add" === c ? n && (n.addToUserIDList(t), i.push(t)) : "Update_Type_Delete" === c && n && (n.removeFromUserIDList(t), a.push(t)) : o.push({
                                to: e.to,
                                code: s,
                                message: r
                            })
                        })), Oe.l("".concat(this._n, "._onGroupUpdated name:").concat(e, " userIDList:").concat(n.userIDList)), 0 < i.length && this._snsM.onAddedToFriendGroup({
                            name: e,
                            userIDList: i
                        }), 0 < a.length && this._snsM.onRemovedFromFriendGroup({
                            name: e,
                            userIDList: a
                        }), vn({
                            friendGroup: n,
                            failureUserIDList: o
                        })
                    }
                }, {
                    key: "updateWhenFriendAdded",
                    value: function(e) {
                        var t = this,
                            n = e.nameList,
                            o = e.userID;
                        Oe.l("".concat(this._n, ".updateWhenFriendAdded userID:").concat(o, " nameList:").concat(n)), He(n) || n.forEach((function(e) {
                            t._map.has(e) && t._map.get(e).addToUserIDList(o)
                        }))
                    }
                }, {
                    key: "updateWhenFriendDeleted",
                    value: function(e) {
                        var t = this,
                            n = e.nameList,
                            o = e.userID;
                        Oe.l("".concat(this._n, ".updateWhenFriendDeleted userID:").concat(o, " nameList:").concat(n)), He(n) || n.forEach((function(e) {
                            t._map.has(e) && t._map.get(e).removeFromUserIDList(o)
                        }))
                    }
                }, {
                    key: "_onGroupNotExist",
                    value: function(e) {
                        return Mn({
                            code: Un.FRIEND_GRP_NOT_EXIST
                        })
                    }
                }, {
                    key: "reset",
                    value: function() {
                        this._map.clear()
                    }
                }]), Pr),
                er = (c(Gr, Rn), Us = g(Gr), s(Gr, [{
                    key: "onContextUpdated",
                    value: function(e) {
                        this._friendHandler.pagingGetFriendList(), this._friendGroupHandler.getGroupList(), this._friendApplicationHandler.getApplicationList()
                    }
                }, {
                    key: "onRelationChainModified",
                    value: function(e) {
                        var t, n, o, i, a, s, r = this;
                        He(e = e.dataList) || (t = [], n = [], o = [], a = !(i = []), s = "", e.forEach((function(e) {
                            var c;
                            3 !== e.pushType && 4 !== e.pushType || !e.from || (s = e.from), e.friendAddAccount && (t.push.apply(t, m(e.friendAddAccount)), i.push.apply(i, m(e.friendAddAccount))), e.friendDelAccount && n.push.apply(n, m(e.friendDelAccount)), e.friendApplicationAdded && o.push.apply(o, m(e.friendApplicationAdded)), e.friendApplicationDeletedUserIDList && i.push.apply(i, m(e.friendApplicationDeletedUserIDList)), e.reportTime && 7 === e.pushType && (a = !0), e.friendUpInfo && (c = {
                                dataList: []
                            }, e.friendUpInfo.forEach((function(e) {
                                c.dataList.push({
                                    userID: e.friendAccount,
                                    profileList: m(e.sns)
                                })
                            })), r.onFriendProfileModified(c))
                        })), a && this._friendApplicationHandler.onApplicationRead(), this._friendApplicationHandler.onApplicationAdded(o, s), this._friendApplicationHandler.onApplicationDeleted(i), this._friendHandler.onFriendAdded(t), this._friendHandler.onFriendDeleted(n))
                    }
                }, {
                    key: "isMyFriend",
                    value: function(e) {
                        return this._friendHandler.isMyFriend(e)
                    }
                }, {
                    key: "filterProfanity",
                    value: function(e, t) {
                        if (!(o = this.get(29))) return !0;
                        var n = (o = o.filterText(t[e], "sns")).isAllowedToSend,
                            o = o.modifiedText;
                        return !0 === n && (t[e] = o, !0)
                    }
                }, {
                    key: "onFriendProfileModified",
                    value: function(e) {
                        this._friendHandler.onFriendProfileModified(e)
                    }
                }, {
                    key: "getLocalFriendList",
                    value: function() {
                        var e = !(0 < arguments.length && void 0 !== arguments[0]) || arguments[0],
                            t = this._friendHandler.getLocalFriendList();
                        return e ? In(t) : t
                    }
                }, {
                    key: "getFriendRemark",
                    value: function(e) {
                        return this._friendHandler.getFriendRemark(e)
                    }
                }, {
                    key: "getFriendList",
                    value: function() {
                        return this._friendHandler.pagingGetFriendList()
                    }
                }, {
                    key: "addFriend",
                    value: function(e) {
                        return this._friendHandler.addFriend(e)
                    }
                }, {
                    key: "deleteFriend",
                    value: function(e) {
                        return this._friendHandler.deleteFriend(e)
                    }
                }, {
                    key: "checkFriend",
                    value: function(e) {
                        return this._friendHandler.checkFriend(e)
                    }
                }, {
                    key: "getFriendProfile",
                    value: function(e) {
                        return this._friendHandler.getFriendProfile(e)
                    }
                }, {
                    key: "updateFriend",
                    value: function(e) {
                        return this._friendHandler.updateFriend(e)
                    }
                }, {
                    key: "onAddedToFriendGroup",
                    value: function(e) {
                        this._friendHandler.onAddedToFriendGroup(e)
                    }
                }, {
                    key: "onRemovedFromFriendGroup",
                    value: function(e) {
                        this._friendHandler.onRemovedFromFriendGroup(e)
                    }
                }, {
                    key: "getLocalFriendApplicationList",
                    value: function() {
                        return In(this._friendApplicationHandler.getLocalApplicationList())
                    }
                }, {
                    key: "deleteFriendApplication",
                    value: function(e) {
                        return this._friendApplicationHandler.deleteApplication(e)
                    }
                }, {
                    key: "refuseFriendApplication",
                    value: function(e) {
                        return this._friendApplicationHandler.refuseApplication(e)
                    }
                }, {
                    key: "acceptFriendApplication",
                    value: function(e) {
                        return this._friendApplicationHandler.acceptApplication(e)
                    }
                }, {
                    key: "setFriendApplicationRead",
                    value: function(e) {
                        return this._friendApplicationHandler.setApplicationRead(e)
                    }
                }, {
                    key: "getLocalFriendGroupList",
                    value: function() {
                        return In(this._friendGroupHandler.getLocalGroupList())
                    }
                }, {
                    key: "createFriendGroup",
                    value: function(e) {
                        return this._friendGroupHandler.createGroup(e)
                    }
                }, {
                    key: "deleteFriendGroup",
                    value: function(e) {
                        return this._friendGroupHandler.deleteGroup(e)
                    }
                }, {
                    key: "addToFriendGroup",
                    value: function(e) {
                        return this._friendGroupHandler.addToGroup(e)
                    }
                }, {
                    key: "removeFromFriendGroup",
                    value: function(e) {
                        return this._friendGroupHandler.removeFromGroup(e)
                    }
                }, {
                    key: "renameFriendGroup",
                    value: function(e) {
                        return this._friendGroupHandler.renameGroup(e)
                    }
                }, {
                    key: "updateWhenFriendAdded",
                    value: function(e) {
                        this._friendGroupHandler.updateWhenFriendAdded(e)
                    }
                }, {
                    key: "updateWhenFriendDeleted",
                    value: function(e) {
                        this._friendGroupHandler.updateWhenFriendDeleted(e)
                    }
                }, {
                    key: "reset",
                    value: function() {
                        Oe.l("".concat(this._n, ".reset")), this._friendHandler.reset(), this._friendGroupHandler.reset(), this._friendApplicationHandler.reset()
                    }
                }]), Gr),
                tr = (c(Nr, Rn), Ps = g(Nr), s(Nr, [{
                    key: "isWorkerEnabled",
                    value: function() {
                        return this._isWorkerEnabled && he
                    }
                }, {
                    key: "startWorkerTimer",
                    value: function() {
                        Oe.l("".concat(this._n, ".startWorkerTimer")), this._workerTimer && this._workerTimer.postMessage("start")
                    }
                }, {
                    key: "stopWorkerTimer",
                    value: function() {
                        Oe.l("".concat(this._n, ".stopWorkerTimer")), this._workerTimer && this._workerTimer.postMessage("stop")
                    }
                }, {
                    key: "_init",
                    value: function() {
                        var e, t;
                        he && (e = URL.createObjectURL(new Blob(['let interval = -1;onmessage = function(event) {  if (event.data === "start") {    if (interval > 0) {      clearInterval(interval);    }    interval = setInterval(() => {      postMessage("");    }, 1000);    postMessage(interval);  } else if (event.data === "stop") {    clearInterval(interval);    interval = -1;  }};'], {
                            type: "application/javascript; charset=utf-8"
                        })), this._workerTimer = new Worker(e), (t = this)._workerTimer.onmessage = function(e) {
                            e.data ? (t._timerID = e.data, Oe.l("".concat(t._n, "._init seed:").concat(t._timerID))) : t._m.onCheckTimer()
                        })
                    }
                }, {
                    key: "_onCloudConfig",
                    value: function() {
                        var e = this.getCloudConfig("enable_worker");
                        Oe.l("".concat(this._n, "._onCloudConfig enableWorker:").concat(e)), ut(e) || "1" === e ? !this._isWorkerEnabled && he && (this._isWorkerEnabled = !0, this.startWorkerTimer(), this._m.onWorkerTimerEnabled()) : this._isWorkerEnabled && he && (this._isWorkerEnabled = !1, this.stopWorkerTimer(), this._m.onWorkerTimerDisabled())
                    }
                }, {
                    key: "terminate",
                    value: function() {
                        Oe.l("".concat(this._n, ".terminate")), this._workerTimer && (this._workerTimer.terminate(), this._workerTimer = null, this._timerID = -1)
                    }
                }, {
                    key: "getTimerID",
                    value: function() {
                        return this._timerID
                    }
                }, {
                    key: "reset",
                    value: function() {
                        Oe.l("".concat(this._n, ".reset"))
                    }
                }]), Nr),
                nr = (s(Or, [{
                    key: "isValidPurchaseBits",
                    value: function(e) {
                        return e && "string" == typeof e && 1 <= e.length && e.length <= 64 && /[01]{1,64}/.test(e)
                    }
                }, {
                    key: "parsePurchaseBits",
                    value: function(e) {
                        if (this.isValidPurchaseBits(e)) {
                            this._featureMap.clear();
                            for (var t, n = e.length - 1, o = 0; 0 <= n; n--, o++) t = (o < 32 ? new k(0, Math.pow(2, o)) : new k(Math.pow(2, o - 32), 0)).toString(), "1" === e[n] ? this._featureMap.set(t, !0) : this._featureMap.set(t, !1)
                        } else Oe.w("".concat(this._n, ".parsePurchaseBits invalid purchasebits:").concat(e))
                    }
                }, {
                    key: "hasPurchasedFeature",
                    value: function(e) {
                        return !!this._featureMap.get(e)
                    }
                }, {
                    key: "isFeatureEnabled",
                    value: function(e) {
                        for (var t = parseInt(e).toString(2), n = void 0, o = !0, i = t.length - 1, a = 0; 0 <= i; i--, a++)
                            if ("1" === t.charAt(i) && (n = (a < 32 ? new k(0, Math.pow(2, a)) : new k(Math.pow(2, a - 32), 0)).toString(), !this._featureMap.get(n))) {
                                o = !1;
                                break
                            }
                        return Oe.l("".concat(this._n, ".isFeatureEnabled decimalNumber:").concat(e, " key:").concat(n, " ret:").concat(o)), In({
                            enabled: o
                        })
                    }
                }, {
                    key: "isFeatureEnabledForStat",
                    value: function(e) {
                        for (var t = parseInt(e).toString(2), n = t.length - 1, o = 0; 0 <= n; n--, o++)
                            if ("1" === t.charAt(n)) {
                                if (i = (o < 32 ? new k(0, Math.pow(2, o)) : new k(Math.pow(2, o - 32), 0)).toString(), !this._featureMap.get(i)) break;
                                var i, a = "",
                                    s = 0;
                                i === U.PLUGIN_TRANSLATE ? (a = "plugin_translate", s = 16) : i === U.PLUGIN_VOICE_TO_TEXT ? (a = "plugin_voice_to_text", s = 17) : i === U.PLUGIN_CS ? (a = "plugin_cs", s = 14) : i === U.PLUGIN_PUSH ? (a = "plugin_push", s = 13) : i === U.PLUGIN_BOT ? (a = "plugin_bot", s = 15) : i === U.MSG_REACTION && (a = "plugin_emoji_reaction", s = 18), "" !== a && (i = this._commercialConfigM.get(12).getUIPlatform(), new Qn(a).setCode(s).setUIPlatform(i).end(), Oe.l("".concat(this._n, ".isFeatureEnabledForStat ").concat(a, " code:").concat(s, " uiPlatform:").concat(i)))
                            }
                    }
                }, {
                    key: "isSearchCloudMessagesEnabled",
                    value: function() {
                        var e;
                        this._isSCMReported || (e = this._commercialConfigM.get(12).getUIPlatform(), new Qn("plugin_search").setCode(6).setUIPlatform(e).end(), this._isSCMReported = !0)
                    }
                }, {
                    key: "clear",
                    value: function() {
                        this._featureMap.clear(), this._isSCMReported = !1
                    }
                }]), Or),
                or = (s(Rr, [{
                    key: "_canFetch",
                    value: function() {
                        return this.get(12).isLoggedIn() ? !this._isFetching && Date.now() >= this._expiredTime : (this._expiredTime = Date.now() + 2e3, !1)
                    }
                }, {
                    key: "onCheckTimer",
                    value: function(e) {
                        this._canFetch() && this.fetchConfig()
                    }
                }, {
                    key: "fetchConfig",
                    value: function() {
                        var e, t, n = this,
                            o = this._canFetch(),
                            i = "".concat(this._n, ".fetchConfig");
                        Oe.l("".concat(i, " canFetch:").concat(o)), o && (e = new Qn("fetchCommercialConfig"), o = this.get(12).getSDKAppID(), t = this.get(20), this._isFetching = !0, t.req({
                            P: wn.FETCH_COMMERCIAL_CONFIG,
                            data: {
                                SDKAppID: o
                            }
                        }).then((function(t) {
                            e.setMessage("purchaseBits:".concat(t.data.purchaseBits)).end(), Oe.l("".concat(i, " ok.")), n._parseConfig(t.data), n._isFetching = !1
                        })).catch((function(t) {
                            e.setError(t).end(), n._isFetching = !1
                        })))
                    }
                }, {
                    key: "onPushedConfig",
                    value: function(e) {
                        var t = "".concat(this._n, ".onPushedConfig data:").concat(JSON.stringify(e));
                        Oe.l("".concat(t)), new Qn("pushedCommercialConfig").setMessage("purchaseBits:".concat(e.purchaseBits)).end(), this._parseConfig(e)
                    }
                }, {
                    key: "_parseConfig",
                    value: function(e) {
                        var t = "".concat(this._n, "._parseConfig"),
                            n = e.errorCode,
                            o = e.errorMessage,
                            i = e.purchaseBits,
                            a = e.expiredTime;
                        0 === n ? (this._purchasedFeatureHandler.parsePurchaseBits(i), this._expiredTime = Date.now() + 1e3 * a) : ut(n) ? (Oe.l("".concat(t, " failed. Invalid message format:"), e), this._setExpiredTimeOnResponseError(36e5)) : (Oe.e("".concat(t, " errorCode:").concat(n, " errorMessage:").concat(o)), this._setExpiredTimeOnResponseError(12e4))
                    }
                }, {
                    key: "_setExpiredTimeOnResponseError",
                    value: function(e) {
                        this._expiredTime = Date.now() + e
                    }
                }, {
                    key: "canIUse",
                    value: function(e) {
                        return this._purchasedFeatureHandler.hasPurchasedFeature(e)
                    }
                }, {
                    key: "isFeatureEnabled",
                    value: function(e) {
                        return this._purchasedFeatureHandler.isFeatureEnabled(e)
                    }
                }, {
                    key: "isFeatureEnabledForStat",
                    value: function(e) {
                        this._purchasedFeatureHandler.isFeatureEnabledForStat(e)
                    }
                }, {
                    key: "isSearchCloudMessagesEnabled",
                    value: function() {
                        this._purchasedFeatureHandler.isSearchCloudMessagesEnabled()
                    }
                }, {
                    key: "get",
                    value: function(e) {
                        return this._m.get(e)
                    }
                }, {
                    key: "reset",
                    value: function() {
                        Oe.l("".concat(this._n, ".reset")), this._expiredTime = 0, this._isFetching = !1, this._purchasedFeatureHandler.clear()
                    }
                }]), Rr),
                ir = (c(Ar, Rn), Gs = g(Ar), s(Ar, [{
                    key: "registerPlugin",
                    value: function(e) {
                        var t, n, o, i, a, s, r, c, u, l, d, p, _;
                        z ? (this._offlinePushPlugin = e["tim-offline-push-plugin"], t = (_ = e.offlinePushConfig || {}).huaweiBusinessID, n = _.xiaomiBusinessID, o = _.xiaomiAppID, i = _.xiaomiAppKey, a = _.meizuBusinessID, s = _.meizuAppID, r = _.meizuAppKey, c = _.vivoBusinessID, u = _.oppoBusinessID, l = _.oppoAppKey, d = _.oppoAppSecret, p = _.honorBusinessID, _ = _.iosBusinessID, this._androidPushConfig.huaweiPushBussinessId = t, this._androidPushConfig.xiaomiPushBussinessId = n, this._androidPushConfig.xiaomiPushAppId = o, this._androidPushConfig.xiaomiPushAppKey = i, this._androidPushConfig.meizuPushBussinessId = a, this._androidPushConfig.meizuPushAppId = s, this._androidPushConfig.meizuPushAppKey = r, this._androidPushConfig.vivoPushBussinessId = c, this._androidPushConfig.oppoPushBussinessId = u, this._androidPushConfig.oppoPushAppKey = l, this._androidPushConfig.oppoPushAppSecret = d, this._androidPushConfig.honorPushBussinessId = p, new Qn("registerPlugin").setMessage("tim-offline-push-plugin").setMoreMessage("isExist:".concat(!ut(this._offlinePushPlugin))).end(!0), Oe.l("".concat(this._n, ".").concat("registerPlugin", " ok. offlinePushConfig:").concat(JSON.stringify(e.offlinePushConfig))), this._iosBusinessID = _, this._setAppShowListener()) : this.warn("OfflinePushInUniapp")
                    }
                }, {
                    key: "init",
                    value: function() {
                        this._isWebUniapp = this.getUniAppPlatform(), this._getDeviceToken()
                    }
                }, {
                    key: "_getDeviceToken",
                    value: function() {
                        var e, t = this,
                            n = "".concat(this._n, ".").concat("_getDeviceToken");
                        ze(this._offlinePushPlugin.getDeviceToken) ? (e = "androidPushConfig:".concat(JSON.stringify(this._androidPushConfig), ", iosBusinessID:").concat(this._iosBusinessID), Oe.l("".concat(n, " start. ").concat(e)), new Qn("_getDeviceToken").setMessage("".concat(e)).end(!0), this._offlinePushPlugin.getDeviceToken(this._androidPushConfig, (function(o) {
                            var i, a, s, r, c = new Qn("getDeviceTokenRes"),
                                u = o.code,
                                l = o.msg;
                            0 === u ? (i = (r = o.data).deviceToken, a = r.deviceBrand, s = r.deviceType, r = r.bussinessId, t._deviceToken = i, t._businessID = r || t._iosBusinessID, e = "deviceToken:".concat(i, ", deviceBrand:").concat(a || s, ", businessID:").concat(t._businessID), Oe.l("".concat(n, " ok. ").concat(e)), c.setMessage(e).end(!0), t._setToken()) : (c.setMessage("code:".concat(u, ", msg:").concat(l)).end(!0), Oe.e("".concat(n, " failed. error:"), o))
                        }))) : Oe.e("".concat(n, " getDeviceToken is not a function"))
                    }
                }, {
                    key: "canIUseOfflinePush",
                    value: function() {
                        return z && !ut(this._offlinePushPlugin)
                    }
                }, {
                    key: "_setAppShowListener",
                    value: function() {
                        var e = this,
                            t = "".concat(this._n, ".").concat("_setAppShowListener");
                        ut(this._offlinePushPlugin) ? Oe.e("".concat(t, " offlinePushPlugin is undefined")) : ze(this._offlinePushPlugin.setAppShowListener) ? (new Qn("_setAppShowListener").end(!0), Oe.l("".concat(t, " start")), this._offlinePushPlugin.setAppShowListener((function(n) {
                            n = (n || {}).appShow, new Qn("setAppShowListenerRes").setMessage("appShow:".concat(n)).end(!0), Oe.l("".concat(t, " ok. appShow:").concat(n)), e._m.isReady() && (0 === n ? (e._getConvUnreadCount(), e._onBackground()) : 1 === n && e._onForeground())
                        }))) : Oe.e("".concat(t, " setAppShowListener is not a function"))
                    }
                }, {
                    key: "getDeviceBrand",
                    value: function() {
                        var e;
                        if (!ut(this._offlinePushPlugin) && ze(this._offlinePushPlugin.getDeviceType)) return e = (this._offlinePushPlugin.getDeviceType() || {}).deviceType, Oe.l("".concat(this._n, ".getDeviceBrand ok. deviceType:").concat(e)), e
                    }
                }, {
                    key: "_setToken",
                    value: function() {
                        var e = "".concat(this._n, "._setToken"),
                            t = this.get(12),
                            n = 1,
                            o = "",
                            i = "",
                            a = (He(this._deviceToken) && (n = 0), this.getUniAppPlatform()),
                            s = this.getDeviceBrand(),
                            r = (a === R.IOS || a === R.IPAD || a === R.MAC ? i = this._deviceToken : a === R.ANDROID && (o = this._deviceToken), new Qn("offlinePushSetToken"));
                        return a = "deviceToken:".concat(i || o, ", businessID:").concat(this._businessID, ", ") + "deviceBrand:".concat(s, ", isWebUniapp:").concat(this._isWebUniapp, ", pushMsg:").concat(n, ", platform:").concat(a), r.setMessage("".concat(a)), Oe.l("".concat(e, " ").concat(a)), this.req({
                            P: wn.SET_TOKEN,
                            data: {
                                tokenID: o,
                                pushMsg: n,
                                sdkAppID: t.getSDKAppID(),
                                businessID: parseInt(this._businessID),
                                deviceBrand: s,
                                deviceToken: i,
                                isWebUniapp: this._isWebUniapp
                            }
                        }).then((function(t) {
                            return r.end(), Oe.l("".concat(e, " ok")), t
                        })).catch((function(t) {
                            return r.setError(t).end(), Oe.e("".concat(e, " failed. error:"), t), Mn(t)
                        }))
                    }
                }, {
                    key: "_getConvUnreadCount",
                    value: function() {
                        var e = this;
                        this._c2cUnreadCount = 0, this._groupUnreadCount = 0, this.get(11).getLocalConvList().forEach((function(t) {
                            t.type === E.CONV_C2C && (e._c2cUnreadCount += t.unreadCount), t.type === E.CONV_GROUP && (e._groupUnreadCount += t.unreadCount)
                        }))
                    }
                }, {
                    key: "_onBackground",
                    value: function() {
                        var e = this,
                            t = "".concat(this._n, ".").concat("_onBackground"),
                            n = new Qn("_onBackground");
                        this.req({
                            P: wn.STAT_BACKGROUND,
                            data: {
                                c2cUnreadCount: this._c2cUnreadCount,
                                groupUnreadCount: this._groupUnreadCount,
                                isWebUniapp: this._isWebUniapp
                            }
                        }).then((function(o) {
                            return n.setMessage("c2cUnreadCount: ".concat(e._c2cUnreadCount, ", groupUnreadCount: ").concat(e._groupUnreadCount)).end(), Oe.l("".concat(t, " ok")), o
                        })).catch((function(e) {
                            n.setError(e).end(), Oe.e("".concat(t, " failed. error:"), e)
                        }))
                    }
                }, {
                    key: "_onForeground",
                    value: function() {
                        var e = "".concat(this._n, ".").concat("_onForeground"),
                            t = new Qn("_onForeground");
                        this.req({
                            P: wn.STAT_FOREGROUND,
                            data: {
                                isWebUniapp: this._isWebUniapp
                            }
                        }).then((function(n) {
                            return t.end(), Oe.l("".concat(e, " ok")), n
                        })).catch((function(n) {
                            t.setError(n).end(), Oe.e("".concat(e, " failed. error:"), n)
                        }))
                    }
                }, {
                    key: "getUniAppPlatform",
                    value: function() {
                        var e = uni.getSystemInfoSync().platform,
                            t = this.getDeviceBrand();
                        return "ios" === e ? R.IOS : "android" === e ? R.ANDROID : 1002 === t ? R.IPAD : 1001 === t ? R.MAC : void 0
                    }
                }, {
                    key: "reset",
                    value: function() {
                        this._deviceToken = "", this._businessID = 0, this._c2cUnreadCount = 0, this._groupUnreadCount = 0, this._isWebUniapp = 0, Oe.l("".concat(this._n, ".reset"))
                    }
                }]), Ar),
                ar = (c(kr, Rn), Ns = g(kr), s(kr, [{
                    key: "registerPlugin",
                    value: function(e) {
                        var t, n, o;
                        z ? (t = "".concat(this._n, ".").concat("registerPlugin"), this._pushPlugin = e["tim-push"], this._getDeviceInfo(), n = (o = e.pushConfig || {}).androidConfig, o = o.iOSConfig, We(n) && (this._androidPushConfig = n[this._deviceInfo.packageName]), n = (o || {}).iOSBusinessID, this._iOSBusinessID = n, o = !ut(this._pushPlugin), new Qn("registerPlugin").setMessage(this._pluginName).setMoreMessage("isExisted:".concat(o)).end(!0), Oe.l("".concat(t, " ok. pushConfig:").concat(JSON.stringify(e.pushConfig))), o ? (this._setAppShowListener(), this._setPushEventReportListener()) : Oe.e("".concat(t, " ").concat(this._pluginName, " is undefined"))) : this.warn("TIMPushInUniapp")
                    }
                }, {
                    key: "init",
                    value: function() {
                        this._isWebUniapp = this.getUniAppPlatform(), this._reportEventCacheList(), this._getDeviceToken(), this.get(27).isFeatureEnabledForStat(Math.pow(2, 41))
                    }
                }, {
                    key: "_reportEventCacheList",
                    value: function() {
                        var e = this,
                            n = "".concat(this._n, ".").concat("_reportEventCacheList");
                        ze(this._pushPlugin.getPushEventCacheList) ? (new Qn("_reportEventCacheList").end(!0), this._pushPlugin.getPushEventCacheList((function(o) {
                            var i = o.code,
                                a = o.data.eventList,
                                s = new Qn("getPushEventCacheListRes");
                            if (s.setCode(i), 0 !== i) s.setMessage("res:".concat(JSON.stringify(o))).end(!0), Oe.e("".concat(n, " failed. error:").concat(JSON.stringify(o)));
                            else {
                                i = a.length < 10 ? "eventList:".concat(JSON.stringify(a)) : "eventList.length:".concat(a.length), Oe.l("".concat(n, " ok. ").concat(i)), s.setMessage(i).end(!0);
                                for (var r = t(t({}, o.data), {}, {
                                        eventList: []
                                    }); 0 < a.length;) r.eventList = a.splice(0, 40), e._pushReport(r)
                            }
                        }))) : Oe.e("".concat(this._pluginName, ".getPushEventCacheList is not a function"))
                    }
                }, {
                    key: "_getDeviceToken",
                    value: function() {
                        var e, t = this,
                            n = "".concat(this._n, ".").concat("_getDeviceToken");
                        ze(this._pushPlugin.getDeviceToken) ? (e = "androidPushConfig:".concat(JSON.stringify(this._androidPushConfig), " iOSBusinessID:").concat(this._iOSBusinessID), Oe.l("".concat(n, " start. ").concat(e)), new Qn("_getDeviceToken").setMessage("".concat(e)).end(!0), this._pushPlugin.getDeviceToken(this._androidPushConfig, (function(o) {
                            var i, a, s, r = o.code,
                                c = o.msg,
                                u = new Qn("getDeviceTokenRes");
                            if (u.setCode(r), 0 === r) return i = (r = o.data).deviceToken, a = r.deviceBrand, s = r.deviceType, r = r.bussinessId, t._deviceToken = i, t._businessID = r || t._iOSBusinessID, e = "deviceToken:".concat(i, " deviceBrand:").concat(a || s, " businessID:").concat(t._businessID), Oe.l("".concat(n, " ok. ").concat(e)), u.setMessage(e).end(!0), void t._setToken();
                            u.setMessage(c).end(!0), Oe.e("".concat(n, " failed. error:").concat(JSON.stringify(o)))
                        }))) : Oe.e("".concat(this._pluginName, ".getDeviceToken is not a function"))
                    }
                }, {
                    key: "_getDeviceInfo",
                    value: function() {
                        var e = "".concat(this._n, ".").concat("_getDeviceInfo");
                        if (ze(this._pushPlugin.getDeviceInfo)) {
                            var n = this._pushPlugin.getDeviceInfo(),
                                o = n.code,
                                i = n.data,
                                a = new Qn("_getDeviceInfo");
                            if (a.setCode(o), 0 === o) return this._deviceInfo = t(t({}, this._deviceInfo), i), this._deviceInfo.pushVersion || (this._deviceInfo.pushVersion = "1.0.1"), o = "deviceInfo:".concat(JSON.stringify(this._deviceInfo)), Oe.l("".concat(e, " ok. ").concat(o)), void a.setMessage(o).end(!0);
                            a.setMessage("deviceInfoRes:".concat(JSON.stringify(n))).end(!0), Oe.e("".concat(e, " failed. error:").concat(JSON.stringify(n)))
                        } else Oe.e("".concat(this._pluginName, ".getDeviceInfo is not a function"))
                    }
                }, {
                    key: "canIUseTIMPush",
                    value: function() {
                        return z && !ut(this._pushPlugin)
                    }
                }, {
                    key: "_setAppShowListener",
                    value: function() {
                        var e = this,
                            t = "".concat(this._n, ".").concat("_setAppShowListener");
                        ze(this._pushPlugin.setAppShowListener) ? (new Qn("_setAppShowListener").end(!0), Oe.l("".concat(t, " start")), this._pushPlugin.setAppShowListener((function(n) {
                            n = (n || {}).appShow, new Qn("setAppShowListenerRes").setMessage("appShow:".concat(n)).end(!0), Oe.l("".concat(t, " ok. appShow:").concat(n)), e._m.isReady() && (0 === n ? (e._getConvUnreadCount(), e._onBackground()) : 1 === n && e._onForeground())
                        }))) : Oe.e("".concat(this._pluginName, ".setAppShowListener is not a function"))
                    }
                }, {
                    key: "_setPushEventReportListener",
                    value: function() {
                        var e = this,
                            t = "".concat(this._n, ".").concat("_setPushEventReportListener");
                        ze(this._pushPlugin.setPushEventReportListener) ? (new Qn("_setPushEventReportListener").end(!0), this._pushPlugin.setPushEventReportListener((function(n) {
                            var o = n.code,
                                i = n.data,
                                a = i.eventList,
                                s = new Qn("setPushEventReportListenerRes");
                            if (s.setCode(o), 0 === o) return o = "eventList:".concat(JSON.stringify(a)), Oe.l("".concat(t, " ok. ").concat(o)), s.setMessage(o).end(!0), void(e._m.isReady() && Je(a) && 0 < a.length && e._pushReport(i));
                            s.setMessage("res:".concat(JSON.stringify(n))).end(!0), Oe.e("".concat(t, " failed. error:").concat(JSON.stringify(n)))
                        }))) : Oe.e("".concat(this._pluginName, ".setPushEventReportListener is not a function"))
                    }
                }, {
                    key: "getDeviceBrand",
                    value: function() {
                        var e;
                        if (!ut(this._pushPlugin) && ze(this._pushPlugin.getDeviceType)) return e = (this._pushPlugin.getDeviceType() || {}).deviceType, Oe.l("".concat(this._n, ".getDeviceBrand ok. deviceType:").concat(e)), e
                    }
                }, {
                    key: "_setToken",
                    value: function() {
                        var e = "".concat(this._n, ".").concat("_setToken"),
                            n = this.get(12),
                            o = 1,
                            i = "",
                            a = "",
                            s = (He(this._deviceToken) && (o = 0), this.getUniAppPlatform()),
                            r = this.getDeviceBrand(),
                            c = (s === R.IOS || s === R.IPAD || s === R.MAC ? a = this._deviceToken : s === R.ANDROID && (i = this._deviceToken), s = t({
                                tokenID: i,
                                pushMsg: o,
                                sdkAppID: n.getSDKAppID(),
                                businessID: parseInt(this._businessID),
                                deviceBrand: r,
                                deviceToken: a,
                                isWebUniapp: this._isWebUniapp
                            }, this._deviceInfo), new Qn("_setToken"));
                        i = "data:".concat(JSON.stringify(s)), c.setMessage("".concat(i)), Oe.l("".concat(e, " ").concat(i)), this.req({
                            P: wn.SET_TOKEN,
                            data: s
                        }).then((function() {
                            c.end(), Oe.w("".concat(e, " ok"))
                        })).catch((function(t) {
                            c.setError(t).end(), Oe.e("".concat(e, " failed. error:"), t), Mn(t)
                        }))
                    }
                }, {
                    key: "_getConvUnreadCount",
                    value: function() {
                        var e = this;
                        this._c2cUnreadCount = 0, this._groupUnreadCount = 0, this.get(11).getLocalConvList().forEach((function(t) {
                            t.type === E.CONV_C2C && (e._c2cUnreadCount += t.unreadCount), t.type === E.CONV_GROUP && (e._groupUnreadCount += t.unreadCount)
                        }))
                    }
                }, {
                    key: "_onBackground",
                    value: function() {
                        var e = this,
                            t = "".concat(this._n, ".").concat("_onBackground"),
                            n = new Qn("_onBackground");
                        this.req({
                            P: wn.STAT_BACKGROUND,
                            data: {
                                c2cUnreadCount: this._c2cUnreadCount,
                                groupUnreadCount: this._groupUnreadCount,
                                isWebUniapp: this._isWebUniapp
                            }
                        }).then((function() {
                            n.setMessage("c2cUnreadCount:".concat(e._c2cUnreadCount, " groupUnreadCount:").concat(e._groupUnreadCount)).end(), Oe.l("".concat(t, " ok"))
                        })).catch((function(e) {
                            n.setError(e).end(), Oe.e("".concat(t, " failed. error:"), e)
                        }))
                    }
                }, {
                    key: "_onForeground",
                    value: function() {
                        var e = "".concat(this._n, ".").concat("_onForeground"),
                            t = new Qn("_onForeground");
                        this.req({
                            P: wn.STAT_FOREGROUND,
                            data: {
                                isWebUniapp: this._isWebUniapp
                            }
                        }).then((function() {
                            t.end(), Oe.l("".concat(e, " ok"))
                        })).catch((function(n) {
                            t.setError(n).end(), Oe.e("".concat(e, " failed. error:"), n)
                        }))
                    }
                }, {
                    key: "_pushReport",
                    value: function(e) {
                        var t = this,
                            n = "".concat(this._n, ".").concat("_pushReport"),
                            o = new Qn("_pushReport");
                        this.req({
                            P: wn.PUSH_REPORT,
                            data: {
                                eventList: e.eventList
                            }
                        }).then((function() {
                            o.end(), t._notifyReportSuccess(e)
                        })).catch((function(e) {
                            o.setError(e).end(), Oe.e("".concat(n, " failed. error:"), e)
                        }))
                    }
                }, {
                    key: "_notifyReportSuccess",
                    value: function(e) {
                        !ut(this._pushPlugin) && ze(this._pushPlugin.notifyReportSuccess) && (this._pushPlugin.notifyReportSuccess(e), Oe.l("".concat(this._n, "._notifyReportSuccess ok")))
                    }
                }, {
                    key: "getUniAppPlatform",
                    value: function() {
                        var e = uni.getSystemInfoSync().platform,
                            t = this.getDeviceBrand();
                        return "ios" === e ? R.IOS : "android" === e ? R.ANDROID : 1002 === t ? R.IPAD : 1001 === t ? R.MAC : void 0
                    }
                }, {
                    key: "reset",
                    value: function() {
                        this._deviceToken = "", this._businessID = 0, this._c2cUnreadCount = 0, this._groupUnreadCount = 0, this._isWebUniapp = 0, Oe.l("".concat(this._n, ".reset"))
                    }
                }]), kr),
                sr = (c(Sr, Rn), Os = g(Sr), s(Sr, [{
                    key: "init",
                    value: function() {
                        var e = this.get(18).getPlugin("tim-profanity-filter-plugin");
                        e && (this._plugin = new e({
                            logger: Oe,
                            isArray: Je,
                            isMap: Be,
                            isDevMode: this.isDevMode()
                        }), this._getLexicon())
                    }
                }, {
                    key: "onCheckTimer",
                    value: function() {
                        this._plugin && this._canIUseLexicon && this.isLoggedIn() && !this._isFetching && Date.now() >= this._expiredTime && this._getLexicon()
                    }
                }, {
                    key: "filterMessage",
                    value: function(e, t) {
                        var n = !0;
                        if (!this._plugin || !this._canIUseLexicon) return n;
                        if (t && t.messageControlInfo && !0 === t.messageControlInfo.excludedFromContentModeration) return n;
                        t = e.type;
                        var o = e.conversationType;
                        if (t !== E.MSG_TEXT && t !== E.MSG_CUSTOM) return n;
                        var i, a = "".concat(this._n, ".filterMessage");
                        if (Oe.l("".concat(a)), t === E.MSG_TEXT) {
                            if (o === E.CONV_C2C ? i = "c2c_text_message" : o === E.CONV_GROUP && (i = "group_text_message"), !this._isConfigOn(i)) return n;
                            var s = (r = this._plugin.filter(e.payload.text)).type,
                                r = r.modifiedText;
                            1 === s ? n = !1 : 2 === s && (e.payload.text = r)
                        } else if (t === E.MSG_CUSTOM) {
                            if (o === E.CONV_C2C ? i = "c2c_custom_message" : o === E.CONV_GROUP && (i = "group_custom_message"), !this._isConfigOn(i)) return n;
                            s = this._plugin.filter(e.payload.data), r = this._plugin.filter(e.payload.description), t = this._plugin.filter(e.payload.extension), 1 === s.type || 1 === r.type || 1 === t.type ? n = !1 : (2 === s.type && (e.payload.data = s.modifiedText), 2 === r.type && (e.payload.description = r.modifiedText), 2 === t.type && (e.payload.extension = t.modifiedText))
                        }
                        return Oe.l("".concat(a, " done. isAllowedToSend:").concat(n)), n
                    }
                }, {
                    key: "filterText",
                    value: function(e, t) {
                        var n = "".concat(this._n, ".filterText"),
                            o = {
                                isAllowedToSend: !0,
                                modifiedText: e
                            };
                        return this._plugin && this._canIUseLexicon && this._isConfigOn(t) ? (Oe.l("".concat(n)), e = (t = this._plugin.filter(e)).type, t = t.modifiedText, 1 === e ? o.isAllowedToSend = !1 : 2 === e && (o.modifiedText = t), Oe.l("".concat(n, " done. ret:"), o), o) : o
                    }
                }, {
                    key: "_getLexicon",
                    value: function() {
                        var e = this,
                            t = new Qn("profanityFilter"),
                            n = "".concat(this._n, "._getLexicon");
                        this._isFetching = !0, this.req({
                            P: wn.GET_PROFANITY_LIST,
                            data: {
                                startIndex: this._startIndex,
                                version: this._version
                            }
                        }).then((function(o) {
                            var i = (o = o.data).errorInfo,
                                a = o.filterConfig,
                                s = o.lexicon,
                                r = o.strToken,
                                c = o.completeFlag,
                                u = o.nextStartIndex,
                                l = o.version,
                                d = (o = o.expiredTime, i.errorCode),
                                p = i.errorMessage;
                            return 0 !== d ? (e._isFetching = !1, Oe.w("".concat(n, " failed. error:"), i), void t.setCode(d).setMessage(p).end()) : (e._onFilterConfig(a), e._getToken(r), 1 === c ? (Oe.l("".concat(n, " done. version:").concat(l, " expiredTime:").concat(o)), e._version = l, e._canIUseLexicon = !0, e._isFetching = !1, e._expiredTime = Date.now() + 1e3 * o, void e._plugin.onLexiconCompleted(s)) : (e._startIndex = u, e._plugin.onLexiconSliced(s), void e._getLexicon()))
                        })).catch((function(o) {
                            t.setError(o).end(), e._isFetching = !1, Oe.l("".concat(n, " failed. error:"), o)
                        }))
                    }
                }, {
                    key: "_onFilterConfig",
                    value: function(e) {
                        var t = this;
                        He(e) || (this._filterConfigMap.clear(), Object.keys(e).forEach((function(n) {
                            t._filterConfigMap.set(n, e[n])
                        })), Oe.l("".concat(this._n, "._onFilterConfig. keys:").concat(Array.from(this._filterConfigMap.keys()), " values:").concat(Array.from(this._filterConfigMap.values()))))
                    }
                }, {
                    key: "_isConfigOn",
                    value: function(e) {
                        return 1 === this._filterConfigMap.get(e)
                    }
                }, {
                    key: "_getToken",
                    value: function(e) {
                        if (ct(e)) {
                            var t = e.length,
                                n = "";
                            if (t % 2 == 0)
                                for (var o = 0; o <= t - 1; o += 2) n = (n += e[o + 1]) + e[o];
                            else {
                                for (var i = 0; i < t - 1; i += 2) n = (n += e[i + 1]) + e[i];
                                n += e[t - 1]
                            }
                            this._plugin.onToken(n)
                        }
                    }
                }, {
                    key: "reset",
                    value: function() {
                        Oe.l("".concat(this._n, ".reset")), this._plugin && (this._plugin.reset(), this._plugin = null), this._filterConfigMap.clear(), this._startIndex = 0, this._version = 0, this._canIUseLexicon = !1, this._isFetching = !1, this._expiredTime = 0
                    }
                }]), Sr),
                rr = (s(Lr, [{
                    key: "_onCloudConfig",
                    value: function() {
                        var e = this,
                            t = this._m.get(23).getCloudConfig("rtc_cmd");
                        ut(t) || ((t = JSON.parse(t)).forEach((function(t) {
                            e._TRTCCommandList.includes(t) || e._TRTCCommandList.push(t)
                        })), this._setTRTCCommandMap())
                    }
                }, {
                    key: "_setTRTCCommandMap",
                    value: function() {
                        for (var e, t = 0, n = this._TRTCCommandList.length; t < n; t++) e = this._TRTCCommandList[t].split(".")[0], this._TRTCCommandMap.set(e, 1)
                    }
                }, {
                    key: "onRoomCustomDataReceived",
                    value: function(e) {
                        this._m.getOEmitInst().emit(D.ROOM_CUSTOM_DATA_RECEIVED, e)
                    }
                }, {
                    key: "sendTRTCCustomData",
                    value: function(e) {
                        var t = e.serviceCommand,
                            n = (e = e.data, "".concat(P.NAME.TUIROOM_SVR, ".*"));
                        return ut(t) || (n = t), this._isValidServiceCommand(n) ? this._trans({
                            servcmd: n,
                            data: e
                        }) : Mn({
                            code: Un.INVALID_TRTC_CMD
                        })
                    }
                }, {
                    key: "_trans",
                    value: function(e) {
                        Oe.d("".concat(this._n, "._trans. options:").concat(JSON.stringify(e)));
                        var t = e.servcmd;
                        return e = e.data, this._m.get(20).trans({
                            servcmd: t,
                            data: ct(e) ? JSON.parse(e) : e
                        })
                    }
                }, {
                    key: "_isValidServiceCommand",
                    value: function(e) {
                        return e.endsWith(".*") ? this._TRTCCommandList.includes(e) : (e = e.split(".")[0], this._TRTCCommandMap.has(e))
                    }
                }, {
                    key: "isTRTCCommand",
                    value: function(e) {
                        return e = e.split(".")[0], this._TRTCCommandMap.has(e)
                    }
                }, {
                    key: "reset",
                    value: function() {
                        Oe.l("".concat(this._n, ".reset"))
                    }
                }]), Lr),
                cr = (s(Er, [{
                    key: "_init",
                    value: function() {
                        var e, t = this._getStorageModule().getItem(this.TIM_ERROR_ASSISTANCE, !1);
                        if (t) {
                            try {
                                e = JSON.parse(t)
                            } catch (e) {
                                this._getStorageModule().removeItem(this.TIM_ERROR_ASSISTANCE, !1), Oe.w("".concat(this._n, "._init error:"), e)
                            }
                            e && (this._needToUpdate(e) ? this._fetch() : this._fillMap(e.message))
                        } else this._fetch()
                    }
                }, {
                    key: "_needToUpdate",
                    value: function(e) {
                        var t = e.localSavedTime;
                        return e = e.localSavedVersion, t = t && (new Date).getTime() - t >= this.STORAGE_EXPIRES_TIME, e = !e || "3.4.3" !== e, Oe.l("".concat(this._n, "._needToUpdate isTimeout:").concat(t, " isDifferentVersion:").concat(e)), t || e
                    }
                }, {
                    key: "_fetch",
                    value: function() {
                        var e, t, n, o, i, a;
                        this._m.get(12).isPrivateNetWork() || (e = "https://web.sdk.qcloud.com/im/download/error-message/v3/0.0.5/tim-error-message.txt", t = "application/x-www-form-urlencoded;charset=UTF-8", n = "".concat(this._n, "._fetch ok in"), o = this, Q ? ne.request({
                            url: e,
                            method: "GET",
                            timeout: 3e3,
                            header: {
                                "content-type": t
                            },
                            dataType: "text",
                            success: function(e) {
                                o._fillAndSave(e.data), Oe.l("".concat(n, " mini program"))
                            },
                            fail: function() {}
                        }) : (i = new XMLHttpRequest, a = setTimeout((function() {
                            i.abort()
                        }), 3e3), i.onreadystatechange = function() {
                            4 === i.readyState && (clearTimeout(a), 200 !== i.status && 304 !== i.status || (Oe.l("".concat(n, " browser")), o._fillAndSave(i.responseText)))
                        }, i.open("GET", e, !0), i.setRequestHeader("Content-type", t), i.send()))
                    }
                }, {
                    key: "_fillAndSave",
                    value: function(e) {
                        this._fillMap(e), this._getStorageModule().setItem(this.TIM_ERROR_ASSISTANCE, JSON.stringify({
                            message: e,
                            localSavedTime: (new Date).getTime(),
                            localSavedVersion: "3.4.3"
                        }), !0, !1)
                    }
                }, {
                    key: "_getStorageModule",
                    value: function() {
                        return this._m.get(13)
                    }
                }, {
                    key: "_fillMap",
                    value: function(e) {
                        this._map.clear();
                        for (var t, n, o = e.split(";\n"), i = o.length, a = new RegExp(/'/g), s = 0; s < i; s++)
                            if (n = o[s].indexOf(":"), t = o[s].slice(0, n), n = o[s].slice(n + 1, o[s].length), !t.startsWith("//")) {
                                if (ut(n)) continue;
                                this._map.set(t, n.replace(a, ""))
                            }
                    }
                }, {
                    key: "get",
                    value: function(e) {
                        var t = e.isIntl,
                            n = e.key,
                            o = e.replacement1;
                        return e = e.replacement2, t = "".concat(n, t ? "_en" : "_cn"), !this._map.has(t) && this._map.has(n) && (t = n), n = "", this._map.has(t) && (n = this._map.get(t), ut(o) || (n = n.replace("$replacement1", o)), ut(e) || (n = n.replace("$replacement2", e))), n
                    }
                }, {
                    key: "reset",
                    value: function() {
                        Oe.l("".concat(this._n, ".reset"))
                    }
                }]), Er),
                ur = (s(Dr, [{
                    key: "onNewMessageList",
                    value: function(e) {
                        var t = this;
                        e.forEach((function(e) {
                            var n = t.getPayloadData(e);
                            n && t._handleActionType(n, e)
                        }))
                    }
                }, {
                    key: "onMessageModified",
                    value: function(e) {
                        var t = this;
                        e.forEach((function(e) {
                            var n = t.getPayloadData(e);
                            n && t._onInvitationModified(n, e)
                        }))
                    }
                }, {
                    key: "getPayloadData",
                    value: function(e) {
                        var t = "".concat(this._n, ".getPayloadData");
                        e = e.payload.data;
                        try {
                            return JSON.parse(e)
                        } catch (n) {
                            return Oe.e("".concat(t, " JSON parse error. signalingData:").concat(e)), null
                        }
                    }
                }, {
                    key: "_handleActionType",
                    value: function(e, t) {
                        switch (e.actionType) {
                            case L.ACTION_TYPE_INVITE:
                                this._onNewInvitationReceived(e, t);
                                break;
                            case L.ACTION_TYPE_REJECT_INVITE:
                                this._onInviteeRejected(e);
                                break;
                            case L.ACTION_TYPE_ACCEPT_INVITE:
                                this._onInviteeAccepted(e);
                                break;
                            case L.ACTION_TYPE_CANCEL_INVITE:
                                this._onInvitationCancelled(e);
                                break;
                            case L.ACTION_TYPE_INVITE_TIMEOUT:
                                this._onInvitationTimeout(e)
                        }
                    }
                }, {
                    key: "_genBaseEmitData",
                    value: function(e) {
                        return {
                            inviteID: e.inviteID,
                            inviter: e.inviter,
                            groupID: e.groupID,
                            data: e.data || ""
                        }
                    }
                }, {
                    key: "_onNewInvitationReceived",
                    value: function(e, n) {
                        var o = "".concat(this._n, "._onNewInvitationReceived"),
                            i = e.inviteID,
                            a = e.inviteeList,
                            s = e.groupID,
                            r = e.inviter,
                            c = this._sigM.getMyUserID(),
                            u = a.includes(c),
                            l = e.timeout,
                            d = (Ce().getTime() - 1e3 * n.time) / 1e3;
                        0 < l && 0 < d && d < l && (l -= d), o = "".concat(o, " myselfIncluded:").concat(u, " groupID:").concat(s, " signalObj:").concat(JSON.stringify(e)), Oe.l("".concat(o, " timeout:").concat(l, "s delta:").concat(d, "s")), (s && u || !s) && ((o = this._sigM.getInviteInfo(i)) && o === e || (o || this._sigM.setInviteInfo(i, t(t({}, e), {}, {
                            message: n
                        })), this._sigM.emitEvent(L.NEW_INVITATION_RECEIVED, t(t({}, this._genBaseEmitData(e)), {}, {
                            inviteeList: a
                        })), r !== c && this._sigM.startTimer(t(t({}, e), {}, {
                            timeout: l
                        }))))
                    }
                }, {
                    key: "_onInviteeRejected",
                    value: function(e) {
                        var n = "".concat(this._n, "._onInviteeRejected"),
                            o = e.inviteID,
                            i = e.inviter,
                            a = e.groupID,
                            s = this._sigM.hasInviteInfo(o);
                        Oe.l("".concat(n, " inviteID:").concat(o, " hasInviteID:").concat(s, " inviter:").concat(i, " groupID:").concat(a)), s && (this._sigM.updateInviteInfo(e), this._sigM.emitEvent(L.INVITEE_REJECTED, t(t({}, this._genBaseEmitData(e)), {}, {
                            invitee: e.inviteeList[0]
                        })))
                    }
                }, {
                    key: "_onInviteeAccepted",
                    value: function(e) {
                        var n = "".concat(this._n, "._onInviteeAccepted"),
                            o = e.inviteID,
                            i = e.inviter,
                            a = e.groupID,
                            s = this._sigM.hasInviteInfo(o);
                        Oe.l("".concat(n, " inviteID:").concat(o, " hasInviteID:").concat(s, " inviter:").concat(i, " groupID:").concat(a)), s && (this._sigM.updateInviteInfo(e), this._sigM.emitEvent(L.INVITEE_ACCEPTED, t(t({}, this._genBaseEmitData(e)), {}, {
                            invitee: e.inviteeList[0]
                        })))
                    }
                }, {
                    key: "_onInvitationCancelled",
                    value: function(e) {
                        var t = "".concat(this._n, "._onInvitationCancelled"),
                            n = e.inviteID,
                            o = e.inviter,
                            i = e.groupID,
                            a = this._sigM.hasInviteInfo(n);
                        Oe.l("".concat(t, " inviteID:").concat(n, " hasInviteID:").concat(a, " inviter:").concat(o, " groupID:").concat(i)), a && (this._sigM.deleteInviteInfo(n), this._sigM.emitEvent(L.INVITATION_CANCELLED, this._genBaseEmitData(e)))
                    }
                }, {
                    key: "_onInvitationTimeout",
                    value: function(e) {
                        var n = "".concat(this._n, "._onInvitationTimeout"),
                            o = e.inviteID,
                            i = e.inviter,
                            a = e.groupID,
                            s = e.inviteeList,
                            r = this._sigM.hasInviteInfo(o);
                        Oe.l("".concat(n, " inviteID:").concat(o, " hasInviteID:").concat(r, " inviter:").concat(i, " groupID:").concat(a, "  data:").concat(e.data)), r && (this._sigM.updateInviteInfo(e), this._sigM.emitEvent(L.INVITATION_TIMEOUT, t(t({}, this._genBaseEmitData(e)), {}, {
                            inviteeList: s,
                            isSelfTimeout: !1
                        })))
                    }
                }, {
                    key: "_onInvitationModified",
                    value: function(e, n) {
                        var o = "".concat(this._n, "._onInvitationModified"),
                            i = e.inviteID,
                            a = e.data;
                        Oe.l("".concat(o, " inviteID:").concat(i, " data:").concat(a)), this._sigM.setInviteInfo(i, t(t({}, e), {}, {
                            message: n
                        })), this._sigM.emitEvent(L.INVITATION_MODIFIED, {
                            inviteID: i,
                            data: a
                        })
                    }
                }]), Dr),
                lr = (s(Tr, [{
                    key: "generateInviteID",
                    value: function() {
                        var e, t = (t = ks)((e = Ss)(32), 8) + "-" + t(e(16), 4) + "-" + t(16384 | e(12), 4) + "-" + t(32768 | e(14), 4) + "-" + t(e(48), 12);
                        return Oe.l("".concat(this._n, ".generateInviteID inviteID:").concat(t)), t
                    }
                }, {
                    key: "createInviteInfo",
                    value: function(e) {
                        var n = this.generateInviteID(),
                            o = (e = this.createInviteCustomData(t(t({}, e), {}, {
                                inviteID: n
                            }))).groupID,
                            i = e.inviteeList;
                        return o = o || i[0], {
                            customData: e,
                            message: this._sigM.createSignaling(e, o),
                            inviteID: n
                        }
                    }
                }, {
                    key: "_genBaseCustomData",
                    value: function(e) {
                        var t = e.data,
                            n = e.inviteID;
                        return {
                            businessID: 1,
                            timeout: 0,
                            data: void 0 === t ? "" : t,
                            inviteID: void 0 === n ? "" : n,
                            groupID: void 0 === (e = e.groupID) ? "" : e
                        }
                    }
                }, {
                    key: "createInviteCustomData",
                    value: function(e) {
                        var n = e.userID,
                            o = void 0 === (o = e.timeout) ? 0 : o,
                            i = void 0 === (i = e.groupID) ? "" : i,
                            a = this._sigM.getMyUserID();
                        return a = t(t({}, this._genBaseCustomData(e)), {}, {
                            actionType: L.ACTION_TYPE_INVITE,
                            inviter: a,
                            inviteeList: i ? e.inviteeList : [n],
                            timeout: o
                        }), Oe.l("".concat(this._n, ".createInviteCustomData customData:"), a), a
                    }
                }, {
                    key: "createCancelCustomData",
                    value: function(e) {
                        var n, o = "".concat(this._n, ".createCancelCustomData"),
                            i = e.inviteID,
                            a = this._sigM.getMyUserID(),
                            s = (i = this._sigM.getInviteInfo(i)).inviteeList,
                            r = i.groupID;
                        return (i = i.inviter) === a ? n = t(t({}, this._genBaseCustomData(e)), {}, {
                            actionType: L.ACTION_TYPE_CANCEL_INVITE,
                            groupID: r,
                            inviter: a,
                            inviteeList: s
                        }) : Oe.e("".concat(o, " unmatched inviter:").concat(i, " and my userID:").concat(a)), Oe.l("".concat(o, " customData:"), n), n
                    }
                }, {
                    key: "createAcceptCustomData",
                    value: function(e) {
                        var n, o = "".concat(this._n, ".createAcceptCustomData"),
                            i = e.inviteID,
                            a = this._sigM.getMyUserID(),
                            s = this._sigM.getInviteInfo(i),
                            r = s.inviter,
                            c = s.groupID;
                        return s.inviteeList.includes(a) ? n = t(t({}, this._genBaseCustomData(e)), {}, {
                            actionType: L.ACTION_TYPE_ACCEPT_INVITE,
                            groupID: c,
                            inviter: r,
                            inviteeList: [a]
                        }) : Oe.e("".concat(o, " userID:").concat(a, " not in inviteeList. inviteID:").concat(i, " groupID:").concat(c)), Oe.l("".concat(o, " customData:"), n), n
                    }
                }, {
                    key: "createRejectCustomData",
                    value: function(e) {
                        var n, o = "".concat(this._n, ".createRejectCustomData"),
                            i = e.inviteID,
                            a = this._sigM.getMyUserID(),
                            s = this._sigM.getInviteInfo(i),
                            r = s.inviter,
                            c = s.groupID;
                        return s.inviteeList.includes(a) ? n = t(t({}, this._genBaseCustomData(e)), {}, {
                            actionType: L.ACTION_TYPE_REJECT_INVITE,
                            groupID: c,
                            inviter: r,
                            inviteeList: [a]
                        }) : Oe.e("".concat(o, " userID:").concat(a, " not in inviteeList. inviteID:").concat(i, " groupID:").concat(c)), Oe.l("".concat(o, " customData:"), n), n
                    }
                }, {
                    key: "createTimeoutCustomData",
                    value: function(e) {
                        var n = "".concat(this._n, ".createTimeoutCustomData"),
                            o = e.inviteeList,
                            i = e.inviter,
                            a = void 0 !== (a = e.isInviter) && a,
                            s = this._sigM.getMyUserID();
                        return e = t(t({}, this._genBaseCustomData(e)), {}, {
                            actionType: L.ACTION_TYPE_INVITE_TIMEOUT,
                            inviter: i,
                            inviteeList: a ? o : [s]
                        }), Oe.l("".concat(n, " customData:"), e), e
                    }
                }]), Tr),
                dr = (s(Cr, [{
                    key: "setCloudConfig",
                    value: function() {
                        var e = 0 < arguments.length && void 0 !== arguments[0] ? arguments[0] : 20,
                            t = 1 < arguments.length && void 0 !== arguments[1] ? arguments[1] : 300;
                        this.COUNT = e, this.EXPIRED_TIME = t, Oe.l("".concat(this._n, ".setCloudConfig count:").concat(e, ", time:").concat(t))
                    }
                }, {
                    key: "getHistorySignaling",
                    value: function() {
                        var e = this,
                            t = this._sigM.get(11).getLocalConvList();
                        He(t) || (this._getC2CSignalingList(), t = this._getValidGroupConvList(t), this._getGroupSignalingList(t).then((function(t) {
                            e._handleSignalingList(t)
                        })))
                    }
                }, {
                    key: "_getC2CSignalingList",
                    value: function() {
                        var e = this._sigM.get(6).getMessageListFromUnreadDB();
                        e = this._sigM.filterMessageList(e), this._getRelatedToMeMap(e)
                    }
                }, {
                    key: "_getGroupSignalingList",
                    value: function(e) {
                        var t = this;
                        return 0 === (e = this._createPromiseList(e)).length ? Promise.resolve(this._sortSignaling(this._relatedToMeMap)) : this._concurrentGetMessageList(e).then((function(e) {
                            var n = new Map;
                            return e.forEach((function(e) {
                                e = e.list, e = t._getRelatedToMeMap(e), n = new Map([].concat(m(n), m(e)))
                            })), t._sortSignaling(n)
                        }))
                    }
                }, {
                    key: "_handleSignalingList",
                    value: function(e) {
                        He(e) || this._sigM.onNewMessageList(e)
                    }
                }, {
                    key: "_getValidGroupConvList",
                    value: function(e) {
                        for (var t = [], n = 0, o = e.length; n < o; n++) {
                            var i = (s = e[n]).type,
                                a = s.unreadCount,
                                s = s.lastMessage;
                            i = i === E.CONV_GROUP, s = this._isNotExpired(s), i && a && s && t.push(e[n])
                        }
                        return t
                    }
                }, {
                    key: "_isNotExpired",
                    value: function(e) {
                        return !(!e || !e.lastTime) && e.lastTime > De() - this.EXPIRED_TIME
                    }
                }, {
                    key: "_createPromiseList",
                    value: function(e) {
                        for (var t = [], n = 0; n < e.length; n++) {
                            var o = (i = e[n]).conversationID,
                                i = (i = i.unreadCount) < this.COUNT ? i : this.COUNT;
                            this._map.set(o, {
                                msgCount: i,
                                list: []
                            }), i = this._sigM.get(11).getMessageList({
                                conversationID: o
                            }), t.push(i)
                        }
                        return t
                    }
                }, {
                    key: "_concurrentGetMessageList",
                    value: function(e) {
                        var t = this,
                            n = [];
                        return Promise.all(e).then((function(e) {
                            for (var o = 0; o < e.length; o++) {
                                var i = (a = e[o]).code,
                                    a = a.data;
                                0 === i && 0 !== a.messageList.length && (t._handleMessageList(a.messageList), (i = t._relayGetMessageList(a)) && n.push(i))
                            }
                            return 0 < n.length ? t._concurrentGetMessageList(n) : t._map
                        }))
                    }
                }, {
                    key: "_relayGetMessageList",
                    value: function(e) {
                        var t = e.messageList,
                            n = e.nextReqMessageID;
                        if (e = e.isCompleted, 0 === t.length) return null;
                        t = t[0].conversationID;
                        var o = this._map.get(t).msgCount;
                        return 0 === o || e ? null : this._sigM.get(11).getMessageList({
                            conversationID: t,
                            nextReqMessageID: n,
                            count: o
                        })
                    }
                }, {
                    key: "_handleMessageList",
                    value: function(e) {
                        var t = e.length,
                            n = e[0].conversationID,
                            o = (i = this._map.get(n)).msgCount,
                            i = i.list;
                        this._map.set(n, {
                            msgCount: 0 < o - t ? o - t : 0,
                            list: i.concat(this._sigM.filterMessageList(e))
                        })
                    }
                }, {
                    key: "_getRelatedToMeMap",
                    value: function(e) {
                        for (var t = 0; t < e.length; t++) {
                            var n = e[t];
                            this._saveRelatedToMe(n)
                        }
                        return this._relatedToMeMap
                    }
                }, {
                    key: "_saveRelatedToMe",
                    value: function(e) {
                        var t, n = (t = this._sigM.getPayloadData(e) || {}).actionType,
                            o = void 0 === (t = t.inviteID) ? "" : t;
                        switch (void 0 === n ? "" : n) {
                            case L.ACTION_TYPE_INVITE:
                                this._setHistoryInvite(e);
                                break;
                            case L.ACTION_TYPE_REJECT_INVITE:
                            case L.ACTION_TYPE_ACCEPT_INVITE:
                                this._updateHistoryInvite(e);
                                break;
                            case L.ACTION_TYPE_CANCEL_INVITE:
                                this._delHistoryInvite(o);
                                break;
                            case L.ACTION_TYPE_INVITE_TIMEOUT:
                                this._updateHistoryInvite(e)
                        }
                    }
                }, {
                    key: "_setHistoryInvite",
                    value: function(e) {
                        var n = this._sigM.getPayloadData(e) || {},
                            o = void 0 === (o = n.inviteID) ? "" : o,
                            i = void 0 === (i = n.inviteeList) ? [] : i,
                            a = void 0 === (a = n.timeout) ? 0 : a,
                            s = this._sigM.getMyUserID();
                        i.includes(s) && (i = De() - e.time, 0 < a && a < i && 0 !== a || this._relatedToMeMap.set(o, t(t({}, n), {}, {
                            messageList: [e]
                        })))
                    }
                }, {
                    key: "_delHistoryInvite",
                    value: function(e) {
                        this._relatedToMeMap.has(e) && this._relatedToMeMap.delete(e)
                    }
                }, {
                    key: "_updateHistoryInvite",
                    value: function(e) {
                        var t = void 0 === (t = (i = this._sigM.getPayloadData(e) || {}).inviteID) ? "" : t,
                            n = void 0 === (i = i.inviteeList) ? [] : i;
                        if (this._relatedToMeMap.has(t)) {
                            for (var o = (i = this._relatedToMeMap.get(t)).inviteeList, i = i.messageList, a = 0; a < n.length; a++) {
                                var s = n[a];
                                o.includes(s) && o.splice(o.indexOf(s), 1)
                            }
                            0 === o.length ? this._delHistoryInvite(t) : i.push(e)
                        } else this._delHistoryInvite(t)
                    }
                }, {
                    key: "_sortSignaling",
                    value: function(e) {
                        var t = [];
                        return e.forEach((function(e) {
                            t = [].concat(m(t), m(e.messageList))
                        })), t.sort((function(e, t) {
                            return e.time - t.time
                        }))
                    }
                }, {
                    key: "reset",
                    value: function() {
                        this._map.clear(), this._relatedToMeMap.clear()
                    }
                }]), Cr),
                pr = s((function e(t, n) {
                    i(this, e), this.businessID = t.businessID || 1, this.inviteID = t.inviteID, this.groupID = t.groupID || "", this.inviter = t.inviter || "", this.inviteeList = t.inviteeList || [], this.data = t.data || "", this.actionType = t.actionType || L.ACTION_TYPE_INVITE, this.timeout = t.timeout || 0
                })),
                _r = ["message"],
                hr = ["message"],
                gr = (c(yr, Rn), Rs = g(yr), s(yr, [{
                    key: "onC2CUnreadHandleCompleted",
                    value: function() {
                        this._isC2CUnreadHandleCompleted = !0, this._isCloudConfigCompleted && this._isConvSyncCompleted && !this._isSyncCompleted && this.onReady()
                    }
                }, {
                    key: "onConvSyncCompleted",
                    value: function() {
                        this._isConvSyncCompleted = !0, this._isC2CUnreadHandleCompleted && this._isCloudConfigCompleted && !this._isSyncCompleted && this.onReady()
                    }
                }, {
                    key: "onCloudConfig",
                    value: function() {
                        this._isCloudConfigCompleted = !0;
                        var e = this.getCloudConfig("history_s_count"),
                            t = this.getCloudConfig("history_s_time");
                        ut(e) || (e = Number(e)), ut(t) || (t = Number(t)), this._historySignalingHandler.setCloudConfig(e, t), this._isC2CUnreadHandleCompleted && this._isConvSyncCompleted && !this._isSyncCompleted && this.onReady()
                    }
                }, {
                    key: "_isListenerExisted",
                    value: function() {
                        return -1 < this._m.getOEmitInst().eventNames().indexOf(L.NEW_INVITATION_RECEIVED)
                    }
                }, {
                    key: "onReady",
                    value: function() {
                        this._isSyncCompleted = !0;
                        var e = this._isListenerExisted();
                        Oe.l("".concat(this._n, ".onReady. isListenerExisted: ").concat(e)), e && this._historySignalingHandler.getHistorySignaling()
                    }
                }, {
                    key: "onNewMessageList",
                    value: function(e) {
                        if (0 < (e = this.filterMessageList(e)).length) return this._remoteSignalingHandler.onNewMessageList(e)
                    }
                }, {
                    key: "onMessageModified",
                    value: function(e) {
                        if (0 < (e = this.filterMessageList(e)).length) return this._remoteSignalingHandler.onMessageModified(e)
                    }
                }, {
                    key: "hasInviteInfo",
                    value: function(e) {
                        return this._inviteInfoMap.has(e)
                    }
                }, {
                    key: "getInviteInfo",
                    value: function(e) {
                        return this._inviteInfoMap.get(e)
                    }
                }, {
                    key: "setInviteInfo",
                    value: function(e, n) {
                        var o = n.message;
                        n = _(n, _r), Oe.l("".concat(this._n, ".setInviteInfo inviteID:").concat(e, " data:"), n), this._inviteInfoMap.set(e, t(t({}, n), {}, {
                            message: o
                        }))
                    }
                }, {
                    key: "deleteInviteInfo",
                    value: function(e) {
                        this.hasInviteInfo(e) && (Oe.l("".concat(this._n, ".deleteInviteInfo inviteID:").concat(e, ".")), this._inviteInfoMap.delete(e))
                    }
                }, {
                    key: "updateInviteInfo",
                    value: function(e) {
                        var t = "".concat(this._n, ".updateInviteInfo"),
                            n = e.inviteID,
                            o = e.inviter,
                            i = e.inviteeList;
                        e = e.groupID, Oe.l("".concat(t, " inviteID:").concat(n, " inviter:").concat(o, " groupID:").concat(e)), e && this.hasInviteInfo(n) ? (o = i[0], (e = this.getInviteInfo(n).inviteeList).includes(o) && (e.splice(e.indexOf(o), 1), Oe.l("".concat(t, " remove ").concat(o, ". localInviteeList.length:").concat(e.length))), 0 === e.length && this.deleteInviteInfo(n)) : this.deleteInviteInfo(n)
                    }
                }, {
                    key: "canIUseSignaling",
                    value: function() {
                        return this._canIUseSignaling
                    }
                }, {
                    key: "emitEvent",
                    value: function(e, t) {
                        this.emitOEvt(e, t)
                    }
                }, {
                    key: "addSignalingListener",
                    value: function(e, t, n) {
                        this._canIUseSignaling || (this._canIUseSignaling = !0), this._m.getOEmitInst().on(e, t, n)
                    }
                }, {
                    key: "removeSignalingListener",
                    value: function(e, t, n) {
                        this._m.getOEmitInst().off(e, t, n), this._isListenerExisted() || (this._canIUseSignaling = !1)
                    }
                }, {
                    key: "invite",
                    value: function(e) {
                        var n = this,
                            o = "".concat(this._n, ".").concat("invite"),
                            i = this._localSignalingHandler.createInviteInfo(e),
                            a = i.message,
                            s = i.customData,
                            r = i.inviteID;
                        return Oe.l("".concat(o, " options:").concat(JSON.stringify(e), " inviteID:").concat(r)), this.sendSignaling(a, e).then((function(e) {
                            return e && 0 === e.code ? (n.setInviteInfo(r, t(t({}, s), {}, {
                                message: a
                            })), n.startTimer(t(t({}, s), {}, {
                                inviteID: r
                            })), t(t({}, e), {}, {
                                inviteID: r
                            })) : e
                        })).catch((function(e) {
                            return Mn(e)
                        }))
                    }
                }, {
                    key: "inviteSync",
                    value: function(e, n, o) {
                        var i = this,
                            a = "".concat(this._n, ".").concat("inviteSync"),
                            s = this._localSignalingHandler.createInviteInfo(e),
                            r = s.message,
                            c = s.customData,
                            u = s.inviteID;
                        return Oe.l("".concat(a, " options:").concat(JSON.stringify(e), " inviteID:").concat(u)), this.sendSignaling(r, e).then((function(e) {
                            if (e && 0 === e.code) return i.setInviteInfo(u, t(t({}, c), {}, {
                                message: r
                            })), i.startTimer(t(t({}, c), {}, {
                                inviteID: u
                            })), n && n({
                                inviteID: u
                            }), {
                                inviteID: u
                            };
                            o && o(0 === e.code, e.message || "")
                        })).catch((function(e) {
                            return o && o(e.code, e.message), Mn(e)
                        })), u
                    }
                }, {
                    key: "_handleImResponse",
                    value: function(e, t, n) {
                        t && 0 === t.code && (this._isHandling = !1, n ? this.deleteInviteInfo(e.inviteID) : this.updateInviteInfo(e))
                    }
                }, {
                    key: "cancel",
                    value: function(e) {
                        var n = this,
                            o = "".concat(this._n, ".").concat("cancel");
                        if (Oe.l("".concat(o, " options:").concat(JSON.stringify(e))), !this.hasInviteInfo(e.inviteID) || this._isHandling) return Mn({
                            code: Un.INVALID_CANCEL_MESSAGE
                        });
                        this._isHandling = !0;
                        var i = this._localSignalingHandler.createCancelCustomData(e);
                        if (!i) return this._isHandling = !1, Mn({
                            code: Un.SIGNALING_NO_PERMISSION
                        });
                        o = i.groupID;
                        var a = i.inviteeList;
                        return o = o || a[0], a = this.createSignaling(i, o), this.sendSignaling(a, e).then((function(o) {
                            return n._handleImResponse(i, o, !0), 0 === o.code ? t(t({}, o), {}, {
                                inviteID: e.inviteID
                            }) : o
                        })).catch((function(e) {
                            return Mn(e)
                        }))
                    }
                }, {
                    key: "accept",
                    value: function(e) {
                        var n = this,
                            o = "".concat(this._n, ".").concat("accept");
                        if (Oe.l("".concat(o, " options:").concat(JSON.stringify(e))), !this.hasInviteInfo(e.inviteID) || this._isHandling) return Mn({
                            code: Un.SIGNALING_INVALID_INVITE_ID
                        });
                        this._isHandling = !0;
                        var i = this._localSignalingHandler.createAcceptCustomData(e);
                        return i ? (o = this.createSignaling(i), this.sendSignaling(o, e).then((function(o) {
                            return n._handleImResponse(i, o), 0 === o.code ? t(t({}, o), {}, {
                                inviteID: e.inviteID
                            }) : o
                        })).catch((function(e) {
                            return Mn(e)
                        }))) : (this._isHandling = !1, Mn({
                            code: Un.SIGNALING_NO_PERMISSION
                        }))
                    }
                }, {
                    key: "reject",
                    value: function(e) {
                        var n = this,
                            o = "".concat(this._n, ".").concat("reject");
                        if (Oe.l("".concat(o, " options:").concat(JSON.stringify(e))), !this.hasInviteInfo(e.inviteID) || this._isHandling) return Mn({
                            code: Un.SIGNALING_INVALID_INVITE_ID
                        });
                        this._isHandling = !0;
                        var i = this._localSignalingHandler.createRejectCustomData(e);
                        return i ? (o = this.createSignaling(i), this.sendSignaling(o, e).then((function(o) {
                            return n._handleImResponse(i, o, !0), 0 === o.code ? t(t({}, o), {}, {
                                inviteID: e.inviteID
                            }) : o
                        })).catch((function(e) {
                            return Mn(e)
                        }))) : (this._isHandling = !1, Mn({
                            code: Un.SIGNALING_NO_PERMISSION
                        }))
                    }
                }, {
                    key: "getSignalingInfo",
                    value: function(e) {
                        var t = "".concat(this._n, ".getSignalingInfo"),
                            n = e.ID,
                            o = e.from,
                            i = e.to,
                            a = this._filterSignaling(e),
                            s = null;
                        return a && (e = this.getPayloadData(e), s = new pr(e)), e = a ? "actionType:".concat(s.actionType) : "", Oe.l("".concat(t, " messageID:").concat(n, " from:").concat(o, " to:").concat(i, " ") + "".concat(e, " isSignaling:").concat(a)), s
                    }
                }, {
                    key: "modifyInvitation",
                    value: function(e) {
                        var n = this,
                            o = e.inviteID,
                            i = e.data;
                        if (!this.hasInviteInfo(e.inviteID) || this._isHandling) return Mn({
                            code: Un.SIGNALING_INVALID_INVITE_ID
                        });
                        this._isHandling = !0;
                        var a = (e = this.getInviteInfo(o)).message,
                            s = _(e, hr),
                            r = a.payload.data;
                        return s.data = i, a.payload.data = JSON.stringify(s), this.get(2).modifyRemoteMessage(a).then((function(e) {
                            return n.setInviteInfo(o, t(t({}, s), {}, {
                                message: a
                            })), n._isHandling = !1, e
                        })).catch((function(e) {
                            return n._isHandling = !1, a.payload.data = r, Mn(e)
                        }))
                    }
                }, {
                    key: "_genMsgCtrlInfo",
                    value: function() {
                        var e = void 0 === (e = (i = 0 < arguments.length && void 0 !== arguments[0] ? arguments[0] : {}).data) ? "" : e,
                            t = i.onlineUserOnly,
                            n = void 0 === (n = i.inviteID) ? "" : n,
                            o = i.offlinePushInfo,
                            i = i.actionType,
                            a = {
                                _onlineOnlyFlag: !1
                            };
                        return n = {
                            onlineUserOnly: (a = n && this.getInviteInfo(n) ? this.getInviteInfo(n).message : a)._onlineOnlyFlag || t || !1,
                            offlinePushInfo: o,
                            messageControlInfo: {
                                excludedFromContentModeration: !0,
                                excludedFromUnreadCount: !1,
                                excludedFromLastMessage: !1
                            }
                        }, i === L.ACTION_TYPE_INVITE_TIMEOUT ? (a = !!e.match(/excludeTimeoutSignalingFromHistoryMessage/), n.messageControlInfo.excludedFromUnreadCount = a, n.messageControlInfo.excludedFromLastMessage = a, n) : (t = !!e.match(/excludeFromHistoryMessage/), o = !!e.match(/excludeOriginalSignalingFromHistoryMessage/), n.messageControlInfo.excludedFromUnreadCount = t || o, n.messageControlInfo.excludedFromLastMessage = t || o, n)
                    }
                }, {
                    key: "sendSignaling",
                    value: function(e, t) {
                        var n = this;
                        return this.get(2).sendMessageInstance(e, this._genMsgCtrlInfo(t)).catch((function(e) {
                            return n._isHandling = !1, Mn(e)
                        }))
                    }
                }, {
                    key: "filterMessageList",
                    value: function(e) {
                        var t = this;
                        return e.filter((function(e) {
                            return t._filterSignaling(e)
                        }))
                    }
                }, {
                    key: "getPayloadData",
                    value: function(e) {
                        return this._remoteSignalingHandler.getPayloadData(e)
                    }
                }, {
                    key: "createSignaling",
                    value: function(e, t) {
                        var n = e.groupID,
                            o = e.inviter;
                        return t = {
                            to: t || n || o,
                            conversationType: n ? E.CONV_GROUP : E.CONV_C2C,
                            priority: E.MSG_PRIORITY_HIGH,
                            payload: {
                                data: JSON.stringify(e)
                            }
                        }, o = this.get(2).createCustomMessage(t), Oe.l("".concat(this._n, ".createSignaling. message:"), o), o
                    }
                }, {
                    key: "_filterSignaling",
                    value: function(e) {
                        var t, n, o = !1;
                        return e.type && e.type === E.MSG_CUSTOM && (t = e.cloudCustomData, e = void 0 === (e = e.payload.data) ? "" : e, t = (void 0 === t ? "" : t).match(/"type":"tsignaling"/), n = e.match(/inviteID/), e = e.match(/actionType/), o = t || n && e), !!o
                    }
                }, {
                    key: "startTimer",
                    value: function(e) {
                        var t, n, o, i = this,
                            a = "".concat(this._n, ".startTimer"),
                            s = e.timeout,
                            r = e.inviteID,
                            c = e.inviter,
                            u = e.groupID,
                            l = c === this.getMyUserID();
                        Oe.l("".concat(a, " timeout:").concat(s, " isInviter:").concat(l, " groupID:").concat(u)), s <= 0 || (t = l ? s + 5 : s, n = 1, o = setInterval((function() {
                            var s = i._hasLocalInviteInfo(e, l);
                            n < t && s ? ++n : (s && i._sendTimeoutNotice(r, l), Oe.l("".concat(a, " end.")), clearInterval(o))
                        }), 1e3))
                    }
                }, {
                    key: "_hasLocalInviteInfo",
                    value: function(e, t) {
                        var n = e.inviteID;
                        if (e = e.groupID, !this.hasInviteInfo(n)) return !1;
                        var o = "".concat(this._n, "._hasLocalInviteInfo"),
                            i = this.getInviteInfo(n).inviteeList;
                        return Oe.l("".concat(o, " inviteID:").concat(n, " inviteeList:").concat(i, " groupID:").concat(e)), !e || (t ? 0 < i.length : 0 < i.length && i.includes(this.getMyUserID()))
                    }
                }, {
                    key: "_getReceiver",
                    value: function(e, t) {
                        var n = t.groupID,
                            o = t.inviteeList;
                        return t = t.inviter, e ? n || o[0] : n || t
                    }
                }, {
                    key: "_sendTimeoutNotice",
                    value: function(e, n) {
                        var o = this,
                            i = this.getInviteInfo(e),
                            a = this._getReceiver(n, i),
                            s = (Oe.l("".concat(this._n, "._sendTimeoutNotice inviteID:").concat(e, " to:").concat(a, " isInviter:").concat(n)), this._localSignalingHandler.createTimeoutCustomData(t(t({}, i), {}, {
                                isInviter: n
                            }))),
                            r = this.createSignaling(s, a);
                        return this.sendSignaling(r, s).then((function(t) {
                            var i, a, c;
                            t && 0 === t.code && (t = s.data, i = s.groupID, a = s.inviteeList, c = s.inviter, o.emitEvent(L.INVITATION_TIMEOUT, {
                                data: t,
                                groupID: i,
                                inviteID: e,
                                inviteeList: a,
                                inviter: c,
                                isSelfTimeout: !0,
                                message: r
                            }), n ? o.deleteInviteInfo(e) : o.updateInviteInfo(s))
                        }))
                    }
                }, {
                    key: "reset",
                    value: function() {
                        Oe.l("".concat(this._n, ".reset")), this._inviteInfoMap.clear(), this._canIUseSignaling = !1, this._isHandling = !1, this._historySignalingHandler.reset(), this._isC2CUnreadHandleCompleted = !1, this._isConvSyncCompleted = !1, this._isSyncCompleted = !1, this._isCloudConfigCompleted = !1
                    }
                }]), yr),
                fr = ["followTypeList"],
                mr = {
                    NONE: 0,
                    FOLLOWERS: 1,
                    FOLLOWING: 2,
                    MUTUAL: 3
                },
                vr = (c(Mr, Rn), As = g(Mr), s(Mr, [{
                    key: "_onCloudConfig",
                    value: function() {
                        var e = this.getCloudConfig("follow_req_count");
                        ut(e) || (e = Number(e), this.DEFAULT_COUNT = e > this.MAX_COUNT ? this.MAX_COUNT : e, this._clearFollowList())
                    }
                }, {
                    key: "clearCacheOnReconnected",
                    value: function() {
                        this._clearFollowList(), this._followType.clear()
                    }
                }, {
                    key: "onFollowInfoNotify",
                    value: function(e) {
                        var t = void 0 === (t = (e = e.dataList || {}).followAddList) ? [] : t,
                            n = void 0 === (n = e.followDeleteList) ? [] : n,
                            o = (e = e.pushType, this._initFollowInfo());
                        1 === e ? this._handleFollowAddList({
                            followAddList: t,
                            followInfo: o
                        }) : this._handleFollowDeleteList({
                            followDeleteList: n,
                            followInfo: o
                        }), this._emitEvent(o), Oe.l("".concat(this._n, ".onFollowInfoNotify pushType:").concat(e, " followAddList:").concat(t.length, " followDeleteList:").concat(n.length))
                    }
                }, {
                    key: "_initFollowInfo",
                    value: function() {
                        var e = {};
                        return Object.values(mr).forEach((function(t) {
                            t !== mr.NONE && (e[t] = {
                                userInfoList: [],
                                isAdd: !1
                            })
                        })), e
                    }
                }, {
                    key: "_handleFollowAddList",
                    value: function(e) {
                        var t = this,
                            n = e.followAddList,
                            o = e.followInfo;
                        n.forEach((function(e) {
                            var n = void 0 === (n = e.followTypeList) ? [] : n,
                                i = _(e, fr);
                            n.forEach((function(e) {
                                o[e].userInfoList.push(i), o[e].isAdd = !0
                            })), t._setFollowType(e.userID, e.followType)
                        }))
                    }
                }, {
                    key: "_handleFollowDeleteList",
                    value: function(e) {
                        var t = this,
                            n = e.followDeleteList,
                            o = e.followInfo;
                        n.forEach((function(e) {
                            var n = void 0 === (n = e.followTypeList) ? [] : n,
                                i = e.userID;
                            n.forEach((function(e) {
                                o[e].userInfoList.push(i), o[e].isAdd = !1
                            })), t._setFollowType(e.userID, e.followType)
                        }))
                    }
                }, {
                    key: "_emitEvent",
                    value: function(e) {
                        var t = this;
                        Object.keys(e).forEach((function(n) {
                            n = Number(n);
                            var o = e[n];
                            0 < o.userInfoList.length && (n === mr.FOLLOWERS && (t._clearFollowList(mr.FOLLOWERS), t.emitOEvt(D.MY_FOLLOWERS_LIST_UPDATED, o)), n === mr.FOLLOWING && (t._clearFollowList(mr.FOLLOWING), t.emitOEvt(D.MY_FOLLOWING_LIST_UPDATED, o)), n === mr.MUTUAL && (t._clearFollowList(mr.MUTUAL), t.emitOEvt(D.MUTUAL_FOLLOWERS_LIST_UPDATED, o)))
                        }))
                    }
                }, {
                    key: "followUser",
                    value: function(e) {
                        if (!this.canIUse(U.FOLLOW)) return this.noUse("followUser");
                        var t = "".concat(this._n, ".").concat("followUser"),
                            n = "userIDList:".concat(e.length),
                            o = new Qn("followUser");
                        return o.setMessage(n), Oe.l("".concat(t, " ").concat(n)), this.req({
                            P: wn.FOLLOW,
                            data: {
                                fromAccount: this.getMyUserID(),
                                userIDList: e.map((function(e) {
                                    return {
                                        userID: e
                                    }
                                }))
                            }
                        }).then((function(e) {
                            return o.end(), Oe.l("".concat(t, " ok.")), vn(e.data.resultList)
                        })).catch((function(e) {
                            return o.setError(e).end(), Oe.e("".concat(t, " failed. error:"), e), Mn(e)
                        }))
                    }
                }, {
                    key: "unfollowUser",
                    value: function(e) {
                        if (!this.canIUse(U.FOLLOW)) return this.noUse("unfollowUser");
                        var t = "".concat(this._n, ".").concat("unfollowUser"),
                            n = "userIDList:".concat(e.length),
                            o = new Qn("unfollowUser");
                        return o.setMessage(n), Oe.l("".concat(t, " ").concat(n)), this.req({
                            P: wn.UNFOLLOW,
                            data: {
                                fromAccount: this.getMyUserID(),
                                userIDList: e
                            }
                        }).then((function(e) {
                            return o.end(), Oe.l("".concat(t, " ok.")), vn(e.data.resultList)
                        })).catch((function(e) {
                            return o.setError(e).end(), Oe.e("".concat(t, " failed. error:"), e), Mn(e)
                        }))
                    }
                }, {
                    key: "getMyFollowersList",
                    value: function() {
                        var e = this,
                            n = 0 < arguments.length && void 0 !== arguments[0] ? arguments[0] : "",
                            o = "getMyFollowersList";
                        if (!this.canIUse(U.FOLLOW)) return this.noUse(o);
                        var i = n || this.FIRST_PAGE_INDEX;
                        if (this._myFollowersList.has(i)) {
                            var a = (r = this._myFollowersList.get(i)).resultList,
                                s = r.nextCursor,
                                r = r.lastUpdateTime;
                            if (Date.now() - r < this.MAX_CATCH_TIME && 0 < a.length) return Oe.l("".concat(this._n, ".").concat(o, " nextCursor:").concat(n, " from local.")), In({
                                resultList: a,
                                nextCursor: s
                            })
                        }
                        return this._getFollowList(n, mr.FOLLOWERS).then((function(a) {
                            return e._myFollowersList.set(i, t(t({}, a), {}, {
                                lastUpdateTime: Date.now()
                            })), Oe.l("".concat(e._n, ".").concat(o, " nextCursor:").concat(n, " from remote.")), vn(a)
                        }))
                    }
                }, {
                    key: "getMyFollowingList",
                    value: function() {
                        var e = this,
                            n = 0 < arguments.length && void 0 !== arguments[0] ? arguments[0] : "",
                            o = "getMyFollowingList";
                        if (!this.canIUse(U.FOLLOW)) return this.noUse(o);
                        var i = n || this.FIRST_PAGE_INDEX;
                        if (this._myFollowingList.has(i)) {
                            var a = (r = this._myFollowingList.get(i)).resultList,
                                s = r.nextCursor,
                                r = r.lastUpdateTime;
                            if (Date.now() - r < this.MAX_CATCH_TIME && 0 < a.length) return Oe.l("".concat(this._n, ".").concat(o, " nextCursor:").concat(n, " from local.")), In({
                                resultList: a,
                                nextCursor: s
                            })
                        }
                        return this._getFollowList(n, mr.FOLLOWING).then((function(a) {
                            return e._myFollowingList.set(i, t(t({}, a), {}, {
                                lastUpdateTime: Date.now()
                            })), Oe.l("".concat(e._n, ".").concat(o, " nextCursor:").concat(n, " from remote.")), vn(a)
                        }))
                    }
                }, {
                    key: "getMutualFollowersList",
                    value: function() {
                        var e = this,
                            n = 0 < arguments.length && void 0 !== arguments[0] ? arguments[0] : "",
                            o = "getMutualFollowersList";
                        if (!this.canIUse(U.FOLLOW)) return this.noUse(o);
                        var i = n || this.FIRST_PAGE_INDEX;
                        if (this._myMutualFollowersList.has(i)) {
                            var a = (r = this._myMutualFollowersList.get(i)).resultList,
                                s = r.nextCursor,
                                r = r.lastUpdateTime;
                            if (Date.now() - r < this.MAX_CATCH_TIME && 0 < a.length) return Oe.l("".concat(this._n, ".").concat(o, " nextCursor:").concat(n, " from local.")), In({
                                resultList: a,
                                nextCursor: s
                            })
                        }
                        return this._getFollowList(n, mr.MUTUAL).then((function(a) {
                            return e._myMutualFollowersList.set(i, t(t({}, a), {}, {
                                lastUpdateTime: Date.now()
                            })), Oe.l("".concat(e._n, ".").concat(o, " nextCursor:").concat(n, " from remote.")), vn(a)
                        }))
                    }
                }, {
                    key: "_getFollowList",
                    value: function(e, n) {
                        var o = this,
                            i = new Qn("_getFollowList");
                        return i.setMessage("nextCursor:".concat(e, " type:").concat(n)), this.req({
                            P: wn.GET_FOLLOW,
                            data: {
                                fromAccount: this.getMyUserID(),
                                count: this.DEFAULT_COUNT,
                                nextCursor: e,
                                type: n
                            }
                        }).then((function(e) {
                            i.end();
                            var n = void 0 === (n = (e = e.data).resultList) ? [] : n,
                                a = (e = void 0 === (e = e.nextCursor) ? "" : e, []);
                            return n.forEach((function(e) {
                                var n = e.userID,
                                    i = e.followTime;
                                e = e.profileList, a.push(t({
                                    userID: n,
                                    followTime: i
                                }, o._handleProfileItem(void 0 === e ? [] : e)))
                            })), {
                                resultList: a,
                                nextCursor: e
                            }
                        })).catch((function(e) {
                            return i.setError(e).end(), Oe.e("".concat(o._n, "._getFollowList failed. error:"), e), Mn(e)
                        }))
                    }
                }, {
                    key: "_handleProfileItem",
                    value: function(e) {
                        var t = {};
                        return e.forEach((function(e) {
                            switch (e.tag) {
                                case Ge.NICK:
                                    t.nick = e.value;
                                    break;
                                case Ge.GENDER:
                                    t.gender = e.value;
                                    break;
                                case Ge.BIRTHDAY:
                                    t.birthday = e.value;
                                    break;
                                case Ge.LOCATION:
                                    t.location = e.value;
                                    break;
                                case Ge.SELFSIGNATURE:
                                    t.selfSignature = e.value;
                                    break;
                                case Ge.ALLOWTYPE:
                                    t.allowType = e.value;
                                    break;
                                case Ge.LANGUAGE:
                                    t.language = e.value;
                                    break;
                                case Ge.AVATAR:
                                    t.avatar = e.value;
                                    break;
                                case Ge.MESSAGESETTINGS:
                                    t.messageSettings = e.value;
                                    break;
                                case Ge.ADMINFORBIDTYPE:
                                    t.adminForbidType = e.value;
                                    break;
                                case Ge.LEVEL:
                                    t.level = e.value;
                                    break;
                                case Ge.ROLE:
                                    t.role = e.value;
                                    break;
                                default:
                                    t[e.tag] = e.value
                            }
                        })), t
                    }
                }, {
                    key: "getUserFollowInfo",
                    value: function(e) {
                        if (!this.canIUse(U.FOLLOW)) return this.noUse("getUserFollowInfo");
                        var t = e,
                            n = !1,
                            o = (ut(e) && (t = [this.getMyUserID()], n = !0), "".concat(this._n, ".").concat("getUserFollowInfo")),
                            i = (e = "userIDList:".concat(t.length, " isGetMyFollowInfo:").concat(n), new Qn("getUserFollowInfo"));
                        return i.setMessage(e), Oe.l("".concat(o, " ").concat(e)), this.req({
                            P: wn.GET_FOLLOW_INFO,
                            data: {
                                fromAccount: this.getMyUserID(),
                                userIDList: t
                            }
                        }).then((function(e) {
                            i.end(), Oe.l("".concat(o, " ok.")), e = e.data.followInfoList;
                            var t = [];
                            return (void 0 === e ? [] : e).forEach((function(e) {
                                var n = e.followersCount,
                                    o = e.followingCount;
                                e = e.mutualFollowersCount, t.push({
                                    followersCount: n,
                                    followingCount: o,
                                    mutualFollowersCount: e
                                })
                            })), vn(t)
                        })).catch((function(e) {
                            return i.setError(e).end(), Oe.e("".concat(o, " failed. error:"), e), Mn(e)
                        }))
                    }
                }, {
                    key: "checkFollowType",
                    value: function(e) {
                        var t = this;
                        if (!this.canIUse(U.FOLLOW)) return this.noUse("checkFollowType");
                        100 < e.length && (e = e.slice(0, 100), Oe.w("".concat(n, " ").concat(Ht(100))));
                        var n = "".concat(this._n, ".").concat("checkFollowType"),
                            o = "userIDList length:".concat(e.length, " "),
                            i = new Qn("checkFollowType"),
                            a = (i.setMessage(o), Oe.l("".concat(n, " ").concat(o)), []),
                            s = [];
                        return e.forEach((function(e) {
                            var n;
                            t._followType.has(e) ? (n = t._followType.get(e), a.push({
                                userID: e,
                                followType: n
                            })) : s.push(e)
                        })), Oe.l("".concat(n, " from local count:").concat(a.length, ", from remote count:").concat(s.length, ".")), 0 === s.length ? In(a) : this.req({
                            P: wn.CHECK_FOLLOW_TYPE,
                            data: {
                                fromAccount: this.getMyUserID(),
                                userIDList: s
                            }
                        }).then((function(e) {
                            return i.end(), Oe.l("".concat(n, " ok.")), (void 0 === (e = e.data.resultList) ? [] : e).forEach((function(e) {
                                var n = e.userID;
                                e = e.followType, t._setFollowType(n, e), a.push({
                                    userID: n,
                                    followType: e
                                })
                            })), vn(a)
                        })).catch((function(e) {
                            return i.setError(e).end(), Oe.e("".concat(n, " failed. error:"), e), Mn(e)
                        }))
                    }
                }, {
                    key: "_setFollowType",
                    value: function(e, t) {
                        this._followType.set(e, t)
                    }
                }, {
                    key: "_clearFollowList",
                    value: function(e) {
                        if (ut(e)) return this._myFollowersList.clear(), this._myFollowingList.clear(), void this._myMutualFollowersList.clear();
                        e !== mr.FOLLOWERS ? e !== mr.FOLLOWING ? e !== mr.MUTUAL || this._myMutualFollowersList.clear() : this._myFollowingList.clear() : this._myFollowersList.clear()
                    }
                }, {
                    key: "reset",
                    value: function() {
                        Oe.l("".concat(this._n, ".reset")), this._clearFollowList(), this._followType.clear()
                    }
                }]), Mr),
                Ir = ma((function(e, t) {
                    var n = "undefined" != typeof Uint8Array && "undefined" != typeof Uint16Array && "undefined" != typeof Int32Array;
                    t.assign = function(e) {
                        for (var t, n, i = Array.prototype.slice.call(arguments, 1); i.length;) {
                            var a = i.shift();
                            if (a) {
                                if ("object" !== o(a)) throw new TypeError(a + "must be non-object");
                                for (var s in a) t = a, n = s, Object.prototype.hasOwnProperty.call(t, n) && (e[s] = a[s])
                            }
                        }
                        return e
                    }, t.shrinkBuf = function(e, t) {
                        return e.length === t ? e : e.subarray ? e.subarray(0, t) : (e.length = t, e)
                    };
                    var i = {
                            arraySet: function(e, t, n, o, i) {
                                if (t.subarray && e.subarray) e.set(t.subarray(n, n + o), i);
                                else
                                    for (var a = 0; a < o; a++) e[i + a] = t[n + a]
                            },
                            flattenChunks: function(e) {
                                for (var t, n, o, i = 0, a = 0, s = e.length; a < s; a++) i += e[a].length;
                                for (o = new Uint8Array(i), a = t = 0, s = e.length; a < s; a++) n = e[a], o.set(n, t), t += n.length;
                                return o
                            }
                        },
                        a = {
                            arraySet: function(e, t, n, o, i) {
                                for (var a = 0; a < o; a++) e[i + a] = t[n + a]
                            },
                            flattenChunks: function(e) {
                                return [].concat.apply([], e)
                            }
                        };
                    t.setTyped = function(e) {
                        e ? (t.Buf8 = Uint8Array, t.Buf16 = Uint16Array, t.Buf32 = Int32Array, t.assign(t, i)) : (t.Buf8 = Array, t.Buf16 = Array, t.Buf32 = Array, t.assign(t, a))
                    }, t.setTyped(n)
                }));

            function Mr(e) {
                return i(this, Mr), (e = As.call(this, e))._n = "FollowModule", e._myFollowersList = new Map, e._myFollowingList = new Map, e._myMutualFollowersList = new Map, e._followType = new Map, e.MAX_CATCH_TIME = 6e5, e.FIRST_PAGE_INDEX = ot(), e.DEFAULT_COUNT = 500, e.MAX_COUNT = 1e3, e.getIEmitInst().on(qo.CLOUD_CONFIG, e._onCloudConfig, h(e)), e
            }

            function yr(e) {
                i(this, yr), (e = Rs.call(this, e))._n = "SignalingModule", e._inviteInfoMap = new Map, e._canIUseSignaling = !1, e._isHandling = !1, e._remoteSignalingHandler = new ur(h(e)), e._localSignalingHandler = new lr(h(e)), e._historySignalingHandler = new dr(h(e)), e._isC2CUnreadHandleCompleted = !1, e._isConvSyncCompleted = !1, e._isSyncCompleted = !1, e._isCloudConfigCompleted = !1;
                var t = e.getIEmitInst();
                return t.on(qo.C2C_UNREAD_HANDLE_COMPLETED, e.onC2CUnreadHandleCompleted, h(e)), t.on(qo.CONV_SYNC_COMPLETED, e.onConvSyncCompleted, h(e)), t.on(qo.CLOUD_CONFIG, e.onCloudConfig, h(e)), e
            }

            function Cr(e) {
                i(this, Cr), this._n = "HistorySignalingHandler", this._sigM = e, this.COUNT = 20, this.EXPIRED_TIME = 300, this._map = new Map, this._relatedToMeMap = new Map
            }

            function Tr(e) {
                i(this, Tr), this._n = "LocalSignalingHandler", this._sigM = e
            }

            function Dr(e) {
                i(this, Dr), this._n = "RemoteSignalingHandler", this._sigM = e
            }

            function Er(e) {
                i(this, Er), this._m = e, this._n = "ErrMsgModule", this.TIM_ERROR_ASSISTANCE = "tim_error_assistance", this.STORAGE_EXPIRES_TIME = 6048e5, this._map = new Map, this._init()
            }

            function Lr(e) {
                i(this, Lr), this._m = e, this._n = "TransCmdModule", this._TRTCCommandList = ["tui_room_svr.*", "callkit_records_svr.*", "room_engine_srv.*", "room_engine_http_srv.*", "room_engine_mic.*", "live_engine_srv.*", "live_engine_http_srv.*", "live_engine_pk.*"], this._TRTCCommandMap = new Map, this._setTRTCCommandMap(), this._m.getIEmitInst().on(qo.CLOUD_CONFIG, this._onCloudConfig, this)
            }

            function Sr(e) {
                return i(this, Sr), (e = Os.call(this, e))._n = "ProfanityFilterModule", e._plugin = null, e._filterConfigMap = new Map, e._startIndex = 0, e._version = 0, e._canIUseLexicon = !1, e._isFetching = !1, e._expiredTime = 0, e
            }

            function kr(e) {
                var t;
                return i(this, kr), (t = Ns.call(this, e))._m = e, t._n = "TIMPushModule", t._pluginName = "TIMPush", t._pushPlugin = void 0, t._androidPushConfig = {}, t._deviceToken = "", t._businessID = 0, t._iOSBusinessID = 0, t._c2cUnreadCount = 0, t._groupUnreadCount = 0, t._isWebUniapp = 0, t._deviceInfo = {
                    notificationStatus: 0,
                    deviceModel: "",
                    systemVersion: "",
                    pushVersion: "1.0.1",
                    packageName: ""
                }, t
            }

            function Ar(e) {
                var t;
                return i(this, Ar), (t = Gs.call(this, e))._m = e, t._n = "OfflinePushModule", t._offlinePushPlugin = void 0, t._androidPushConfig = {
                    huaweiPushBussinessId: "",
                    xiaomiPushBussinessId: "",
                    xiaomiPushAppId: "",
                    xiaomiPushAppKey: "",
                    meizuPushBussinessId: "",
                    meizuPushAppId: "",
                    meizuPushAppKey: "",
                    vivoPushBussinessId: "",
                    fcmPushBussinessId: "",
                    oppoPushBussinessId: "",
                    oppoPushAppKey: "",
                    oppoPushAppSecret: "",
                    honorPushBussinessId: ""
                }, t._deviceToken = "", t._businessID = 0, t._iosBusinessID = 0, t._c2cUnreadCount = 0, t._groupUnreadCount = 0, t._isWebUniapp = 0, t
            }

            function Rr(e) {
                i(this, Rr), this._m = e, this._n = "CommercialConfigModule", this._expiredTime = 0, this._isFetching = !1, this._purchasedFeatureHandler = new nr(this)
            }

            function Or(e) {
                i(this, Or), this._commercialConfigM = e, this._n = "PurchasedFeatureHandler", this._isSCMReported = !1, this._featureMap = new Map
            }

            function Nr(e) {
                return i(this, Nr), (e = Ps.call(this, e))._n = "WorkerTimerModule", e._isWorkerEnabled = !0, e._workerTimer = null, e._timerID = -1, e._init(), e.getIEmitInst().on(qo.CLOUD_CONFIG, e._onCloudConfig, h(e)), e
            }

            function Gr(e) {
                return i(this, Gr), (e = Us.call(this, e))._n = "SnsModule", e._friendHandler = new Zs(h(e)), e._friendApplicationHandler = new zs(h(e)), e._friendGroupHandler = new $s(h(e)), e.getIEmitInst().on(qo.A2KEY_AND_TINYID_UPDATED, e.onContextUpdated, h(e)), e
            }

            function Pr(e) {
                i(this, Pr), this._snsM = e, this._n = "FriendGroupHandler", this._map = new Map
            }

            function Ur(e) {
                i(this, Ur), He(e) || (this.name = e.name || "", this.userIDList = e.userIDList || [], this.count = this.userIDList.length || 0)
            }

            function br(e) {
                i(this, br), this._snsM = e, this._n = "FriendHandler", this._map = new Map, this._startIdx = 0, this._standardSeq = 0, this._customSeq = 0, this._expirationTime = 18e4
            }

            function wr(e, n) {
                i(this, wr), this.userID = e, this.remark = "", this.groupList = [], this.source = "", this.addTime = 0, this.friendCustomField = [], this.timestamp = 0;
                var o = {},
                    a = [];
                if (o.userID = e, !He(n))
                    for (var s, r = "", c = 0, u = n.length; c < u; c++)
                        if (r = n[c].tag, s = n[c].value, -1 < r.indexOf("Tag_SNS_Custom")) this.friendCustomField.push({
                            key: r,
                            value: s
                        });
                        else if (-1 < r.indexOf("Tag_Profile_Custom")) a.push({
                    key: r,
                    value: s
                });
                else switch (r) {
                    case Ge.NICK:
                        o.nick = s;
                        break;
                    case Ge.GENDER:
                        o.gender = s;
                        break;
                    case Ge.BIRTHDAY:
                        o.birthday = s;
                        break;
                    case Ge.LOCATION:
                        o.location = s;
                        break;
                    case Ge.SELFSIGNATURE:
                        o.selfSignature = s;
                        break;
                    case Ge.ALLOWTYPE:
                        o.allowType = s;
                        break;
                    case Ge.LANGUAGE:
                        o.language = s;
                        break;
                    case Ge.AVATAR:
                        o.avatar = s;
                        break;
                    case Ge.MESSAGESETTINGS:
                        o.messageSettings = s;
                        break;
                    case Ge.ADMINFORBIDTYPE:
                        o.adminForbidType = s;
                        break;
                    case Ge.LEVEL:
                        o.level = s;
                        break;
                    case Ge.ROLE:
                        o.role = s;
                        break;
                    case Pe.REMARK:
                        this.remark = s;
                        break;
                    case Pe.ADDTIME:
                        this.addTime = s;
                        break;
                    case Pe.GROUP:
                        this.groupList = JSON.parse(JSON.stringify(s));
                        break;
                    case Pe.ADDSOURCE:
                        this.source = s;
                        break;
                    case Pe.ADDWORDING:
                        break;
                    default:
                        Oe.l("snsProfileItem unknown tag->", n[c].tag)
                }
                this.profile = new ei(t(t({}, o), {}, {
                    profileCustomField: a
                }))
            }

            function Fr(e) {
                i(this, Fr), this._snsM = e, this._n = "FriendApplicationHandler", this._startTime = 0, this._maxLimited = 100, this._currentSeq = 0, this._map = new Map, this._unreadCount = 0
            }

            function qr(e) {
                i(this, qr), (e = bs.call(this, e))._n = "QualityStatModule", e.TAG = "im-ssolog-quality-stat", e.reportIndex = 0, e.wholePeriod = !1, e._qualityItems = [Fn, qn, xn, Vn, Hn, Bn, Kn, Yn, Wn, jn], e._messageSentItems = [xn, Vn, Hn, Bn, Kn], e._messageReceivedItems = [Yn, Wn, jn], e.REPORT_INTERVAL = 120, e.REPORT_SDKAPPID_BLACKLIST = [], e.REPORT_TINYID_WHITELIST = [], e._statInfoArr = [], e._avgRTT = new Ks, e._avgE2EDelay = new Bs, e._rateMessageSent = new Ys, e._rateMessageReceived = new Ws;
                var t = e.getIEmitInst();
                return t.on(qo.A2KEY_AND_TINYID_UPDATED, e._onLoginSuccess, h(e)), t.on(qo.CLOUD_CONFIG, e._onCloudConfig, h(e)), e
            }

            function xr() {
                i(this, xr), this._lastMap = new Map, this._currentMap = new Map
            }

            function Vr() {
                i(this, Vr), this._map = new Map
            }

            function Hr() {
                i(this, Hr), this._n = "AvgRTT", this._requestCount = 0, this._rttArray = []
            }

            function Br() {
                i(this, Br), this._n = "AvgE2EDelay", this._e2eDelayArray = []
            }

            function Kr(e) {
                return i(this, Kr), (e = ws.call(this, e))._n = "RecoverMsgModule", e.PULL_LIMIT_COUNT = 15, e
            }

            function Yr(e) {
                return i(this, Yr), (e = Fs.call(this, e))._n = "CloudControlModule", e._cloudConfig = new Map, e._expiredTime = 0, e._version = 0, e._isFetching = !1, e
            }

            function Wr(e) {
                return i(this, Wr), (e = qs.call(this, e))._n = "SessionModule", e._platform = e.getPlatform(), e._pHandler = new _s(h(e)), e._msgDispatcher = new gs(h(e)), e._cmdFreqLimitMap = new Map, e._cmdReqInfoMap = new Map, e._serverOverloadInfoMap = new Map, e._incrementalPullContactFlag = !0, e._init(), e.getIEmitInst().on(qo.CLOUD_CONFIG, e._onCloudConfig, h(e)), e
            }

            function jr(e, t, n, o) {
                for (var i = 65535 & e | 0, a = e >>> 16 & 65535 | 0, s = 0; 0 !== n;) {
                    for (n -= s = 2e3 < n ? 2e3 : n; a = a + (i = i + t[o++] | 0) | 0, --s;);
                    i %= 65521, a %= 65521
                }
                return i | a << 16 | 0
            }

            function Jr(e, t, n, o) {
                var i = Xr,
                    a = o + n;
                e ^= -1;
                for (var s = o; s < a; s++) e = e >>> 8 ^ i[255 & (e ^ t[s])];
                return -1 ^ e
            }

            function zr(e, t, n, o, i, a, s, r) {
                var c, u, l, d, p, _, h, g, f, m = r.bits,
                    v = 0,
                    I = 0,
                    M = 0,
                    y = 0,
                    C = 0,
                    T = 0,
                    D = 0,
                    E = 0,
                    L = 0,
                    S = 0,
                    k = null,
                    A = 0,
                    R = new Ir.Buf16(16),
                    O = new Ir.Buf16(16),
                    N = null,
                    G = 0;
                for (v = 0; v <= 15; v++) R[v] = 0;
                for (I = 0; I < o; I++) R[t[n + I]] ++;
                for (C = m, y = 15; 1 <= y && 0 === R[y]; y--);
                if (y < C && (C = y), 0 === y) return i[a++] = 20971520, i[a++] = 20971520, r.bits = 1, 0;
                for (M = 1; M < y && 0 === R[M]; M++);
                for (C < M && (C = M), v = E = 1; v <= 15; v++)
                    if ((E = (E << 1) - R[v]) < 0) return -1;
                if (0 < E && (0 === e || 1 !== y)) return -1;
                for (O[1] = 0, v = 1; v < 15; v++) O[v + 1] = O[v] + R[v];
                for (I = 0; I < o; I++) 0 !== t[n + I] && (s[O[t[n + I]] ++] = I);
                if (_ = 0 === e ? (k = N = s, 19) : 1 === e ? (k = Zr, A -= 257, N = Qr, G -= 257, 256) : (k = $r, N = ec, -1), v = M, p = a, D = I = S = 0, l = -1, d = (L = 1 << (T = C)) - 1, 1 === e && 852 < L || 2 === e && 592 < L) return 1;
                for (;;) {
                    for (f = s[I] < _ ? (g = 0, s[I]) : s[I] > _ ? (g = N[G + s[I]], k[A + s[I]]) : (g = 96, 0), c = 1 << (h = v - D), M = u = 1 << T; i[p + (S >> D) + (u -= c)] = h << 24 | g << 16 | f | 0, 0 !== u;);
                    for (c = 1 << v - 1; S & c;) c >>= 1;
                    if (S = 0 !== c ? (S & c - 1) + c : 0, I++, 0 == --R[v]) {
                        if (v === y) break;
                        v = t[n + s[I]]
                    }
                    if (C < v && (S & d) !== l) {
                        for (p += M, E = 1 << (T = v - (D = 0 === D ? C : D)); T + D < y && !((E -= R[T + D]) <= 0);) T++, E <<= 1;
                        if (L += 1 << T, 1 === e && 852 < L || 2 === e && 592 < L) return 1;
                        i[l = S & d] = C << 24 | T << 16 | p - a | 0
                    }
                }
                return 0 !== S && (i[p + S] = v - D << 24 | 64 << 16 | 0), r.bits = C, 0
            }
            Ir.assign, Ir.shrinkBuf, Ir.setTyped, Ir.Buf8, Ir.Buf16, Ir.Buf32;
            var Xr = function() {
                    for (var e = [], t = 0; t < 256; t++) {
                        for (var n = t, o = 0; o < 8; o++) n = 1 & n ? 3988292384 ^ n >>> 1 : n >>> 1;
                        e[t] = n
                    }
                    return e
                }(),
                Zr = [3, 4, 5, 6, 7, 8, 9, 10, 11, 13, 15, 17, 19, 23, 27, 31, 35, 43, 51, 59, 67, 83, 99, 115, 131, 163, 195, 227, 258, 0, 0],
                Qr = [16, 16, 16, 16, 16, 16, 16, 16, 17, 17, 17, 17, 18, 18, 18, 18, 19, 19, 19, 19, 20, 20, 20, 20, 21, 21, 21, 21, 16, 72, 78],
                $r = [1, 2, 3, 4, 5, 7, 9, 13, 17, 25, 33, 49, 65, 97, 129, 193, 257, 385, 513, 769, 1025, 1537, 2049, 3073, 4097, 6145, 8193, 12289, 16385, 24577, 0, 0],
                ec = [16, 16, 16, 16, 17, 17, 18, 18, 19, 19, 20, 20, 21, 21, 22, 22, 23, 23, 24, 24, 25, 25, 26, 26, 27, 27, 28, 28, 29, 29, 64, 64];

            function tc(e) {
                return (e >>> 24 & 255) + (e >>> 8 & 65280) + ((65280 & e) << 8) + ((255 & e) << 24)
            }

            function nc() {
                this.mode = 0, this.last = !1, this.wrap = 0, this.havedict = !1, this.flags = 0, this.dmax = 0, this.check = 0, this.total = 0, this.head = null, this.wbits = 0, this.wsize = 0, this.whave = 0, this.wnext = 0, this.window = null, this.hold = 0, this.bits = 0, this.length = 0, this.offset = 0, this.extra = 0, this.lencode = null, this.distcode = null, this.lenbits = 0, this.distbits = 0, this.ncode = 0, this.nlen = 0, this.ndist = 0, this.have = 0, this.next = null, this.lens = new Ir.Buf16(320), this.work = new Ir.Buf16(288), this.lendyn = null, this.distdyn = null, this.sane = 0, this.back = 0, this.was = 0
            }

            function oc(e) {
                var t;
                return e && e.state ? (t = e.state, e.total_in = e.total_out = t.total = 0, e.msg = "", t.wrap && (e.adler = 1 & t.wrap), t.mode = 1, t.last = 0, t.havedict = 0, t.dmax = 32768, t.head = null, t.hold = 0, t.bits = 0, t.lencode = t.lendyn = new Ir.Buf32(852), t.distcode = t.distdyn = new Ir.Buf32(592), t.sane = 1, t.back = -1, 0) : -2
            }

            function ic(e) {
                var t;
                return e && e.state ? ((t = e.state).wsize = 0, t.whave = 0, t.wnext = 0, oc(e)) : -2
            }

            function ac(e, t) {
                var n, o;
                return e && e.state ? (o = e.state, t < 0 ? (n = 0, t = -t) : (n = 1 + (t >> 4), t < 48 && (t &= 15)), t && (t < 8 || 15 < t) ? -2 : (null !== o.window && o.wbits !== t && (o.window = null), o.wrap = n, o.wbits = t, ic(e))) : -2
            }

            function sc(e, t) {
                var n;
                return e ? (n = new nc, (e.state = n).window = null, 0 !== (n = ac(e, t)) && (e.state = null), n) : -2
            }
            var rc, cc, uc = !0;

            function lc(e, t, n, o) {
                var i;
                return null === (e = e.state).window && (e.wsize = 1 << e.wbits, e.wnext = 0, e.whave = 0, e.window = new Ir.Buf8(e.wsize)), o >= e.wsize ? (Ir.arraySet(e.window, t, n - e.wsize, e.wsize, 0), e.wnext = 0, e.whave = e.wsize) : ((i = e.wsize - e.wnext) > o && (i = o), Ir.arraySet(e.window, t, n - o, i, e.wnext), (o -= i) ? (Ir.arraySet(e.window, t, n - o, o, 0), e.wnext = o, e.whave = e.wsize) : (e.wnext += i, e.wnext === e.wsize && (e.wnext = 0), e.whave < e.wsize && (e.whave += i))), 0
            }
            var dc = {
                    inflateReset: ic,
                    inflateReset2: ac,
                    inflateResetKeep: oc,
                    inflateInit: function(e) {
                        return sc(e, 15)
                    },
                    inflateInit2: sc,
                    inflate: function(e, t) {
                        var n, o, i, a, s, r, c, u, l, d, p, _, h, g, f, m, v, I, M, y, C, T, D, E, L = 0,
                            S = new Ir.Buf8(4),
                            k = [16, 17, 18, 0, 8, 7, 9, 6, 10, 5, 11, 4, 12, 3, 13, 2, 14, 1, 15];
                        if (!e || !e.state || !e.output || !e.input && 0 !== e.avail_in) return -2;
                        12 === (n = e.state).mode && (n.mode = 13), s = e.next_out, i = e.output, c = e.avail_out, a = e.next_in, o = e.input, r = e.avail_in, u = n.hold, l = n.bits, d = r, p = c, T = 0;
                        e: for (;;) switch (n.mode) {
                            case 1:
                                if (0 === n.wrap) {
                                    n.mode = 13;
                                    break
                                }
                                for (; l < 16;) {
                                    if (0 === r) break e;
                                    r--, u += o[a++] << l, l += 8
                                }
                                if (2 & n.wrap && 35615 === u) {
                                    S[n.check = 0] = 255 & u, S[1] = u >>> 8 & 255, n.check = Jr(n.check, S, 2, 0), l = u = 0, n.mode = 2;
                                    break
                                }
                                if (n.flags = 0, n.head && (n.head.done = !1), !(1 & n.wrap) || (((255 & u) << 8) + (u >> 8)) % 31) {
                                    e.msg = "incorrect header check", n.mode = 30;
                                    break
                                }
                                if (8 != (15 & u)) {
                                    e.msg = "unknown compression method", n.mode = 30;
                                    break
                                }
                                if (l -= 4, C = 8 + (15 & (u >>>= 4)), 0 === n.wbits) n.wbits = C;
                                else if (C > n.wbits) {
                                    e.msg = "invalid window size", n.mode = 30;
                                    break
                                }
                                n.dmax = 1 << C, e.adler = n.check = 1, n.mode = 512 & u ? 10 : 12, l = u = 0;
                                break;
                            case 2:
                                for (; l < 16;) {
                                    if (0 === r) break e;
                                    r--, u += o[a++] << l, l += 8
                                }
                                if (n.flags = u, 8 != (255 & n.flags)) {
                                    e.msg = "unknown compression method", n.mode = 30;
                                    break
                                }
                                if (57344 & n.flags) {
                                    e.msg = "unknown header flags set", n.mode = 30;
                                    break
                                }
                                n.head && (n.head.text = u >> 8 & 1), 512 & n.flags && (S[0] = 255 & u, S[1] = u >>> 8 & 255, n.check = Jr(n.check, S, 2, 0)), l = u = 0, n.mode = 3;
                            case 3:
                                for (; l < 32;) {
                                    if (0 === r) break e;
                                    r--, u += o[a++] << l, l += 8
                                }
                                n.head && (n.head.time = u), 512 & n.flags && (S[0] = 255 & u, S[1] = u >>> 8 & 255, S[2] = u >>> 16 & 255, S[3] = u >>> 24 & 255, n.check = Jr(n.check, S, 4, 0)), l = u = 0, n.mode = 4;
                            case 4:
                                for (; l < 16;) {
                                    if (0 === r) break e;
                                    r--, u += o[a++] << l, l += 8
                                }
                                n.head && (n.head.xflags = 255 & u, n.head.os = u >> 8), 512 & n.flags && (S[0] = 255 & u, S[1] = u >>> 8 & 255, n.check = Jr(n.check, S, 2, 0)), l = u = 0, n.mode = 5;
                            case 5:
                                if (1024 & n.flags) {
                                    for (; l < 16;) {
                                        if (0 === r) break e;
                                        r--, u += o[a++] << l, l += 8
                                    }
                                    n.length = u, n.head && (n.head.extra_len = u), 512 & n.flags && (S[0] = 255 & u, S[1] = u >>> 8 & 255, n.check = Jr(n.check, S, 2, 0)), l = u = 0
                                } else n.head && (n.head.extra = null);
                                n.mode = 6;
                            case 6:
                                if (1024 & n.flags && ((_ = (_ = n.length) > r ? r : _) && (n.head && (C = n.head.extra_len - n.length, n.head.extra || (n.head.extra = new Array(n.head.extra_len)), Ir.arraySet(n.head.extra, o, a, _, C)), 512 & n.flags && (n.check = Jr(n.check, o, _, a)), r -= _, a += _, n.length -= _), n.length)) break e;
                                n.length = 0, n.mode = 7;
                            case 7:
                                if (2048 & n.flags) {
                                    if (0 === r) break e;
                                    for (_ = 0; C = o[a + _++], n.head && C && n.length < 65536 && (n.head.name += String.fromCharCode(C)), C && _ < r;);
                                    if (512 & n.flags && (n.check = Jr(n.check, o, _, a)), r -= _, a += _, C) break e
                                } else n.head && (n.head.name = null);
                                n.length = 0, n.mode = 8;
                            case 8:
                                if (4096 & n.flags) {
                                    if (0 === r) break e;
                                    for (_ = 0; C = o[a + _++], n.head && C && n.length < 65536 && (n.head.comment += String.fromCharCode(C)), C && _ < r;);
                                    if (512 & n.flags && (n.check = Jr(n.check, o, _, a)), r -= _, a += _, C) break e
                                } else n.head && (n.head.comment = null);
                                n.mode = 9;
                            case 9:
                                if (512 & n.flags) {
                                    for (; l < 16;) {
                                        if (0 === r) break e;
                                        r--, u += o[a++] << l, l += 8
                                    }
                                    if (u !== (65535 & n.check)) {
                                        e.msg = "header crc mismatch", n.mode = 30;
                                        break
                                    }
                                    l = u = 0
                                }
                                n.head && (n.head.hcrc = n.flags >> 9 & 1, n.head.done = !0), e.adler = n.check = 0, n.mode = 12;
                                break;
                            case 10:
                                for (; l < 32;) {
                                    if (0 === r) break e;
                                    r--, u += o[a++] << l, l += 8
                                }
                                e.adler = n.check = tc(u), l = u = 0, n.mode = 11;
                            case 11:
                                if (0 === n.havedict) return e.next_out = s, e.avail_out = c, e.next_in = a, e.avail_in = r, n.hold = u, n.bits = l, 2;
                                e.adler = n.check = 1, n.mode = 12;
                            case 12:
                                if (5 === t || 6 === t) break e;
                            case 13:
                                if (n.last) {
                                    u >>>= 7 & l, l -= 7 & l, n.mode = 27;
                                    break
                                }
                                for (; l < 3;) {
                                    if (0 === r) break e;
                                    r--, u += o[a++] << l, l += 8
                                }
                                switch (n.last = 1 & u, --l, 3 & (u >>>= 1)) {
                                    case 0:
                                        n.mode = 14;
                                        break;
                                    case 1:
                                        A = R = void 0;
                                        var A, R = n;
                                        if (uc) {
                                            for (rc = new Ir.Buf32(512), cc = new Ir.Buf32(32), A = 0; A < 144;) R.lens[A++] = 8;
                                            for (; A < 256;) R.lens[A++] = 9;
                                            for (; A < 280;) R.lens[A++] = 7;
                                            for (; A < 288;) R.lens[A++] = 8;
                                            for (zr(1, R.lens, 0, 288, rc, 0, R.work, {
                                                    bits: 9
                                                }), A = 0; A < 32;) R.lens[A++] = 5;
                                            zr(2, R.lens, 0, 32, cc, 0, R.work, {
                                                bits: 5
                                            }), uc = !1
                                        }
                                        if (R.lencode = rc, R.lenbits = 9, R.distcode = cc, R.distbits = 5, n.mode = 20, 6 !== t) break;
                                        u >>>= 2, l -= 2;
                                        break e;
                                    case 2:
                                        n.mode = 17;
                                        break;
                                    case 3:
                                        e.msg = "invalid block type", n.mode = 30
                                }
                                u >>>= 2, l -= 2;
                                break;
                            case 14:
                                for (u >>>= 7 & l, l -= 7 & l; l < 32;) {
                                    if (0 === r) break e;
                                    r--, u += o[a++] << l, l += 8
                                }
                                if ((65535 & u) != (u >>> 16 ^ 65535)) {
                                    e.msg = "invalid stored block lengths", n.mode = 30;
                                    break
                                }
                                if (n.length = 65535 & u, l = u = 0, n.mode = 15, 6 === t) break e;
                            case 15:
                                n.mode = 16;
                            case 16:
                                if (_ = n.length) {
                                    if (0 === (_ = c < (_ = r < _ ? r : _) ? c : _)) break e;
                                    Ir.arraySet(i, o, a, _, s), r -= _, a += _, c -= _, s += _, n.length -= _;
                                    break
                                }
                                n.mode = 12;
                                break;
                            case 17:
                                for (; l < 14;) {
                                    if (0 === r) break e;
                                    r--, u += o[a++] << l, l += 8
                                }
                                if (n.nlen = 257 + (31 & u), u >>>= 5, l -= 5, n.ndist = 1 + (31 & u), u >>>= 5, l -= 5, n.ncode = 4 + (15 & u), u >>>= 4, l -= 4, 286 < n.nlen || 30 < n.ndist) {
                                    e.msg = "too many length or distance symbols", n.mode = 30;
                                    break
                                }
                                n.have = 0, n.mode = 18;
                            case 18:
                                for (; n.have < n.ncode;) {
                                    for (; l < 3;) {
                                        if (0 === r) break e;
                                        r--, u += o[a++] << l, l += 8
                                    }
                                    n.lens[k[n.have++]] = 7 & u, u >>>= 3, l -= 3
                                }
                                for (; n.have < 19;) n.lens[k[n.have++]] = 0;
                                if (n.lencode = n.lendyn, n.lenbits = 7, D = {
                                        bits: n.lenbits
                                    }, T = zr(0, n.lens, 0, 19, n.lencode, 0, n.work, D), n.lenbits = D.bits, T) {
                                    e.msg = "invalid code lengths set", n.mode = 30;
                                    break
                                }
                                n.have = 0, n.mode = 19;
                            case 19:
                                for (; n.have < n.nlen + n.ndist;) {
                                    for (; m = (L = n.lencode[u & (1 << n.lenbits) - 1]) >>> 16 & 255, v = 65535 & L, !((f = L >>> 24) <= l);) {
                                        if (0 === r) break e;
                                        r--, u += o[a++] << l, l += 8
                                    }
                                    if (v < 16) u >>>= f, l -= f, n.lens[n.have++] = v;
                                    else {
                                        if (16 === v) {
                                            for (E = f + 2; l < E;) {
                                                if (0 === r) break e;
                                                r--, u += o[a++] << l, l += 8
                                            }
                                            if (u >>>= f, l -= f, 0 === n.have) {
                                                e.msg = "invalid bit length repeat", n.mode = 30;
                                                break
                                            }
                                            C = n.lens[n.have - 1], _ = 3 + (3 & u), u >>>= 2, l -= 2
                                        } else if (17 === v) {
                                            for (E = f + 3; l < E;) {
                                                if (0 === r) break e;
                                                r--, u += o[a++] << l, l += 8
                                            }
                                            C = 0, _ = 3 + (7 & (u >>>= f)), u >>>= 3, l = l - f - 3
                                        } else {
                                            for (E = f + 7; l < E;) {
                                                if (0 === r) break e;
                                                r--, u += o[a++] << l, l += 8
                                            }
                                            C = 0, _ = 11 + (127 & (u >>>= f)), u >>>= 7, l = l - f - 7
                                        }
                                        if (n.have + _ > n.nlen + n.ndist) {
                                            e.msg = "invalid bit length repeat", n.mode = 30;
                                            break
                                        }
                                        for (; _--;) n.lens[n.have++] = C
                                    }
                                }
                                if (30 === n.mode) break;
                                if (0 === n.lens[256]) {
                                    e.msg = "invalid code -- missing end-of-block", n.mode = 30;
                                    break
                                }
                                if (n.lenbits = 9, D = {
                                        bits: n.lenbits
                                    }, T = zr(1, n.lens, 0, n.nlen, n.lencode, 0, n.work, D), n.lenbits = D.bits, T) {
                                    e.msg = "invalid literal/lengths set", n.mode = 30;
                                    break
                                }
                                if (n.distbits = 6, n.distcode = n.distdyn, D = {
                                        bits: n.distbits
                                    }, T = zr(2, n.lens, n.nlen, n.ndist, n.distcode, 0, n.work, D), n.distbits = D.bits, T) {
                                    e.msg = "invalid distances set", n.mode = 30;
                                    break
                                }
                                if (n.mode = 20, 6 === t) break e;
                            case 20:
                                n.mode = 21;
                            case 21:
                                if (6 <= r && 258 <= c) {
                                    e.next_out = s, e.avail_out = c, e.next_in = a, e.avail_in = r, n.hold = u, n.bits = l, K = b = U = P = G = N = O = $ = Q = B = x = q = void 0;
                                    var O, N, G, P, U, b, w = e,
                                        F = p,
                                        q = w.state,
                                        x = w.next_in,
                                        V = w.input,
                                        H = x + (w.avail_in - 5),
                                        B = w.next_out,
                                        K = w.output,
                                        Y = B - (F - w.avail_out),
                                        W = B + (w.avail_out - 257),
                                        j = q.dmax,
                                        J = q.wsize,
                                        z = q.whave,
                                        X = q.wnext,
                                        Z = q.window,
                                        Q = q.hold,
                                        $ = q.bits,
                                        ee = q.lencode,
                                        te = q.distcode,
                                        ne = (1 << q.lenbits) - 1,
                                        oe = (1 << q.distbits) - 1;
                                    t: do {
                                        for ($ < 15 && (Q += V[x++] << $, $ += 8, Q += V[x++] << $, $ += 8), O = ee[Q & ne];;) {
                                            if (Q >>>= N = O >>> 24, $ -= N, 0 == (N = O >>> 16 & 255)) K[B++] = 65535 & O;
                                            else {
                                                if (!(16 & N)) {
                                                    if (0 == (64 & N)) {
                                                        O = ee[(65535 & O) + (Q & (1 << N) - 1)];
                                                        continue
                                                    }
                                                    if (32 & N) {
                                                        q.mode = 12;
                                                        break t
                                                    }
                                                    w.msg = "invalid literal/length code", q.mode = 30;
                                                    break t
                                                }
                                                for (G = 65535 & O, (N &= 15) && ($ < N && (Q += V[x++] << $, $ += 8), G += Q & (1 << N) - 1, Q >>>= N, $ -= N), $ < 15 && (Q += V[x++] << $, $ += 8, Q += V[x++] << $, $ += 8), O = te[Q & oe];;) {
                                                    if (Q >>>= N = O >>> 24, $ -= N, !(16 & (N = O >>> 16 & 255))) {
                                                        if (0 == (64 & N)) {
                                                            O = te[(65535 & O) + (Q & (1 << N) - 1)];
                                                            continue
                                                        }
                                                        w.msg = "invalid distance code", q.mode = 30;
                                                        break t
                                                    }
                                                    if (P = 65535 & O, $ < (N &= 15) && (Q += V[x++] << $, ($ += 8) < N && (Q += V[x++] << $, $ += 8)), (P += Q & (1 << N) - 1) > j) {
                                                        w.msg = "invalid distance too far back", q.mode = 30;
                                                        break t
                                                    }
                                                    if (Q >>>= N, $ -= N, P > (N = B - Y)) {
                                                        if ((N = P - N) > z && q.sane) {
                                                            w.msg = "invalid distance too far back", q.mode = 30;
                                                            break t
                                                        }
                                                        if (b = Z, (U = 0) === X) {
                                                            if (U += J - N, N < G) {
                                                                for (G -= N; K[B++] = Z[U++], --N;);
                                                                U = B - P, b = K
                                                            }
                                                        } else if (X < N) {
                                                            if (U += J + X - N, (N -= X) < G) {
                                                                for (G -= N; K[B++] = Z[U++], --N;);
                                                                if (U = 0, X < G) {
                                                                    for (G -= N = X; K[B++] = Z[U++], --N;);
                                                                    U = B - P, b = K
                                                                }
                                                            }
                                                        } else if (U += X - N, N < G) {
                                                            for (G -= N; K[B++] = Z[U++], --N;);
                                                            U = B - P, b = K
                                                        }
                                                        for (; 2 < G;) K[B++] = b[U++], K[B++] = b[U++], K[B++] = b[U++], G -= 3;
                                                        G && (K[B++] = b[U++], 1 < G && (K[B++] = b[U++]))
                                                    } else {
                                                        for (U = B - P; K[B++] = K[U++], K[B++] = K[U++], K[B++] = K[U++], 2 < (G -= 3););
                                                        G && (K[B++] = K[U++], 1 < G && (K[B++] = K[U++]))
                                                    }
                                                    break
                                                }
                                            }
                                            break
                                        }
                                    } while (x < H && B < W);
                                    x -= G = $ >> 3, Q &= (1 << ($ -= G << 3)) - 1, w.next_in = x, w.next_out = B, w.avail_in = x < H ? H - x + 5 : 5 - (x - H), w.avail_out = B < W ? W - B + 257 : 257 - (B - W), q.hold = Q, q.bits = $, s = e.next_out, i = e.output, c = e.avail_out, a = e.next_in, o = e.input, r = e.avail_in, u = n.hold, l = n.bits, 12 === n.mode && (n.back = -1);
                                    break
                                }
                                for (n.back = 0; m = (L = n.lencode[u & (1 << n.lenbits) - 1]) >>> 16 & 255, v = 65535 & L, !((f = L >>> 24) <= l);) {
                                    if (0 === r) break e;
                                    r--, u += o[a++] << l, l += 8
                                }
                                if (m && 0 == (240 & m)) {
                                    for (I = f, M = m, y = v; m = (L = n.lencode[y + ((u & (1 << I + M) - 1) >> I)]) >>> 16 & 255, v = 65535 & L, !(I + (f = L >>> 24) <= l);) {
                                        if (0 === r) break e;
                                        r--, u += o[a++] << l, l += 8
                                    }
                                    u >>>= I, l -= I, n.back += I
                                }
                                if (u >>>= f, l -= f, n.back += f, n.length = v, 0 === m) {
                                    n.mode = 26;
                                    break
                                }
                                if (32 & m) {
                                    n.back = -1, n.mode = 12;
                                    break
                                }
                                if (64 & m) {
                                    e.msg = "invalid literal/length code", n.mode = 30;
                                    break
                                }
                                n.extra = 15 & m, n.mode = 22;
                            case 22:
                                if (n.extra) {
                                    for (E = n.extra; l < E;) {
                                        if (0 === r) break e;
                                        r--, u += o[a++] << l, l += 8
                                    }
                                    n.length += u & (1 << n.extra) - 1, u >>>= n.extra, l -= n.extra, n.back += n.extra
                                }
                                n.was = n.length, n.mode = 23;
                            case 23:
                                for (; m = (L = n.distcode[u & (1 << n.distbits) - 1]) >>> 16 & 255, v = 65535 & L, !((f = L >>> 24) <= l);) {
                                    if (0 === r) break e;
                                    r--, u += o[a++] << l, l += 8
                                }
                                if (0 == (240 & m)) {
                                    for (I = f, M = m, y = v; m = (L = n.distcode[y + ((u & (1 << I + M) - 1) >> I)]) >>> 16 & 255, v = 65535 & L, !(I + (f = L >>> 24) <= l);) {
                                        if (0 === r) break e;
                                        r--, u += o[a++] << l, l += 8
                                    }
                                    u >>>= I, l -= I, n.back += I
                                }
                                if (u >>>= f, l -= f, n.back += f, 64 & m) {
                                    e.msg = "invalid distance code", n.mode = 30;
                                    break
                                }
                                n.offset = v, n.extra = 15 & m, n.mode = 24;
                            case 24:
                                if (n.extra) {
                                    for (E = n.extra; l < E;) {
                                        if (0 === r) break e;
                                        r--, u += o[a++] << l, l += 8
                                    }
                                    n.offset += u & (1 << n.extra) - 1, u >>>= n.extra, l -= n.extra, n.back += n.extra
                                }
                                if (n.offset > n.dmax) {
                                    e.msg = "invalid distance too far back", n.mode = 30;
                                    break
                                }
                                n.mode = 25;
                            case 25:
                                if (0 === c) break e;
                                if (n.offset > (_ = p - c)) {
                                    if ((_ = n.offset - _) > n.whave && n.sane) {
                                        e.msg = "invalid distance too far back", n.mode = 30;
                                        break
                                    }
                                    h = _ > n.wnext ? (_ -= n.wnext, n.wsize - _) : n.wnext - _, _ > n.length && (_ = n.length), g = n.window
                                } else g = i, h = s - n.offset, _ = n.length;
                                for (c -= _ = c < _ ? c : _, n.length -= _; i[s++] = g[h++], --_;);
                                0 === n.length && (n.mode = 21);
                                break;
                            case 26:
                                if (0 === c) break e;
                                i[s++] = n.length, c--, n.mode = 21;
                                break;
                            case 27:
                                if (n.wrap) {
                                    for (; l < 32;) {
                                        if (0 === r) break e;
                                        r--, u |= o[a++] << l, l += 8
                                    }
                                    if (p -= c, e.total_out += p, n.total += p, p && (e.adler = n.check = (n.flags ? Jr : jr)(n.check, i, p, s - p)), p = c, (n.flags ? u : tc(u)) !== n.check) {
                                        e.msg = "incorrect data check", n.mode = 30;
                                        break
                                    }
                                    l = u = 0
                                }
                                n.mode = 28;
                            case 28:
                                if (n.wrap && n.flags) {
                                    for (; l < 32;) {
                                        if (0 === r) break e;
                                        r--, u += o[a++] << l, l += 8
                                    }
                                    if (u !== (4294967295 & n.total)) {
                                        e.msg = "incorrect length check", n.mode = 30;
                                        break
                                    }
                                    l = u = 0
                                }
                                n.mode = 29;
                            case 29:
                                T = 1;
                                break e;
                            case 30:
                                T = -3;
                                break e;
                            case 31:
                                return -4;
                            default:
                                return -2
                        }
                        return e.next_out = s, e.avail_out = c, e.next_in = a, e.avail_in = r, n.hold = u, n.bits = l, (n.wsize || p !== e.avail_out && n.mode < 30 && (n.mode < 27 || 4 !== t)) && lc(e, e.output, e.next_out, p - e.avail_out), d -= e.avail_in, p -= e.avail_out, e.total_in += d, e.total_out += p, n.total += p, n.wrap && p && (e.adler = n.check = (n.flags ? Jr : jr)(n.check, i, p, e.next_out - p)), e.data_type = n.bits + (n.last ? 64 : 0) + (12 === n.mode ? 128 : 0) + (20 === n.mode || 15 === n.mode ? 256 : 0), (0 == d && 0 === p || 4 === t) && 0 === T ? -5 : T
                    },
                    inflateEnd: function(e) {
                        if (!e || !e.state) return -2;
                        var t = e.state;
                        return t.window && (t.window = null), e.state = null, 0
                    },
                    inflateGetHeader: function(e, t) {
                        var n;
                        return e && e.state && 0 != (2 & (n = e.state).wrap) ? ((n.head = t).done = !1, 0) : -2
                    },
                    inflateSetDictionary: function(e, t) {
                        var n, o = t.length;
                        return !e || !e.state || 0 !== (n = e.state).wrap && 11 !== n.mode ? -2 : 11 === n.mode && jr(1, t, o, 0) !== n.check ? -3 : lc(e, t, o, o) ? (n.mode = 31, -4) : (n.havedict = 1, 0)
                    },
                    inflateInfo: "pako inflate (from Nodeca project)"
                },
                pc = !0,
                _c = !0;
            try {
                String.fromCharCode.apply(null, [0])
            } catch (s) {
                pc = !1
            }
            try {
                String.fromCharCode.apply(null, new Uint8Array(1))
            } catch (s) {
                _c = !1
            }
            for (var hc = new Ir.Buf8(256), gc = 0; gc < 256; gc++) hc[gc] = 252 <= gc ? 6 : 248 <= gc ? 5 : 240 <= gc ? 4 : 224 <= gc ? 3 : 192 <= gc ? 2 : 1;

            function fc(e, t) {
                for (var n, o, i = t || e.length, a = new Array(2 * i), s = 0, r = 0; r < i;)
                    if ((n = e[r++]) < 128) a[s++] = n;
                    else if (4 < (o = hc[n])) a[s++] = 65533, r += o - 1;
                else {
                    for (n &= 2 === o ? 31 : 3 === o ? 15 : 7; 1 < o && r < i;) n = n << 6 | 63 & e[r++], o--;
                    1 < o ? a[s++] = 65533 : n < 65536 ? a[s++] = n : (n -= 65536, a[s++] = 55296 | n >> 10 & 1023, a[s++] = 56320 | 1023 & n)
                }
                var c = a,
                    u = s;
                if (u < 65534 && (c.subarray && _c || !c.subarray && pc)) return String.fromCharCode.apply(null, Ir.shrinkBuf(c, u));
                for (var l = "", d = 0; d < u; d++) l += String.fromCharCode(c[d]);
                return l
            }

            function mc() {
                this.input = null, this.next_in = 0, this.avail_in = 0, this.total_in = 0, this.output = null, this.next_out = 0, this.avail_out = 0, this.total_out = 0, this.msg = "", this.state = null, this.data_type = 2, this.adler = 0
            }

            function vc() {
                this.text = 0, this.time = 0, this.xflags = 0, this.os = 0, this.extra = null, this.extra_len = 0, this.name = "", this.comment = "", this.hcrc = 0, this.done = !1
            }
            hc[254] = hc[254] = 1;
            var Ic = {
                    Z_NO_FLUSH: 0,
                    Z_PARTIAL_FLUSH: 1,
                    Z_SYNC_FLUSH: 2,
                    Z_FULL_FLUSH: 3,
                    Z_FINISH: 4,
                    Z_BLOCK: 5,
                    Z_TREES: 6,
                    Z_OK: 0,
                    Z_STREAM_END: 1,
                    Z_NEED_DICT: 2,
                    Z_ERRNO: -1,
                    Z_STREAM_ERROR: -2,
                    Z_DATA_ERROR: -3,
                    Z_BUF_ERROR: -5,
                    Z_NO_COMPRESSION: 0,
                    Z_BEST_SPEED: 1,
                    Z_BEST_COMPRESSION: 9,
                    Z_DEFAULT_COMPRESSION: -1,
                    Z_FILTERED: 1,
                    Z_HUFFMAN_ONLY: 2,
                    Z_RLE: 3,
                    Z_FIXED: 4,
                    Z_DEFAULT_STRATEGY: 0,
                    Z_BINARY: 0,
                    Z_TEXT: 1,
                    Z_UNKNOWN: 2,
                    Z_DEFLATED: 8
                },
                Mc = {
                    2: "need dictionary",
                    1: "stream end",
                    0: "",
                    "-1": "file error",
                    "-2": "stream error",
                    "-3": "data error",
                    "-4": "insufficient memory",
                    "-5": "buffer error",
                    "-6": "incompatible version"
                },
                yc = Object.prototype.toString;

            function Cc(e) {
                if (!(this instanceof Cc)) return new Cc(e);
                this.options = Ir.assign({
                    chunkSize: 16384,
                    windowBits: 0,
                    to: ""
                }, e || {});
                var t = this.options;
                if (t.raw && 0 <= t.windowBits && t.windowBits < 16 && (t.windowBits = -t.windowBits, 0 === t.windowBits && (t.windowBits = -15)), !(0 <= t.windowBits && t.windowBits < 16) || e && e.windowBits || (t.windowBits += 32), 15 < t.windowBits && t.windowBits < 48 && 0 == (15 & t.windowBits) && (t.windowBits |= 15), this.err = 0, this.msg = "", this.ended = !1, this.chunks = [], this.strm = new mc, this.strm.avail_out = 0, (e = dc.inflateInit2(this.strm, t.windowBits)) !== Ic.Z_OK) throw new Error(Mc[e]);
                if (this.header = new vc, dc.inflateGetHeader(this.strm, this.header), t.dictionary && ("string" == typeof t.dictionary ? t.dictionary = function(e) {
                        for (var t, n, o, i, a = e.length, s = 0, r = 0; r < a; r++) 55296 == (64512 & (n = e.charCodeAt(r))) && r + 1 < a && 56320 == (64512 & (o = e.charCodeAt(r + 1))) && (n = 65536 + (n - 55296 << 10) + (o - 56320), r++), s += n < 128 ? 1 : n < 2048 ? 2 : n < 65536 ? 3 : 4;
                        for (t = new Ir.Buf8(s), r = i = 0; i < s; r++) 55296 == (64512 & (n = e.charCodeAt(r))) && r + 1 < a && 56320 == (64512 & (o = e.charCodeAt(r + 1))) && (n = 65536 + (n - 55296 << 10) + (o - 56320), r++), n < 128 ? t[i++] = n : (n < 2048 ? t[i++] = 192 | n >>> 6 : (n < 65536 ? t[i++] = 224 | n >>> 12 : (t[i++] = 240 | n >>> 18, t[i++] = 128 | n >>> 12 & 63), t[i++] = 128 | n >>> 6 & 63), t[i++] = 128 | 63 & n);
                        return t
                    }(t.dictionary) : "[object ArrayBuffer]" === yc.call(t.dictionary) && (t.dictionary = new Uint8Array(t.dictionary)), t.raw && (e = dc.inflateSetDictionary(this.strm, t.dictionary)) !== Ic.Z_OK)) throw new Error(Mc[e])
            }

            function Tc(e, t) {
                if ((t = new Cc(t)).push(e, !0), t.err) throw t.msg || Mc[t.err];
                return t.result
            }
            Cc.prototype.push = function(e, t) {
                var n, o, i, a, s, r = this.strm,
                    c = this.options.chunkSize,
                    u = this.options.dictionary,
                    l = !1;
                if (this.ended) return !1;
                o = t === ~~t ? t : !0 === t ? Ic.Z_FINISH : Ic.Z_NO_FLUSH, "string" == typeof e ? r.input = function(e) {
                    for (var t = new Ir.Buf8(e.length), n = 0, o = t.length; n < o; n++) t[n] = e.charCodeAt(n);
                    return t
                }(e) : "[object ArrayBuffer]" === yc.call(e) ? r.input = new Uint8Array(e) : r.input = e, r.next_in = 0, r.avail_in = r.input.length;
                do {
                    if (0 === r.avail_out && (r.output = new Ir.Buf8(c), r.next_out = 0, r.avail_out = c), (n = (n = dc.inflate(r, Ic.Z_NO_FLUSH)) === Ic.Z_NEED_DICT && u ? dc.inflateSetDictionary(this.strm, u) : n) === Ic.Z_BUF_ERROR && !0 === l && (n = Ic.Z_OK, l = !1), n !== Ic.Z_STREAM_END && n !== Ic.Z_OK) return this.onEnd(n), !(this.ended = !0);
                    r.next_out && (0 !== r.avail_out && n !== Ic.Z_STREAM_END && (0 !== r.avail_in || o !== Ic.Z_FINISH && o !== Ic.Z_SYNC_FLUSH) || ("string" === this.options.to ? (i = function(e, t) {
                        for (var n = (t = (t = t || e.length) > e.length ? e.length : t) - 1; 0 <= n && 128 == (192 & e[n]);) n--;
                        return !(n < 0 || 0 === n) && n + hc[e[n]] > t ? n : t
                    }(r.output, r.next_out), a = r.next_out - i, s = fc(r.output, i), r.next_out = a, r.avail_out = c - a, a && Ir.arraySet(r.output, r.output, i, a, 0), this.onData(s)) : this.onData(Ir.shrinkBuf(r.output, r.next_out)))), 0 === r.avail_in && 0 === r.avail_out && (l = !0)
                } while ((0 < r.avail_in || 0 === r.avail_out) && n !== Ic.Z_STREAM_END);
                return (o = n === Ic.Z_STREAM_END ? Ic.Z_FINISH : o) === Ic.Z_FINISH ? (n = dc.inflateEnd(this.strm), this.onEnd(n), this.ended = !0, n === Ic.Z_OK) : o !== Ic.Z_SYNC_FLUSH || (this.onEnd(Ic.Z_OK), !(r.avail_out = 0))
            }, Cc.prototype.onData = function(e) {
                this.chunks.push(e)
            }, Cc.prototype.onEnd = function(e) {
                e === Ic.Z_OK && ("string" === this.options.to ? this.result = this.chunks.join("") : this.result = Ir.flattenChunks(this.chunks)), this.chunks = [], this.err = e, this.msg = this.strm.msg
            }, J = {};
            var Dc = ((0, Ir.assign)(J, {
                    Inflate: Cc,
                    inflate: Tc,
                    inflateRaw: function(e, t) {
                        return (t = t || {}).raw = !0, Tc(e, t)
                    },
                    ungzip: Tc
                }, Ic), J),
                Ec = (s(Gc, [{
                    key: "inflate",
                    value: function(e) {
                        e = new Uint8Array(e).slice(4);
                        var t, n = Date.now();
                        try {
                            t = Dc.inflate(e, {
                                to: "string"
                            }), this._bLogForInflateOK || (this._bLogForInflateOK = !0, new Qn("inflateOK").end())
                        } catch (e) {
                            return this._bLogForInflateError ? void 0 : (this._bLogForInflateError = !0, void new Qn("inflateError").setMessage(e).end())
                        }
                        e = e.length + 4;
                        var o = t.length;
                        return Oe.d("inflate ok. zipped:".concat(e, " unzipped:").concat(o) + " compression ratio:".concat(Math.round(100 * (o - e) / o), "% cost:").concat(Date.now() - n)), t
                    }
                }, {
                    key: "reset",
                    value: function() {
                        Oe.l("".concat(this._n, ".reset")), this._bLogForInflateOK = !1, this._bLogForInflateError = !1
                    }
                }]), Gc),
                Lc = (s(Nc, [{
                    key: "_startTimer",
                    value: function() {
                        var e = this._map.get(24),
                            t = e.isWorkerEnabled();
                        Oe.l("".concat(this._n, ".startTimer isWorkerEnabled:").concat(t, " seed:").concat(this._checkTimer)), t ? e.startWorkerTimer() : this._startMainThreadTimer()
                    }
                }, {
                    key: "_startMainThreadTimer",
                    value: function() {
                        this._checkTimer < 0 && (this._checkTimer = setInterval(this.onCheckTimer.bind(this), 1e3)), Oe.l("".concat(this._n, "._startMainThreadTimer seed:").concat(this._checkTimer))
                    }
                }, {
                    key: "stopTimer",
                    value: function() {
                        var e = this._map.get(24),
                            t = e.isWorkerEnabled();
                        Oe.l("".concat(this._n, ".stopTimer isWorkerEnabled:").concat(t, " seed:").concat(this._checkTimer)), t ? e.stopWorkerTimer() : this._stopMainThreadTimer()
                    }
                }, {
                    key: "_stopMainThreadTimer",
                    value: function() {
                        Oe.l("".concat(this._n, "._stopMainThreadTimer")), 0 < this._checkTimer && (clearInterval(this._checkTimer), this._checkTimer = -1, this._checkCount = 0)
                    }
                }, {
                    key: "_stopMainThreadSocket",
                    value: function() {
                        Oe.l("".concat(this._n, "._stopMainThreadSocket"));
                        var e = this._map.get(21);
                        e.setIsWorkerEnabled(!0), e.reConnect()
                    }
                }, {
                    key: "_startMainThreadSocket",
                    value: function() {
                        Oe.l("".concat(this._n, "._startMainThreadSocket"));
                        var e = this._map.get(21);
                        e.setIsWorkerEnabled(!1), e.reConnect()
                    }
                }, {
                    key: "onWorkerTimerEnabled",
                    value: function() {
                        Oe.l("".concat(this._n, ".onWorkerTimerEnabled, disable main thread timer and socket")), this._stopMainThreadTimer(), this._stopMainThreadSocket()
                    }
                }, {
                    key: "onWorkerTimerDisabled",
                    value: function() {
                        Oe.l("".concat(this._n, ".onWorkerTimerDisabled, enable main thread timer and socket")), this._startMainThreadTimer(), this._startMainThreadSocket()
                    }
                }, {
                    key: "onCheckTimer",
                    value: function() {
                        this._checkCount += 1;
                        var e, t = T(this._map);
                        try {
                            for (t.s(); !(e = t.n()).done;) {
                                var n = f(e.value, 2)[1];
                                n.onCheckTimer && n.onCheckTimer(this._checkCount)
                            }
                        } catch (e) {
                            t.e(e)
                        } finally {
                            t.f()
                        }
                    }
                }, {
                    key: "_initReadyList",
                    value: function() {
                        var e = this;
                        this._readyList = [this._map.get(1)], this._readyList.forEach((function(t) {
                            t.ready((function() {
                                return e._onModuleReady()
                            }))
                        }))
                    }
                }, {
                    key: "_onModuleReady",
                    value: function() {
                        var e, t, n = !0;
                        this._readyList.forEach((function(e) {
                            e.isReady() || (n = !1)
                        })), n && !this._isReady && (this._isReady = !0, this._oEmitter.emit(D.SDK_READY), e = Date.now() - this._startLoginTs, Oe.w("SDK is ready. cost ".concat(e, " ms")), this._startLoginTs = Date.now(), t = this._ssoLogForReady.getStartTs() + Le, this._ssoLogForReady.setMessage(e).start(t).end())
                    }
                }, {
                    key: "login",
                    value: function() {
                        0 === this._startLoginTs && (Te(), this._startLoginTs = Date.now(), this._startTimer(), this._map.get(15).start(), this._ssoLogForReady = new Qn("sdkReady"), this._reason = Un.LOGGING_IN)
                    }
                }, {
                    key: "onLoginFailed",
                    value: function() {
                        this._startLoginTs = 0
                    }
                }, {
                    key: "getOEmitInst",
                    value: function() {
                        return null === this._oEmitter && (this._oEmitter = new Ia, e = this._oEmitter, bn = e, this._oEmitter._emit = this._oEmitter.emit, this._oEmitter.emit = function(e, t) {
                            var n, o, i = this;
                            this._canIUseSignaling() && (e === D.MESSAGE_RECEIVED && this.get(33).onNewMessageList(t), e === D.MESSAGE_MODIFIED && this.get(33).onMessageModified(t)), e === D.CONVERSATION_LIST_UPDATED || e === D.FRIEND_LIST_UPDATED || e === D.GROUP_LIST_UPDATED || e === D.TOTAL_UNREAD_MESSAGE_COUNT_UPDATED ? !1 !== this._eventThrottling ? this._eventThrottleMap.has(e) ? (n = Date.now()) - (o = this._eventThrottleMap.get(e)).last <= 1e3 ? (o.timeoutID && clearTimeout(o.timeoutID), o.timeoutID = setTimeout((function() {
                                o.last = Date.now(), i._oEmitter._emit.apply(i._oEmitter, [e, {
                                    name: e,
                                    data: i._getEventData(e)
                                }])
                            }), 1e3)) : (o.last = n, this._oEmitter._emit.apply(this._oEmitter, [e, {
                                name: e,
                                data: this._getEventData(e)
                            }])) : (this._eventThrottleMap.set(e, {
                                last: Date.now(),
                                timeoutID: -1
                            }), this._oEmitter._emit.apply(this._oEmitter, [e, {
                                name: e,
                                data: this._getEventData(e)
                            }])) : this._oEmitter._emit.apply(this._oEmitter, [e, {
                                name: e,
                                data: this._getEventData(e)
                            }]) : this._oEmitter._emit.apply(this._oEmitter, [e, {
                                name: e,
                                data: t
                            }])
                        }.bind(this)), this._oEmitter;
                        var e
                    }
                }, {
                    key: "_canIUseSignaling",
                    value: function() {
                        var e = this.get(33);
                        return !!e && e.canIUseSignaling()
                    }
                }, {
                    key: "_getEventData",
                    value: function(e) {
                        return e === D.CONVERSATION_LIST_UPDATED ? this._map.get(12).isPartialUpdatedConvs() ? this._map.get(11).getPartialUpdatedConvs() : this._map.get(11).getLocalConvList() : e === D.FRIEND_LIST_UPDATED ? this._map.get(8).getLocalFriendList(!1) : e === D.GROUP_LIST_UPDATED ? this._map.get(7).getLocalGroupList() : e === D.TOTAL_UNREAD_MESSAGE_COUNT_UPDATED ? this._map.get(11).getTotalUnreadCount() : e === D.CONVERSATION_ID_LIST_UPDATED ? this._map.get(11).getUpdatedConvIDList() : void 0
                    }
                }, {
                    key: "getIEmitInst",
                    value: function() {
                        return null === this._iEmitter && (this._iEmitter = new Ia, this._iEmitter._emit = this._iEmitter.emit, this._iEmitter.emit = function(e, t) {
                            e = je(t) && t.data ? [e, {
                                name: e,
                                data: t.data
                            }] : [e, {
                                name: e,
                                data: t
                            }], this._iEmitter._emit.apply(this._iEmitter, e)
                        }.bind(this)), this._iEmitter
                    }
                }, {
                    key: "hasModule",
                    value: function(e) {
                        return this._map.has(e)
                    }
                }, {
                    key: "get",
                    value: function(e) {
                        return this._map.get(e)
                    }
                }, {
                    key: "canIUseModule",
                    value: function(e) {
                        return !this._map.get(12).isUsingChatCore() || this._optionalModuleMap.has(e)
                    }
                }, {
                    key: "canIUseInflate",
                    value: function() {
                        return !!this._map.get(37)
                    }
                }, {
                    key: "isReady",
                    value: function() {
                        return this._isReady
                    }
                }, {
                    key: "isIntl",
                    value: function() {
                        return this.get(12).isIntl()
                    }
                }, {
                    key: "getNotReadyReason",
                    value: function() {
                        return this._reason
                    }
                }, {
                    key: "setNotReadyReason",
                    value: function(e) {
                        this._reason = e
                    }
                }, {
                    key: "getErrMsg",
                    value: function(e, t, n) {
                        return this._map.get(32).get({
                            key: e,
                            replacement1: t,
                            replacement2: n,
                            isIntl: this.isIntl()
                        })
                    }
                }, {
                    key: "warn",
                    value: function(e, t, n) {
                        (e = this.getErrMsg(e, t, n)) && Oe.w(e)
                    }
                }, {
                    key: "onError",
                    value: function(e) {
                        var t = "code:".concat(e.code, " message:").concat(e.message);
                        Oe.w("Oops! ".concat(t)), new Qn("error").setMessage(t).setLevel("error").end(), this.getOEmitInst().emit(D.ERROR, e)
                    }
                }, {
                    key: "restartTimer",
                    value: function() {
                        Oe.l("".concat(this._n, ".restartTimer")), this.stopTimer(), this._startTimer();
                        var e = this.get(7);
                        e && e.restartPolling()
                    }
                }, {
                    key: "getTimerID",
                    value: function() {
                        var e = this._map.get(24);
                        return e.isWorkerEnabled() ? e.getTimerID() : this._checkTimer
                    }
                }, {
                    key: "getPollingTimerID",
                    value: function(e) {
                        return this._map.get(7).getPollingTimerID(e)
                    }
                }, {
                    key: "reset",
                    value: function() {
                        Oe.l("".concat(this._n, ".reset")), Te();
                        var e, t = T(this._map);
                        try {
                            for (t.s(); !(e = t.n()).done;) {
                                var n = f(e.value, 2)[1];
                                n.reset && n.reset()
                            }
                        } catch (e) {
                            t.e(e)
                        } finally {
                            t.f()
                        }
                        this._startLoginTs = 0, this._initReadyList(), this._isReady = !1, this.stopTimer(), this._oEmitter.emit(D.SDK_NOT_READY);
                        var o, i = T(this._eventThrottleMap);
                        try {
                            for (i.s(); !(o = i.n()).done;) {
                                var a = f(o.value, 2)[1];
                                a.timeoutID && clearTimeout(a.timeoutID)
                            }
                        } catch (e) {
                            i.e(e)
                        } finally {
                            i.f()
                        }
                        this._eventThrottleMap.clear()
                    }
                }]), Nc),
                Sc = (s(Oc, [{
                    key: "defense",
                    value: function(e, t) {
                        var n = 2 < arguments.length && void 0 !== arguments[2] ? arguments[2] : void 0;
                        if ("string" != typeof e) return null;
                        if (0 === e.length) return null;
                        if ("function" != typeof t) return null;
                        if (this._funcMap.has(e) && this._funcMap.get(e).has(t)) return this._funcMap.get(e).get(t);
                        this._funcMap.has(e) || this._funcMap.set(e, new Map);
                        var o = null;
                        return this._funcMap.get(e).has(t) ? o = this._funcMap.get(e).get(t) : (o = this._pack(e, t, n), this._funcMap.get(e).set(t, o)), o
                    }
                }, {
                    key: "defenseOnce",
                    value: function(e, t) {
                        return "function" != typeof t ? null : this._pack(e, t, 2 < arguments.length && void 0 !== arguments[2] ? arguments[2] : void 0)
                    }
                }, {
                    key: "find",
                    value: function(e, t) {
                        return "string" != typeof e || 0 === e.length || "function" != typeof t ? null : this._funcMap.has(e) && this._funcMap.get(e).has(t) ? this._funcMap.get(e).get(t) : (this._m.warn("ListenerFnNotFound", e), null)
                    }
                }, {
                    key: "delete",
                    value: function(e, t) {
                        return "function" == typeof t && !!this._funcMap.has(e) && !!this._funcMap.get(e).has(t) && (this._funcMap.get(e).delete(t), 0 === this._funcMap.get(e).size && this._funcMap.delete(e), !0)
                    }
                }, {
                    key: "_pack",
                    value: function(e, t, n) {
                        var o = this;
                        return function() {
                            try {
                                t.apply(n, Array.from(arguments))
                            } catch (t) {
                                var i = Object.values(D).indexOf(e),
                                    a = "CallbackError"; - 1 !== i && (i = Object.keys(D)[i], o._m.warn(a, i, t)), o._reportCount < 5 && (new Qn(a).setMessage("eventName:".concat(e)).setMoreMessage(t.message).end(), o._reportCount += 1)
                            }
                        }
                    }
                }, {
                    key: "destroy",
                    value: function() {
                        this._funcMap.clear()
                    }
                }, {
                    key: "reset",
                    value: function() {
                        Oe.l("".concat(this._n, ".reset")), this._reportCount = 0
                    }
                }]), Oc),
                kc = (s(Rc, [{
                    key: "onError",
                    value: function(e) {
                        this._m.onError(e)
                    }
                }, {
                    key: "login",
                    value: function(e) {
                        return this._m.login(), this._get(1).login(e)
                    }
                }, {
                    key: "logout",
                    value: function() {
                        var e = this;
                        return this._get(1).logout().then((function(t) {
                            return e._safetyCallbackFactory.reset(), e._m.reset(), t
                        }))
                    }
                }, {
                    key: "getLoginUser",
                    value: function() {
                        return this._get(1).getLoginUser()
                    }
                }, {
                    key: "isReady",
                    value: function() {
                        return this._m.isReady()
                    }
                }, {
                    key: "isIntl",
                    value: function() {
                        return this._m.isIntl()
                    }
                }, {
                    key: "getNotReadyReason",
                    value: function() {
                        return this._m.getNotReadyReason()
                    }
                }, {
                    key: "getErrMsg",
                    value: function(e, t, n) {
                        return this._m.getErrMsg(e, t, n)
                    }
                }, {
                    key: "_get",
                    value: function(e) {
                        return this._m.get(e)
                    }
                }, {
                    key: "destroy",
                    value: function() {
                        var e = this,
                            t = this._get(12),
                            n = t.getSDKAppID();
                        return Oe.w("destroy ".concat(n, " ").concat(t.getInstanceID())), this.logout().finally((function() {
                            e._safetyCallbackFactory.destroy(), e._m.stopTimer(), e._get(24).terminate(), e._get(21).dealloc(), e._m.getOEmitInst().emit(D.SDK_DESTROY, {
                                SDKAppID: n
                            })
                        }))
                    }
                }, {
                    key: "on",
                    value: function(e, t, n) {
                        Oe.d("on", "eventName:".concat(e)), this._m.getOEmitInst().on(e, this._safetyCallbackFactory.defense(e, t, n), n)
                    }
                }, {
                    key: "once",
                    value: function(e, t, n) {
                        Oe.d("once", "eventName:".concat(e)), this._m.getOEmitInst().once(e, this._safetyCallbackFactory.defenseOnce(e, t, n), n || this)
                    }
                }, {
                    key: "off",
                    value: function(e, t, n, o) {
                        Oe.d("off", "eventName:".concat(e));
                        var i = this._safetyCallbackFactory.find(e, t);
                        null !== i && (this._m.getOEmitInst().off(e, i, n, o), this._safetyCallbackFactory.delete(e, t))
                    }
                }, {
                    key: "registerPlugin",
                    value: function(e) {
                        (ut(e["tim-push"]) ? ut(e["tim-offline-push-plugin"]) ? this._get(18) : this._get(28) : this._get(36)).registerPlugin(e)
                    }
                }, {
                    key: "setLogLevel",
                    value: function(e) {
                        var t;
                        e <= 0 && ((t = this.getErrMsg("TIM_ASCII_ART")) && console.log(t), (t = this.getErrMsg("API_REFER")) && (Vt() ? console.log("%c ".concat("IM SDK API ->", " %c"), "background:#ff9d00; padding:1px; border-radius:3px; color: #fff", "background:transparent", t) : console.log("IM SDK API ->", t)), (t = this.getErrMsg("DOCS_GUIDE")) && console.log(t), t = this.getErrMsg("IOS_WEBVIEW_WARNING"), me && t && console.warn(t)), Oe.setLevel(e)
                    }
                }, {
                    key: "createTextMessage",
                    value: function(e) {
                        return this._get(2).createTextMessage(e)
                    }
                }, {
                    key: "createTextAtMessage",
                    value: function(e) {
                        return this._get(2).createTextMessage(e)
                    }
                }, {
                    key: "createImageMessage",
                    value: function(e) {
                        return this._get(2).createImageMessage(e)
                    }
                }, {
                    key: "createAudioMessage",
                    value: function(e) {
                        return this._get(2).createAudioMessage(e)
                    }
                }, {
                    key: "createVideoMessage",
                    value: function(e) {
                        return this._get(2).createVideoMessage(e)
                    }
                }, {
                    key: "createCustomMessage",
                    value: function(e) {
                        return this._get(2).createCustomMessage(e)
                    }
                }, {
                    key: "createFaceMessage",
                    value: function(e) {
                        return this._get(2).createFaceMessage(e)
                    }
                }, {
                    key: "createFileMessage",
                    value: function(e) {
                        return this._get(2).createFileMessage(e)
                    }
                }, {
                    key: "createLocationMessage",
                    value: function(e) {
                        return this._get(2).createLocationMessage(e)
                    }
                }, {
                    key: "createMergerMessage",
                    value: function(e) {
                        return this._get(2).createMergerMessage(e)
                    }
                }, {
                    key: "downloadMergerMessage",
                    value: function(e) {
                        return e.type !== E.MSG_MERGER ? Mn({
                            code: Un.MSG_MERGER_TYPE_INVALID
                        }) : He(e.payload.downloadKey) ? Mn({
                            code: Un.MSG_MERGER_KEY_INVALID
                        }) : this._get(2).downloadMergerMessage(e).catch((function(e) {
                            return Mn({
                                code: Un.MSG_MERGER_DOWNLOAD_FAIL
                            })
                        }))
                    }
                }, {
                    key: "createForwardMessage",
                    value: function(e) {
                        return this._get(2).createForwardMessage(e)
                    }
                }, {
                    key: "sendMessage",
                    value: function(e, t) {
                        return e instanceof To ? this._get(2).sendMessageInstance(e, t) : Mn({
                            code: Un.MSG_INSTANCE_REQUIRED
                        })
                    }
                }, {
                    key: "searchCloudMessages",
                    value: function(e) {
                        return this._get(2).searchCloudMessages(e)
                    }
                }, {
                    key: "callExperimentalAPI",
                    value: function(e, t) {
                        return "sendComboMessage" === e ? this._get(31).sendMessage(t) : "handleGroupInvitation" === e ? this._get(7).handleGroupInvitation(t) : "isCommercialAbilityEnabled" === e ? this._get(27).isFeatureEnabled(t) : "isFeatureEnabledForStat" === e ? this._get(27).isFeatureEnabledForStat(t) : "isIntl" === e ? this.isIntl() : "sendTRTCCustomData" === e || "sendRoomCustomData" === e ? this._get(30).sendTRTCCustomData(t) : "getTimerID" === e ? this._m.getTimerID() : "getPollingTimerID" === e ? this._m.getPollingTimerID(t) : "setApplicationID" === e ? (this._get(12).setApplicationID(t), void this._get(20).updateProtocolConfig()) : "getServerConfig" === e ? this._get(23).getServerConfig(t) : "canIUseModule" === e ? this._m.canIUseModule(t) : "startMessageLongPolling" === e ? this._get(7).startMessageLongPolling(t) : "stopMessageLongPolling" === e ? this._get(7).stopMessageLongPolling(t) : "disableMessagePullOnInvite" === e ? this._get(11).disableMsgPullOnInvite(t) : Mn({
                            code: Un.INVALID_OPERATION
                        })
                    }
                }, {
                    key: "revokeMessage",
                    value: function(e) {
                        return this._get(2).revokeMessage(e)
                    }
                }, {
                    key: "resendMessage",
                    value: function(e, t) {
                        return e instanceof To ? this._get(2).resendMessage(e, t) : Mn({
                            code: Un.MSG_INSTANCE_REQUIRED
                        })
                    }
                }, {
                    key: "deleteMessage",
                    value: function(e) {
                        return this._get(2).deleteMessage(e)
                    }
                }, {
                    key: "translateText",
                    value: function(e) {
                        return this._get(2).translateText(e)
                    }
                }, {
                    key: "convertVoiceToText",
                    value: function(e) {
                        return this._get(2).convertVoiceToText(e)
                    }
                }, {
                    key: "setMessageExtensions",
                    value: function(e, t) {
                        return this._get(3).setMessageExtensions(e, t)
                    }
                }, {
                    key: "getMessageExtensions",
                    value: function(e) {
                        return this._get(3).getMessageExtensions(e)
                    }
                }, {
                    key: "deleteMessageExtensions",
                    value: function(e, t) {
                        return this._get(3).deleteMessageExtensions(e, t)
                    }
                }, {
                    key: "addMessageReaction",
                    value: function(e, t) {
                        return this._get(34).addMessageReaction(e, t)
                    }
                }, {
                    key: "removeMessageReaction",
                    value: function(e, t) {
                        return this._get(34).removeMessageReaction(e, t)
                    }
                }, {
                    key: "getMessageReactions",
                    value: function(e) {
                        return this._get(34).getMessageReactions(e)
                    }
                }, {
                    key: "getAllUserListOfMessageReaction",
                    value: function(e) {
                        return this._get(34).getAllUserListOfMessageReaction(e)
                    }
                }, {
                    key: "modifyMessage",
                    value: function(e) {
                        return this._get(2).modifyRemoteMessage(e)
                    }
                }, {
                    key: "getMessageList",
                    value: function(e) {
                        return this._get(11).getMessageList(e)
                    }
                }, {
                    key: "getMessageListHopping",
                    value: function(e) {
                        return this._get(11).getMessageListHopping(e)
                    }
                }, {
                    key: "sendMessageReadReceipt",
                    value: function(e) {
                        return this._get(11).sendReadReceipt(e)
                    }
                }, {
                    key: "getMessageReadReceiptList",
                    value: function(e) {
                        return this._get(11).getReadReceiptList(e)
                    }
                }, {
                    key: "getGroupMessageReadMemberList",
                    value: function(e) {
                        var t = this._get(7);
                        return t ? t.getReadReceiptDetail(e) : Mn({
                            code: Un.NO_MODULE
                        })
                    }
                }, {
                    key: "findMessage",
                    value: function(e) {
                        return this._get(11).findMessage(e)
                    }
                }, {
                    key: "setMessageRead",
                    value: function(e) {
                        return this._get(11).setMessageRead(e)
                    }
                }, {
                    key: "getConversationList",
                    value: function(e) {
                        return this._get(11).getConvList(e)
                    }
                }, {
                    key: "getConversationProfile",
                    value: function(e) {
                        return this._get(11).getConversationProfile(e)
                    }
                }, {
                    key: "deleteConversation",
                    value: function(e) {
                        return this._get(11).deleteConversation(e)
                    }
                }, {
                    key: "setConversationDraft",
                    value: function(e) {
                        return this._get(11).setConvDraft(e)
                    }
                }, {
                    key: "clearHistoryMessage",
                    value: function(e) {
                        return this._get(11).clearHistoryMessage(e)
                    }
                }, {
                    key: "pinConversation",
                    value: function(e) {
                        return this._get(11).pinConversation(e)
                    }
                }, {
                    key: "setAllMessageRead",
                    value: function(e) {
                        return this._get(11).setAllMessageRead(e)
                    }
                }, {
                    key: "setMessageRemindType",
                    value: function(e) {
                        return this._get(11).setMessageRemindType(e)
                    }
                }, {
                    key: "setAllReceiveMessageOpt",
                    value: function(e) {
                        return this._get(11).setAllRcvMsgOpt(e)
                    }
                }, {
                    key: "getAllReceiveMessageOpt",
                    value: function() {
                        return this._get(11).getAllRcvMsgOpt()
                    }
                }, {
                    key: "getTotalUnreadMessageCount",
                    value: function() {
                        return this._get(11).getTotalUnreadCount()
                    }
                }, {
                    key: "setConversationCustomData",
                    value: function(e) {
                        return this._get(11).setConvCustomData(e)
                    }
                }, {
                    key: "markConversation",
                    value: function(e) {
                        return this._get(11).markConv(e)
                    }
                }, {
                    key: "getConversationGroupList",
                    value: function() {
                        return this._get(11).getConvGroupList()
                    }
                }, {
                    key: "createConversationGroup",
                    value: function(e) {
                        return this._get(11).createConvGroup(e)
                    }
                }, {
                    key: "deleteConversationGroup",
                    value: function(e) {
                        return this._get(11).deleteConvGroup(e)
                    }
                }, {
                    key: "renameConversationGroup",
                    value: function(e) {
                        return this._get(11).renameConvGroup(e)
                    }
                }, {
                    key: "addConversationsToGroup",
                    value: function(e) {
                        return this._get(11).addConvsToGroup(e)
                    }
                }, {
                    key: "deleteConversationsFromGroup",
                    value: function(e) {
                        return this._get(11).deleteConvsFromGroup(e)
                    }
                }, {
                    key: "getMyProfile",
                    value: function() {
                        return this._get(4).getMyProfile()
                    }
                }, {
                    key: "getUserProfile",
                    value: function(e) {
                        return this._get(4).getUserProfile(e)
                    }
                }, {
                    key: "updateMyProfile",
                    value: function(e) {
                        return this._get(4).updateMyProfile(e)
                    }
                }, {
                    key: "getBlacklist",
                    value: function() {
                        return this._get(4).getLocalBlacklist()
                    }
                }, {
                    key: "addToBlacklist",
                    value: function(e) {
                        return this._get(4).addBlacklist(e)
                    }
                }, {
                    key: "removeFromBlacklist",
                    value: function(e) {
                        return this._get(4).deleteBlacklist(e)
                    }
                }, {
                    key: "setSelfStatus",
                    value: function(e) {
                        return this._get(4).setSelfStatus(e)
                    }
                }, {
                    key: "getUserStatus",
                    value: function(e) {
                        return this._get(4).getUserStatus(e)
                    }
                }, {
                    key: "subscribeUserStatus",
                    value: function(e) {
                        return this._get(4).subscribeUserStatus(e)
                    }
                }, {
                    key: "unsubscribeUserStatus",
                    value: function(e) {
                        return this._get(4).unsubscribeUserStatus(e)
                    }
                }, {
                    key: "getFriendList",
                    value: function() {
                        var e = this._get(8);
                        return e ? e.getLocalFriendList() : Mn({
                            code: Un.NO_MODULE
                        })
                    }
                }, {
                    key: "addFriend",
                    value: function(e) {
                        var t = this._get(8);
                        return t ? t.addFriend(e) : Mn({
                            code: Un.NO_MODULE
                        })
                    }
                }, {
                    key: "deleteFriend",
                    value: function(e) {
                        var t = this._get(8);
                        return t ? t.deleteFriend(e) : Mn({
                            code: Un.NO_MODULE
                        })
                    }
                }, {
                    key: "checkFriend",
                    value: function(e) {
                        var t = this._get(8);
                        return t ? t.checkFriend(e) : Mn({
                            code: Un.NO_MODULE
                        })
                    }
                }, {
                    key: "getFriendProfile",
                    value: function(e) {
                        var t = this._get(8);
                        return t ? t.getFriendProfile(e) : Mn({
                            code: Un.NO_MODULE
                        })
                    }
                }, {
                    key: "updateFriend",
                    value: function(e) {
                        var t = this._get(8);
                        return t ? t.updateFriend(e) : Mn({
                            code: Un.NO_MODULE
                        })
                    }
                }, {
                    key: "getFriendApplicationList",
                    value: function() {
                        var e = this._get(8);
                        return e ? e.getLocalFriendApplicationList() : Mn({
                            code: Un.NO_MODULE
                        })
                    }
                }, {
                    key: "acceptFriendApplication",
                    value: function(e) {
                        var t = this._get(8);
                        return t ? t.acceptFriendApplication(e) : Mn({
                            code: Un.NO_MODULE
                        })
                    }
                }, {
                    key: "refuseFriendApplication",
                    value: function(e) {
                        var t = this._get(8);
                        return t ? t.refuseFriendApplication(e) : Mn({
                            code: Un.NO_MODULE
                        })
                    }
                }, {
                    key: "deleteFriendApplication",
                    value: function(e) {
                        var t = this._get(8);
                        return t ? t.deleteFriendApplication(e) : Mn({
                            code: Un.NO_MODULE
                        })
                    }
                }, {
                    key: "setFriendApplicationRead",
                    value: function() {
                        var e = this._get(8);
                        return e ? e.setFriendApplicationRead() : Mn({
                            code: Un.NO_MODULE
                        })
                    }
                }, {
                    key: "getFriendGroupList",
                    value: function() {
                        var e = this._get(8);
                        return e ? e.getLocalFriendGroupList() : Mn({
                            code: Un.NO_MODULE
                        })
                    }
                }, {
                    key: "createFriendGroup",
                    value: function(e) {
                        var t = this._get(8);
                        return t ? t.createFriendGroup(e) : Mn({
                            code: Un.NO_MODULE
                        })
                    }
                }, {
                    key: "deleteFriendGroup",
                    value: function(e) {
                        var t = this._get(8);
                        return t ? t.deleteFriendGroup(e) : Mn({
                            code: Un.NO_MODULE
                        })
                    }
                }, {
                    key: "addToFriendGroup",
                    value: function(e) {
                        var t = this._get(8);
                        return t ? t.addToFriendGroup(e) : Mn({
                            code: Un.NO_MODULE
                        })
                    }
                }, {
                    key: "removeFromFriendGroup",
                    value: function(e) {
                        var t = this._get(8);
                        return t ? t.removeFromFriendGroup(e) : Mn({
                            code: Un.NO_MODULE
                        })
                    }
                }, {
                    key: "renameFriendGroup",
                    value: function(e) {
                        var t = this._get(8);
                        return t ? t.renameFriendGroup(e) : Mn({
                            code: Un.NO_MODULE
                        })
                    }
                }, {
                    key: "followUser",
                    value: function(e) {
                        var t = this._get(35);
                        return t ? t.followUser(e) : Mn({
                            code: Un.NO_MODULE
                        })
                    }
                }, {
                    key: "unfollowUser",
                    value: function(e) {
                        var t = this._get(35);
                        return t ? t.unfollowUser(e) : Mn({
                            code: Un.NO_MODULE
                        })
                    }
                }, {
                    key: "getMyFollowersList",
                    value: function(e) {
                        var t = this._get(35);
                        return t ? t.getMyFollowersList(e) : Mn({
                            code: Un.NO_MODULE
                        })
                    }
                }, {
                    key: "getMyFollowingList",
                    value: function(e) {
                        var t = this._get(35);
                        return t ? t.getMyFollowingList(e) : Mn({
                            code: Un.NO_MODULE
                        })
                    }
                }, {
                    key: "getMutualFollowersList",
                    value: function(e) {
                        var t = this._get(35);
                        return t ? t.getMutualFollowersList(e) : Mn({
                            code: Un.NO_MODULE
                        })
                    }
                }, {
                    key: "getUserFollowInfo",
                    value: function(e) {
                        var t = this._get(35);
                        return t ? t.getUserFollowInfo(e) : Mn({
                            code: Un.NO_MODULE
                        })
                    }
                }, {
                    key: "checkFollowType",
                    value: function(e) {
                        var t = this._get(35);
                        return t ? t.checkFollowType(e) : Mn({
                            code: Un.NO_MODULE
                        })
                    }
                }, {
                    key: "getGroupList",
                    value: function() {
                        var e = this._get(7);
                        return e ? e.getGroupList() : Mn({
                            code: Un.NO_MODULE
                        })
                    }
                }, {
                    key: "getGroupProfile",
                    value: function(e) {
                        var t = this._get(7);
                        return t ? t.getGroupProfile(e) : Mn({
                            code: Un.NO_MODULE
                        })
                    }
                }, {
                    key: "createGroup",
                    value: function(e) {
                        var t = this._get(7);
                        return t ? t.createGroup(e) : Mn({
                            code: Un.NO_MODULE
                        })
                    }
                }, {
                    key: "dismissGroup",
                    value: function(e) {
                        var t = this._get(7);
                        return t ? t.dismissGroup(e) : Mn({
                            code: Un.NO_MODULE
                        })
                    }
                }, {
                    key: "updateGroupProfile",
                    value: function(e) {
                        var t = this._get(7);
                        return t ? t.updateGroupProfile(e) : Mn({
                            code: Un.NO_MODULE
                        })
                    }
                }, {
                    key: "joinGroup",
                    value: function(e) {
                        var t = this._get(7);
                        return t ? t.joinGroup(e) : Mn({
                            code: Un.NO_MODULE
                        })
                    }
                }, {
                    key: "quitGroup",
                    value: function(e) {
                        var t = this._get(7);
                        return t ? t.quitGroup(e) : Mn({
                            code: Un.NO_MODULE
                        })
                    }
                }, {
                    key: "searchGroupByID",
                    value: function(e) {
                        var t = this._get(7);
                        return t ? t.searchGroupByID(e) : Mn({
                            code: Un.NO_MODULE
                        })
                    }
                }, {
                    key: "getGroupOnlineMemberCount",
                    value: function(e) {
                        var t = this._get(7);
                        return t ? t.getGroupOnlineMemberCount(e) : Mn({
                            code: Un.NO_MODULE
                        })
                    }
                }, {
                    key: "changeGroupOwner",
                    value: function(e) {
                        var t = this._get(7);
                        return t ? t.changeGroupOwner(e) : Mn({
                            code: Un.NO_MODULE
                        })
                    }
                }, {
                    key: "getGroupApplicationList",
                    value: function() {
                        var e = this._get(7);
                        return e ? e.getGroupApplicationList() : Mn({
                            code: Un.NO_MODULE
                        })
                    }
                }, {
                    key: "handleGroupApplication",
                    value: function(e) {
                        var t = this._get(7);
                        return t ? t.handleGroupApplication(e) : Mn({
                            code: Un.NO_MODULE
                        })
                    }
                }, {
                    key: "initGroupAttributes",
                    value: function(e) {
                        var t = this._get(7);
                        return t ? t.initGroupAttributes(e) : Mn({
                            code: Un.NO_MODULE
                        })
                    }
                }, {
                    key: "setGroupAttributes",
                    value: function(e) {
                        var t = this._get(7);
                        return t ? t.setGroupAttributes(e) : Mn({
                            code: Un.NO_MODULE
                        })
                    }
                }, {
                    key: "deleteGroupAttributes",
                    value: function(e) {
                        var t = this._get(7);
                        return t ? t.deleteGroupAttributes(e) : Mn({
                            code: Un.NO_MODULE
                        })
                    }
                }, {
                    key: "getGroupAttributes",
                    value: function(e) {
                        var t = this._get(7);
                        return t ? t.getGroupAttributes(e) : Mn({
                            code: Un.NO_MODULE
                        })
                    }
                }, {
                    key: "setGroupCounters",
                    value: function(e) {
                        var t = this._get(7);
                        return t ? t.setGroupCounters(e) : Mn({
                            code: Un.NO_MODULE
                        })
                    }
                }, {
                    key: "increaseGroupCounter",
                    value: function(e) {
                        var t = this._get(7);
                        return t ? t.increaseGroupCounter(e) : Mn({
                            code: Un.NO_MODULE
                        })
                    }
                }, {
                    key: "decreaseGroupCounter",
                    value: function(e) {
                        var t = this._get(7);
                        return t ? t.decreaseGroupCounter(e) : Mn({
                            code: Un.NO_MODULE
                        })
                    }
                }, {
                    key: "getGroupCounters",
                    value: function(e) {
                        var t = this._get(7);
                        return t ? t.getGroupCounters(e) : Mn({
                            code: Un.NO_MODULE
                        })
                    }
                }, {
                    key: "getGroupMemberList",
                    value: function(e) {
                        var t = this._get(7);
                        return t ? t.getGroupMemberList(e) : Mn({
                            code: Un.NO_MODULE
                        })
                    }
                }, {
                    key: "getGroupMemberProfile",
                    value: function(e) {
                        var t = this._get(7);
                        return t ? t.getGroupMemberProfile(e) : Mn({
                            code: Un.NO_MODULE
                        })
                    }
                }, {
                    key: "addGroupMember",
                    value: function(e) {
                        var t = this._get(7);
                        return t ? t.addGroupMember(e) : Mn({
                            code: Un.NO_MODULE
                        })
                    }
                }, {
                    key: "deleteGroupMember",
                    value: function(e) {
                        var t = this._get(7);
                        return t ? t.deleteGroupMember(e) : Mn({
                            code: Un.NO_MODULE
                        })
                    }
                }, {
                    key: "setGroupMemberMuteTime",
                    value: function(e) {
                        var t = this._get(7);
                        return t ? t.setGroupMemberMuteTime(e) : Mn({
                            code: Un.NO_MODULE
                        })
                    }
                }, {
                    key: "setGroupMemberRole",
                    value: function(e) {
                        var t = this._get(7);
                        return t ? t.setGroupMemberRole(e) : Mn({
                            code: Un.NO_MODULE
                        })
                    }
                }, {
                    key: "setGroupMemberNameCard",
                    value: function(e) {
                        var t = this._get(7);
                        return t ? t.setGroupMemberNameCard(e) : Mn({
                            code: Un.NO_MODULE
                        })
                    }
                }, {
                    key: "setGroupMemberCustomField",
                    value: function(e) {
                        var t = this._get(7);
                        return t ? t.setGroupMemberCustomField(e) : Mn({
                            code: Un.NO_MODULE
                        })
                    }
                }, {
                    key: "markGroupMemberList",
                    value: function(e) {
                        var t = this._get(7);
                        return t ? t.markGroupMemberList(e) : Mn({
                            code: Un.NO_MODULE
                        })
                    }
                }, {
                    key: "getJoinedCommunityList",
                    value: function() {
                        return this._get(10).getJoinedCommunityList()
                    }
                }, {
                    key: "createTopicInCommunity",
                    value: function(e) {
                        return this._get(10).createTopicInCommunity(e)
                    }
                }, {
                    key: "deleteTopicFromCommunity",
                    value: function(e) {
                        return this._get(10).deleteTopicFromCommunity(e)
                    }
                }, {
                    key: "updateTopicProfile",
                    value: function(e) {
                        return this._get(10).updateTopicProfile(e)
                    }
                }, {
                    key: "getTopicList",
                    value: function(e) {
                        return this._get(10).getTopicList(e)
                    }
                }, {
                    key: "addSignalingListener",
                    value: function(e, t, n) {
                        var o = this._get(33);
                        o && o.addSignalingListener(e, this._safetyCallbackFactory.defense(e, t, n), n)
                    }
                }, {
                    key: "removeSignalingListener",
                    value: function(e, t, n) {
                        var o, i = this._safetyCallbackFactory.find(e, t);
                        null === i || (o = this._get(33)) && (o.removeSignalingListener(e, i, n), this._safetyCallbackFactory.delete(e, t))
                    }
                }, {
                    key: "invite",
                    value: function(e) {
                        var t = this._get(33);
                        return t ? t.invite(e) : Mn({
                            code: Un.NO_MODULE
                        })
                    }
                }, {
                    key: "inviteSync",
                    value: function(e, t, n) {
                        var o = this._get(33);
                        return o ? o.inviteSync(e, t, n) : ""
                    }
                }, {
                    key: "inviteInGroup",
                    value: function(e) {
                        var t = this._get(33);
                        return t ? t.invite(e) : Mn({
                            code: Un.NO_MODULE
                        })
                    }
                }, {
                    key: "inviteInGroupSync",
                    value: function(e, t, n) {
                        var o = this._get(33);
                        return o ? o.inviteSync(e, t, n) : ""
                    }
                }, {
                    key: "cancel",
                    value: function(e) {
                        var t = this._get(33);
                        return t ? t.cancel(e) : Mn({
                            code: Un.NO_MODULE
                        })
                    }
                }, {
                    key: "accept",
                    value: function(e) {
                        var t = this._get(33);
                        return t ? t.accept(e) : Mn({
                            code: Un.NO_MODULE
                        })
                    }
                }, {
                    key: "reject",
                    value: function(e) {
                        var t = this._get(33);
                        return t ? t.reject(e) : Mn({
                            code: Un.NO_MODULE
                        })
                    }
                }, {
                    key: "getSignalingInfo",
                    value: function(e) {
                        var t = this._get(33);
                        return t ? t.getSignalingInfo(e) : null
                    }
                }, {
                    key: "modifyInvitation",
                    value: function(e) {
                        var t = this._get(33);
                        return t ? t.modifyInvitation(e) : Mn({
                            code: Un.NO_MODULE
                        })
                    }
                }]), Rc),
                Ac = {
                    login: 1,
                    logout: 1,
                    getLoginUser: 1,
                    destroy: 1,
                    on: 1,
                    off: 1,
                    ready: 1,
                    setLogLevel: 1,
                    joinGroup: 1,
                    quitGroup: 1,
                    registerPlugin: 1,
                    getGroupOnlineMemberCount: 1,
                    isReady: 1,
                    addSignalingListener: 1,
                    removeSignalingListener: 1,
                    callExperimentalAPI: 1
                };

            function Rc(e) {
                i(this, Rc), e = {
                    SDKAppID: e.SDKAppID,
                    unlimitedAVChatRoom: e.unlimitedAVChatRoom || !1,
                    scene: e.scene || "",
                    oversea: e.oversea || !1,
                    instanceID: kt(),
                    devMode: e.devMode || !1,
                    testEnv: e.testEnv || !1,
                    proxyServer: e.proxyServer || void 0,
                    fileUploadProxy: e.fileUploadProxy || void 0,
                    fileDownloadProxy: e.fileDownloadProxy || e.fileUploadProxy || void 0,
                    eventThrottling: !1 !== e.eventThrottling,
                    partialUpdatedConversations: !0 === e.partialUpdatedConversations,
                    modules: e.modules || void 0
                }, this._m = new Lc(e), this._safetyCallbackFactory = new Sc(this._m)
            }

            function Oc(e) {
                i(this, Oc), this._funcMap = new Map, this._m = e, this._n = "SafetyCallback", this._reportCount = 0
            }

            function Nc(e) {
                var t = this;
                i(this, Nc);
                var n, o = new Qn("sdkConstruct"),
                    a = (this._n = "ModuleManager", this._isReady = !1, this._reason = Un.USER_NOT_LOGGED_IN, this._startLoginTs = 0, this._map = new Map, this._optionalModuleMap = new Map, this._iEmitter = null, this._oEmitter = null, this._checkCount = 0, this._checkTimer = -1, this._map.set(12, new Ri(this, e)), this._map.set(37, new Ec(this)), this._map.set(15, new pa(this)), this._map.set(27, new or(this)), this._map.set(23, new Vs(this)), this._map.set(24, new tr(this)), this._map.set(26, new js(this)), this._map.set(21, new ls(this)), this._map.set(20, new xs(this)), this._map.set(1, new Ni(this)), this._map.set(2, new wa(this)), this._map.set(3, new Fa(this)), this._map.set(34, new qa(this)), this._map.set(31, new xa(this)), this._map.set(4, new Ai(this)), this._map.set(6, new Fo(this)), this._map.set(11, new ci(this)), this._map.set(7, new yi(this)), this._map.set(10, new Di(this)), this._map.set(13, new ra(this)), this._map.set(32, new cr(this)), this._map.set(14, new ua(this)), this._map.set(17, new Ca(this)), this._map.set(18, new Va(this)), this._map.set(19, new Ha(this)), this._map.set(25, new Hs(this)), this._map.set(8, new er(this)), this._map.set(28, new ir(this)), this._map.set(36, new ar(this)), this._map.set(29, new sr(this)), this._map.set(30, new rr(this)), this._map.set(33, new gr(this)), this._map.set(35, new vr(this)), this._eventThrottleMap = new Map, this._eventThrottling = e.eventThrottling, je(e.modules) ? (Object.keys(e.modules).forEach((function(o) {
                        n = e.modules[o], "group-module" === o ? t._map.set(7, new n(t)) : "relationship-module" === o ? t._map.set(8, new n(t)) : "signaling-module" === o ? t._map.set(33, new n(t)) : "follow-module" === o && t._map.set(35, new n(t)), t._optionalModuleMap.set(o, 1)
                    })), this._map.get(12).setUsingChatCore(!0)) : this._map.has(7) || this._map.get(12).setUsingChatCore(!0), e.instanceID),
                    s = e.SDKAppID,
                    r = this._map.get(12).isIntl(),
                    c = this._map.get(12).isUsingChatCore();
                a = "instanceID:".concat(a, " SDKAppID:").concat(s, " isIntl:").concat(r, " isUsingChatCore:").concat(c, " host:").concat(At()) + " isIOSWebView:".concat(me, " platform:").concat(ie, " canIUseInflate:").concat(this.canIUseInflate()) + " workerAvailable:".concat(he, " UserAgent:").concat(oe), Qn.bindEventStatModule(this._map.get(14)), Qn.bindNetMonitorModule(this._map.get(15)), o.setMessage("".concat(a, " ").concat(function() {
                    var e = "";
                    if (Q) try {
                        var t = ne.getSystemInfoSync(),
                            n = t.model,
                            o = t.version,
                            i = t.system,
                            a = t.platform,
                            s = t.SDKVersion;
                        e = "model:".concat(n, " version:").concat(o, " system:").concat(i, " platform:").concat(a, " SDKVersion:").concat(s)
                    } catch (t) {
                        e = ""
                    }
                    return e
                }())).end(), Oe.i("SDK ".concat(a)), Pn.prototype._getErrMsg = this.getErrMsg.bind(this), this._readyList = void 0, this._ssoLogForReady = null, this._initReadyList()
            }

            function Gc(e) {
                i(this, Gc), this._m = e, this._n = "InflateModule", this._bLogForInflateOK = !1, this._bLogForInflateError = !1
            }
            var Pc = {};
            return (X = {
                create: function(e) {
                    var n, o, i, a = "TencentCloudChat.create",
                        s = 0;
                    if (Ye(i = e.SDKAppID)) s = i;
                    else if (s = parseInt(i), isNaN(i)) return Oe.e("".concat(a, " failed. Failed to parse the SDKAppID, please check the arguments")), null;
                    return s && Pc[s] ? Pc[s] : (Oe.l("".concat(a)), (i = new kc(t(t({}, e), {}, {
                        SDKAppID: s
                    }))).on(D.SDK_DESTROY, (function(e) {
                        Pc[e.data.SDKAppID] = null, delete Pc[e.data.SDKAppID]
                    })), n = i, o = Object.create(null), Object.keys(Gn).forEach((function(e) {
                        var t;
                        n[e] && (t = new S, o[e] = function() {
                            var o = Array.from(arguments);
                            return t.use((function(t, o) {
                                var i = function(e, t) {
                                    if (e.isReady() || 1 === Ac[t]) return !0;
                                    var n = {
                                        code: n = e.getNotReadyReason(),
                                        message: "".concat(e.getErrMsg(n), " | ").concat(t, " | ").concat(e.getErrMsg(Un.SDK_IS_NOT_READY))
                                    };
                                    return e.onError(n), n
                                }(n, e);
                                return !0 === i ? o() : Mn(i)
                            })).use((function(t, n) {
                                if (!0 === function(e, t, n) {
                                        if (void 0 === t) return !0;
                                        var o = !0;
                                        if (je(t)) Object.keys(t).forEach((function(i) {
                                            var a = 1 === e.length ? e[0][i] : void 0;
                                            o = !!jt(a, t[i], n, i) && o
                                        }));
                                        else if (Je(t))
                                            for (var i = 0; i < t.length; i++) o = !!jt(e[i], t[i], n, t[i].name) && o;
                                        if (o) return o;
                                        throw new Error("Params validate failed.")
                                    }(t, Nn[e], e)) return n()
                            })).use((function(t, o) {
                                return n[e].apply(n, t)
                            })), t.run(o)
                        })
                    })), e = o, Pc[s] = e, Nn.hookGetAPITips(i.getErrMsg.bind(i)), Oe.l("".concat(a, " ok")), e)
                }
            }).TYPES = E, X.EVENT = D, X.TSignaling = L, X.VERSION = "3.4.3", Oe.l("TencentCloudChat.VERSION:".concat(X.VERSION)), X
        }))
    }), (function(e) {
        return t({}[e], e)
    })), t(1735023415013));
});
define("miniprogram_npm/crypto-js/index.js", function(require, module, exports, window, document, frames, self, location, navigator, localStorage, history, Caches, screen, alert, confirm, prompt, XMLHttpRequest, WebSocket, Reporter, webkit, WeixinJSCore) {
    "use strict";
    var e, r, t, i = require("../../@babel/runtime/helpers/typeof");
    module.exports = (e = {}, t = function(r, t) {
        if (!e[r]) return require(t);
        if (!e[r].status) {
            var n = e[r].m;
            n._exports = n._tempexports;
            var o = Object.getOwnPropertyDescriptor(n, "exports");
            o && o.configurable && Object.defineProperty(n, "exports", {set: function(e) {
                    "object" === i(e) && e !== n._exports && (n._exports.__proto__ = e.__proto__, Object.keys(e).forEach((function(r) {
                        n._exports[r] = e[r]
                    }))), n._tempexports = e
                },
                get: function() {
                    return n._tempexports
                }
            }), e[r].status = 1, e[r].func(e[r].req, n, n.exports)
        }
        return e[r].m.exports
    }, (r = function(r, t, i) {
        e[r] = {
            status: 0,
            func: t,
            req: i,
            m: {
                exports: {},
                _tempexports: {}
            }
        }
    })(1735023415016, (function(e, r, t) {
        var n, o;
        n = this, o = function(e) {
            return e
        }, "object" === i(t) ? r.exports = t = o(e("./core"), e("./x64-core"), e("./lib-typedarrays"), e("./enc-utf16"), e("./enc-base64"), e("./enc-base64url"), e("./md5"), e("./sha1"), e("./sha256"), e("./sha224"), e("./sha512"), e("./sha384"), e("./sha3"), e("./ripemd160"), e("./hmac"), e("./pbkdf2"), e("./evpkdf"), e("./cipher-core"), e("./mode-cfb"), e("./mode-ctr"), e("./mode-ctr-gladman"), e("./mode-ofb"), e("./mode-ecb"), e("./pad-ansix923"), e("./pad-iso10126"), e("./pad-iso97971"), e("./pad-zeropadding"), e("./pad-nopadding"), e("./format-hex"), e("./aes"), e("./tripledes"), e("./rc4"), e("./rabbit"), e("./rabbit-legacy"), e("./blowfish")) : "function" == typeof define && define.amd ? define(["./core", "./x64-core", "./lib-typedarrays", "./enc-utf16", "./enc-base64", "./enc-base64url", "./md5", "./sha1", "./sha256", "./sha224", "./sha512", "./sha384", "./sha3", "./ripemd160", "./hmac", "./pbkdf2", "./evpkdf", "./cipher-core", "./mode-cfb", "./mode-ctr", "./mode-ctr-gladman", "./mode-ofb", "./mode-ecb", "./pad-ansix923", "./pad-iso10126", "./pad-iso97971", "./pad-zeropadding", "./pad-nopadding", "./format-hex", "./aes", "./tripledes", "./rc4", "./rabbit", "./rabbit-legacy", "./blowfish"], o) : n.CryptoJS = n.CryptoJS
    }), (function(e) {
        return t({
            "./core": 1735023415017,
            "./x64-core": 1735023415018,
            "./lib-typedarrays": 1735023415019,
            "./enc-utf16": 1735023415020,
            "./enc-base64": 1735023415021,
            "./enc-base64url": 1735023415022,
            "./md5": 1735023415023,
            "./sha1": 1735023415024,
            "./sha256": 1735023415025,
            "./sha224": 1735023415026,
            "./sha512": 1735023415027,
            "./sha384": 1735023415028,
            "./sha3": 1735023415029,
            "./ripemd160": 1735023415030,
            "./hmac": 1735023415031,
            "./pbkdf2": 1735023415032,
            "./evpkdf": 1735023415033,
            "./cipher-core": 1735023415034,
            "./mode-cfb": 1735023415035,
            "./mode-ctr": 1735023415036,
            "./mode-ctr-gladman": 1735023415037,
            "./mode-ofb": 1735023415038,
            "./mode-ecb": 1735023415039,
            "./pad-ansix923": 1735023415040,
            "./pad-iso10126": 1735023415041,
            "./pad-iso97971": 1735023415042,
            "./pad-zeropadding": 1735023415043,
            "./pad-nopadding": 1735023415044,
            "./format-hex": 1735023415045,
            "./aes": 1735023415046,
            "./tripledes": 1735023415047,
            "./rc4": 1735023415048,
            "./rabbit": 1735023415049,
            "./rabbit-legacy": 1735023415050,
            "./blowfish": 1735023415051
        }[e], e)
    })), r(1735023415017, (function(e, r, t) {
        var n, o;
        n = this, o = function() {
            var r = r || function(r, t) {
                var i;
                if ("undefined" != typeof window && window.crypto && (i = window.crypto), "undefined" != typeof self && self.crypto && (i = self.crypto), "undefined" != typeof globalThis && globalThis.crypto && (i = globalThis.crypto), !i && "undefined" != typeof window && window.msCrypto && (i = window.msCrypto), !i && "undefined" != typeof global && global.crypto && (i = global.crypto), !i && "function" == typeof e) try {
                    i = e("crypto")
                } catch (e) {}
                var n = function() {
                        if (i) {
                            if ("function" == typeof i.getRandomValues) try {
                                return i.getRandomValues(new Uint32Array(1))[0]
                            } catch (e) {}
                            if ("function" == typeof i.randomBytes) try {
                                return i.randomBytes(4).readInt32LE()
                            } catch (e) {}
                        }
                        throw new Error("Native crypto module could not be used to get secure random number.")
                    },
                    o = Object.create || function() {
                        function e() {}
                        return function(r) {
                            var t;
                            return e.prototype = r, t = new e, e.prototype = null, t
                        }
                    }(),
                    c = {},
                    s = c.lib = {},
                    a = s.Base = {
                        extend: function(e) {
                            var r = o(this);
                            return e && r.mixIn(e), r.hasOwnProperty("init") && this.init !== r.init || (r.init = function() {
                                r.$super.init.apply(this, arguments)
                            }), r.init.prototype = r, r.$super = this, r
                        },
                        create: function() {
                            var e = this.extend();
                            return e.init.apply(e, arguments), e
                        },
                        init: function() {},
                        mixIn: function(e) {
                            for (var r in e) e.hasOwnProperty(r) && (this[r] = e[r]);
                            e.hasOwnProperty("toString") && (this.toString = e.toString)
                        },
                        clone: function() {
                            return this.init.prototype.extend(this)
                        }
                    },
                    f = s.WordArray = a.extend({
                        init: function(e, r) {
                            e = this.words = e || [], this.sigBytes = null != r ? r : 4 * e.length
                        },
                        toString: function(e) {
                            return (e || d).stringify(this)
                        },
                        concat: function(e) {
                            var r = this.words,
                                t = e.words,
                                i = this.sigBytes,
                                n = e.sigBytes;
                            if (this.clamp(), i % 4)
                                for (var o = 0; o < n; o++) {
                                    var c = t[o >>> 2] >>> 24 - o % 4 * 8 & 255;
                                    r[i + o >>> 2] |= c << 24 - (i + o) % 4 * 8
                                } else
                                    for (var s = 0; s < n; s += 4) r[i + s >>> 2] = t[s >>> 2];
                            return this.sigBytes += n, this
                        },
                        clamp: function() {
                            var e = this.words,
                                t = this.sigBytes;
                            e[t >>> 2] &= 4294967295 << 32 - t % 4 * 8, e.length = r.ceil(t / 4)
                        },
                        clone: function() {
                            var e = a.clone.call(this);
                            return e.words = this.words.slice(0), e
                        },
                        random: function(e) {
                            for (var r = [], t = 0; t < e; t += 4) r.push(n());
                            return new f.init(r, e)
                        }
                    }),
                    h = c.enc = {},
                    d = h.Hex = {
                        stringify: function(e) {
                            for (var r = e.words, t = e.sigBytes, i = [], n = 0; n < t; n++) {
                                var o = r[n >>> 2] >>> 24 - n % 4 * 8 & 255;
                                i.push((o >>> 4).toString(16)), i.push((15 & o).toString(16))
                            }
                            return i.join("")
                        },
                        parse: function(e) {
                            for (var r = e.length, t = [], i = 0; i < r; i += 2) t[i >>> 3] |= parseInt(e.substr(i, 2), 16) << 24 - i % 8 * 4;
                            return new f.init(t, r / 2)
                        }
                    },
                    u = h.Latin1 = {
                        stringify: function(e) {
                            for (var r = e.words, t = e.sigBytes, i = [], n = 0; n < t; n++) {
                                var o = r[n >>> 2] >>> 24 - n % 4 * 8 & 255;
                                i.push(String.fromCharCode(o))
                            }
                            return i.join("")
                        },
                        parse: function(e) {
                            for (var r = e.length, t = [], i = 0; i < r; i++) t[i >>> 2] |= (255 & e.charCodeAt(i)) << 24 - i % 4 * 8;
                            return new f.init(t, r)
                        }
                    },
                    p = h.Utf8 = {
                        stringify: function(e) {
                            try {
                                return decodeURIComponent(escape(u.stringify(e)))
                            } catch (e) {
                                throw new Error("Malformed UTF-8 data")
                            }
                        },
                        parse: function(e) {
                            return u.parse(unescape(encodeURIComponent(e)))
                        }
                    },
                    l = s.BufferedBlockAlgorithm = a.extend({
                        reset: function() {
                            this._data = new f.init, this._nDataBytes = 0
                        },
                        _append: function(e) {
                            "string" == typeof e && (e = p.parse(e)), this._data.concat(e), this._nDataBytes += e.sigBytes
                        },
                        _process: function(e) {
                            var t, i = this._data,
                                n = i.words,
                                o = i.sigBytes,
                                c = this.blockSize,
                                s = o / (4 * c),
                                a = (s = e ? r.ceil(s) : r.max((0 | s) - this._minBufferSize, 0)) * c,
                                h = r.min(4 * a, o);
                            if (a) {
                                for (var d = 0; d < a; d += c) this._doProcessBlock(n, d);
                                t = n.splice(0, a), i.sigBytes -= h
                            }
                            return new f.init(t, h)
                        },
                        clone: function() {
                            var e = a.clone.call(this);
                            return e._data = this._data.clone(), e
                        },
                        _minBufferSize: 0
                    }),
                    v = (s.Hasher = l.extend({
                        cfg: a.extend(),
                        init: function(e) {
                            this.cfg = this.cfg.extend(e), this.reset()
                        },
                        reset: function() {
                            l.reset.call(this), this._doReset()
                        },
                        update: function(e) {
                            return this._append(e), this._process(), this
                        },
                        finalize: function(e) {
                            return e && this._append(e), this._doFinalize()
                        },
                        blockSize: 16,
                        _createHelper: function(e) {
                            return function(r, t) {
                                return new e.init(t).finalize(r)
                            }
                        },
                        _createHmacHelper: function(e) {
                            return function(r, t) {
                                return new v.HMAC.init(e, t).finalize(r)
                            }
                        }
                    }), c.algo = {});
                return c
            }(Math);
            return r
        }, "object" === i(t) ? r.exports = t = o() : "function" == typeof define && define.amd ? define([], o) : n.CryptoJS = o()
    }), (function(e) {
        return t({}[e], e)
    })), r(1735023415018, (function(e, r, t) {
        var n, o;
        n = this, o = function(e) {
            var r, t, i, n, o;
            return t = (r = e).lib, i = t.Base, n = t.WordArray, (o = r.x64 = {}).Word = i.extend({
                init: function(e, r) {
                    this.high = e, this.low = r
                }
            }), o.WordArray = i.extend({
                init: function(e, r) {
                    e = this.words = e || [], this.sigBytes = null != r ? r : 8 * e.length
                },
                toX32: function() {
                    for (var e = this.words, r = e.length, t = [], i = 0; i < r; i++) {
                        var o = e[i];
                        t.push(o.high), t.push(o.low)
                    }
                    return n.create(t, this.sigBytes)
                },
                clone: function() {
                    for (var e = i.clone.call(this), r = e.words = this.words.slice(0), t = r.length, n = 0; n < t; n++) r[n] = r[n].clone();
                    return e
                }
            }), e
        }, "object" === i(t) ? r.exports = t = o(e("./core")) : "function" == typeof define && define.amd ? define(["./core"], o) : o(n.CryptoJS)
    }), (function(e) {
        return t({
            "./core": 1735023415017
        }[e], e)
    })), r(1735023415019, (function(e, r, t) {
        var n, o;
        n = this, o = function(e) {
            return function() {
                if ("function" == typeof ArrayBuffer) {
                    var r = e.lib.WordArray,
                        t = r.init;
                    (r.init = function(e) {
                        if (e instanceof ArrayBuffer && (e = new Uint8Array(e)), (e instanceof Int8Array || "undefined" != typeof Uint8ClampedArray && e instanceof Uint8ClampedArray || e instanceof Int16Array || e instanceof Uint16Array || e instanceof Int32Array || e instanceof Uint32Array || e instanceof Float32Array || e instanceof Float64Array) && (e = new Uint8Array(e.buffer, e.byteOffset, e.byteLength)), e instanceof Uint8Array) {
                            for (var r = e.byteLength, i = [], n = 0; n < r; n++) i[n >>> 2] |= e[n] << 24 - n % 4 * 8;
                            t.call(this, i, r)
                        } else t.apply(this, arguments)
                    }).prototype = r
                }
            }(), e.lib.WordArray
        }, "object" === i(t) ? r.exports = t = o(e("./core")) : "function" == typeof define && define.amd ? define(["./core"], o) : o(n.CryptoJS)
    }), (function(e) {
        return t({
            "./core": 1735023415017
        }[e], e)
    })), r(1735023415020, (function(e, r, t) {
        var n, o;
        n = this, o = function(e) {
            return function() {
                var r = e,
                    t = r.lib.WordArray,
                    i = r.enc;

                function n(e) {
                    return e << 8 & 4278255360 | e >>> 8 & 16711935
                }
                i.Utf16 = i.Utf16BE = {
                    stringify: function(e) {
                        for (var r = e.words, t = e.sigBytes, i = [], n = 0; n < t; n += 2) {
                            var o = r[n >>> 2] >>> 16 - n % 4 * 8 & 65535;
                            i.push(String.fromCharCode(o))
                        }
                        return i.join("")
                    },
                    parse: function(e) {
                        for (var r = e.length, i = [], n = 0; n < r; n++) i[n >>> 1] |= e.charCodeAt(n) << 16 - n % 2 * 16;
                        return t.create(i, 2 * r)
                    }
                }, i.Utf16LE = {
                    stringify: function(e) {
                        for (var r = e.words, t = e.sigBytes, i = [], o = 0; o < t; o += 2) {
                            var c = n(r[o >>> 2] >>> 16 - o % 4 * 8 & 65535);
                            i.push(String.fromCharCode(c))
                        }
                        return i.join("")
                    },
                    parse: function(e) {
                        for (var r = e.length, i = [], o = 0; o < r; o++) i[o >>> 1] |= n(e.charCodeAt(o) << 16 - o % 2 * 16);
                        return t.create(i, 2 * r)
                    }
                }
            }(), e.enc.Utf16
        }, "object" === i(t) ? r.exports = t = o(e("./core")) : "function" == typeof define && define.amd ? define(["./core"], o) : o(n.CryptoJS)
    }), (function(e) {
        return t({
            "./core": 1735023415017
        }[e], e)
    })), r(1735023415021, (function(e, r, t) {
        var n, o;
        n = this, o = function(e) {
            var r, t;
            return t = (r = e).lib.WordArray, r.enc.Base64 = {
                stringify: function(e) {
                    var r = e.words,
                        t = e.sigBytes,
                        i = this._map;
                    e.clamp();
                    for (var n = [], o = 0; o < t; o += 3)
                        for (var c = (r[o >>> 2] >>> 24 - o % 4 * 8 & 255) << 16 | (r[o + 1 >>> 2] >>> 24 - (o + 1) % 4 * 8 & 255) << 8 | r[o + 2 >>> 2] >>> 24 - (o + 2) % 4 * 8 & 255, s = 0; s < 4 && o + .75 * s < t; s++) n.push(i.charAt(c >>> 6 * (3 - s) & 63));
                    var a = i.charAt(64);
                    if (a)
                        for (; n.length % 4;) n.push(a);
                    return n.join("")
                },
                parse: function(e) {
                    var r = e.length,
                        i = this._map,
                        n = this._reverseMap;
                    if (!n) {
                        n = this._reverseMap = [];
                        for (var o = 0; o < i.length; o++) n[i.charCodeAt(o)] = o
                    }
                    var c = i.charAt(64);
                    if (c) {
                        var s = e.indexOf(c); - 1 !== s && (r = s)
                    }
                    return function(e, r, i) {
                        for (var n = [], o = 0, c = 0; c < r; c++)
                            if (c % 4) {
                                var s = i[e.charCodeAt(c - 1)] << c % 4 * 2,
                                    a = i[e.charCodeAt(c)] >>> 6 - c % 4 * 2,
                                    f = s | a;
                                n[o >>> 2] |= f << 24 - o % 4 * 8, o++
                            }
                        return t.create(n, o)
                    }(e, r, n)
                },
                _map: "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/="
            }, e.enc.Base64
        }, "object" === i(t) ? r.exports = t = o(e("./core")) : "function" == typeof define && define.amd ? define(["./core"], o) : o(n.CryptoJS)
    }), (function(e) {
        return t({
            "./core": 1735023415017
        }[e], e)
    })), r(1735023415022, (function(e, r, t) {
        var n, o;
        n = this, o = function(e) {
            var r, t;
            return t = (r = e).lib.WordArray, r.enc.Base64url = {
                stringify: function(e, r) {
                    void 0 === r && (r = !0);
                    var t = e.words,
                        i = e.sigBytes,
                        n = r ? this._safe_map : this._map;
                    e.clamp();
                    for (var o = [], c = 0; c < i; c += 3)
                        for (var s = (t[c >>> 2] >>> 24 - c % 4 * 8 & 255) << 16 | (t[c + 1 >>> 2] >>> 24 - (c + 1) % 4 * 8 & 255) << 8 | t[c + 2 >>> 2] >>> 24 - (c + 2) % 4 * 8 & 255, a = 0; a < 4 && c + .75 * a < i; a++) o.push(n.charAt(s >>> 6 * (3 - a) & 63));
                    var f = n.charAt(64);
                    if (f)
                        for (; o.length % 4;) o.push(f);
                    return o.join("")
                },
                parse: function(e, r) {
                    void 0 === r && (r = !0);
                    var i = e.length,
                        n = r ? this._safe_map : this._map,
                        o = this._reverseMap;
                    if (!o) {
                        o = this._reverseMap = [];
                        for (var c = 0; c < n.length; c++) o[n.charCodeAt(c)] = c
                    }
                    var s = n.charAt(64);
                    if (s) {
                        var a = e.indexOf(s); - 1 !== a && (i = a)
                    }
                    return function(e, r, i) {
                        for (var n = [], o = 0, c = 0; c < r; c++)
                            if (c % 4) {
                                var s = i[e.charCodeAt(c - 1)] << c % 4 * 2,
                                    a = i[e.charCodeAt(c)] >>> 6 - c % 4 * 2,
                                    f = s | a;
                                n[o >>> 2] |= f << 24 - o % 4 * 8, o++
                            }
                        return t.create(n, o)
                    }(e, i, o)
                },
                _map: "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=",
                _safe_map: "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-_"
            }, e.enc.Base64url
        }, "object" === i(t) ? r.exports = t = o(e("./core")) : "function" == typeof define && define.amd ? define(["./core"], o) : o(n.CryptoJS)
    }), (function(e) {
        return t({
            "./core": 1735023415017
        }[e], e)
    })), r(1735023415023, (function(e, r, t) {
        var n, o;
        n = this, o = function(e) {
            return function(r) {
                var t = e,
                    i = t.lib,
                    n = i.WordArray,
                    o = i.Hasher,
                    c = t.algo,
                    s = [];
                ! function() {
                    for (var e = 0; e < 64; e++) s[e] = 4294967296 * r.abs(r.sin(e + 1)) | 0
                }();
                var a = c.MD5 = o.extend({
                    _doReset: function() {
                        this._hash = new n.init([1732584193, 4023233417, 2562383102, 271733878])
                    },
                    _doProcessBlock: function(e, r) {
                        for (var t = 0; t < 16; t++) {
                            var i = r + t,
                                n = e[i];
                            e[i] = 16711935 & (n << 8 | n >>> 24) | 4278255360 & (n << 24 | n >>> 8)
                        }
                        var o = this._hash.words,
                            c = e[r + 0],
                            a = e[r + 1],
                            p = e[r + 2],
                            l = e[r + 3],
                            v = e[r + 4],
                            y = e[r + 5],
                            _ = e[r + 6],
                            g = e[r + 7],
                            b = e[r + 8],
                            m = e[r + 9],
                            B = e[r + 10],
                            k = e[r + 11],
                            x = e[r + 12],
                            w = e[r + 13],
                            S = e[r + 14],
                            C = e[r + 15],
                            A = o[0],
                            H = o[1],
                            z = o[2],
                            R = o[3];
                        A = f(A, H, z, R, c, 7, s[0]), R = f(R, A, H, z, a, 12, s[1]), z = f(z, R, A, H, p, 17, s[2]), H = f(H, z, R, A, l, 22, s[3]), A = f(A, H, z, R, v, 7, s[4]), R = f(R, A, H, z, y, 12, s[5]), z = f(z, R, A, H, _, 17, s[6]), H = f(H, z, R, A, g, 22, s[7]), A = f(A, H, z, R, b, 7, s[8]), R = f(R, A, H, z, m, 12, s[9]), z = f(z, R, A, H, B, 17, s[10]), H = f(H, z, R, A, k, 22, s[11]), A = f(A, H, z, R, x, 7, s[12]), R = f(R, A, H, z, w, 12, s[13]), z = f(z, R, A, H, S, 17, s[14]), A = h(A, H = f(H, z, R, A, C, 22, s[15]), z, R, a, 5, s[16]), R = h(R, A, H, z, _, 9, s[17]), z = h(z, R, A, H, k, 14, s[18]), H = h(H, z, R, A, c, 20, s[19]), A = h(A, H, z, R, y, 5, s[20]), R = h(R, A, H, z, B, 9, s[21]), z = h(z, R, A, H, C, 14, s[22]), H = h(H, z, R, A, v, 20, s[23]), A = h(A, H, z, R, m, 5, s[24]), R = h(R, A, H, z, S, 9, s[25]), z = h(z, R, A, H, l, 14, s[26]), H = h(H, z, R, A, b, 20, s[27]), A = h(A, H, z, R, w, 5, s[28]), R = h(R, A, H, z, p, 9, s[29]), z = h(z, R, A, H, g, 14, s[30]), A = d(A, H = h(H, z, R, A, x, 20, s[31]), z, R, y, 4, s[32]), R = d(R, A, H, z, b, 11, s[33]), z = d(z, R, A, H, k, 16, s[34]), H = d(H, z, R, A, S, 23, s[35]), A = d(A, H, z, R, a, 4, s[36]), R = d(R, A, H, z, v, 11, s[37]), z = d(z, R, A, H, g, 16, s[38]), H = d(H, z, R, A, B, 23, s[39]), A = d(A, H, z, R, w, 4, s[40]), R = d(R, A, H, z, c, 11, s[41]), z = d(z, R, A, H, l, 16, s[42]), H = d(H, z, R, A, _, 23, s[43]), A = d(A, H, z, R, m, 4, s[44]), R = d(R, A, H, z, x, 11, s[45]), z = d(z, R, A, H, C, 16, s[46]), A = u(A, H = d(H, z, R, A, p, 23, s[47]), z, R, c, 6, s[48]), R = u(R, A, H, z, g, 10, s[49]), z = u(z, R, A, H, S, 15, s[50]), H = u(H, z, R, A, y, 21, s[51]), A = u(A, H, z, R, x, 6, s[52]), R = u(R, A, H, z, l, 10, s[53]), z = u(z, R, A, H, B, 15, s[54]), H = u(H, z, R, A, a, 21, s[55]), A = u(A, H, z, R, b, 6, s[56]), R = u(R, A, H, z, C, 10, s[57]), z = u(z, R, A, H, _, 15, s[58]), H = u(H, z, R, A, w, 21, s[59]), A = u(A, H, z, R, v, 6, s[60]), R = u(R, A, H, z, k, 10, s[61]), z = u(z, R, A, H, p, 15, s[62]), H = u(H, z, R, A, m, 21, s[63]), o[0] = o[0] + A | 0, o[1] = o[1] + H | 0, o[2] = o[2] + z | 0, o[3] = o[3] + R | 0
                    },
                    _doFinalize: function() {
                        var e = this._data,
                            t = e.words,
                            i = 8 * this._nDataBytes,
                            n = 8 * e.sigBytes;
                        t[n >>> 5] |= 128 << 24 - n % 32;
                        var o = r.floor(i / 4294967296),
                            c = i;
                        t[15 + (n + 64 >>> 9 << 4)] = 16711935 & (o << 8 | o >>> 24) | 4278255360 & (o << 24 | o >>> 8), t[14 + (n + 64 >>> 9 << 4)] = 16711935 & (c << 8 | c >>> 24) | 4278255360 & (c << 24 | c >>> 8), e.sigBytes = 4 * (t.length + 1), this._process();
                        for (var s = this._hash, a = s.words, f = 0; f < 4; f++) {
                            var h = a[f];
                            a[f] = 16711935 & (h << 8 | h >>> 24) | 4278255360 & (h << 24 | h >>> 8)
                        }
                        return s
                    },
                    clone: function() {
                        var e = o.clone.call(this);
                        return e._hash = this._hash.clone(), e
                    }
                });

                function f(e, r, t, i, n, o, c) {
                    var s = e + (r & t | ~r & i) + n + c;
                    return (s << o | s >>> 32 - o) + r
                }

                function h(e, r, t, i, n, o, c) {
                    var s = e + (r & i | t & ~i) + n + c;
                    return (s << o | s >>> 32 - o) + r
                }

                function d(e, r, t, i, n, o, c) {
                    var s = e + (r ^ t ^ i) + n + c;
                    return (s << o | s >>> 32 - o) + r
                }

                function u(e, r, t, i, n, o, c) {
                    var s = e + (t ^ (r | ~i)) + n + c;
                    return (s << o | s >>> 32 - o) + r
                }
                t.MD5 = o._createHelper(a), t.HmacMD5 = o._createHmacHelper(a)
            }(Math), e.MD5
        }, "object" === i(t) ? r.exports = t = o(e("./core")) : "function" == typeof define && define.amd ? define(["./core"], o) : o(n.CryptoJS)
    }), (function(e) {
        return t({
            "./core": 1735023415017
        }[e], e)
    })), r(1735023415024, (function(e, r, t) {
        var n, o;
        n = this, o = function(e) {
            var r, t, i, n, o, c, s;
            return t = (r = e).lib, i = t.WordArray, n = t.Hasher, o = r.algo, c = [], s = o.SHA1 = n.extend({
                _doReset: function() {
                    this._hash = new i.init([1732584193, 4023233417, 2562383102, 271733878, 3285377520])
                },
                _doProcessBlock: function(e, r) {
                    for (var t = this._hash.words, i = t[0], n = t[1], o = t[2], s = t[3], a = t[4], f = 0; f < 80; f++) {
                        if (f < 16) c[f] = 0 | e[r + f];
                        else {
                            var h = c[f - 3] ^ c[f - 8] ^ c[f - 14] ^ c[f - 16];
                            c[f] = h << 1 | h >>> 31
                        }
                        var d = (i << 5 | i >>> 27) + a + c[f];
                        d += f < 20 ? 1518500249 + (n & o | ~n & s) : f < 40 ? 1859775393 + (n ^ o ^ s) : f < 60 ? (n & o | n & s | o & s) - 1894007588 : (n ^ o ^ s) - 899497514, a = s, s = o, o = n << 30 | n >>> 2, n = i, i = d
                    }
                    t[0] = t[0] + i | 0, t[1] = t[1] + n | 0, t[2] = t[2] + o | 0, t[3] = t[3] + s | 0, t[4] = t[4] + a | 0
                },
                _doFinalize: function() {
                    var e = this._data,
                        r = e.words,
                        t = 8 * this._nDataBytes,
                        i = 8 * e.sigBytes;
                    return r[i >>> 5] |= 128 << 24 - i % 32, r[14 + (i + 64 >>> 9 << 4)] = Math.floor(t / 4294967296), r[15 + (i + 64 >>> 9 << 4)] = t, e.sigBytes = 4 * r.length, this._process(), this._hash
                },
                clone: function() {
                    var e = n.clone.call(this);
                    return e._hash = this._hash.clone(), e
                }
            }), r.SHA1 = n._createHelper(s), r.HmacSHA1 = n._createHmacHelper(s), e.SHA1
        }, "object" === i(t) ? r.exports = t = o(e("./core")) : "function" == typeof define && define.amd ? define(["./core"], o) : o(n.CryptoJS)
    }), (function(e) {
        return t({
            "./core": 1735023415017
        }[e], e)
    })), r(1735023415025, (function(e, r, t) {
        var n, o;
        n = this, o = function(e) {
            return function(r) {
                var t = e,
                    i = t.lib,
                    n = i.WordArray,
                    o = i.Hasher,
                    c = t.algo,
                    s = [],
                    a = [];
                ! function() {
                    function e(e) {
                        for (var t = r.sqrt(e), i = 2; i <= t; i++)
                            if (!(e % i)) return !1;
                        return !0
                    }

                    function t(e) {
                        return 4294967296 * (e - (0 | e)) | 0
                    }
                    for (var i = 2, n = 0; n < 64;) e(i) && (n < 8 && (s[n] = t(r.pow(i, .5))), a[n] = t(r.pow(i, 1 / 3)), n++), i++
                }();
                var f = [],
                    h = c.SHA256 = o.extend({
                        _doReset: function() {
                            this._hash = new n.init(s.slice(0))
                        },
                        _doProcessBlock: function(e, r) {
                            for (var t = this._hash.words, i = t[0], n = t[1], o = t[2], c = t[3], s = t[4], h = t[5], d = t[6], u = t[7], p = 0; p < 64; p++) {
                                if (p < 16) f[p] = 0 | e[r + p];
                                else {
                                    var l = f[p - 15],
                                        v = (l << 25 | l >>> 7) ^ (l << 14 | l >>> 18) ^ l >>> 3,
                                        y = f[p - 2],
                                        _ = (y << 15 | y >>> 17) ^ (y << 13 | y >>> 19) ^ y >>> 10;
                                    f[p] = v + f[p - 7] + _ + f[p - 16]
                                }
                                var g = i & n ^ i & o ^ n & o,
                                    b = (i << 30 | i >>> 2) ^ (i << 19 | i >>> 13) ^ (i << 10 | i >>> 22),
                                    m = u + ((s << 26 | s >>> 6) ^ (s << 21 | s >>> 11) ^ (s << 7 | s >>> 25)) + (s & h ^ ~s & d) + a[p] + f[p];
                                u = d, d = h, h = s, s = c + m | 0, c = o, o = n, n = i, i = m + (b + g) | 0
                            }
                            t[0] = t[0] + i | 0, t[1] = t[1] + n | 0, t[2] = t[2] + o | 0, t[3] = t[3] + c | 0, t[4] = t[4] + s | 0, t[5] = t[5] + h | 0, t[6] = t[6] + d | 0, t[7] = t[7] + u | 0
                        },
                        _doFinalize: function() {
                            var e = this._data,
                                t = e.words,
                                i = 8 * this._nDataBytes,
                                n = 8 * e.sigBytes;
                            return t[n >>> 5] |= 128 << 24 - n % 32, t[14 + (n + 64 >>> 9 << 4)] = r.floor(i / 4294967296), t[15 + (n + 64 >>> 9 << 4)] = i, e.sigBytes = 4 * t.length, this._process(), this._hash
                        },
                        clone: function() {
                            var e = o.clone.call(this);
                            return e._hash = this._hash.clone(), e
                        }
                    });
                t.SHA256 = o._createHelper(h), t.HmacSHA256 = o._createHmacHelper(h)
            }(Math), e.SHA256
        }, "object" === i(t) ? r.exports = t = o(e("./core")) : "function" == typeof define && define.amd ? define(["./core"], o) : o(n.CryptoJS)
    }), (function(e) {
        return t({
            "./core": 1735023415017
        }[e], e)
    })), r(1735023415026, (function(e, r, t) {
        var n, o;
        n = this, o = function(e) {
            var r, t, i, n, o;
            return t = (r = e).lib.WordArray, i = r.algo, n = i.SHA256, o = i.SHA224 = n.extend({
                _doReset: function() {
                    this._hash = new t.init([3238371032, 914150663, 812702999, 4144912697, 4290775857, 1750603025, 1694076839, 3204075428])
                },
                _doFinalize: function() {
                    var e = n._doFinalize.call(this);
                    return e.sigBytes -= 4, e
                }
            }), r.SHA224 = n._createHelper(o), r.HmacSHA224 = n._createHmacHelper(o), e.SHA224
        }, "object" === i(t) ? r.exports = t = o(e("./core"), e("./sha256")) : "function" == typeof define && define.amd ? define(["./core", "./sha256"], o) : o(n.CryptoJS)
    }), (function(e) {
        return t({
            "./core": 1735023415017,
            "./sha256": 1735023415025
        }[e], e)
    })), r(1735023415027, (function(e, r, t) {
        var n, o;
        n = this, o = function(e) {
            return function() {
                var r = e,
                    t = r.lib.Hasher,
                    i = r.x64,
                    n = i.Word,
                    o = i.WordArray,
                    c = r.algo;

                function s() {
                    return n.create.apply(n, arguments)
                }
                var a = [s(1116352408, 3609767458), s(1899447441, 602891725), s(3049323471, 3964484399), s(3921009573, 2173295548), s(961987163, 4081628472), s(1508970993, 3053834265), s(2453635748, 2937671579), s(2870763221, 3664609560), s(3624381080, 2734883394), s(310598401, 1164996542), s(607225278, 1323610764), s(1426881987, 3590304994), s(1925078388, 4068182383), s(2162078206, 991336113), s(2614888103, 633803317), s(3248222580, 3479774868), s(3835390401, 2666613458), s(4022224774, 944711139), s(264347078, 2341262773), s(604807628, 2007800933), s(770255983, 1495990901), s(1249150122, 1856431235), s(1555081692, 3175218132), s(1996064986, 2198950837), s(2554220882, 3999719339), s(2821834349, 766784016), s(2952996808, 2566594879), s(3210313671, 3203337956), s(3336571891, 1034457026), s(3584528711, 2466948901), s(113926993, 3758326383), s(338241895, 168717936), s(666307205, 1188179964), s(773529912, 1546045734), s(1294757372, 1522805485), s(1396182291, 2643833823), s(1695183700, 2343527390), s(1986661051, 1014477480), s(2177026350, 1206759142), s(2456956037, 344077627), s(2730485921, 1290863460), s(2820302411, 3158454273), s(3259730800, 3505952657), s(3345764771, 106217008), s(3516065817, 3606008344), s(3600352804, 1432725776), s(4094571909, 1467031594), s(275423344, 851169720), s(430227734, 3100823752), s(506948616, 1363258195), s(659060556, 3750685593), s(883997877, 3785050280), s(958139571, 3318307427), s(1322822218, 3812723403), s(1537002063, 2003034995), s(1747873779, 3602036899), s(1955562222, 1575990012), s(2024104815, 1125592928), s(2227730452, 2716904306), s(2361852424, 442776044), s(2428436474, 593698344), s(2756734187, 3733110249), s(3204031479, 2999351573), s(3329325298, 3815920427), s(3391569614, 3928383900), s(3515267271, 566280711), s(3940187606, 3454069534), s(4118630271, 4000239992), s(116418474, 1914138554), s(174292421, 2731055270), s(289380356, 3203993006), s(460393269, 320620315), s(685471733, 587496836), s(852142971, 1086792851), s(1017036298, 365543100), s(1126000580, 2618297676), s(1288033470, 3409855158), s(1501505948, 4234509866), s(1607167915, 987167468), s(1816402316, 1246189591)],
                    f = [];
                ! function() {
                    for (var e = 0; e < 80; e++) f[e] = s()
                }();
                var h = c.SHA512 = t.extend({
                    _doReset: function() {
                        this._hash = new o.init([new n.init(1779033703, 4089235720), new n.init(3144134277, 2227873595), new n.init(1013904242, 4271175723), new n.init(2773480762, 1595750129), new n.init(1359893119, 2917565137), new n.init(2600822924, 725511199), new n.init(528734635, 4215389547), new n.init(1541459225, 327033209)])
                    },
                    _doProcessBlock: function(e, r) {
                        for (var t = this._hash.words, i = t[0], n = t[1], o = t[2], c = t[3], s = t[4], h = t[5], d = t[6], u = t[7], p = i.high, l = i.low, v = n.high, y = n.low, _ = o.high, g = o.low, b = c.high, m = c.low, B = s.high, k = s.low, x = h.high, w = h.low, S = d.high, C = d.low, A = u.high, H = u.low, z = p, R = l, D = v, E = y, j = _, M = g, J = b, P = m, F = B, O = k, W = x, I = w, U = S, K = C, X = A, L = H, T = 0; T < 80; T++) {
                            var N, q, Z = f[T];
                            if (T < 16) q = Z.high = 0 | e[r + 2 * T], N = Z.low = 0 | e[r + 2 * T + 1];
                            else {
                                var G = f[T - 15],
                                    V = G.high,
                                    Q = G.low,
                                    Y = (V >>> 1 | Q << 31) ^ (V >>> 8 | Q << 24) ^ V >>> 7,
                                    $ = (Q >>> 1 | V << 31) ^ (Q >>> 8 | V << 24) ^ (Q >>> 7 | V << 25),
                                    ee = f[T - 2],
                                    re = ee.high,
                                    te = ee.low,
                                    ie = (re >>> 19 | te << 13) ^ (re << 3 | te >>> 29) ^ re >>> 6,
                                    ne = (te >>> 19 | re << 13) ^ (te << 3 | re >>> 29) ^ (te >>> 6 | re << 26),
                                    oe = f[T - 7],
                                    ce = oe.high,
                                    se = oe.low,
                                    ae = f[T - 16],
                                    fe = ae.high,
                                    he = ae.low;
                                q = (q = (q = Y + ce + ((N = $ + se) >>> 0 < $ >>> 0 ? 1 : 0)) + ie + ((N += ne) >>> 0 < ne >>> 0 ? 1 : 0)) + fe + ((N += he) >>> 0 < he >>> 0 ? 1 : 0), Z.high = q, Z.low = N
                            }
                            var de, ue = F & W ^ ~F & U,
                                pe = O & I ^ ~O & K,
                                le = z & D ^ z & j ^ D & j,
                                ve = R & E ^ R & M ^ E & M,
                                ye = (z >>> 28 | R << 4) ^ (z << 30 | R >>> 2) ^ (z << 25 | R >>> 7),
                                _e = (R >>> 28 | z << 4) ^ (R << 30 | z >>> 2) ^ (R << 25 | z >>> 7),
                                ge = (F >>> 14 | O << 18) ^ (F >>> 18 | O << 14) ^ (F << 23 | O >>> 9),
                                be = (O >>> 14 | F << 18) ^ (O >>> 18 | F << 14) ^ (O << 23 | F >>> 9),
                                me = a[T],
                                Be = me.high,
                                ke = me.low,
                                xe = X + ge + ((de = L + be) >>> 0 < L >>> 0 ? 1 : 0),
                                we = _e + ve;
                            X = U, L = K, U = W, K = I, W = F, I = O, F = J + (xe = (xe = (xe = xe + ue + ((de += pe) >>> 0 < pe >>> 0 ? 1 : 0)) + Be + ((de += ke) >>> 0 < ke >>> 0 ? 1 : 0)) + q + ((de += N) >>> 0 < N >>> 0 ? 1 : 0)) + ((O = P + de | 0) >>> 0 < P >>> 0 ? 1 : 0) | 0, J = j, P = M, j = D, M = E, D = z, E = R, z = xe + (ye + le + (we >>> 0 < _e >>> 0 ? 1 : 0)) + ((R = de + we | 0) >>> 0 < de >>> 0 ? 1 : 0) | 0
                        }
                        l = i.low = l + R, i.high = p + z + (l >>> 0 < R >>> 0 ? 1 : 0), y = n.low = y + E, n.high = v + D + (y >>> 0 < E >>> 0 ? 1 : 0), g = o.low = g + M, o.high = _ + j + (g >>> 0 < M >>> 0 ? 1 : 0), m = c.low = m + P, c.high = b + J + (m >>> 0 < P >>> 0 ? 1 : 0), k = s.low = k + O, s.high = B + F + (k >>> 0 < O >>> 0 ? 1 : 0), w = h.low = w + I, h.high = x + W + (w >>> 0 < I >>> 0 ? 1 : 0), C = d.low = C + K, d.high = S + U + (C >>> 0 < K >>> 0 ? 1 : 0), H = u.low = H + L, u.high = A + X + (H >>> 0 < L >>> 0 ? 1 : 0)
                    },
                    _doFinalize: function() {
                        var e = this._data,
                            r = e.words,
                            t = 8 * this._nDataBytes,
                            i = 8 * e.sigBytes;
                        return r[i >>> 5] |= 128 << 24 - i % 32, r[30 + (i + 128 >>> 10 << 5)] = Math.floor(t / 4294967296), r[31 + (i + 128 >>> 10 << 5)] = t, e.sigBytes = 4 * r.length, this._process(), this._hash.toX32()
                    },
                    clone: function() {
                        var e = t.clone.call(this);
                        return e._hash = this._hash.clone(), e
                    },
                    blockSize: 32
                });
                r.SHA512 = t._createHelper(h), r.HmacSHA512 = t._createHmacHelper(h)
            }(), e.SHA512
        }, "object" === i(t) ? r.exports = t = o(e("./core"), e("./x64-core")) : "function" == typeof define && define.amd ? define(["./core", "./x64-core"], o) : o(n.CryptoJS)
    }), (function(e) {
        return t({
            "./core": 1735023415017,
            "./x64-core": 1735023415018
        }[e], e)
    })), r(1735023415028, (function(e, r, t) {
        var n, o;
        n = this, o = function(e) {
            var r, t, i, n, o, c, s;
            return t = (r = e).x64, i = t.Word, n = t.WordArray, o = r.algo, c = o.SHA512, s = o.SHA384 = c.extend({
                _doReset: function() {
                    this._hash = new n.init([new i.init(3418070365, 3238371032), new i.init(1654270250, 914150663), new i.init(2438529370, 812702999), new i.init(355462360, 4144912697), new i.init(1731405415, 4290775857), new i.init(2394180231, 1750603025), new i.init(3675008525, 1694076839), new i.init(1203062813, 3204075428)])
                },
                _doFinalize: function() {
                    var e = c._doFinalize.call(this);
                    return e.sigBytes -= 16, e
                }
            }), r.SHA384 = c._createHelper(s), r.HmacSHA384 = c._createHmacHelper(s), e.SHA384
        }, "object" === i(t) ? r.exports = t = o(e("./core"), e("./x64-core"), e("./sha512")) : "function" == typeof define && define.amd ? define(["./core", "./x64-core", "./sha512"], o) : o(n.CryptoJS)
    }), (function(e) {
        return t({
            "./core": 1735023415017,
            "./x64-core": 1735023415018,
            "./sha512": 1735023415027
        }[e], e)
    })), r(1735023415029, (function(e, r, t) {
        var n, o;
        n = this, o = function(e) {
            return function(r) {
                var t = e,
                    i = t.lib,
                    n = i.WordArray,
                    o = i.Hasher,
                    c = t.x64.Word,
                    s = t.algo,
                    a = [],
                    f = [],
                    h = [];
                ! function() {
                    for (var e = 1, r = 0, t = 0; t < 24; t++) {
                        a[e + 5 * r] = (t + 1) * (t + 2) / 2 % 64;
                        var i = (2 * e + 3 * r) % 5;
                        e = r % 5, r = i
                    }
                    for (e = 0; e < 5; e++)
                        for (r = 0; r < 5; r++) f[e + 5 * r] = r + (2 * e + 3 * r) % 5 * 5;
                    for (var n = 1, o = 0; o < 24; o++) {
                        for (var s = 0, d = 0, u = 0; u < 7; u++) {
                            if (1 & n) {
                                var p = (1 << u) - 1;
                                p < 32 ? d ^= 1 << p : s ^= 1 << p - 32
                            }
                            128 & n ? n = n << 1 ^ 113 : n <<= 1
                        }
                        h[o] = c.create(s, d)
                    }
                }();
                var d = [];
                ! function() {
                    for (var e = 0; e < 25; e++) d[e] = c.create()
                }();
                var u = s.SHA3 = o.extend({
                    cfg: o.cfg.extend({
                        outputLength: 512
                    }),
                    _doReset: function() {
                        for (var e = this._state = [], r = 0; r < 25; r++) e[r] = new c.init;
                        this.blockSize = (1600 - 2 * this.cfg.outputLength) / 32
                    },
                    _doProcessBlock: function(e, r) {
                        for (var t = this._state, i = this.blockSize / 2, n = 0; n < i; n++) {
                            var o = e[r + 2 * n],
                                c = e[r + 2 * n + 1];
                            o = 16711935 & (o << 8 | o >>> 24) | 4278255360 & (o << 24 | o >>> 8), c = 16711935 & (c << 8 | c >>> 24) | 4278255360 & (c << 24 | c >>> 8), (H = t[n]).high ^= c, H.low ^= o
                        }
                        for (var s = 0; s < 24; s++) {
                            for (var u = 0; u < 5; u++) {
                                for (var p = 0, l = 0, v = 0; v < 5; v++) p ^= (H = t[u + 5 * v]).high, l ^= H.low;
                                var y = d[u];
                                y.high = p, y.low = l
                            }
                            for (u = 0; u < 5; u++) {
                                var _ = d[(u + 4) % 5],
                                    g = d[(u + 1) % 5],
                                    b = g.high,
                                    m = g.low;
                                for (p = _.high ^ (b << 1 | m >>> 31), l = _.low ^ (m << 1 | b >>> 31), v = 0; v < 5; v++)(H = t[u + 5 * v]).high ^= p, H.low ^= l
                            }
                            for (var B = 1; B < 25; B++) {
                                var k = (H = t[B]).high,
                                    x = H.low,
                                    w = a[B];
                                w < 32 ? (p = k << w | x >>> 32 - w, l = x << w | k >>> 32 - w) : (p = x << w - 32 | k >>> 64 - w, l = k << w - 32 | x >>> 64 - w);
                                var S = d[f[B]];
                                S.high = p, S.low = l
                            }
                            var C = d[0],
                                A = t[0];
                            for (C.high = A.high, C.low = A.low, u = 0; u < 5; u++)
                                for (v = 0; v < 5; v++) {
                                    var H = t[B = u + 5 * v],
                                        z = d[B],
                                        R = d[(u + 1) % 5 + 5 * v],
                                        D = d[(u + 2) % 5 + 5 * v];
                                    H.high = z.high ^ ~R.high & D.high, H.low = z.low ^ ~R.low & D.low
                                }
                            H = t[0];
                            var E = h[s];
                            H.high ^= E.high, H.low ^= E.low
                        }
                    },
                    _doFinalize: function() {
                        var e = this._data,
                            t = e.words,
                            i = (this._nDataBytes, 8 * e.sigBytes),
                            o = 32 * this.blockSize;
                        t[i >>> 5] |= 1 << 24 - i % 32, t[(r.ceil((i + 1) / o) * o >>> 5) - 1] |= 128, e.sigBytes = 4 * t.length, this._process();
                        for (var c = this._state, s = this.cfg.outputLength / 8, a = s / 8, f = [], h = 0; h < a; h++) {
                            var d = c[h],
                                u = d.high,
                                p = d.low;
                            u = 16711935 & (u << 8 | u >>> 24) | 4278255360 & (u << 24 | u >>> 8), p = 16711935 & (p << 8 | p >>> 24) | 4278255360 & (p << 24 | p >>> 8), f.push(p), f.push(u)
                        }
                        return new n.init(f, s)
                    },
                    clone: function() {
                        for (var e = o.clone.call(this), r = e._state = this._state.slice(0), t = 0; t < 25; t++) r[t] = r[t].clone();
                        return e
                    }
                });
                t.SHA3 = o._createHelper(u), t.HmacSHA3 = o._createHmacHelper(u)
            }(Math), e.SHA3
        }, "object" === i(t) ? r.exports = t = o(e("./core"), e("./x64-core")) : "function" == typeof define && define.amd ? define(["./core", "./x64-core"], o) : o(n.CryptoJS)
    }), (function(e) {
        return t({
            "./core": 1735023415017,
            "./x64-core": 1735023415018
        }[e], e)
    })), r(1735023415030, (function(e, r, t) {
        var n, o;
        n = this, o = function(e) {
            /** @preserve
                  (c) 2012 by Cédric Mesnil. All rights reserved.
                  	Redistribution and use in source and binary forms, with or without modification, are permitted provided that the following conditions are met:
                  	    - Redistributions of source code must retain the above copyright notice, this list of conditions and the following disclaimer.
                      - Redistributions in binary form must reproduce the above copyright notice, this list of conditions and the following disclaimer in the documentation and/or other materials provided with the distribution.
                  	THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
                  */
            return function(r) {
                var t = e,
                    i = t.lib,
                    n = i.WordArray,
                    o = i.Hasher,
                    c = t.algo,
                    s = n.create([0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 7, 4, 13, 1, 10, 6, 15, 3, 12, 0, 9, 5, 2, 14, 11, 8, 3, 10, 14, 4, 9, 15, 8, 1, 2, 7, 0, 6, 13, 11, 5, 12, 1, 9, 11, 10, 0, 8, 12, 4, 13, 3, 7, 15, 14, 5, 6, 2, 4, 0, 5, 9, 7, 12, 2, 10, 14, 1, 3, 8, 11, 6, 15, 13]),
                    a = n.create([5, 14, 7, 0, 9, 2, 11, 4, 13, 6, 15, 8, 1, 10, 3, 12, 6, 11, 3, 7, 0, 13, 5, 10, 14, 15, 8, 12, 4, 9, 1, 2, 15, 5, 1, 3, 7, 14, 6, 9, 11, 8, 12, 2, 10, 0, 4, 13, 8, 6, 4, 1, 3, 11, 15, 0, 5, 12, 2, 13, 9, 7, 10, 14, 12, 15, 10, 4, 1, 5, 8, 7, 6, 2, 13, 14, 0, 3, 9, 11]),
                    f = n.create([11, 14, 15, 12, 5, 8, 7, 9, 11, 13, 14, 15, 6, 7, 9, 8, 7, 6, 8, 13, 11, 9, 7, 15, 7, 12, 15, 9, 11, 7, 13, 12, 11, 13, 6, 7, 14, 9, 13, 15, 14, 8, 13, 6, 5, 12, 7, 5, 11, 12, 14, 15, 14, 15, 9, 8, 9, 14, 5, 6, 8, 6, 5, 12, 9, 15, 5, 11, 6, 8, 13, 12, 5, 12, 13, 14, 11, 8, 5, 6]),
                    h = n.create([8, 9, 9, 11, 13, 15, 15, 5, 7, 7, 8, 11, 14, 14, 12, 6, 9, 13, 15, 7, 12, 8, 9, 11, 7, 7, 12, 7, 6, 15, 13, 11, 9, 7, 15, 11, 8, 6, 6, 14, 12, 13, 5, 14, 13, 13, 7, 5, 15, 5, 8, 11, 14, 14, 6, 14, 6, 9, 12, 9, 12, 5, 15, 8, 8, 5, 12, 9, 12, 5, 14, 6, 8, 13, 6, 5, 15, 13, 11, 11]),
                    d = n.create([0, 1518500249, 1859775393, 2400959708, 2840853838]),
                    u = n.create([1352829926, 1548603684, 1836072691, 2053994217, 0]),
                    p = c.RIPEMD160 = o.extend({
                        _doReset: function() {
                            this._hash = n.create([1732584193, 4023233417, 2562383102, 271733878, 3285377520])
                        },
                        _doProcessBlock: function(e, r) {
                            for (var t = 0; t < 16; t++) {
                                var i = r + t,
                                    n = e[i];
                                e[i] = 16711935 & (n << 8 | n >>> 24) | 4278255360 & (n << 24 | n >>> 8)
                            }
                            var o, c, p, m, B, k, x, w, S, C, A, H = this._hash.words,
                                z = d.words,
                                R = u.words,
                                D = s.words,
                                E = a.words,
                                j = f.words,
                                M = h.words;
                            for (k = o = H[0], x = c = H[1], w = p = H[2], S = m = H[3], C = B = H[4], t = 0; t < 80; t += 1) A = o + e[r + D[t]] | 0, A += t < 16 ? l(c, p, m) + z[0] : t < 32 ? v(c, p, m) + z[1] : t < 48 ? y(c, p, m) + z[2] : t < 64 ? _(c, p, m) + z[3] : g(c, p, m) + z[4], A = (A = b(A |= 0, j[t])) + B | 0, o = B, B = m, m = b(p, 10), p = c, c = A, A = k + e[r + E[t]] | 0, A += t < 16 ? g(x, w, S) + R[0] : t < 32 ? _(x, w, S) + R[1] : t < 48 ? y(x, w, S) + R[2] : t < 64 ? v(x, w, S) + R[3] : l(x, w, S) + R[4], A = (A = b(A |= 0, M[t])) + C | 0, k = C, C = S, S = b(w, 10), w = x, x = A;
                            A = H[1] + p + S | 0, H[1] = H[2] + m + C | 0, H[2] = H[3] + B + k | 0, H[3] = H[4] + o + x | 0, H[4] = H[0] + c + w | 0, H[0] = A
                        },
                        _doFinalize: function() {
                            var e = this._data,
                                r = e.words,
                                t = 8 * this._nDataBytes,
                                i = 8 * e.sigBytes;
                            r[i >>> 5] |= 128 << 24 - i % 32, r[14 + (i + 64 >>> 9 << 4)] = 16711935 & (t << 8 | t >>> 24) | 4278255360 & (t << 24 | t >>> 8), e.sigBytes = 4 * (r.length + 1), this._process();
                            for (var n = this._hash, o = n.words, c = 0; c < 5; c++) {
                                var s = o[c];
                                o[c] = 16711935 & (s << 8 | s >>> 24) | 4278255360 & (s << 24 | s >>> 8)
                            }
                            return n
                        },
                        clone: function() {
                            var e = o.clone.call(this);
                            return e._hash = this._hash.clone(), e
                        }
                    });

                function l(e, r, t) {
                    return e ^ r ^ t
                }

                function v(e, r, t) {
                    return e & r | ~e & t
                }

                function y(e, r, t) {
                    return (e | ~r) ^ t
                }

                function _(e, r, t) {
                    return e & t | r & ~t
                }

                function g(e, r, t) {
                    return e ^ (r | ~t)
                }

                function b(e, r) {
                    return e << r | e >>> 32 - r
                }
                t.RIPEMD160 = o._createHelper(p), t.HmacRIPEMD160 = o._createHmacHelper(p)
            }(Math), e.RIPEMD160
        }, "object" === i(t) ? r.exports = t = o(e("./core")) : "function" == typeof define && define.amd ? define(["./core"], o) : o(n.CryptoJS)
    }), (function(e) {
        return t({
            "./core": 1735023415017
        }[e], e)
    })), r(1735023415031, (function(e, r, t) {
        var n, o;
        n = this, o = function(e) {
            var r, t, i;
            t = (r = e).lib.Base, i = r.enc.Utf8, r.algo.HMAC = t.extend({
                init: function(e, r) {
                    e = this._hasher = new e.init, "string" == typeof r && (r = i.parse(r));
                    var t = e.blockSize,
                        n = 4 * t;
                    r.sigBytes > n && (r = e.finalize(r)), r.clamp();
                    for (var o = this._oKey = r.clone(), c = this._iKey = r.clone(), s = o.words, a = c.words, f = 0; f < t; f++) s[f] ^= 1549556828, a[f] ^= 909522486;
                    o.sigBytes = c.sigBytes = n, this.reset()
                },
                reset: function() {
                    var e = this._hasher;
                    e.reset(), e.update(this._iKey)
                },
                update: function(e) {
                    return this._hasher.update(e), this
                },
                finalize: function(e) {
                    var r = this._hasher,
                        t = r.finalize(e);
                    return r.reset(), r.finalize(this._oKey.clone().concat(t))
                }
            })
        }, "object" === i(t) ? r.exports = t = o(e("./core")) : "function" == typeof define && define.amd ? define(["./core"], o) : o(n.CryptoJS)
    }), (function(e) {
        return t({
            "./core": 1735023415017
        }[e], e)
    })), r(1735023415032, (function(e, r, t) {
        var n, o;
        n = this, o = function(e) {
            var r, t, i, n, o, c, s, a;
            return t = (r = e).lib, i = t.Base, n = t.WordArray, o = r.algo, c = o.SHA256, s = o.HMAC, a = o.PBKDF2 = i.extend({
                cfg: i.extend({
                    keySize: 4,
                    hasher: c,
                    iterations: 25e4
                }),
                init: function(e) {
                    this.cfg = this.cfg.extend(e)
                },
                compute: function(e, r) {
                    for (var t = this.cfg, i = s.create(t.hasher, e), o = n.create(), c = n.create([1]), a = o.words, f = c.words, h = t.keySize, d = t.iterations; a.length < h;) {
                        var u = i.update(r).finalize(c);
                        i.reset();
                        for (var p = u.words, l = p.length, v = u, y = 1; y < d; y++) {
                            v = i.finalize(v), i.reset();
                            for (var _ = v.words, g = 0; g < l; g++) p[g] ^= _[g]
                        }
                        o.concat(u), f[0] ++
                    }
                    return o.sigBytes = 4 * h, o
                }
            }), r.PBKDF2 = function(e, r, t) {
                return a.create(t).compute(e, r)
            }, e.PBKDF2
        }, "object" === i(t) ? r.exports = t = o(e("./core"), e("./sha256"), e("./hmac")) : "function" == typeof define && define.amd ? define(["./core", "./sha256", "./hmac"], o) : o(n.CryptoJS)
    }), (function(e) {
        return t({
            "./core": 1735023415017,
            "./sha256": 1735023415025,
            "./hmac": 1735023415031
        }[e], e)
    })), r(1735023415033, (function(e, r, t) {
        var n, o;
        n = this, o = function(e) {
            var r, t, i, n, o, c, s;
            return t = (r = e).lib, i = t.Base, n = t.WordArray, o = r.algo, c = o.MD5, s = o.EvpKDF = i.extend({
                cfg: i.extend({
                    keySize: 4,
                    hasher: c,
                    iterations: 1
                }),
                init: function(e) {
                    this.cfg = this.cfg.extend(e)
                },
                compute: function(e, r) {
                    for (var t, i = this.cfg, o = i.hasher.create(), c = n.create(), s = c.words, a = i.keySize, f = i.iterations; s.length < a;) {
                        t && o.update(t), t = o.update(e).finalize(r), o.reset();
                        for (var h = 1; h < f; h++) t = o.finalize(t), o.reset();
                        c.concat(t)
                    }
                    return c.sigBytes = 4 * a, c
                }
            }), r.EvpKDF = function(e, r, t) {
                return s.create(t).compute(e, r)
            }, e.EvpKDF
        }, "object" === i(t) ? r.exports = t = o(e("./core"), e("./sha1"), e("./hmac")) : "function" == typeof define && define.amd ? define(["./core", "./sha1", "./hmac"], o) : o(n.CryptoJS)
    }), (function(e) {
        return t({
            "./core": 1735023415017,
            "./sha1": 1735023415024,
            "./hmac": 1735023415031
        }[e], e)
    })), r(1735023415034, (function(e, r, t) {
        var n, o;
        n = this, o = function(e) {
            var r, t, i, n, o, c, s, a, f, h, d, u, p, l, v, y, _, g;
            e.lib.Cipher || (t = (r = e).lib, i = t.Base, n = t.WordArray, o = t.BufferedBlockAlgorithm, (c = r.enc).Utf8, s = c.Base64, a = r.algo.EvpKDF, f = t.Cipher = o.extend({
                cfg: i.extend(),
                createEncryptor: function(e, r) {
                    return this.create(this._ENC_XFORM_MODE, e, r)
                },
                createDecryptor: function(e, r) {
                    return this.create(this._DEC_XFORM_MODE, e, r)
                },
                init: function(e, r, t) {
                    this.cfg = this.cfg.extend(t), this._xformMode = e, this._key = r, this.reset()
                },
                reset: function() {
                    o.reset.call(this), this._doReset()
                },
                process: function(e) {
                    return this._append(e), this._process()
                },
                finalize: function(e) {
                    return e && this._append(e), this._doFinalize()
                },
                keySize: 4,
                ivSize: 4,
                _ENC_XFORM_MODE: 1,
                _DEC_XFORM_MODE: 2,
                _createHelper: function() {
                    function e(e) {
                        return "string" == typeof e ? g : y
                    }
                    return function(r) {
                        return {
                            encrypt: function(t, i, n) {
                                return e(i).encrypt(r, t, i, n)
                            },
                            decrypt: function(t, i, n) {
                                return e(i).decrypt(r, t, i, n)
                            }
                        }
                    }
                }()
            }), t.StreamCipher = f.extend({
                _doFinalize: function() {
                    return this._process(!0)
                },
                blockSize: 1
            }), h = r.mode = {}, d = t.BlockCipherMode = i.extend({
                createEncryptor: function(e, r) {
                    return this.Encryptor.create(e, r)
                },
                createDecryptor: function(e, r) {
                    return this.Decryptor.create(e, r)
                },
                init: function(e, r) {
                    this._cipher = e, this._iv = r
                }
            }), u = h.CBC = function() {
                var e = d.extend();

                function r(e, r, t) {
                    var i, n = this._iv;
                    n ? (i = n, this._iv = void 0) : i = this._prevBlock;
                    for (var o = 0; o < t; o++) e[r + o] ^= i[o]
                }
                return e.Encryptor = e.extend({
                    processBlock: function(e, t) {
                        var i = this._cipher,
                            n = i.blockSize;
                        r.call(this, e, t, n), i.encryptBlock(e, t), this._prevBlock = e.slice(t, t + n)
                    }
                }), e.Decryptor = e.extend({
                    processBlock: function(e, t) {
                        var i = this._cipher,
                            n = i.blockSize,
                            o = e.slice(t, t + n);
                        i.decryptBlock(e, t), r.call(this, e, t, n), this._prevBlock = o
                    }
                }), e
            }(), p = (r.pad = {}).Pkcs7 = {
                pad: function(e, r) {
                    for (var t = 4 * r, i = t - e.sigBytes % t, o = i << 24 | i << 16 | i << 8 | i, c = [], s = 0; s < i; s += 4) c.push(o);
                    var a = n.create(c, i);
                    e.concat(a)
                },
                unpad: function(e) {
                    var r = 255 & e.words[e.sigBytes - 1 >>> 2];
                    e.sigBytes -= r
                }
            }, t.BlockCipher = f.extend({
                cfg: f.cfg.extend({
                    mode: u,
                    padding: p
                }),
                reset: function() {
                    var e;
                    f.reset.call(this);
                    var r = this.cfg,
                        t = r.iv,
                        i = r.mode;
                    this._xformMode == this._ENC_XFORM_MODE ? e = i.createEncryptor : (e = i.createDecryptor, this._minBufferSize = 1), this._mode && this._mode.__creator == e ? this._mode.init(this, t && t.words) : (this._mode = e.call(i, this, t && t.words), this._mode.__creator = e)
                },
                _doProcessBlock: function(e, r) {
                    this._mode.processBlock(e, r)
                },
                _doFinalize: function() {
                    var e, r = this.cfg.padding;
                    return this._xformMode == this._ENC_XFORM_MODE ? (r.pad(this._data, this.blockSize), e = this._process(!0)) : (e = this._process(!0), r.unpad(e)), e
                },
                blockSize: 4
            }), l = t.CipherParams = i.extend({
                init: function(e) {
                    this.mixIn(e)
                },
                toString: function(e) {
                    return (e || this.formatter).stringify(this)
                }
            }), v = (r.format = {}).OpenSSL = {
                stringify: function(e) {
                    var r = e.ciphertext,
                        t = e.salt;
                    return (t ? n.create([1398893684, 1701076831]).concat(t).concat(r) : r).toString(s)
                },
                parse: function(e) {
                    var r, t = s.parse(e),
                        i = t.words;
                    return 1398893684 == i[0] && 1701076831 == i[1] && (r = n.create(i.slice(2, 4)), i.splice(0, 4), t.sigBytes -= 16), l.create({
                        ciphertext: t,
                        salt: r
                    })
                }
            }, y = t.SerializableCipher = i.extend({
                cfg: i.extend({
                    format: v
                }),
                encrypt: function(e, r, t, i) {
                    i = this.cfg.extend(i);
                    var n = e.createEncryptor(t, i),
                        o = n.finalize(r),
                        c = n.cfg;
                    return l.create({
                        ciphertext: o,
                        key: t,
                        iv: c.iv,
                        algorithm: e,
                        mode: c.mode,
                        padding: c.padding,
                        blockSize: e.blockSize,
                        formatter: i.format
                    })
                },
                decrypt: function(e, r, t, i) {
                    return i = this.cfg.extend(i), r = this._parse(r, i.format), e.createDecryptor(t, i).finalize(r.ciphertext)
                },
                _parse: function(e, r) {
                    return "string" == typeof e ? r.parse(e, this) : e
                }
            }), _ = (r.kdf = {}).OpenSSL = {
                execute: function(e, r, t, i, o) {
                    if (i || (i = n.random(8)), o) c = a.create({
                        keySize: r + t,
                        hasher: o
                    }).compute(e, i);
                    else var c = a.create({
                        keySize: r + t
                    }).compute(e, i);
                    var s = n.create(c.words.slice(r), 4 * t);
                    return c.sigBytes = 4 * r, l.create({
                        key: c,
                        iv: s,
                        salt: i
                    })
                }
            }, g = t.PasswordBasedCipher = y.extend({
                cfg: y.cfg.extend({
                    kdf: _
                }),
                encrypt: function(e, r, t, i) {
                    var n = (i = this.cfg.extend(i)).kdf.execute(t, e.keySize, e.ivSize, i.salt, i.hasher);
                    i.iv = n.iv;
                    var o = y.encrypt.call(this, e, r, n.key, i);
                    return o.mixIn(n), o
                },
                decrypt: function(e, r, t, i) {
                    i = this.cfg.extend(i), r = this._parse(r, i.format);
                    var n = i.kdf.execute(t, e.keySize, e.ivSize, r.salt, i.hasher);
                    return i.iv = n.iv, y.decrypt.call(this, e, r, n.key, i)
                }
            }))
        }, "object" === i(t) ? r.exports = t = o(e("./core"), e("./evpkdf")) : "function" == typeof define && define.amd ? define(["./core", "./evpkdf"], o) : o(n.CryptoJS)
    }), (function(e) {
        return t({
            "./core": 1735023415017,
            "./evpkdf": 1735023415033
        }[e], e)
    })), r(1735023415035, (function(e, r, t) {
        var n, o;
        n = this, o = function(e) {
            return e.mode.CFB = function() {
                var r = e.lib.BlockCipherMode.extend();

                function t(e, r, t, i) {
                    var n, o = this._iv;
                    o ? (n = o.slice(0), this._iv = void 0) : n = this._prevBlock, i.encryptBlock(n, 0);
                    for (var c = 0; c < t; c++) e[r + c] ^= n[c]
                }
                return r.Encryptor = r.extend({
                    processBlock: function(e, r) {
                        var i = this._cipher,
                            n = i.blockSize;
                        t.call(this, e, r, n, i), this._prevBlock = e.slice(r, r + n)
                    }
                }), r.Decryptor = r.extend({
                    processBlock: function(e, r) {
                        var i = this._cipher,
                            n = i.blockSize,
                            o = e.slice(r, r + n);
                        t.call(this, e, r, n, i), this._prevBlock = o
                    }
                }), r
            }(), e.mode.CFB
        }, "object" === i(t) ? r.exports = t = o(e("./core"), e("./cipher-core")) : "function" == typeof define && define.amd ? define(["./core", "./cipher-core"], o) : o(n.CryptoJS)
    }), (function(e) {
        return t({
            "./core": 1735023415017,
            "./cipher-core": 1735023415034
        }[e], e)
    })), r(1735023415036, (function(e, r, t) {
        var n, o;
        n = this, o = function(e) {
            var r, t;
            return e.mode.CTR = (r = e.lib.BlockCipherMode.extend(), t = r.Encryptor = r.extend({
                processBlock: function(e, r) {
                    var t = this._cipher,
                        i = t.blockSize,
                        n = this._iv,
                        o = this._counter;
                    n && (o = this._counter = n.slice(0), this._iv = void 0);
                    var c = o.slice(0);
                    t.encryptBlock(c, 0), o[i - 1] = o[i - 1] + 1 | 0;
                    for (var s = 0; s < i; s++) e[r + s] ^= c[s]
                }
            }), r.Decryptor = t, r), e.mode.CTR
        }, "object" === i(t) ? r.exports = t = o(e("./core"), e("./cipher-core")) : "function" == typeof define && define.amd ? define(["./core", "./cipher-core"], o) : o(n.CryptoJS)
    }), (function(e) {
        return t({
            "./core": 1735023415017,
            "./cipher-core": 1735023415034
        }[e], e)
    })), r(1735023415037, (function(e, r, t) {
        var n, o;
        n = this, o = function(e) {
            /** @preserve
             * Counter block mode compatible with  Dr Brian Gladman fileenc.c
             * derived from CryptoJS.mode.CTR
             * Jan Hruby jhruby.web@gmail.com
             */
            return e.mode.CTRGladman = function() {
                var r = e.lib.BlockCipherMode.extend();

                function t(e) {
                    if (255 == (e >> 24 & 255)) {
                        var r = e >> 16 & 255,
                            t = e >> 8 & 255,
                            i = 255 & e;
                        255 === r ? (r = 0, 255 === t ? (t = 0, 255 === i ? i = 0 : ++i) : ++t) : ++r, e = 0, e += r << 16, e += t << 8, e += i
                    } else e += 1 << 24;
                    return e
                }
                var i = r.Encryptor = r.extend({
                    processBlock: function(e, r) {
                        var i = this._cipher,
                            n = i.blockSize,
                            o = this._iv,
                            c = this._counter;
                        o && (c = this._counter = o.slice(0), this._iv = void 0),
                            function(e) {
                                0 === (e[0] = t(e[0])) && (e[1] = t(e[1]))
                            }(c);
                        var s = c.slice(0);
                        i.encryptBlock(s, 0);
                        for (var a = 0; a < n; a++) e[r + a] ^= s[a]
                    }
                });
                return r.Decryptor = i, r
            }(), e.mode.CTRGladman
        }, "object" === i(t) ? r.exports = t = o(e("./core"), e("./cipher-core")) : "function" == typeof define && define.amd ? define(["./core", "./cipher-core"], o) : o(n.CryptoJS)
    }), (function(e) {
        return t({
            "./core": 1735023415017,
            "./cipher-core": 1735023415034
        }[e], e)
    })), r(1735023415038, (function(e, r, t) {
        var n, o;
        n = this, o = function(e) {
            var r, t;
            return e.mode.OFB = (r = e.lib.BlockCipherMode.extend(), t = r.Encryptor = r.extend({
                processBlock: function(e, r) {
                    var t = this._cipher,
                        i = t.blockSize,
                        n = this._iv,
                        o = this._keystream;
                    n && (o = this._keystream = n.slice(0), this._iv = void 0), t.encryptBlock(o, 0);
                    for (var c = 0; c < i; c++) e[r + c] ^= o[c]
                }
            }), r.Decryptor = t, r), e.mode.OFB
        }, "object" === i(t) ? r.exports = t = o(e("./core"), e("./cipher-core")) : "function" == typeof define && define.amd ? define(["./core", "./cipher-core"], o) : o(n.CryptoJS)
    }), (function(e) {
        return t({
            "./core": 1735023415017,
            "./cipher-core": 1735023415034
        }[e], e)
    })), r(1735023415039, (function(e, r, t) {
        var n, o;
        n = this, o = function(e) {
            var r;
            return e.mode.ECB = ((r = e.lib.BlockCipherMode.extend()).Encryptor = r.extend({
                processBlock: function(e, r) {
                    this._cipher.encryptBlock(e, r)
                }
            }), r.Decryptor = r.extend({
                processBlock: function(e, r) {
                    this._cipher.decryptBlock(e, r)
                }
            }), r), e.mode.ECB
        }, "object" === i(t) ? r.exports = t = o(e("./core"), e("./cipher-core")) : "function" == typeof define && define.amd ? define(["./core", "./cipher-core"], o) : o(n.CryptoJS)
    }), (function(e) {
        return t({
            "./core": 1735023415017,
            "./cipher-core": 1735023415034
        }[e], e)
    })), r(1735023415040, (function(e, r, t) {
        var n, o;
        n = this, o = function(e) {
            return e.pad.AnsiX923 = {
                pad: function(e, r) {
                    var t = e.sigBytes,
                        i = 4 * r,
                        n = i - t % i,
                        o = t + n - 1;
                    e.clamp(), e.words[o >>> 2] |= n << 24 - o % 4 * 8, e.sigBytes += n
                },
                unpad: function(e) {
                    var r = 255 & e.words[e.sigBytes - 1 >>> 2];
                    e.sigBytes -= r
                }
            }, e.pad.Ansix923
        }, "object" === i(t) ? r.exports = t = o(e("./core"), e("./cipher-core")) : "function" == typeof define && define.amd ? define(["./core", "./cipher-core"], o) : o(n.CryptoJS)
    }), (function(e) {
        return t({
            "./core": 1735023415017,
            "./cipher-core": 1735023415034
        }[e], e)
    })), r(1735023415041, (function(e, r, t) {
        var n, o;
        n = this, o = function(e) {
            return e.pad.Iso10126 = {
                pad: function(r, t) {
                    var i = 4 * t,
                        n = i - r.sigBytes % i;
                    r.concat(e.lib.WordArray.random(n - 1)).concat(e.lib.WordArray.create([n << 24], 1))
                },
                unpad: function(e) {
                    var r = 255 & e.words[e.sigBytes - 1 >>> 2];
                    e.sigBytes -= r
                }
            }, e.pad.Iso10126
        }, "object" === i(t) ? r.exports = t = o(e("./core"), e("./cipher-core")) : "function" == typeof define && define.amd ? define(["./core", "./cipher-core"], o) : o(n.CryptoJS)
    }), (function(e) {
        return t({
            "./core": 1735023415017,
            "./cipher-core": 1735023415034
        }[e], e)
    })), r(1735023415042, (function(e, r, t) {
        var n, o;
        n = this, o = function(e) {
            return e.pad.Iso97971 = {
                pad: function(r, t) {
                    r.concat(e.lib.WordArray.create([2147483648], 1)), e.pad.ZeroPadding.pad(r, t)
                },
                unpad: function(r) {
                    e.pad.ZeroPadding.unpad(r), r.sigBytes--
                }
            }, e.pad.Iso97971
        }, "object" === i(t) ? r.exports = t = o(e("./core"), e("./cipher-core")) : "function" == typeof define && define.amd ? define(["./core", "./cipher-core"], o) : o(n.CryptoJS)
    }), (function(e) {
        return t({
            "./core": 1735023415017,
            "./cipher-core": 1735023415034
        }[e], e)
    })), r(1735023415043, (function(e, r, t) {
        var n, o;
        n = this, o = function(e) {
            return e.pad.ZeroPadding = {
                pad: function(e, r) {
                    var t = 4 * r;
                    e.clamp(), e.sigBytes += t - (e.sigBytes % t || t)
                },
                unpad: function(e) {
                    var r = e.words,
                        t = e.sigBytes - 1;
                    for (t = e.sigBytes - 1; t >= 0; t--)
                        if (r[t >>> 2] >>> 24 - t % 4 * 8 & 255) {
                            e.sigBytes = t + 1;
                            break
                        }
                }
            }, e.pad.ZeroPadding
        }, "object" === i(t) ? r.exports = t = o(e("./core"), e("./cipher-core")) : "function" == typeof define && define.amd ? define(["./core", "./cipher-core"], o) : o(n.CryptoJS)
    }), (function(e) {
        return t({
            "./core": 1735023415017,
            "./cipher-core": 1735023415034
        }[e], e)
    })), r(1735023415044, (function(e, r, t) {
        var n, o;
        n = this, o = function(e) {
            return e.pad.NoPadding = {
                pad: function() {},
                unpad: function() {}
            }, e.pad.NoPadding
        }, "object" === i(t) ? r.exports = t = o(e("./core"), e("./cipher-core")) : "function" == typeof define && define.amd ? define(["./core", "./cipher-core"], o) : o(n.CryptoJS)
    }), (function(e) {
        return t({
            "./core": 1735023415017,
            "./cipher-core": 1735023415034
        }[e], e)
    })), r(1735023415045, (function(e, r, t) {
        var n, o;
        n = this, o = function(e) {
            var r, t, i;
            return t = (r = e).lib.CipherParams, i = r.enc.Hex, r.format.Hex = {
                stringify: function(e) {
                    return e.ciphertext.toString(i)
                },
                parse: function(e) {
                    var r = i.parse(e);
                    return t.create({
                        ciphertext: r
                    })
                }
            }, e.format.Hex
        }, "object" === i(t) ? r.exports = t = o(e("./core"), e("./cipher-core")) : "function" == typeof define && define.amd ? define(["./core", "./cipher-core"], o) : o(n.CryptoJS)
    }), (function(e) {
        return t({
            "./core": 1735023415017,
            "./cipher-core": 1735023415034
        }[e], e)
    })), r(1735023415046, (function(e, r, t) {
        var n, o;
        n = this, o = function(e) {
            return function() {
                var r = e,
                    t = r.lib.BlockCipher,
                    i = r.algo,
                    n = [],
                    o = [],
                    c = [],
                    s = [],
                    a = [],
                    f = [],
                    h = [],
                    d = [],
                    u = [],
                    p = [];
                ! function() {
                    for (var e = [], r = 0; r < 256; r++) e[r] = r < 128 ? r << 1 : r << 1 ^ 283;
                    var t = 0,
                        i = 0;
                    for (r = 0; r < 256; r++) {
                        var l = i ^ i << 1 ^ i << 2 ^ i << 3 ^ i << 4;
                        l = l >>> 8 ^ 255 & l ^ 99, n[t] = l, o[l] = t;
                        var v = e[t],
                            y = e[v],
                            _ = e[y],
                            g = 257 * e[l] ^ 16843008 * l;
                        c[t] = g << 24 | g >>> 8, s[t] = g << 16 | g >>> 16, a[t] = g << 8 | g >>> 24, f[t] = g, g = 16843009 * _ ^ 65537 * y ^ 257 * v ^ 16843008 * t, h[l] = g << 24 | g >>> 8, d[l] = g << 16 | g >>> 16, u[l] = g << 8 | g >>> 24, p[l] = g, t ? (t = v ^ e[e[e[_ ^ v]]], i ^= e[e[i]]) : t = i = 1
                    }
                }();
                var l = [0, 1, 2, 4, 8, 16, 32, 64, 128, 27, 54],
                    v = i.AES = t.extend({
                        _doReset: function() {
                            if (!this._nRounds || this._keyPriorReset !== this._key) {
                                for (var e = this._keyPriorReset = this._key, r = e.words, t = e.sigBytes / 4, i = 4 * ((this._nRounds = t + 6) + 1), o = this._keySchedule = [], c = 0; c < i; c++) c < t ? o[c] = r[c] : (f = o[c - 1], c % t ? t > 6 && c % t == 4 && (f = n[f >>> 24] << 24 | n[f >>> 16 & 255] << 16 | n[f >>> 8 & 255] << 8 | n[255 & f]) : (f = n[(f = f << 8 | f >>> 24) >>> 24] << 24 | n[f >>> 16 & 255] << 16 | n[f >>> 8 & 255] << 8 | n[255 & f], f ^= l[c / t | 0] << 24), o[c] = o[c - t] ^ f);
                                for (var s = this._invKeySchedule = [], a = 0; a < i; a++) {
                                    if (c = i - a, a % 4) var f = o[c];
                                    else f = o[c - 4];
                                    s[a] = a < 4 || c <= 4 ? f : h[n[f >>> 24]] ^ d[n[f >>> 16 & 255]] ^ u[n[f >>> 8 & 255]] ^ p[n[255 & f]]
                                }
                            }
                        },
                        encryptBlock: function(e, r) {
                            this._doCryptBlock(e, r, this._keySchedule, c, s, a, f, n)
                        },
                        decryptBlock: function(e, r) {
                            var t = e[r + 1];
                            e[r + 1] = e[r + 3], e[r + 3] = t, this._doCryptBlock(e, r, this._invKeySchedule, h, d, u, p, o), t = e[r + 1], e[r + 1] = e[r + 3], e[r + 3] = t
                        },
                        _doCryptBlock: function(e, r, t, i, n, o, c, s) {
                            for (var a = this._nRounds, f = e[r] ^ t[0], h = e[r + 1] ^ t[1], d = e[r + 2] ^ t[2], u = e[r + 3] ^ t[3], p = 4, l = 1; l < a; l++) {
                                var v = i[f >>> 24] ^ n[h >>> 16 & 255] ^ o[d >>> 8 & 255] ^ c[255 & u] ^ t[p++],
                                    y = i[h >>> 24] ^ n[d >>> 16 & 255] ^ o[u >>> 8 & 255] ^ c[255 & f] ^ t[p++],
                                    _ = i[d >>> 24] ^ n[u >>> 16 & 255] ^ o[f >>> 8 & 255] ^ c[255 & h] ^ t[p++],
                                    g = i[u >>> 24] ^ n[f >>> 16 & 255] ^ o[h >>> 8 & 255] ^ c[255 & d] ^ t[p++];
                                f = v, h = y, d = _, u = g
                            }
                            v = (s[f >>> 24] << 24 | s[h >>> 16 & 255] << 16 | s[d >>> 8 & 255] << 8 | s[255 & u]) ^ t[p++], y = (s[h >>> 24] << 24 | s[d >>> 16 & 255] << 16 | s[u >>> 8 & 255] << 8 | s[255 & f]) ^ t[p++], _ = (s[d >>> 24] << 24 | s[u >>> 16 & 255] << 16 | s[f >>> 8 & 255] << 8 | s[255 & h]) ^ t[p++], g = (s[u >>> 24] << 24 | s[f >>> 16 & 255] << 16 | s[h >>> 8 & 255] << 8 | s[255 & d]) ^ t[p++], e[r] = v, e[r + 1] = y, e[r + 2] = _, e[r + 3] = g
                        },
                        keySize: 8
                    });
                r.AES = t._createHelper(v)
            }(), e.AES
        }, "object" === i(t) ? r.exports = t = o(e("./core"), e("./enc-base64"), e("./md5"), e("./evpkdf"), e("./cipher-core")) : "function" == typeof define && define.amd ? define(["./core", "./enc-base64", "./md5", "./evpkdf", "./cipher-core"], o) : o(n.CryptoJS)
    }), (function(e) {
        return t({
            "./core": 1735023415017,
            "./enc-base64": 1735023415021,
            "./md5": 1735023415023,
            "./evpkdf": 1735023415033,
            "./cipher-core": 1735023415034
        }[e], e)
    })), r(1735023415047, (function(e, r, t) {
        var n, o;
        n = this, o = function(e) {
            return function() {
                var r = e,
                    t = r.lib,
                    i = t.WordArray,
                    n = t.BlockCipher,
                    o = r.algo,
                    c = [57, 49, 41, 33, 25, 17, 9, 1, 58, 50, 42, 34, 26, 18, 10, 2, 59, 51, 43, 35, 27, 19, 11, 3, 60, 52, 44, 36, 63, 55, 47, 39, 31, 23, 15, 7, 62, 54, 46, 38, 30, 22, 14, 6, 61, 53, 45, 37, 29, 21, 13, 5, 28, 20, 12, 4],
                    s = [14, 17, 11, 24, 1, 5, 3, 28, 15, 6, 21, 10, 23, 19, 12, 4, 26, 8, 16, 7, 27, 20, 13, 2, 41, 52, 31, 37, 47, 55, 30, 40, 51, 45, 33, 48, 44, 49, 39, 56, 34, 53, 46, 42, 50, 36, 29, 32],
                    a = [1, 2, 4, 6, 8, 10, 12, 14, 15, 17, 19, 21, 23, 25, 27, 28],
                    f = [{
                        0: 8421888,
                        268435456: 32768,
                        536870912: 8421378,
                        805306368: 2,
                        1073741824: 512,
                        1342177280: 8421890,
                        1610612736: 8389122,
                        1879048192: 8388608,
                        2147483648: 514,
                        2415919104: 8389120,
                        2684354560: 33280,
                        2952790016: 8421376,
                        3221225472: 32770,
                        3489660928: 8388610,
                        3758096384: 0,
                        4026531840: 33282,
                        134217728: 0,
                        402653184: 8421890,
                        671088640: 33282,
                        939524096: 32768,
                        1207959552: 8421888,
                        1476395008: 512,
                        1744830464: 8421378,
                        2013265920: 2,
                        2281701376: 8389120,
                        2550136832: 33280,
                        2818572288: 8421376,
                        3087007744: 8389122,
                        3355443200: 8388610,
                        3623878656: 32770,
                        3892314112: 514,
                        4160749568: 8388608,
                        1: 32768,
                        268435457: 2,
                        536870913: 8421888,
                        805306369: 8388608,
                        1073741825: 8421378,
                        1342177281: 33280,
                        1610612737: 512,
                        1879048193: 8389122,
                        2147483649: 8421890,
                        2415919105: 8421376,
                        2684354561: 8388610,
                        2952790017: 33282,
                        3221225473: 514,
                        3489660929: 8389120,
                        3758096385: 32770,
                        4026531841: 0,
                        134217729: 8421890,
                        402653185: 8421376,
                        671088641: 8388608,
                        939524097: 512,
                        1207959553: 32768,
                        1476395009: 8388610,
                        1744830465: 2,
                        2013265921: 33282,
                        2281701377: 32770,
                        2550136833: 8389122,
                        2818572289: 514,
                        3087007745: 8421888,
                        3355443201: 8389120,
                        3623878657: 0,
                        3892314113: 33280,
                        4160749569: 8421378
                    }, {
                        0: 1074282512,
                        16777216: 16384,
                        33554432: 524288,
                        50331648: 1074266128,
                        67108864: 1073741840,
                        83886080: 1074282496,
                        100663296: 1073758208,
                        117440512: 16,
                        134217728: 540672,
                        150994944: 1073758224,
                        167772160: 1073741824,
                        184549376: 540688,
                        201326592: 524304,
                        218103808: 0,
                        234881024: 16400,
                        251658240: 1074266112,
                        8388608: 1073758208,
                        25165824: 540688,
                        41943040: 16,
                        58720256: 1073758224,
                        75497472: 1074282512,
                        92274688: 1073741824,
                        109051904: 524288,
                        125829120: 1074266128,
                        142606336: 524304,
                        159383552: 0,
                        176160768: 16384,
                        192937984: 1074266112,
                        209715200: 1073741840,
                        226492416: 540672,
                        243269632: 1074282496,
                        260046848: 16400,
                        268435456: 0,
                        285212672: 1074266128,
                        301989888: 1073758224,
                        318767104: 1074282496,
                        335544320: 1074266112,
                        352321536: 16,
                        369098752: 540688,
                        385875968: 16384,
                        402653184: 16400,
                        419430400: 524288,
                        436207616: 524304,
                        452984832: 1073741840,
                        469762048: 540672,
                        486539264: 1073758208,
                        503316480: 1073741824,
                        520093696: 1074282512,
                        276824064: 540688,
                        293601280: 524288,
                        310378496: 1074266112,
                        327155712: 16384,
                        343932928: 1073758208,
                        360710144: 1074282512,
                        377487360: 16,
                        394264576: 1073741824,
                        411041792: 1074282496,
                        427819008: 1073741840,
                        444596224: 1073758224,
                        461373440: 524304,
                        478150656: 0,
                        494927872: 16400,
                        511705088: 1074266128,
                        528482304: 540672
                    }, {
                        0: 260,
                        1048576: 0,
                        2097152: 67109120,
                        3145728: 65796,
                        4194304: 65540,
                        5242880: 67108868,
                        6291456: 67174660,
                        7340032: 67174400,
                        8388608: 67108864,
                        9437184: 67174656,
                        10485760: 65792,
                        11534336: 67174404,
                        12582912: 67109124,
                        13631488: 65536,
                        14680064: 4,
                        15728640: 256,
                        524288: 67174656,
                        1572864: 67174404,
                        2621440: 0,
                        3670016: 67109120,
                        4718592: 67108868,
                        5767168: 65536,
                        6815744: 65540,
                        7864320: 260,
                        8912896: 4,
                        9961472: 256,
                        11010048: 67174400,
                        12058624: 65796,
                        13107200: 65792,
                        14155776: 67109124,
                        15204352: 67174660,
                        16252928: 67108864,
                        16777216: 67174656,
                        17825792: 65540,
                        18874368: 65536,
                        19922944: 67109120,
                        20971520: 256,
                        22020096: 67174660,
                        23068672: 67108868,
                        24117248: 0,
                        25165824: 67109124,
                        26214400: 67108864,
                        27262976: 4,
                        28311552: 65792,
                        29360128: 67174400,
                        30408704: 260,
                        31457280: 65796,
                        32505856: 67174404,
                        17301504: 67108864,
                        18350080: 260,
                        19398656: 67174656,
                        20447232: 0,
                        21495808: 65540,
                        22544384: 67109120,
                        23592960: 256,
                        24641536: 67174404,
                        25690112: 65536,
                        26738688: 67174660,
                        27787264: 65796,
                        28835840: 67108868,
                        29884416: 67109124,
                        30932992: 67174400,
                        31981568: 4,
                        33030144: 65792
                    }, {
                        0: 2151682048,
                        65536: 2147487808,
                        131072: 4198464,
                        196608: 2151677952,
                        262144: 0,
                        327680: 4198400,
                        393216: 2147483712,
                        458752: 4194368,
                        524288: 2147483648,
                        589824: 4194304,
                        655360: 64,
                        720896: 2147487744,
                        786432: 2151678016,
                        851968: 4160,
                        917504: 4096,
                        983040: 2151682112,
                        32768: 2147487808,
                        98304: 64,
                        163840: 2151678016,
                        229376: 2147487744,
                        294912: 4198400,
                        360448: 2151682112,
                        425984: 0,
                        491520: 2151677952,
                        557056: 4096,
                        622592: 2151682048,
                        688128: 4194304,
                        753664: 4160,
                        819200: 2147483648,
                        884736: 4194368,
                        950272: 4198464,
                        1015808: 2147483712,
                        1048576: 4194368,
                        1114112: 4198400,
                        1179648: 2147483712,
                        1245184: 0,
                        1310720: 4160,
                        1376256: 2151678016,
                        1441792: 2151682048,
                        1507328: 2147487808,
                        1572864: 2151682112,
                        1638400: 2147483648,
                        1703936: 2151677952,
                        1769472: 4198464,
                        1835008: 2147487744,
                        1900544: 4194304,
                        1966080: 64,
                        2031616: 4096,
                        1081344: 2151677952,
                        1146880: 2151682112,
                        1212416: 0,
                        1277952: 4198400,
                        1343488: 4194368,
                        1409024: 2147483648,
                        1474560: 2147487808,
                        1540096: 64,
                        1605632: 2147483712,
                        1671168: 4096,
                        1736704: 2147487744,
                        1802240: 2151678016,
                        1867776: 4160,
                        1933312: 2151682048,
                        1998848: 4194304,
                        2064384: 4198464
                    }, {
                        0: 128,
                        4096: 17039360,
                        8192: 262144,
                        12288: 536870912,
                        16384: 537133184,
                        20480: 16777344,
                        24576: 553648256,
                        28672: 262272,
                        32768: 16777216,
                        36864: 537133056,
                        40960: 536871040,
                        45056: 553910400,
                        49152: 553910272,
                        53248: 0,
                        57344: 17039488,
                        61440: 553648128,
                        2048: 17039488,
                        6144: 553648256,
                        10240: 128,
                        14336: 17039360,
                        18432: 262144,
                        22528: 537133184,
                        26624: 553910272,
                        30720: 536870912,
                        34816: 537133056,
                        38912: 0,
                        43008: 553910400,
                        47104: 16777344,
                        51200: 536871040,
                        55296: 553648128,
                        59392: 16777216,
                        63488: 262272,
                        65536: 262144,
                        69632: 128,
                        73728: 536870912,
                        77824: 553648256,
                        81920: 16777344,
                        86016: 553910272,
                        90112: 537133184,
                        94208: 16777216,
                        98304: 553910400,
                        102400: 553648128,
                        106496: 17039360,
                        110592: 537133056,
                        114688: 262272,
                        118784: 536871040,
                        122880: 0,
                        126976: 17039488,
                        67584: 553648256,
                        71680: 16777216,
                        75776: 17039360,
                        79872: 537133184,
                        83968: 536870912,
                        88064: 17039488,
                        92160: 128,
                        96256: 553910272,
                        100352: 262272,
                        104448: 553910400,
                        108544: 0,
                        112640: 553648128,
                        116736: 16777344,
                        120832: 262144,
                        124928: 537133056,
                        129024: 536871040
                    }, {
                        0: 268435464,
                        256: 8192,
                        512: 270532608,
                        768: 270540808,
                        1024: 268443648,
                        1280: 2097152,
                        1536: 2097160,
                        1792: 268435456,
                        2048: 0,
                        2304: 268443656,
                        2560: 2105344,
                        2816: 8,
                        3072: 270532616,
                        3328: 2105352,
                        3584: 8200,
                        3840: 270540800,
                        128: 270532608,
                        384: 270540808,
                        640: 8,
                        896: 2097152,
                        1152: 2105352,
                        1408: 268435464,
                        1664: 268443648,
                        1920: 8200,
                        2176: 2097160,
                        2432: 8192,
                        2688: 268443656,
                        2944: 270532616,
                        3200: 0,
                        3456: 270540800,
                        3712: 2105344,
                        3968: 268435456,
                        4096: 268443648,
                        4352: 270532616,
                        4608: 270540808,
                        4864: 8200,
                        5120: 2097152,
                        5376: 268435456,
                        5632: 268435464,
                        5888: 2105344,
                        6144: 2105352,
                        6400: 0,
                        6656: 8,
                        6912: 270532608,
                        7168: 8192,
                        7424: 268443656,
                        7680: 270540800,
                        7936: 2097160,
                        4224: 8,
                        4480: 2105344,
                        4736: 2097152,
                        4992: 268435464,
                        5248: 268443648,
                        5504: 8200,
                        5760: 270540808,
                        6016: 270532608,
                        6272: 270540800,
                        6528: 270532616,
                        6784: 8192,
                        7040: 2105352,
                        7296: 2097160,
                        7552: 0,
                        7808: 268435456,
                        8064: 268443656
                    }, {
                        0: 1048576,
                        16: 33555457,
                        32: 1024,
                        48: 1049601,
                        64: 34604033,
                        80: 0,
                        96: 1,
                        112: 34603009,
                        128: 33555456,
                        144: 1048577,
                        160: 33554433,
                        176: 34604032,
                        192: 34603008,
                        208: 1025,
                        224: 1049600,
                        240: 33554432,
                        8: 34603009,
                        24: 0,
                        40: 33555457,
                        56: 34604032,
                        72: 1048576,
                        88: 33554433,
                        104: 33554432,
                        120: 1025,
                        136: 1049601,
                        152: 33555456,
                        168: 34603008,
                        184: 1048577,
                        200: 1024,
                        216: 34604033,
                        232: 1,
                        248: 1049600,
                        256: 33554432,
                        272: 1048576,
                        288: 33555457,
                        304: 34603009,
                        320: 1048577,
                        336: 33555456,
                        352: 34604032,
                        368: 1049601,
                        384: 1025,
                        400: 34604033,
                        416: 1049600,
                        432: 1,
                        448: 0,
                        464: 34603008,
                        480: 33554433,
                        496: 1024,
                        264: 1049600,
                        280: 33555457,
                        296: 34603009,
                        312: 1,
                        328: 33554432,
                        344: 1048576,
                        360: 1025,
                        376: 34604032,
                        392: 33554433,
                        408: 34603008,
                        424: 0,
                        440: 34604033,
                        456: 1049601,
                        472: 1024,
                        488: 33555456,
                        504: 1048577
                    }, {
                        0: 134219808,
                        1: 131072,
                        2: 134217728,
                        3: 32,
                        4: 131104,
                        5: 134350880,
                        6: 134350848,
                        7: 2048,
                        8: 134348800,
                        9: 134219776,
                        10: 133120,
                        11: 134348832,
                        12: 2080,
                        13: 0,
                        14: 134217760,
                        15: 133152,
                        2147483648: 2048,
                        2147483649: 134350880,
                        2147483650: 134219808,
                        2147483651: 134217728,
                        2147483652: 134348800,
                        2147483653: 133120,
                        2147483654: 133152,
                        2147483655: 32,
                        2147483656: 134217760,
                        2147483657: 2080,
                        2147483658: 131104,
                        2147483659: 134350848,
                        2147483660: 0,
                        2147483661: 134348832,
                        2147483662: 134219776,
                        2147483663: 131072,
                        16: 133152,
                        17: 134350848,
                        18: 32,
                        19: 2048,
                        20: 134219776,
                        21: 134217760,
                        22: 134348832,
                        23: 131072,
                        24: 0,
                        25: 131104,
                        26: 134348800,
                        27: 134219808,
                        28: 134350880,
                        29: 133120,
                        30: 2080,
                        31: 134217728,
                        2147483664: 131072,
                        2147483665: 2048,
                        2147483666: 134348832,
                        2147483667: 133152,
                        2147483668: 32,
                        2147483669: 134348800,
                        2147483670: 134217728,
                        2147483671: 134219808,
                        2147483672: 134350880,
                        2147483673: 134217760,
                        2147483674: 134219776,
                        2147483675: 0,
                        2147483676: 133120,
                        2147483677: 2080,
                        2147483678: 131104,
                        2147483679: 134350848
                    }],
                    h = [4160749569, 528482304, 33030144, 2064384, 129024, 8064, 504, 2147483679],
                    d = o.DES = n.extend({
                        _doReset: function() {
                            for (var e = this._key.words, r = [], t = 0; t < 56; t++) {
                                var i = c[t] - 1;
                                r[t] = e[i >>> 5] >>> 31 - i % 32 & 1
                            }
                            for (var n = this._subKeys = [], o = 0; o < 16; o++) {
                                var f = n[o] = [],
                                    h = a[o];
                                for (t = 0; t < 24; t++) f[t / 6 | 0] |= r[(s[t] - 1 + h) % 28] << 31 - t % 6, f[4 + (t / 6 | 0)] |= r[28 + (s[t + 24] - 1 + h) % 28] << 31 - t % 6;
                                for (f[0] = f[0] << 1 | f[0] >>> 31, t = 1; t < 7; t++) f[t] = f[t] >>> 4 * (t - 1) + 3;
                                f[7] = f[7] << 5 | f[7] >>> 27
                            }
                            var d = this._invSubKeys = [];
                            for (t = 0; t < 16; t++) d[t] = n[15 - t]
                        },
                        encryptBlock: function(e, r) {
                            this._doCryptBlock(e, r, this._subKeys)
                        },
                        decryptBlock: function(e, r) {
                            this._doCryptBlock(e, r, this._invSubKeys)
                        },
                        _doCryptBlock: function(e, r, t) {
                            this._lBlock = e[r], this._rBlock = e[r + 1], u.call(this, 4, 252645135), u.call(this, 16, 65535), p.call(this, 2, 858993459), p.call(this, 8, 16711935), u.call(this, 1, 1431655765);
                            for (var i = 0; i < 16; i++) {
                                for (var n = t[i], o = this._lBlock, c = this._rBlock, s = 0, a = 0; a < 8; a++) s |= f[a][((c ^ n[a]) & h[a]) >>> 0];
                                this._lBlock = c, this._rBlock = o ^ s
                            }
                            var d = this._lBlock;
                            this._lBlock = this._rBlock, this._rBlock = d, u.call(this, 1, 1431655765), p.call(this, 8, 16711935), p.call(this, 2, 858993459), u.call(this, 16, 65535), u.call(this, 4, 252645135), e[r] = this._lBlock, e[r + 1] = this._rBlock
                        },
                        keySize: 2,
                        ivSize: 2,
                        blockSize: 2
                    });

                function u(e, r) {
                    var t = (this._lBlock >>> e ^ this._rBlock) & r;
                    this._rBlock ^= t, this._lBlock ^= t << e
                }

                function p(e, r) {
                    var t = (this._rBlock >>> e ^ this._lBlock) & r;
                    this._lBlock ^= t, this._rBlock ^= t << e
                }
                r.DES = n._createHelper(d);
                var l = o.TripleDES = n.extend({
                    _doReset: function() {
                        var e = this._key.words;
                        if (2 !== e.length && 4 !== e.length && e.length < 6) throw new Error("Invalid key length - 3DES requires the key length to be 64, 128, 192 or >192.");
                        var r = e.slice(0, 2),
                            t = e.length < 4 ? e.slice(0, 2) : e.slice(2, 4),
                            n = e.length < 6 ? e.slice(0, 2) : e.slice(4, 6);
                        this._des1 = d.createEncryptor(i.create(r)), this._des2 = d.createEncryptor(i.create(t)), this._des3 = d.createEncryptor(i.create(n))
                    },
                    encryptBlock: function(e, r) {
                        this._des1.encryptBlock(e, r), this._des2.decryptBlock(e, r), this._des3.encryptBlock(e, r)
                    },
                    decryptBlock: function(e, r) {
                        this._des3.decryptBlock(e, r), this._des2.encryptBlock(e, r), this._des1.decryptBlock(e, r)
                    },
                    keySize: 6,
                    ivSize: 2,
                    blockSize: 2
                });
                r.TripleDES = n._createHelper(l)
            }(), e.TripleDES
        }, "object" === i(t) ? r.exports = t = o(e("./core"), e("./enc-base64"), e("./md5"), e("./evpkdf"), e("./cipher-core")) : "function" == typeof define && define.amd ? define(["./core", "./enc-base64", "./md5", "./evpkdf", "./cipher-core"], o) : o(n.CryptoJS)
    }), (function(e) {
        return t({
            "./core": 1735023415017,
            "./enc-base64": 1735023415021,
            "./md5": 1735023415023,
            "./evpkdf": 1735023415033,
            "./cipher-core": 1735023415034
        }[e], e)
    })), r(1735023415048, (function(e, r, t) {
        var n, o;
        n = this, o = function(e) {
            return function() {
                var r = e,
                    t = r.lib.StreamCipher,
                    i = r.algo,
                    n = i.RC4 = t.extend({
                        _doReset: function() {
                            for (var e = this._key, r = e.words, t = e.sigBytes, i = this._S = [], n = 0; n < 256; n++) i[n] = n;
                            n = 0;
                            for (var o = 0; n < 256; n++) {
                                var c = n % t,
                                    s = r[c >>> 2] >>> 24 - c % 4 * 8 & 255;
                                o = (o + i[n] + s) % 256;
                                var a = i[n];
                                i[n] = i[o], i[o] = a
                            }
                            this._i = this._j = 0
                        },
                        _doProcessBlock: function(e, r) {
                            e[r] ^= o.call(this)
                        },
                        keySize: 8,
                        ivSize: 0
                    });

                function o() {
                    for (var e = this._S, r = this._i, t = this._j, i = 0, n = 0; n < 4; n++) {
                        t = (t + e[r = (r + 1) % 256]) % 256;
                        var o = e[r];
                        e[r] = e[t], e[t] = o, i |= e[(e[r] + e[t]) % 256] << 24 - 8 * n
                    }
                    return this._i = r, this._j = t, i
                }
                r.RC4 = t._createHelper(n);
                var c = i.RC4Drop = n.extend({
                    cfg: n.cfg.extend({
                        drop: 192
                    }),
                    _doReset: function() {
                        n._doReset.call(this);
                        for (var e = this.cfg.drop; e > 0; e--) o.call(this)
                    }
                });
                r.RC4Drop = t._createHelper(c)
            }(), e.RC4
        }, "object" === i(t) ? r.exports = t = o(e("./core"), e("./enc-base64"), e("./md5"), e("./evpkdf"), e("./cipher-core")) : "function" == typeof define && define.amd ? define(["./core", "./enc-base64", "./md5", "./evpkdf", "./cipher-core"], o) : o(n.CryptoJS)
    }), (function(e) {
        return t({
            "./core": 1735023415017,
            "./enc-base64": 1735023415021,
            "./md5": 1735023415023,
            "./evpkdf": 1735023415033,
            "./cipher-core": 1735023415034
        }[e], e)
    })), r(1735023415049, (function(e, r, t) {
        var n, o;
        n = this, o = function(e) {
            return function() {
                var r = e,
                    t = r.lib.StreamCipher,
                    i = r.algo,
                    n = [],
                    o = [],
                    c = [],
                    s = i.Rabbit = t.extend({
                        _doReset: function() {
                            for (var e = this._key.words, r = this.cfg.iv, t = 0; t < 4; t++) e[t] = 16711935 & (e[t] << 8 | e[t] >>> 24) | 4278255360 & (e[t] << 24 | e[t] >>> 8);
                            var i = this._X = [e[0], e[3] << 16 | e[2] >>> 16, e[1], e[0] << 16 | e[3] >>> 16, e[2], e[1] << 16 | e[0] >>> 16, e[3], e[2] << 16 | e[1] >>> 16],
                                n = this._C = [e[2] << 16 | e[2] >>> 16, 4294901760 & e[0] | 65535 & e[1], e[3] << 16 | e[3] >>> 16, 4294901760 & e[1] | 65535 & e[2], e[0] << 16 | e[0] >>> 16, 4294901760 & e[2] | 65535 & e[3], e[1] << 16 | e[1] >>> 16, 4294901760 & e[3] | 65535 & e[0]];
                            for (this._b = 0, t = 0; t < 4; t++) a.call(this);
                            for (t = 0; t < 8; t++) n[t] ^= i[t + 4 & 7];
                            if (r) {
                                var o = r.words,
                                    c = o[0],
                                    s = o[1],
                                    f = 16711935 & (c << 8 | c >>> 24) | 4278255360 & (c << 24 | c >>> 8),
                                    h = 16711935 & (s << 8 | s >>> 24) | 4278255360 & (s << 24 | s >>> 8),
                                    d = f >>> 16 | 4294901760 & h,
                                    u = h << 16 | 65535 & f;
                                for (n[0] ^= f, n[1] ^= d, n[2] ^= h, n[3] ^= u, n[4] ^= f, n[5] ^= d, n[6] ^= h, n[7] ^= u, t = 0; t < 4; t++) a.call(this)
                            }
                        },
                        _doProcessBlock: function(e, r) {
                            var t = this._X;
                            a.call(this), n[0] = t[0] ^ t[5] >>> 16 ^ t[3] << 16, n[1] = t[2] ^ t[7] >>> 16 ^ t[5] << 16, n[2] = t[4] ^ t[1] >>> 16 ^ t[7] << 16, n[3] = t[6] ^ t[3] >>> 16 ^ t[1] << 16;
                            for (var i = 0; i < 4; i++) n[i] = 16711935 & (n[i] << 8 | n[i] >>> 24) | 4278255360 & (n[i] << 24 | n[i] >>> 8), e[r + i] ^= n[i]
                        },
                        blockSize: 4,
                        ivSize: 2
                    });

                function a() {
                    for (var e = this._X, r = this._C, t = 0; t < 8; t++) o[t] = r[t];
                    for (r[0] = r[0] + 1295307597 + this._b | 0, r[1] = r[1] + 3545052371 + (r[0] >>> 0 < o[0] >>> 0 ? 1 : 0) | 0, r[2] = r[2] + 886263092 + (r[1] >>> 0 < o[1] >>> 0 ? 1 : 0) | 0, r[3] = r[3] + 1295307597 + (r[2] >>> 0 < o[2] >>> 0 ? 1 : 0) | 0, r[4] = r[4] + 3545052371 + (r[3] >>> 0 < o[3] >>> 0 ? 1 : 0) | 0, r[5] = r[5] + 886263092 + (r[4] >>> 0 < o[4] >>> 0 ? 1 : 0) | 0, r[6] = r[6] + 1295307597 + (r[5] >>> 0 < o[5] >>> 0 ? 1 : 0) | 0, r[7] = r[7] + 3545052371 + (r[6] >>> 0 < o[6] >>> 0 ? 1 : 0) | 0, this._b = r[7] >>> 0 < o[7] >>> 0 ? 1 : 0, t = 0; t < 8; t++) {
                        var i = e[t] + r[t],
                            n = 65535 & i,
                            s = i >>> 16,
                            a = ((n * n >>> 17) + n * s >>> 15) + s * s,
                            f = ((4294901760 & i) * i | 0) + ((65535 & i) * i | 0);
                        c[t] = a ^ f
                    }
                    e[0] = c[0] + (c[7] << 16 | c[7] >>> 16) + (c[6] << 16 | c[6] >>> 16) | 0, e[1] = c[1] + (c[0] << 8 | c[0] >>> 24) + c[7] | 0, e[2] = c[2] + (c[1] << 16 | c[1] >>> 16) + (c[0] << 16 | c[0] >>> 16) | 0, e[3] = c[3] + (c[2] << 8 | c[2] >>> 24) + c[1] | 0, e[4] = c[4] + (c[3] << 16 | c[3] >>> 16) + (c[2] << 16 | c[2] >>> 16) | 0, e[5] = c[5] + (c[4] << 8 | c[4] >>> 24) + c[3] | 0, e[6] = c[6] + (c[5] << 16 | c[5] >>> 16) + (c[4] << 16 | c[4] >>> 16) | 0, e[7] = c[7] + (c[6] << 8 | c[6] >>> 24) + c[5] | 0
                }
                r.Rabbit = t._createHelper(s)
            }(), e.Rabbit
        }, "object" === i(t) ? r.exports = t = o(e("./core"), e("./enc-base64"), e("./md5"), e("./evpkdf"), e("./cipher-core")) : "function" == typeof define && define.amd ? define(["./core", "./enc-base64", "./md5", "./evpkdf", "./cipher-core"], o) : o(n.CryptoJS)
    }), (function(e) {
        return t({
            "./core": 1735023415017,
            "./enc-base64": 1735023415021,
            "./md5": 1735023415023,
            "./evpkdf": 1735023415033,
            "./cipher-core": 1735023415034
        }[e], e)
    })), r(1735023415050, (function(e, r, t) {
        var n, o;
        n = this, o = function(e) {
            return function() {
                var r = e,
                    t = r.lib.StreamCipher,
                    i = r.algo,
                    n = [],
                    o = [],
                    c = [],
                    s = i.RabbitLegacy = t.extend({
                        _doReset: function() {
                            var e = this._key.words,
                                r = this.cfg.iv,
                                t = this._X = [e[0], e[3] << 16 | e[2] >>> 16, e[1], e[0] << 16 | e[3] >>> 16, e[2], e[1] << 16 | e[0] >>> 16, e[3], e[2] << 16 | e[1] >>> 16],
                                i = this._C = [e[2] << 16 | e[2] >>> 16, 4294901760 & e[0] | 65535 & e[1], e[3] << 16 | e[3] >>> 16, 4294901760 & e[1] | 65535 & e[2], e[0] << 16 | e[0] >>> 16, 4294901760 & e[2] | 65535 & e[3], e[1] << 16 | e[1] >>> 16, 4294901760 & e[3] | 65535 & e[0]];
                            this._b = 0;
                            for (var n = 0; n < 4; n++) a.call(this);
                            for (n = 0; n < 8; n++) i[n] ^= t[n + 4 & 7];
                            if (r) {
                                var o = r.words,
                                    c = o[0],
                                    s = o[1],
                                    f = 16711935 & (c << 8 | c >>> 24) | 4278255360 & (c << 24 | c >>> 8),
                                    h = 16711935 & (s << 8 | s >>> 24) | 4278255360 & (s << 24 | s >>> 8),
                                    d = f >>> 16 | 4294901760 & h,
                                    u = h << 16 | 65535 & f;
                                for (i[0] ^= f, i[1] ^= d, i[2] ^= h, i[3] ^= u, i[4] ^= f, i[5] ^= d, i[6] ^= h, i[7] ^= u, n = 0; n < 4; n++) a.call(this)
                            }
                        },
                        _doProcessBlock: function(e, r) {
                            var t = this._X;
                            a.call(this), n[0] = t[0] ^ t[5] >>> 16 ^ t[3] << 16, n[1] = t[2] ^ t[7] >>> 16 ^ t[5] << 16, n[2] = t[4] ^ t[1] >>> 16 ^ t[7] << 16, n[3] = t[6] ^ t[3] >>> 16 ^ t[1] << 16;
                            for (var i = 0; i < 4; i++) n[i] = 16711935 & (n[i] << 8 | n[i] >>> 24) | 4278255360 & (n[i] << 24 | n[i] >>> 8), e[r + i] ^= n[i]
                        },
                        blockSize: 4,
                        ivSize: 2
                    });

                function a() {
                    for (var e = this._X, r = this._C, t = 0; t < 8; t++) o[t] = r[t];
                    for (r[0] = r[0] + 1295307597 + this._b | 0, r[1] = r[1] + 3545052371 + (r[0] >>> 0 < o[0] >>> 0 ? 1 : 0) | 0, r[2] = r[2] + 886263092 + (r[1] >>> 0 < o[1] >>> 0 ? 1 : 0) | 0, r[3] = r[3] + 1295307597 + (r[2] >>> 0 < o[2] >>> 0 ? 1 : 0) | 0, r[4] = r[4] + 3545052371 + (r[3] >>> 0 < o[3] >>> 0 ? 1 : 0) | 0, r[5] = r[5] + 886263092 + (r[4] >>> 0 < o[4] >>> 0 ? 1 : 0) | 0, r[6] = r[6] + 1295307597 + (r[5] >>> 0 < o[5] >>> 0 ? 1 : 0) | 0, r[7] = r[7] + 3545052371 + (r[6] >>> 0 < o[6] >>> 0 ? 1 : 0) | 0, this._b = r[7] >>> 0 < o[7] >>> 0 ? 1 : 0, t = 0; t < 8; t++) {
                        var i = e[t] + r[t],
                            n = 65535 & i,
                            s = i >>> 16,
                            a = ((n * n >>> 17) + n * s >>> 15) + s * s,
                            f = ((4294901760 & i) * i | 0) + ((65535 & i) * i | 0);
                        c[t] = a ^ f
                    }
                    e[0] = c[0] + (c[7] << 16 | c[7] >>> 16) + (c[6] << 16 | c[6] >>> 16) | 0, e[1] = c[1] + (c[0] << 8 | c[0] >>> 24) + c[7] | 0, e[2] = c[2] + (c[1] << 16 | c[1] >>> 16) + (c[0] << 16 | c[0] >>> 16) | 0, e[3] = c[3] + (c[2] << 8 | c[2] >>> 24) + c[1] | 0, e[4] = c[4] + (c[3] << 16 | c[3] >>> 16) + (c[2] << 16 | c[2] >>> 16) | 0, e[5] = c[5] + (c[4] << 8 | c[4] >>> 24) + c[3] | 0, e[6] = c[6] + (c[5] << 16 | c[5] >>> 16) + (c[4] << 16 | c[4] >>> 16) | 0, e[7] = c[7] + (c[6] << 8 | c[6] >>> 24) + c[5] | 0
                }
                r.RabbitLegacy = t._createHelper(s)
            }(), e.RabbitLegacy
        }, "object" === i(t) ? r.exports = t = o(e("./core"), e("./enc-base64"), e("./md5"), e("./evpkdf"), e("./cipher-core")) : "function" == typeof define && define.amd ? define(["./core", "./enc-base64", "./md5", "./evpkdf", "./cipher-core"], o) : o(n.CryptoJS)
    }), (function(e) {
        return t({
            "./core": 1735023415017,
            "./enc-base64": 1735023415021,
            "./md5": 1735023415023,
            "./evpkdf": 1735023415033,
            "./cipher-core": 1735023415034
        }[e], e)
    })), r(1735023415051, (function(e, r, t) {
        var n, o;
        n = this, o = function(e) {
            return function() {
                var r = e,
                    t = r.lib.BlockCipher,
                    i = r.algo,
                    n = 16,
                    o = [608135816, 2242054355, 320440878, 57701188, 2752067618, 698298832, 137296536, 3964562569, 1160258022, 953160567, 3193202383, 887688300, 3232508343, 3380367581, 1065670069, 3041331479, 2450970073, 2306472731],
                    c = [
                        [3509652390, 2564797868, 805139163, 3491422135, 3101798381, 1780907670, 3128725573, 4046225305, 614570311, 3012652279, 134345442, 2240740374, 1667834072, 1901547113, 2757295779, 4103290238, 227898511, 1921955416, 1904987480, 2182433518, 2069144605, 3260701109, 2620446009, 720527379, 3318853667, 677414384, 3393288472, 3101374703, 2390351024, 1614419982, 1822297739, 2954791486, 3608508353, 3174124327, 2024746970, 1432378464, 3864339955, 2857741204, 1464375394, 1676153920, 1439316330, 715854006, 3033291828, 289532110, 2706671279, 2087905683, 3018724369, 1668267050, 732546397, 1947742710, 3462151702, 2609353502, 2950085171, 1814351708, 2050118529, 680887927, 999245976, 1800124847, 3300911131, 1713906067, 1641548236, 4213287313, 1216130144, 1575780402, 4018429277, 3917837745, 3693486850, 3949271944, 596196993, 3549867205, 258830323, 2213823033, 772490370, 2760122372, 1774776394, 2652871518, 566650946, 4142492826, 1728879713, 2882767088, 1783734482, 3629395816, 2517608232, 2874225571, 1861159788, 326777828, 3124490320, 2130389656, 2716951837, 967770486, 1724537150, 2185432712, 2364442137, 1164943284, 2105845187, 998989502, 3765401048, 2244026483, 1075463327, 1455516326, 1322494562, 910128902, 469688178, 1117454909, 936433444, 3490320968, 3675253459, 1240580251, 122909385, 2157517691, 634681816, 4142456567, 3825094682, 3061402683, 2540495037, 79693498, 3249098678, 1084186820, 1583128258, 426386531, 1761308591, 1047286709, 322548459, 995290223, 1845252383, 2603652396, 3431023940, 2942221577, 3202600964, 3727903485, 1712269319, 422464435, 3234572375, 1170764815, 3523960633, 3117677531, 1434042557, 442511882, 3600875718, 1076654713, 1738483198, 4213154764, 2393238008, 3677496056, 1014306527, 4251020053, 793779912, 2902807211, 842905082, 4246964064, 1395751752, 1040244610, 2656851899, 3396308128, 445077038, 3742853595, 3577915638, 679411651, 2892444358, 2354009459, 1767581616, 3150600392, 3791627101, 3102740896, 284835224, 4246832056, 1258075500, 768725851, 2589189241, 3069724005, 3532540348, 1274779536, 3789419226, 2764799539, 1660621633, 3471099624, 4011903706, 913787905, 3497959166, 737222580, 2514213453, 2928710040, 3937242737, 1804850592, 3499020752, 2949064160, 2386320175, 2390070455, 2415321851, 4061277028, 2290661394, 2416832540, 1336762016, 1754252060, 3520065937, 3014181293, 791618072, 3188594551, 3933548030, 2332172193, 3852520463, 3043980520, 413987798, 3465142937, 3030929376, 4245938359, 2093235073, 3534596313, 375366246, 2157278981, 2479649556, 555357303, 3870105701, 2008414854, 3344188149, 4221384143, 3956125452, 2067696032, 3594591187, 2921233993, 2428461, 544322398, 577241275, 1471733935, 610547355, 4027169054, 1432588573, 1507829418, 2025931657, 3646575487, 545086370, 48609733, 2200306550, 1653985193, 298326376, 1316178497, 3007786442, 2064951626, 458293330, 2589141269, 3591329599, 3164325604, 727753846, 2179363840, 146436021, 1461446943, 4069977195, 705550613, 3059967265, 3887724982, 4281599278, 3313849956, 1404054877, 2845806497, 146425753, 1854211946],
                        [1266315497, 3048417604, 3681880366, 3289982499, 290971e4, 1235738493, 2632868024, 2414719590, 3970600049, 1771706367, 1449415276, 3266420449, 422970021, 1963543593, 2690192192, 3826793022, 1062508698, 1531092325, 1804592342, 2583117782, 2714934279, 4024971509, 1294809318, 4028980673, 1289560198, 2221992742, 1669523910, 35572830, 157838143, 1052438473, 1016535060, 1802137761, 1753167236, 1386275462, 3080475397, 2857371447, 1040679964, 2145300060, 2390574316, 1461121720, 2956646967, 4031777805, 4028374788, 33600511, 2920084762, 1018524850, 629373528, 3691585981, 3515945977, 2091462646, 2486323059, 586499841, 988145025, 935516892, 3367335476, 2599673255, 2839830854, 265290510, 3972581182, 2759138881, 3795373465, 1005194799, 847297441, 406762289, 1314163512, 1332590856, 1866599683, 4127851711, 750260880, 613907577, 1450815602, 3165620655, 3734664991, 3650291728, 3012275730, 3704569646, 1427272223, 778793252, 1343938022, 2676280711, 2052605720, 1946737175, 3164576444, 3914038668, 3967478842, 3682934266, 1661551462, 3294938066, 4011595847, 840292616, 3712170807, 616741398, 312560963, 711312465, 1351876610, 322626781, 1910503582, 271666773, 2175563734, 1594956187, 70604529, 3617834859, 1007753275, 1495573769, 4069517037, 2549218298, 2663038764, 504708206, 2263041392, 3941167025, 2249088522, 1514023603, 1998579484, 1312622330, 694541497, 2582060303, 2151582166, 1382467621, 776784248, 2618340202, 3323268794, 2497899128, 2784771155, 503983604, 4076293799, 907881277, 423175695, 432175456, 1378068232, 4145222326, 3954048622, 3938656102, 3820766613, 2793130115, 2977904593, 26017576, 3274890735, 3194772133, 1700274565, 1756076034, 4006520079, 3677328699, 720338349, 1533947780, 354530856, 688349552, 3973924725, 1637815568, 332179504, 3949051286, 53804574, 2852348879, 3044236432, 1282449977, 3583942155, 3416972820, 4006381244, 1617046695, 2628476075, 3002303598, 1686838959, 431878346, 2686675385, 1700445008, 1080580658, 1009431731, 832498133, 3223435511, 2605976345, 2271191193, 2516031870, 1648197032, 4164389018, 2548247927, 300782431, 375919233, 238389289, 3353747414, 2531188641, 2019080857, 1475708069, 455242339, 2609103871, 448939670, 3451063019, 1395535956, 2413381860, 1841049896, 1491858159, 885456874, 4264095073, 4001119347, 1565136089, 3898914787, 1108368660, 540939232, 1173283510, 2745871338, 3681308437, 4207628240, 3343053890, 4016749493, 1699691293, 1103962373, 3625875870, 2256883143, 3830138730, 1031889488, 3479347698, 1535977030, 4236805024, 3251091107, 2132092099, 1774941330, 1199868427, 1452454533, 157007616, 2904115357, 342012276, 595725824, 1480756522, 206960106, 497939518, 591360097, 863170706, 2375253569, 3596610801, 1814182875, 2094937945, 3421402208, 1082520231, 3463918190, 2785509508, 435703966, 3908032597, 1641649973, 2842273706, 3305899714, 1510255612, 2148256476, 2655287854, 3276092548, 4258621189, 236887753, 3681803219, 274041037, 1734335097, 3815195456, 3317970021, 1899903192, 1026095262, 4050517792, 356393447, 2410691914, 3873677099, 3682840055],
                        [3913112168, 2491498743, 4132185628, 2489919796, 1091903735, 1979897079, 3170134830, 3567386728, 3557303409, 857797738, 1136121015, 1342202287, 507115054, 2535736646, 337727348, 3213592640, 1301675037, 2528481711, 1895095763, 1721773893, 3216771564, 62756741, 2142006736, 835421444, 2531993523, 1442658625, 3659876326, 2882144922, 676362277, 1392781812, 170690266, 3921047035, 1759253602, 3611846912, 1745797284, 664899054, 1329594018, 3901205900, 3045908486, 2062866102, 2865634940, 3543621612, 3464012697, 1080764994, 553557557, 3656615353, 3996768171, 991055499, 499776247, 1265440854, 648242737, 3940784050, 980351604, 3713745714, 1749149687, 3396870395, 4211799374, 3640570775, 1161844396, 3125318951, 1431517754, 545492359, 4268468663, 3499529547, 1437099964, 2702547544, 3433638243, 2581715763, 2787789398, 1060185593, 1593081372, 2418618748, 4260947970, 69676912, 2159744348, 86519011, 2512459080, 3838209314, 1220612927, 3339683548, 133810670, 1090789135, 1078426020, 1569222167, 845107691, 3583754449, 4072456591, 1091646820, 628848692, 1613405280, 3757631651, 526609435, 236106946, 48312990, 2942717905, 3402727701, 1797494240, 859738849, 992217954, 4005476642, 2243076622, 3870952857, 3732016268, 765654824, 3490871365, 2511836413, 1685915746, 3888969200, 1414112111, 2273134842, 3281911079, 4080962846, 172450625, 2569994100, 980381355, 4109958455, 2819808352, 2716589560, 2568741196, 3681446669, 3329971472, 1835478071, 660984891, 3704678404, 4045999559, 3422617507, 3040415634, 1762651403, 1719377915, 3470491036, 2693910283, 3642056355, 3138596744, 1364962596, 2073328063, 1983633131, 926494387, 3423689081, 2150032023, 4096667949, 1749200295, 3328846651, 309677260, 2016342300, 1779581495, 3079819751, 111262694, 1274766160, 443224088, 298511866, 1025883608, 3806446537, 1145181785, 168956806, 3641502830, 3584813610, 1689216846, 3666258015, 3200248200, 1692713982, 2646376535, 4042768518, 1618508792, 1610833997, 3523052358, 4130873264, 2001055236, 3610705100, 2202168115, 4028541809, 2961195399, 1006657119, 2006996926, 3186142756, 1430667929, 3210227297, 1314452623, 4074634658, 4101304120, 2273951170, 1399257539, 3367210612, 3027628629, 1190975929, 2062231137, 2333990788, 2221543033, 2438960610, 1181637006, 548689776, 2362791313, 3372408396, 3104550113, 3145860560, 296247880, 1970579870, 3078560182, 3769228297, 1714227617, 3291629107, 3898220290, 166772364, 1251581989, 493813264, 448347421, 195405023, 2709975567, 677966185, 3703036547, 1463355134, 2715995803, 1338867538, 1343315457, 2802222074, 2684532164, 233230375, 2599980071, 2000651841, 3277868038, 1638401717, 4028070440, 3237316320, 6314154, 819756386, 300326615, 590932579, 1405279636, 3267499572, 3150704214, 2428286686, 3959192993, 3461946742, 1862657033, 1266418056, 963775037, 2089974820, 2263052895, 1917689273, 448879540, 3550394620, 3981727096, 150775221, 3627908307, 1303187396, 508620638, 2975983352, 2726630617, 1817252668, 1876281319, 1457606340, 908771278, 3720792119, 3617206836, 2455994898, 1729034894, 1080033504],
                        [976866871, 3556439503, 2881648439, 1522871579, 1555064734, 1336096578, 3548522304, 2579274686, 3574697629, 3205460757, 3593280638, 3338716283, 3079412587, 564236357, 2993598910, 1781952180, 1464380207, 3163844217, 3332601554, 1699332808, 1393555694, 1183702653, 3581086237, 1288719814, 691649499, 2847557200, 2895455976, 3193889540, 2717570544, 1781354906, 1676643554, 2592534050, 3230253752, 1126444790, 2770207658, 2633158820, 2210423226, 2615765581, 2414155088, 3127139286, 673620729, 2805611233, 1269405062, 4015350505, 3341807571, 4149409754, 1057255273, 2012875353, 2162469141, 2276492801, 2601117357, 993977747, 3918593370, 2654263191, 753973209, 36408145, 2530585658, 25011837, 3520020182, 2088578344, 530523599, 2918365339, 1524020338, 1518925132, 3760827505, 3759777254, 1202760957, 3985898139, 3906192525, 674977740, 4174734889, 2031300136, 2019492241, 3983892565, 4153806404, 3822280332, 352677332, 2297720250, 60907813, 90501309, 3286998549, 1016092578, 2535922412, 2839152426, 457141659, 509813237, 4120667899, 652014361, 1966332200, 2975202805, 55981186, 2327461051, 676427537, 3255491064, 2882294119, 3433927263, 1307055953, 942726286, 933058658, 2468411793, 3933900994, 4215176142, 1361170020, 2001714738, 2830558078, 3274259782, 1222529897, 1679025792, 2729314320, 3714953764, 1770335741, 151462246, 3013232138, 1682292957, 1483529935, 471910574, 1539241949, 458788160, 3436315007, 1807016891, 3718408830, 978976581, 1043663428, 3165965781, 1927990952, 4200891579, 2372276910, 3208408903, 3533431907, 1412390302, 2931980059, 4132332400, 1947078029, 3881505623, 4168226417, 2941484381, 1077988104, 1320477388, 886195818, 18198404, 3786409e3, 2509781533, 112762804, 3463356488, 1866414978, 891333506, 18488651, 661792760, 1628790961, 3885187036, 3141171499, 876946877, 2693282273, 1372485963, 791857591, 2686433993, 3759982718, 3167212022, 3472953795, 2716379847, 445679433, 3561995674, 3504004811, 3574258232, 54117162, 3331405415, 2381918588, 3769707343, 4154350007, 1140177722, 4074052095, 668550556, 3214352940, 367459370, 261225585, 2610173221, 4209349473, 3468074219, 3265815641, 314222801, 3066103646, 3808782860, 282218597, 3406013506, 3773591054, 379116347, 1285071038, 846784868, 2669647154, 3771962079, 3550491691, 2305946142, 453669953, 1268987020, 3317592352, 3279303384, 3744833421, 2610507566, 3859509063, 266596637, 3847019092, 517658769, 3462560207, 3443424879, 370717030, 4247526661, 2224018117, 4143653529, 4112773975, 2788324899, 2477274417, 1456262402, 2901442914, 1517677493, 1846949527, 2295493580, 3734397586, 2176403920, 1280348187, 1908823572, 3871786941, 846861322, 1172426758, 3287448474, 3383383037, 1655181056, 3139813346, 901632758, 1897031941, 2986607138, 3066810236, 3447102507, 1393639104, 373351379, 950779232, 625454576, 3124240540, 4148612726, 2007998917, 544563296, 2244738638, 2330496472, 2058025392, 1291430526, 424198748, 50039436, 29584100, 3605783033, 2429876329, 2791104160, 1057563949, 3255363231, 3075367218, 3463963227, 1469046755, 985887462]
                    ],
                    s = {
                        pbox: [],
                        sbox: []
                    };

                function a(e, r) {
                    var t = r >> 24 & 255,
                        i = r >> 16 & 255,
                        n = r >> 8 & 255,
                        o = 255 & r,
                        c = e.sbox[0][t] + e.sbox[1][i];
                    return c ^= e.sbox[2][n], c += e.sbox[3][o]
                }

                function f(e, r, t) {
                    for (var i, o = r, c = t, s = 0; s < n; ++s) i = o ^= e.pbox[s], o = c = a(e, o) ^ c, c = i;
                    return i = o, o = c, c = i, c ^= e.pbox[n], {
                        left: o ^= e.pbox[17],
                        right: c
                    }
                }
                var h = i.Blowfish = t.extend({
                    _doReset: function() {
                        if (this._keyPriorReset !== this._key) {
                            var e = this._keyPriorReset = this._key,
                                r = e.words,
                                t = e.sigBytes / 4;
                            ! function(e, r, t) {
                                for (var i = 0; i < 4; i++) {
                                    e.sbox[i] = [];
                                    for (var n = 0; n < 256; n++) e.sbox[i][n] = c[i][n]
                                }
                                for (var s = 0, a = 0; a < 18; a++) e.pbox[a] = o[a] ^ r[s], ++s >= t && (s = 0);
                                for (var h = 0, d = 0, u = 0, p = 0; p < 18; p += 2) h = (u = f(e, h, d)).left, d = u.right, e.pbox[p] = h, e.pbox[p + 1] = d;
                                for (var l = 0; l < 4; l++)
                                    for (var v = 0; v < 256; v += 2) h = (u = f(e, h, d)).left, d = u.right, e.sbox[l][v] = h, e.sbox[l][v + 1] = d
                            }(s, r, t)
                        }
                    },
                    encryptBlock: function(e, r) {
                        var t = f(s, e[r], e[r + 1]);
                        e[r] = t.left, e[r + 1] = t.right
                    },
                    decryptBlock: function(e, r) {
                        var t = function(e, r, t) {
                            for (var i, n = r, o = t, c = 17; c > 1; --c) i = n ^= e.pbox[c], n = o = a(e, n) ^ o, o = i;
                            return i = n, n = o, o = i, o ^= e.pbox[1], {
                                left: n ^= e.pbox[0],
                                right: o
                            }
                        }(s, e[r], e[r + 1]);
                        e[r] = t.left, e[r + 1] = t.right
                    },
                    blockSize: 2,
                    keySize: 4,
                    ivSize: 2
                });
                r.Blowfish = t._createHelper(h)
            }(), e.Blowfish
        }, "object" === i(t) ? r.exports = t = o(e("./core"), e("./enc-base64"), e("./md5"), e("./evpkdf"), e("./cipher-core")) : "function" == typeof define && define.amd ? define(["./core", "./enc-base64", "./md5", "./evpkdf", "./cipher-core"], o) : o(n.CryptoJS)
    }), (function(e) {
        return t({
            "./core": 1735023415017,
            "./enc-base64": 1735023415021,
            "./md5": 1735023415023,
            "./evpkdf": 1735023415033,
            "./cipher-core": 1735023415034
        }[e], e)
    })), t(1735023415016));
});
define("miniprogram_npm/js-base64/index.js", function(require, module, exports, window, document, frames, self, location, navigator, localStorage, history, Caches, screen, alert, confirm, prompt, XMLHttpRequest, WebSocket, Reporter, webkit, WeixinJSCore) {
    "use strict";
    var t, r, e = require("../../@babel/runtime/helpers/typeof");
    module.exports = (t = {}, r = function(r, n) {
        if (!t[r]) return require(n);
        if (!t[r].status) {
            var o = t[r].m;
            o._exports = o._tempexports;
            var u = Object.getOwnPropertyDescriptor(o, "exports");
            u && u.configurable && Object.defineProperty(o, "exports", {set: function(t) {
                    "object" === e(t) && t !== o._exports && (o._exports.__proto__ = t.__proto__, Object.keys(t).forEach((function(r) {
                        o._exports[r] = t[r]
                    }))), o._tempexports = t
                },
                get: function() {
                    return o._tempexports
                }
            }), t[r].status = 1, t[r].func(t[r].req, o, o.exports)
        }
        return t[r].m.exports
    }, function(r, e, n) {
        t[r] = {
            status: 0,
            func: e,
            req: n,
            m: {
                exports: {},
                _tempexports: {}
            }
        }
    }(1735023415055, (function(t, r, n) {
        ! function(t, o) {
            var u, i;
            "object" === e(n) && void 0 !== r ? r.exports = o() : "function" == typeof define && define.amd ? define(o) : (u = t.Base64, (i = o()).noConflict = function() {
                return t.Base64 = u, i
            }, t.Meteor && (Base64 = i), t.Base64 = i)
        }("undefined" != typeof self ? self : "undefined" != typeof window ? window : "undefined" != typeof global ? global : this, (function() {
            var t, r = "function" == typeof Buffer,
                e = "function" == typeof TextDecoder ? new TextDecoder : void 0,
                n = "function" == typeof TextEncoder ? new TextEncoder : void 0,
                o = Array.prototype.slice.call("ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/="),
                u = (t = {}, o.forEach((function(r, e) {
                    return t[r] = e
                })), t),
                i = /^(?:[A-Za-z\d+\/]{4})*?(?:[A-Za-z\d+\/]{2}(?:==)?|[A-Za-z\d+\/]{3}=?)?$/,
                f = String.fromCharCode.bind(String),
                c = "function" == typeof Uint8Array.from ? Uint8Array.from.bind(Uint8Array) : function(t) {
                    return new Uint8Array(Array.prototype.slice.call(t, 0))
                },
                a = function(t) {
                    return t.replace(/=/g, "").replace(/[+\/]/g, (function(t) {
                        return "+" == t ? "-" : "_"
                    }))
                },
                s = function(t) {
                    return t.replace(/[^A-Za-z0-9\+\/]/g, "")
                },
                d = function(t) {
                    for (var r, e, n, u, i = "", f = t.length % 3, c = 0; c < t.length;) {
                        if ((e = t.charCodeAt(c++)) > 255 || (n = t.charCodeAt(c++)) > 255 || (u = t.charCodeAt(c++)) > 255) throw new TypeError("invalid character found");
                        i += o[(r = e << 16 | n << 8 | u) >> 18 & 63] + o[r >> 12 & 63] + o[r >> 6 & 63] + o[63 & r]
                    }
                    return f ? i.slice(0, f - 3) + "===".substring(f) : i
                },
                p = "function" == typeof btoa ? function(t) {
                    return btoa(t)
                } : r ? function(t) {
                    return Buffer.from(t, "binary").toString("base64")
                } : d,
                l = r ? function(t) {
                    return Buffer.from(t).toString("base64")
                } : function(t) {
                    for (var r = [], e = 0, n = t.length; e < n; e += 4096) r.push(f.apply(null, t.subarray(e, e + 4096)));
                    return p(r.join(""))
                },
                h = function(t, r) {
                    return void 0 === r && (r = !1), r ? a(l(t)) : l(t)
                },
                y = function(t) {
                    if (t.length < 2) return (r = t.charCodeAt(0)) < 128 ? t : r < 2048 ? f(192 | r >>> 6) + f(128 | 63 & r) : f(224 | r >>> 12 & 15) + f(128 | r >>> 6 & 63) + f(128 | 63 & r);
                    var r = 65536 + 1024 * (t.charCodeAt(0) - 55296) + (t.charCodeAt(1) - 56320);
                    return f(240 | r >>> 18 & 7) + f(128 | r >>> 12 & 63) + f(128 | r >>> 6 & 63) + f(128 | 63 & r)
                },
                b = /[\uD800-\uDBFF][\uDC00-\uDFFFF]|[^\x00-\x7F]/g,
                A = function(t) {
                    return t.replace(b, y)
                },
                x = r ? function(t) {
                    return Buffer.from(t, "utf8").toString("base64")
                } : n ? function(t) {
                    return l(n.encode(t))
                } : function(t) {
                    return p(A(t))
                },
                g = function(t, r) {
                    return void 0 === r && (r = !1), r ? a(x(t)) : x(t)
                },
                B = function(t) {
                    return g(t, !0)
                },
                m = /[\xC0-\xDF][\x80-\xBF]|[\xE0-\xEF][\x80-\xBF]{2}|[\xF0-\xF7][\x80-\xBF]{3}/g,
                v = function(t) {
                    switch (t.length) {
                        case 4:
                            var r = ((7 & t.charCodeAt(0)) << 18 | (63 & t.charCodeAt(1)) << 12 | (63 & t.charCodeAt(2)) << 6 | 63 & t.charCodeAt(3)) - 65536;
                            return f(55296 + (r >>> 10)) + f(56320 + (1023 & r));
                        case 3:
                            return f((15 & t.charCodeAt(0)) << 12 | (63 & t.charCodeAt(1)) << 6 | 63 & t.charCodeAt(2));
                        default:
                            return f((31 & t.charCodeAt(0)) << 6 | 63 & t.charCodeAt(1))
                    }
                },
                C = function(t) {
                    return t.replace(m, v)
                },
                _ = function(t) {
                    if (t = t.replace(/\s+/g, ""), !i.test(t)) throw new TypeError("malformed base64.");
                    t += "==".slice(2 - (3 & t.length));
                    for (var r, e, n, o = "", c = 0; c < t.length;) r = u[t.charAt(c++)] << 18 | u[t.charAt(c++)] << 12 | (e = u[t.charAt(c++)]) << 6 | (n = u[t.charAt(c++)]), o += 64 === e ? f(r >> 16 & 255) : 64 === n ? f(r >> 16 & 255, r >> 8 & 255) : f(r >> 16 & 255, r >> 8 & 255, 255 & r);
                    return o
                },
                U = "function" == typeof atob ? function(t) {
                    return atob(s(t))
                } : r ? function(t) {
                    return Buffer.from(t, "base64").toString("binary")
                } : _,
                w = r ? function(t) {
                    return c(Buffer.from(t, "base64"))
                } : function(t) {
                    return c(U(t).split("").map((function(t) {
                        return t.charCodeAt(0)
                    })))
                },
                F = function(t) {
                    return w(S(t))
                },
                E = r ? function(t) {
                    return Buffer.from(t, "base64").toString("utf8")
                } : e ? function(t) {
                    return e.decode(w(t))
                } : function(t) {
                    return C(U(t))
                },
                S = function(t) {
                    return s(t.replace(/[-_]/g, (function(t) {
                        return "-" == t ? "+" : "/"
                    })))
                },
                j = function(t) {
                    return E(S(t))
                },
                D = function(t) {
                    return {
                        value: t,
                        enumerable: !1,
                        writable: !0,
                        configurable: !0
                    }
                },
                O = function() {
                    var t = function(t, r) {
                        return Object.defineProperty(String.prototype, t, D(r))
                    };
                    t("fromBase64", (function() {
                        return j(this)
                    })), t("toBase64", (function(t) {
                        return g(this, t)
                    })), t("toBase64URI", (function() {
                        return g(this, !0)
                    })), t("toBase64URL", (function() {
                        return g(this, !0)
                    })), t("toUint8Array", (function() {
                        return F(this)
                    }))
                },
                R = function() {
                    var t = function(t, r) {
                        return Object.defineProperty(Uint8Array.prototype, t, D(r))
                    };
                    t("toBase64", (function(t) {
                        return h(this, t)
                    })), t("toBase64URI", (function() {
                        return h(this, !0)
                    })), t("toBase64URL", (function() {
                        return h(this, !0)
                    }))
                },
                z = {
                    version: "3.7.7",
                    VERSION: "3.7.7",
                    atob: U,
                    atobPolyfill: _,
                    btoa: p,
                    btoaPolyfill: d,
                    fromBase64: j,
                    toBase64: g,
                    encode: g,
                    encodeURI: B,
                    encodeURL: B,
                    utob: A,
                    btou: C,
                    decode: j,
                    isValid: function(t) {
                        if ("string" != typeof t) return !1;
                        var r = t.replace(/\s+/g, "").replace(/={0,2}$/, "");
                        return !/[^\s0-9a-zA-Z\+/]/.test(r) || !/[^\s0-9a-zA-Z\-_]/.test(r)
                    },
                    fromUint8Array: h,
                    toUint8Array: F,
                    extendString: O,
                    extendUint8Array: R,
                    extendBuiltins: function() {
                        O(), R()
                    },
                    Base64: {}
                };
            return Object.keys(z).forEach((function(t) {
                return z.Base64[t] = z[t]
            })), z
        }))
    }), (function(t) {
        return r({}[t], t)
    })), r(1735023415055));
});
define("miniprogram_npm/trtc-wx-sdk/index.js", function(require, module, exports, window, document, frames, self, location, navigator, localStorage, history, Caches, screen, alert, confirm, prompt, XMLHttpRequest, WebSocket, Reporter, webkit, WeixinJSCore) {
    "use strict";
    var e, t, r = require("../../@babel/runtime/helpers/typeof");
    module.exports = (e = {}, t = function(t, n) {
        if (!e[t]) return require(n);
        if (!e[t].status) {
            var s = e[t].m;
            s._exports = s._tempexports;
            var o = Object.getOwnPropertyDescriptor(s, "exports");
            o && o.configurable && Object.defineProperty(s, "exports", {set: function(e) {
                    "object" === r(e) && e !== s._exports && (s._exports.__proto__ = e.__proto__, Object.keys(e).forEach((function(t) {
                        s._exports[t] = e[t]
                    }))), s._tempexports = e
                },
                get: function() {
                    return s._tempexports
                }
            }), e[t].status = 1, e[t].func(e[t].req, s, s.exports)
        }
        return e[t].m.exports
    }, function(t, r, n) {
        e[t] = {
            status: 0,
            func: r,
            req: n,
            m: {
                exports: {},
                _tempexports: {}
            }
        }
    }(1735023415091, (function(e, t, n) {
        ! function(e, s) {
            "object" == r(n) && void 0 !== t ? t.exports = s() : "function" == typeof define && define.amd ? define(s) : (e = e || self).TRTC = s()
        }(this, (function() {
            function e(e) {
                return e && e.__esModule && Object.prototype.hasOwnProperty.call(e, "default") ? e.default : e
            }

            function t(e, t) {
                return e(t = {
                    exports: {}
                }, t.exports), t.exports
            }
            var n = t((function(e) {
                    function t(e, t, r, n, s, o, i) {
                        try {
                            var a = e[o](i),
                                u = a.value
                        } catch (e) {
                            return void r(e)
                        }
                        a.done ? t(u) : Promise.resolve(u).then(n, s)
                    }
                    e.exports = function(e) {
                        return function() {
                            var r = this,
                                n = arguments;
                            return new Promise((function(s, o) {
                                var i = e.apply(r, n);

                                function a(e) {
                                    t(i, s, o, a, u, "next", e)
                                }

                                function u(e) {
                                    t(i, s, o, a, u, "throw", e)
                                }
                                a(void 0)
                            }))
                        }
                    }, e.exports.__esModule = !0, e.exports.default = e.exports
                })),
                s = e(n),
                o = e(t((function(e) {
                    e.exports = function(e, t, r) {
                        return t in e ? Object.defineProperty(e, t, {
                            value: r,
                            enumerable: !0,
                            configurable: !0,
                            writable: !0
                        }) : e[t] = r, e
                    }, e.exports.__esModule = !0, e.exports.default = e.exports
                }))),
                i = e(t((function(e) {
                    e.exports = function(e, t) {
                        if (!(e instanceof t)) throw new TypeError("Cannot call a class as a function")
                    }, e.exports.__esModule = !0, e.exports.default = e.exports
                }))),
                a = e(t((function(e) {
                    function t(e, t) {
                        for (var r = 0; r < t.length; r++) {
                            var n = t[r];
                            n.enumerable = n.enumerable || !1, n.configurable = !0, "value" in n && (n.writable = !0), Object.defineProperty(e, n.key, n)
                        }
                    }
                    e.exports = function(e, r, n) {
                        return r && t(e.prototype, r), n && t(e, n), Object.defineProperty(e, "prototype", {
                            writable: !1
                        }), e
                    }, e.exports.__esModule = !0, e.exports.default = e.exports
                }))),
                u = t((function(e) {
                    function t(n) {
                        return e.exports = t = "function" == typeof Symbol && "symbol" == r(Symbol.iterator) ? function(e) {
                            return r(e)
                        } : function(e) {
                            return e && "function" == typeof Symbol && e.constructor === Symbol && e !== Symbol.prototype ? "symbol" : r(e)
                        }, e.exports.__esModule = !0, e.exports.default = e.exports, t(n)
                    }
                    e.exports = t, e.exports.__esModule = !0, e.exports.default = e.exports
                }));
            e(u);
            var c = t((function(e) {
                var t = u.default;

                function r() {
                    /*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/facebook/regenerator/blob/main/LICENSE */
                    e.exports = r = function() {
                        return n
                    }, e.exports.__esModule = !0, e.exports.default = e.exports;
                    var n = {},
                        s = Object.prototype,
                        o = s.hasOwnProperty,
                        i = "function" == typeof Symbol ? Symbol : {},
                        a = i.iterator || "@@iterator",
                        u = i.asyncIterator || "@@asyncIterator",
                        c = i.toStringTag || "@@toStringTag";

                    function l(e, t, r) {
                        return Object.defineProperty(e, t, {
                            value: r,
                            enumerable: !0,
                            configurable: !0,
                            writable: !0
                        }), e[t]
                    }
                    try {
                        l({}, "")
                    } catch (e) {
                        l = function(e, t, r) {
                            return e[t] = r
                        }
                    }

                    function h(e, t, r, n) {
                        var s = t && t.prototype instanceof m ? t : m,
                            o = Object.create(s.prototype),
                            i = new x(n || []);
                        return o._invoke = function(e, t, r) {
                            var n = "suspendedStart";
                            return function(s, o) {
                                if ("executing" === n) throw new Error("Generator is already running");
                                if ("completed" === n) {
                                    if ("throw" === s) throw o;
                                    return {
                                        value: void 0,
                                        done: !0
                                    }
                                }
                                for (r.method = s, r.arg = o;;) {
                                    var i = r.delegate;
                                    if (i) {
                                        var a = b(i, r);
                                        if (a) {
                                            if (a === f) continue;
                                            return a
                                        }
                                    }
                                    if ("next" === r.method) r.sent = r._sent = r.arg;
                                    else if ("throw" === r.method) {
                                        if ("suspendedStart" === n) throw n = "completed", r.arg;
                                        r.dispatchException(r.arg)
                                    } else "return" === r.method && r.abrupt("return", r.arg);
                                    n = "executing";
                                    var u = p(e, t, r);
                                    if ("normal" === u.type) {
                                        if (n = r.done ? "completed" : "suspendedYield", u.arg === f) continue;
                                        return {
                                            value: u.arg,
                                            done: r.done
                                        }
                                    }
                                    "throw" === u.type && (n = "completed", r.method = "throw", r.arg = u.arg)
                                }
                            }
                        }(e, r, i), o
                    }

                    function p(e, t, r) {
                        try {
                            return {
                                type: "normal",
                                arg: e.call(t, r)
                            }
                        } catch (e) {
                            return {
                                type: "throw",
                                arg: e
                            }
                        }
                    }
                    n.wrap = h;
                    var f = {};

                    function m() {}

                    function d() {}

                    function v() {}
                    var y = {};
                    l(y, a, (function() {
                        return this
                    }));
                    var g = Object.getPrototypeOf,
                        E = g && g(g(D([])));
                    E && E !== s && o.call(E, a) && (y = E);
                    var _ = v.prototype = m.prototype = Object.create(y);

                    function A(e) {
                        ["next", "throw", "return"].forEach((function(t) {
                            l(e, t, (function(e) {
                                return this._invoke(t, e)
                            }))
                        }))
                    }

                    function L(e, r) {
                        function n(s, i, a, u) {
                            var c = p(e[s], e, i);
                            if ("throw" !== c.type) {
                                var l = c.arg,
                                    h = l.value;
                                return h && "object" == t(h) && o.call(h, "__await") ? r.resolve(h.__await).then((function(e) {
                                    n("next", e, a, u)
                                }), (function(e) {
                                    n("throw", e, a, u)
                                })) : r.resolve(h).then((function(e) {
                                    l.value = e, a(l)
                                }), (function(e) {
                                    return n("throw", e, a, u)
                                }))
                            }
                            u(c.arg)
                        }
                        var s;
                        this._invoke = function(e, t) {
                            function o() {
                                return new r((function(r, s) {
                                    n(e, t, r, s)
                                }))
                            }
                            return s = s ? s.then(o, o) : o()
                        }
                    }

                    function b(e, t) {
                        var r = e.iterator[t.method];
                        if (void 0 === r) {
                            if (t.delegate = null, "throw" === t.method) {
                                if (e.iterator.return && (t.method = "return", t.arg = void 0, b(e, t), "throw" === t.method)) return f;
                                t.method = "throw", t.arg = new TypeError("The iterator does not provide a 'throw' method")
                            }
                            return f
                        }
                        var n = p(r, e.iterator, t.arg);
                        if ("throw" === n.type) return t.method = "throw", t.arg = n.arg, t.delegate = null, f;
                        var s = n.arg;
                        return s ? s.done ? (t[e.resultName] = s.value, t.next = e.nextLoc, "return" !== t.method && (t.method = "next", t.arg = void 0), t.delegate = null, f) : s : (t.method = "throw", t.arg = new TypeError("iterator result is not an object"), t.delegate = null, f)
                    }

                    function I(e) {
                        var t = {
                            tryLoc: e[0]
                        };
                        1 in e && (t.catchLoc = e[1]), 2 in e && (t.finallyLoc = e[2], t.afterLoc = e[3]), this.tryEntries.push(t)
                    }

                    function O(e) {
                        var t = e.completion || {};
                        t.type = "normal", delete t.arg, e.completion = t
                    }

                    function x(e) {
                        this.tryEntries = [{
                            tryLoc: "root"
                        }], e.forEach(I, this), this.reset(!0)
                    }

                    function D(e) {
                        if (e) {
                            var t = e[a];
                            if (t) return t.call(e);
                            if ("function" == typeof e.next) return e;
                            if (!isNaN(e.length)) {
                                var r = -1,
                                    n = function t() {
                                        for (; ++r < e.length;)
                                            if (o.call(e, r)) return t.value = e[r], t.done = !1, t;
                                        return t.value = void 0, t.done = !0, t
                                    };
                                return n.next = n
                            }
                        }
                        return {
                            next: T
                        }
                    }

                    function T() {
                        return {
                            value: void 0,
                            done: !0
                        }
                    }
                    return d.prototype = v, l(_, "constructor", v), l(v, "constructor", d), d.displayName = l(v, c, "GeneratorFunction"), n.isGeneratorFunction = function(e) {
                        var t = "function" == typeof e && e.constructor;
                        return !!t && (t === d || "GeneratorFunction" === (t.displayName || t.name))
                    }, n.mark = function(e) {
                        return Object.setPrototypeOf ? Object.setPrototypeOf(e, v) : (e.__proto__ = v, l(e, c, "GeneratorFunction")), e.prototype = Object.create(_), e
                    }, n.awrap = function(e) {
                        return {
                            __await: e
                        }
                    }, A(L.prototype), l(L.prototype, u, (function() {
                        return this
                    })), n.AsyncIterator = L, n.async = function(e, t, r, s, o) {
                        void 0 === o && (o = Promise);
                        var i = new L(h(e, t, r, s), o);
                        return n.isGeneratorFunction(t) ? i : i.next().then((function(e) {
                            return e.done ? e.value : i.next()
                        }))
                    }, A(_), l(_, c, "Generator"), l(_, a, (function() {
                        return this
                    })), l(_, "toString", (function() {
                        return "[object Generator]"
                    })), n.keys = function(e) {
                        var t = [];
                        for (var r in e) t.push(r);
                        return t.reverse(),
                            function r() {
                                for (; t.length;) {
                                    var n = t.pop();
                                    if (n in e) return r.value = n, r.done = !1, r
                                }
                                return r.done = !0, r
                            }
                    }, n.values = D, x.prototype = {
                        constructor: x,
                        reset: function(e) {
                            if (this.prev = 0, this.next = 0, this.sent = this._sent = void 0, this.done = !1, this.delegate = null, this.method = "next", this.arg = void 0, this.tryEntries.forEach(O), !e)
                                for (var t in this) "t" === t.charAt(0) && o.call(this, t) && !isNaN(+t.slice(1)) && (this[t] = void 0)
                        },
                        stop: function() {
                            this.done = !0;
                            var e = this.tryEntries[0].completion;
                            if ("throw" === e.type) throw e.arg;
                            return this.rval
                        },
                        dispatchException: function(e) {
                            if (this.done) throw e;
                            var t = this;

                            function r(r, n) {
                                return i.type = "throw", i.arg = e, t.next = r, n && (t.method = "next", t.arg = void 0), !!n
                            }
                            for (var n = this.tryEntries.length - 1; n >= 0; --n) {
                                var s = this.tryEntries[n],
                                    i = s.completion;
                                if ("root" === s.tryLoc) return r("end");
                                if (s.tryLoc <= this.prev) {
                                    var a = o.call(s, "catchLoc"),
                                        u = o.call(s, "finallyLoc");
                                    if (a && u) {
                                        if (this.prev < s.catchLoc) return r(s.catchLoc, !0);
                                        if (this.prev < s.finallyLoc) return r(s.finallyLoc)
                                    } else if (a) {
                                        if (this.prev < s.catchLoc) return r(s.catchLoc, !0)
                                    } else {
                                        if (!u) throw new Error("try statement without catch or finally");
                                        if (this.prev < s.finallyLoc) return r(s.finallyLoc)
                                    }
                                }
                            }
                        },
                        abrupt: function(e, t) {
                            for (var r = this.tryEntries.length - 1; r >= 0; --r) {
                                var n = this.tryEntries[r];
                                if (n.tryLoc <= this.prev && o.call(n, "finallyLoc") && this.prev < n.finallyLoc) {
                                    var s = n;
                                    break
                                }
                            }
                            s && ("break" === e || "continue" === e) && s.tryLoc <= t && t <= s.finallyLoc && (s = null);
                            var i = s ? s.completion : {};
                            return i.type = e, i.arg = t, s ? (this.method = "next", this.next = s.finallyLoc, f) : this.complete(i)
                        },
                        complete: function(e, t) {
                            if ("throw" === e.type) throw e.arg;
                            return "break" === e.type || "continue" === e.type ? this.next = e.arg : "return" === e.type ? (this.rval = this.arg = e.arg, this.method = "return", this.next = "end") : "normal" === e.type && t && (this.next = t), f
                        },
                        finish: function(e) {
                            for (var t = this.tryEntries.length - 1; t >= 0; --t) {
                                var r = this.tryEntries[t];
                                if (r.finallyLoc === e) return this.complete(r.completion, r.afterLoc), O(r), f
                            }
                        },
                        catch: function(e) {
                            for (var t = this.tryEntries.length - 1; t >= 0; --t) {
                                var r = this.tryEntries[t];
                                if (r.tryLoc === e) {
                                    var n = r.completion;
                                    if ("throw" === n.type) {
                                        var s = n.arg;
                                        O(r)
                                    }
                                    return s
                                }
                            }
                            throw new Error("illegal catch attempt")
                        },
                        delegateYield: function(e, t, r) {
                            return this.delegate = {
                                iterator: D(e),
                                resultName: t,
                                nextLoc: r
                            }, "next" === this.method && (this.arg = void 0), f
                        }
                    }, n
                }
                e.exports = r, e.exports.__esModule = !0, e.exports.default = e.exports
            }));
            e(c);
            var l = c(),
                h = l;
            try {
                regeneratorRuntime = l
            } catch (e) {
                "object" == ("undefined" == typeof globalThis ? "undefined" : r(globalThis)) ? globalThis.regeneratorRuntime = l: Function("r", "regeneratorRuntime = r")(l)
            }

            function p() {
                var e = (new Date).getTime(),
                    t = new Date(e),
                    r = t.getHours(),
                    n = t.getMinutes(),
                    s = t.getSeconds(),
                    o = t.getMilliseconds();
                return r = r < 10 ? "0".concat(r) : r, n = n < 10 ? "0".concat(n) : n, s = s < 10 ? "0".concat(s) : s, "".concat(r, ":").concat(n, ":").concat(s, ".").concat(o)
            }
            var f = "TRTC-WX",
                m = new(function() {
                    function e() {
                        i(this, e), this.logLevel = 0
                    }
                    return a(e, [{
                        key: "setLogLevel",
                        value: function(e) {
                            this.logLevel = e
                        }
                    }, {
                        key: "log",
                        value: function() {
                            var e;
                            0 === this.logLevel && (e = console).log.apply(e, [f, p()].concat(Array.prototype.slice.call(arguments)))
                        }
                    }, {
                        key: "warn",
                        value: function() {
                            var e;
                            this.logLevel <= 1 && (e = console).warn.apply(e, [f, p()].concat(Array.prototype.slice.call(arguments)))
                        }
                    }, {
                        key: "error",
                        value: function() {
                            var e;
                            (e = console).error.apply(e, [f, p()].concat(Array.prototype.slice.call(arguments)))
                        }
                    }]), e
                }()),
                d = {
                    LOCAL_JOIN: "LOCAL_JOIN",
                    LOCAL_LEAVE: "LOCAL_LEAVE",
                    KICKED_OUT: "KICKED_OUT",
                    REMOTE_USER_JOIN: "REMOTE_USER_JOIN",
                    REMOTE_USER_LEAVE: "REMOTE_USER_LEAVE",
                    REMOTE_VIDEO_ADD: "REMOTE_VIDEO_ADD",
                    REMOTE_VIDEO_REMOVE: "REMOTE_VIDEO_REMOVE",
                    REMOTE_AUDIO_ADD: "REMOTE_AUDIO_ADD",
                    REMOTE_AUDIO_REMOVE: "REMOTE_AUDIO_REMOVE",
                    REMOTE_STATE_UPDATE: "REMOTE_STATE_UPDATE",
                    LOCAL_NET_STATE_UPDATE: "LOCAL_NET_STATE_UPDATE",
                    REMOTE_NET_STATE_UPDATE: "REMOTE_NET_STATE_UPDATE",
                    LOCAL_AUDIO_VOLUME_UPDATE: "LOCAL_AUDIO_VOLUME_UPDATE",
                    REMOTE_AUDIO_VOLUME_UPDATE: "REMOTE_AUDIO_VOLUME_UPDATE",
                    VIDEO_FULLSCREEN_UPDATE: "VIDEO_FULLSCREEN_UPDATE",
                    BGM_PLAY_START: "BGM_PLAY_START",
                    BGM_PLAY_FAIL: "BGM_PLAY_FAIL",
                    BGM_PLAY_PROGRESS: "BGM_PLAY_PROGRESS",
                    BGM_PLAY_COMPLETE: "BGM_PLAY_COMPLETE",
                    ERROR: "ERROR",
                    IM_READY: "IM_READY",
                    IM_MESSAGE_RECEIVED: "IM_MESSAGE_RECEIVED",
                    IM_NOT_READY: "IM_NOT_READY",
                    IM_KICKED_OUT: "IM_KICKED_OUT",
                    IM_ERROR: "IM_ERROR",
                    LOCAL_HANGUP: "LOCAL_HANGUP",
                    LOCAL_INTERRUPTED: "LOCAL_INTERRUPTED",
                    LOCAL_RECONNECTING: "LOCAL_RECONNECTING"
                },
                v = {
                    url: "",
                    mode: "RTC",
                    autopush: !1,
                    enableCamera: !1,
                    enableMic: !1,
                    enableAgc: !1,
                    enableAns: !1,
                    enableEarMonitor: !1,
                    enableAutoFocus: !0,
                    enableZoom: !1,
                    minBitrate: 600,
                    maxBitrate: 900,
                    videoWidth: 360,
                    videoHeight: 640,
                    beautyLevel: 0,
                    whitenessLevel: 0,
                    videoOrientation: "vertical",
                    videoAspect: "9:16",
                    frontCamera: "front",
                    enableRemoteMirror: !1,
                    localMirror: "auto",
                    enableBackgroundMute: !1,
                    audioQuality: "high",
                    audioVolumeType: "voicecall",
                    audioReverbType: 0,
                    waitingImage: "https://mc.qcloudimg.com/static/img/daeed8616ac5df256c0591c22a65c4d3/pause_publish.jpg",
                    waitingImageHash: "",
                    beautyStyle: "smooth",
                    filter: "",
                    netStatus: {}
                },
                y = {
                    src: "",
                    mode: "RTC",
                    autoplay: !0,
                    muteAudio: !0,
                    muteVideo: !0,
                    orientation: "vertical",
                    objectFit: "fillCrop",
                    enableBackgroundMute: !1,
                    minCache: 1,
                    maxCache: 2,
                    soundMode: "speaker",
                    enableRecvMessage: !1,
                    autoPauseIfNavigate: !0,
                    autoPauseIfOpenNative: !0,
                    isVisible: !0,
                    _definitionType: "main",
                    netStatus: {}
                };

            function g() {
                var e = new Date;
                return e.setTime((new Date).getTime() + 0), e.toLocaleString()
            }

            function E(e) {
                var t = this,
                    r = [],
                    n = [];
                this.length = function() {
                    return r.length
                }, this.sent = function() {
                    return n.length
                }, this.push = function(t) {
                    r.push(t), r.length > e && r.shift()
                }, this.send = function() {
                    return n.length || (n = r, r = []), n
                }, this.confirm = function() {
                    n = [], t.content = ""
                }, this.fail = function() {
                    r = n.concat(r), t.confirm();
                    var s = 1 + r.length + n.length - e;
                    s > 0 && (n.splice(0, s), r = n.concat(r), t.confirm())
                }
            }(new Date).getTime();
            var _ = new(function() {
                    function e() {
                        i(this, e), this.sdkAppId = "", this.userId = "", this.version = "", this.queue = new E(20)
                    }
                    return a(e, [{
                        key: "setConfig",
                        value: function(e) {
                            this.sdkAppId = "".concat(e.sdkAppId), this.userId = "".concat(e.userId), this.version = "".concat(e.version)
                        }
                    }, {
                        key: "push",
                        value: function(e) {
                            this.queue.push(e)
                        }
                    }, {
                        key: "log",
                        value: function(e) {
                            wx.request({
                                url: "https://yun.tim.qq.com/v5/AVQualityReportSvc/C2S?sdkappid=1&cmdtype=jssdk_log",
                                method: "POST",
                                header: {
                                    "content-type": "application/json"
                                },
                                data: {
                                    timestamp: g(),
                                    sdkAppId: this.sdkAppId,
                                    userId: this.userId,
                                    version: this.version,
                                    log: e
                                }
                            })
                        }
                    }, {
                        key: "send",
                        value: function() {
                            var e = this;
                            if (!this.queue.sent()) {
                                if (!this.queue.length()) return;
                                var t = this.queue.send();
                                this.queue.content = "string" != typeof log ? '{"logs":['.concat(t.join(","), "]}") : t.join("\n"), wx.request({
                                    url: "https://yun.tim.qq.com/v5/AVQualityReportSvc/C2S?sdkappid=1&cmdtype=jssdk_log",
                                    method: "POST",
                                    header: {
                                        "content-type": "application/json"
                                    },
                                    data: {
                                        timestamp: g(),
                                        sdkAppId: this.sdkAppId,
                                        userId: this.userId,
                                        version: this.version,
                                        log: this.queue.content
                                    },
                                    success: function() {
                                        e.queue.confirm()
                                    },
                                    fail: function() {
                                        e.queue.fail()
                                    }
                                })
                            }
                        }
                    }]), e
                }()),
                A = function() {
                    function e(t, r) {
                        i(this, e), this.context = wx.createLivePusherContext(r), this.pusherAttributes = {}, Object.assign(this.pusherAttributes, v, t)
                    }
                    return a(e, [{
                        key: "setPusherAttributes",
                        value: function(e) {
                            return Object.assign(this.pusherAttributes, e), this.pusherAttributes
                        }
                    }, {
                        key: "start",
                        value: function(e) {
                            m.log("[apiLog][pusherStart]"), _.log("pusherStart"), this.context.start(e)
                        }
                    }, {
                        key: "stop",
                        value: function(e) {
                            m.log("[apiLog][pusherStop]"), _.log("pusherStop"), this.context.stop(e)
                        }
                    }, {
                        key: "pause",
                        value: function(e) {
                            m.log("[apiLog] pusherPause()"), _.log("pusherPause"), this.context.pause(e)
                        }
                    }, {
                        key: "resume",
                        value: function(e) {
                            m.log("[apiLog][pusherResume]"), _.log("pusherResume"), this.context.resume(e)
                        }
                    }, {
                        key: "switchCamera",
                        value: function(e) {
                            return m.log("[apiLog][switchCamera]"), this.pusherAttributes.frontCamera = "front" === this.pusherAttributes.frontCamera ? "back" : "front", this.context.switchCamera(e), this.pusherAttributes
                        }
                    }, {
                        key: "sendMessage",
                        value: function(e) {
                            m.log("[apiLog][sendMessage]", e.msg), this.context.sendMessage(e)
                        }
                    }, {
                        key: "snapshot",
                        value: function() {
                            var e = this;
                            return m.log("[apiLog][pusherSnapshot]"), new Promise((function(t, r) {
                                e.context.snapshot({
                                    quality: "raw",
                                    complete: function(e) {
                                        e.tempImagePath ? (wx.saveImageToPhotosAlbum({
                                            filePath: e.tempImagePath,
                                            success: function(r) {
                                                t(e)
                                            },
                                            fail: function(e) {
                                                m.error("[error] pusher截图失败: ", e), r(new Error("截图失败"))
                                            }
                                        }), t(e)) : (m.error("[error] snapShot 回调失败", e), r(new Error("截图失败")))
                                    }
                                })
                            }))
                        }
                    }, {
                        key: "toggleTorch",
                        value: function(e) {
                            this.context.toggleTorch(e)
                        }
                    }, {
                        key: "startDumpAudio",
                        value: function(e) {
                            this.context.startDumpAudio(e)
                        }
                    }, {
                        key: "stopDumpAudio",
                        value: function(e) {
                            this.context.startDumpAudio(e)
                        }
                    }, {
                        key: "playBGM",
                        value: function(e) {
                            m.log("[apiLog] playBGM() url: ", e.url), this.context.playBGM(e)
                        }
                    }, {
                        key: "pauseBGM",
                        value: function(e) {
                            m.log("[apiLog] pauseBGM()"), this.context.pauseBGM(e)
                        }
                    }, {
                        key: "resumeBGM",
                        value: function(e) {
                            m.log("[apiLog] resumeBGM()"), this.context.resumeBGM(e)
                        }
                    }, {
                        key: "stopBGM",
                        value: function(e) {
                            m.log("[apiLog] stopBGM()"), this.context.stopBGM(e)
                        }
                    }, {
                        key: "setBGMVolume",
                        value: function(e) {
                            m.log("[apiLog] setBGMVolume() volume:", e.volume), this.context.setBGMVolume(e.volume)
                        }
                    }, {
                        key: "setMICVolume",
                        value: function(e) {
                            m.log("[apiLog] setMICVolume() volume:", e.volume), this.context.setMICVolume(e.volume)
                        }
                    }, {
                        key: "startPreview",
                        value: function(e) {
                            m.log("[apiLog] startPreview()"), this.context.startPreview(e)
                        }
                    }, {
                        key: "stopPreview",
                        value: function(e) {
                            m.log("[apiLog] stopPreview()"), this.context.stopPreview(e)
                        }
                    }, {
                        key: "reset",
                        value: function() {
                            var e = this;
                            return console.log("Pusher reset", this.context), this.pusherAttributes = {}, new Promise((function(t) {
                                if (e.context) try {
                                    e.context.stop({
                                        success: function() {
                                            m.log("stop live-pusher succeed")
                                        },
                                        fail: function(e) {
                                            m.error("stop live-pusher failed because: ".concat((null == e ? void 0 : e.errMsg) || "unknown reason"))
                                        },
                                        complete: function() {
                                            e.context = null, t(e.pusherAttributes)
                                        }
                                    })
                                } catch (r) {
                                    m.error("stop live-pusher failed because exception caught: ".concat((null == r ? void 0 : r.message) || "unknown reason")), e.context = null, t(e.pusherAttributes)
                                } else t(e.pusherAttributes)
                            }))
                        }
                    }]), e
                }(),
                L = a((function e(t) {
                    i(this, e), Object.assign(this, {
                        userID: "",
                        streams: {}
                    }, t)
                })),
                b = function() {
                    function e(t, r) {
                        i(this, e), this.ctx = r, this.playerAttributes = {}, Object.assign(this.playerAttributes, y, {
                            userID: "",
                            streamType: "",
                            streamID: "",
                            id: "",
                            hasVideo: !1,
                            hasAudio: !1,
                            volume: 0,
                            playerContext: void 0
                        }, t)
                    }
                    return a(e, [{
                        key: "play",
                        value: function(e) {
                            this.getPlayerContext().play(e)
                        }
                    }, {
                        key: "stop",
                        value: function(e) {
                            this.getPlayerContext().stop(e)
                        }
                    }, {
                        key: "mute",
                        value: function(e) {
                            this.getPlayerContext().mute(e)
                        }
                    }, {
                        key: "pause",
                        value: function(e) {
                            this.getPlayerContext().pause(e)
                        }
                    }, {
                        key: "resume",
                        value: function(e) {
                            this.getPlayerContext().resume(e)
                        }
                    }, {
                        key: "requestFullScreen",
                        value: function(e) {
                            var t = this;
                            return new Promise((function(r, n) {
                                t.getPlayerContext().requestFullScreen({
                                    direction: e.direction,
                                    success: function(e) {
                                        r(e)
                                    },
                                    fail: function(e) {
                                        n(e)
                                    }
                                })
                            }))
                        }
                    }, {
                        key: "requestExitFullScreen",
                        value: function() {
                            var e = this;
                            return new Promise((function(t, r) {
                                e.getPlayerContext().exitFullScreen({
                                    success: function(e) {
                                        t(e)
                                    },
                                    fail: function(e) {
                                        r(e)
                                    }
                                })
                            }))
                        }
                    }, {
                        key: "snapshot",
                        value: function(e) {
                            var t = this;
                            return m.log("[playerSnapshot]", e), new Promise((function(e, r) {
                                t.getPlayerContext().snapshot({
                                    quality: "raw",
                                    complete: function(t) {
                                        t.tempImagePath ? (wx.saveImageToPhotosAlbum({
                                            filePath: t.tempImagePath,
                                            success: function(r) {
                                                m.log("save photo is success", r), e(t)
                                            },
                                            fail: function(e) {
                                                m.error("save photo is fail", e), r(e)
                                            }
                                        }), e(t)) : (m.error("snapShot 回调失败", t), r(new Error("截图失败")))
                                    }
                                })
                            }))
                        }
                    }, {
                        key: "setPlayerAttributes",
                        value: function(e) {
                            Object.assign(this.playerAttributes, e)
                        }
                    }, {
                        key: "getPlayerContext",
                        value: function() {
                            return this.playerContext || (this.playerContext = wx.createLivePlayerContext(this.playerAttributes.id, this.ctx)), this.playerContext
                        }
                    }, {
                        key: "reset",
                        value: function() {
                            var e = this,
                                t = this.playerAttributes.streamID;
                            Object.assign(this.playerAttributes, y, {
                                userID: "",
                                streamType: "",
                                streamID: "",
                                hasVideo: !1,
                                hasAudio: !1,
                                volume: 0,
                                playerContext: void 0
                            });
                            var r = "live-player(streamID: ".concat(t, ")");
                            m.log("stopping ".concat(r, "..."));
                            var n = new Promise((function(e, t) {
                                    setTimeout((function() {
                                        m.warn("timeout, maybe we could not get that live-player context object"), t()
                                    }), 1e3)
                                })),
                                s = new Promise((function(n, s) {
                                    var o = e.getPlayerContext();
                                    if (o) try {
                                        o.stop({
                                            success: function() {
                                                m.log("stop ".concat(r, " succeed")), e.playerContext = void 0, n()
                                            },
                                            fail: function(t) {
                                                m.error("stop ".concat(r, " failed because: ").concat((null == t ? void 0 : t.errMsg) || "unknown reason")), e.playerContext = void 0, s(t)
                                            }
                                        })
                                    } catch (t) {
                                        m.error("stop ".concat(r, " failed because exception caught: ").concat((null == t ? void 0 : t.message) || "unknown reason")), e.playerContext = void 0, s(t)
                                    } else s("cannot get <live-player>'s context for streamID: ".concat(t))
                                }));
                            return Promise.race([n, s])
                        }
                    }]), e
                }();

            function I(e) {
                return new Promise((function(t) {
                    for (var r = [], n = 0, s = e.length; n < s; n++) {
                        var o = e[n].then((function(e) {
                            return {
                                status: "fulfilled",
                                value: e
                            }
                        })).catch((function(e) {
                            return {
                                status: "rejected",
                                reason: e
                            }
                        }));
                        r.push(o)
                    }
                    Promise.all(r).then((function(e) {
                        t(e)
                    }))
                }))
            }
            var O = "UserController",
                x = function() {
                    function e(t, r) {
                        i(this, e), this.ctx = r, this.userMap = new Map, this.userList = [], this.streamList = [], this.emitter = t
                    }
                    var t;
                    return a(e, [{
                        key: "userEventHandler",
                        value: function(e) {
                            var t = e.detail.code,
                                r = e.detail.message;
                            switch (t) {
                                case 0:
                                    m.log(r, t);
                                    break;
                                case 1001:
                                    m.log("已经连接推流服务器", t);
                                    break;
                                case 1002:
                                    m.log("已经与服务器握手完毕,开始推流", t);
                                    break;
                                case 1003:
                                    m.log("打开摄像头成功", t);
                                    break;
                                case 1004:
                                    m.log("录屏启动成功", t);
                                    break;
                                case 1005:
                                    m.log("推流动态调整分辨率", t);
                                    break;
                                case 1006:
                                    m.log("推流动态调整码率", t);
                                    break;
                                case 1007:
                                    m.log("首帧画面采集完成", t);
                                    break;
                                case 1008:
                                    m.log("编码器启动", t);
                                    break;
                                case 1018:
                                    m.log("进房成功", t), _.log("event enterRoom success ".concat(t)), this.emitter.emit(d.LOCAL_JOIN);
                                    break;
                                case 1019:
                                    m.log("退出房间", t), r.indexOf("reason[0]") > -1 ? _.log("event exitRoom ".concat(t)) : (_.log("event abnormal exitRoom ".concat(r)), this.emitter.emit(d.KICKED_OUT));
                                    break;
                                case 2003:
                                    m.log("渲染首帧视频", t);
                                    break;
                                case -1301:
                                    m.error("打开摄像头失败: ", t), _.log("event start camera failed: ".concat(t)), this.emitter.emit(d.ERROR, {
                                        code: t,
                                        message: r
                                    });
                                    break;
                                case -1302:
                                    m.error("打开麦克风失败: ", t), _.log("event start microphone failed: ".concat(t)), this.emitter.emit(d.ERROR, {
                                        code: t,
                                        message: r
                                    });
                                    break;
                                case -1303:
                                    m.error("视频编码失败: ", t), _.log("event video encode failed: ".concat(t)), this.emitter.emit(d.ERROR, {
                                        code: t,
                                        message: r
                                    });
                                    break;
                                case -1304:
                                    m.error("音频编码失败: ", t), _.log("event audio encode failed: ".concat(t)), this.emitter.emit(d.ERROR, {
                                        code: t,
                                        message: r
                                    });
                                    break;
                                case -1307:
                                    m.error("推流连接断开: ", t), this.emitter.emit(d.ERROR, {
                                        code: t,
                                        message: r
                                    });
                                    break;
                                case -100018:
                                    m.error("进房失败: userSig 校验失败，请检查 userSig 是否填写正确", t, r), this.emitter.emit(d.ERROR, {
                                        code: t,
                                        message: r
                                    });
                                    break;
                                case 5e3:
                                    m.log("小程序被挂起: ", t), _.log("小程序被挂起: 5000"), this.emitter.emit(d.LOCAL_HANGUP, {
                                        code: t,
                                        message: r
                                    });
                                    break;
                                case 5001:
                                    m.log("小程序悬浮窗被关闭: ", t), this.emitter.emit(d.LOCAL_INTERRUPTED, {
                                        code: t,
                                        message: r
                                    });
                                    break;
                                case 1102:
                                    m.log("小程序推流断开，正在重连", t), this.emitter.emit(d.LOCAL_RECONNECTING, {
                                        code: t,
                                        message: r
                                    });
                                    break;
                                case 1021:
                                    m.log("网络类型发生变化，需要重新进房", t);
                                    break;
                                case 2007:
                                    m.log("本地视频播放loading: ", t);
                                    break;
                                case 2004:
                                    m.log("本地视频播放开始: ", t);
                                    break;
                                case 1031:
                                case 1032:
                                case 1033:
                                case 1034:
                                    this._handleUserEvent(e)
                            }
                        }
                    }, {
                        key: "_handleUserEvent",
                        value: function(e) {
                            var t, r = e.detail.code,
                                n = e.detail.message;
                            if (!e.detail.message || "string" != typeof n) return m.warn(O, "userEventHandler 数据格式错误"), !1;
                            try {
                                t = JSON.parse(e.detail.message)
                            } catch (e) {
                                return m.warn(O, "userEventHandler 数据格式错误", e), !1
                            }
                            switch (this.emitter.emit(d.LOCAL_STATE_UPDATE, e), _.log("event code: ".concat(r, ", data: ").concat(JSON.stringify(t))), r) {
                                case 1031:
                                    this.addUser(t);
                                    break;
                                case 1032:
                                    this.removeUser(t);
                                    break;
                                case 1033:
                                    this.updateUserVideo(t);
                                    break;
                                case 1034:
                                    this.updateUserAudio(t)
                            }
                        }
                    }, {
                        key: "addUser",
                        value: function(e) {
                            var t = this;
                            m.log("addUser", e);
                            var r = e.userlist;
                            Array.isArray(r) && r.length > 0 && r.forEach((function(e) {
                                var r = e.userid,
                                    n = t.getUser(r);
                                n || (n = new L({
                                    userID: r
                                }), t.userList.push({
                                    userID: r
                                })), t.userMap.set(r, n), t.emitter.emit(d.REMOTE_USER_JOIN, {
                                    userID: r,
                                    userList: t.userList,
                                    playerList: t.getPlayerList()
                                })
                            }))
                        }
                    }, {
                        key: "removeUser",
                        value: function(e) {
                            var t = this,
                                r = e.userlist;
                            Array.isArray(r) && r.length > 0 && r.forEach((function(e) {
                                var r = e.userid,
                                    n = t.getUser(r);
                                if (n && n.streams) {
                                    t._removeUserAndStream(r);
                                    try {
                                        n.streams.main && n.streams.main.reset(), n.streams.aux && n.streams.aux.reset()
                                    } catch (e) {
                                        m.error("重置失败: ", e)
                                    }
                                    t.emitter.emit(d.REMOTE_USER_LEAVE, {
                                        userID: r,
                                        userList: t.userList,
                                        playerList: t.getPlayerList()
                                    }), n = void 0, t.userMap.delete(r)
                                }
                            }))
                        }
                    }, {
                        key: "updateUserVideo",
                        value: function(e) {
                            var t = this;
                            m.log(O, "updateUserVideo", e);
                            var r = e.userlist;
                            Array.isArray(r) && r.length > 0 && r.forEach((function(e) {
                                var r = e.userid,
                                    n = e.streamtype,
                                    s = "".concat(r, "_").concat(n),
                                    o = s,
                                    i = e.hasvideo,
                                    a = e.playurl,
                                    u = t.getUser(r);
                                if (u) {
                                    var c = u.streams[n];
                                    m.log(O, "updateUserVideo start", u, n, c), c ? (c.setPlayerAttributes({
                                        hasVideo: i
                                    }), i || c.playerAttributes.hasAudio || t._removeStream(c)) : (c = new b({
                                        userID: r,
                                        streamID: s,
                                        hasVideo: i,
                                        src: a,
                                        streamType: n,
                                        id: o
                                    }, t.ctx), u.streams[n] = c, t._addStream(c)), "aux" === n && (i ? (c.objectFit = "contain", t._addStream(c)) : t._removeStream(c)), t.userList.find((function(e) {
                                        if (e.userID === r) return e["has".concat(n.replace(/^\S/, (function(e) {
                                            return e.toUpperCase()
                                        })), "Video")] = i, !0
                                    })), m.log(O, "updateUserVideo end", u, n, c);
                                    var l = i ? d.REMOTE_VIDEO_ADD : d.REMOTE_VIDEO_REMOVE;
                                    t.emitter.emit(l, {
                                        player: c.playerAttributes,
                                        userList: t.userList,
                                        playerList: t.getPlayerList()
                                    })
                                }
                            }))
                        }
                    }, {
                        key: "updateUserAudio",
                        value: function(e) {
                            var t = this,
                                r = e.userlist;
                            Array.isArray(r) && r.length > 0 && r.forEach((function(e) {
                                var r = e.userid,
                                    n = "main",
                                    s = "".concat(r, "_").concat(n),
                                    o = s,
                                    i = e.hasaudio,
                                    a = e.playurl,
                                    u = t.getUser(r);
                                if (u) {
                                    var c = u.streams.main;
                                    c ? (c.setPlayerAttributes({
                                        hasAudio: i
                                    }), i || c.playerAttributes.hasVideo || t._removeStream(c)) : (c = new b({
                                        userID: r,
                                        streamID: s,
                                        hasAudio: i,
                                        src: a,
                                        streamType: n,
                                        id: o
                                    }, t.ctx), u.streams.main = c, t._addStream(c)), t.userList.find((function(e) {
                                        if (e.userID === r) return e["has".concat(n.replace(/^\S/, (function(e) {
                                            return e.toUpperCase()
                                        })), "Audio")] = i, !0
                                    }));
                                    var l = i ? d.REMOTE_AUDIO_ADD : d.REMOTE_AUDIO_REMOVE;
                                    t.emitter.emit(l, {
                                        player: c.playerAttributes,
                                        userList: t.userList,
                                        playerList: t.getPlayerList()
                                    })
                                }
                            }))
                        }
                    }, {
                        key: "getUser",
                        value: function(e) {
                            return this.userMap.get(e)
                        }
                    }, {
                        key: "getStream",
                        value: function(e) {
                            var t = e.userID,
                                r = e.streamType,
                                n = this.userMap.get(t);
                            if (n) return n.streams[r]
                        }
                    }, {
                        key: "getUserList",
                        value: function() {
                            return this.userList
                        }
                    }, {
                        key: "getStreamList",
                        value: function() {
                            return this.streamList
                        }
                    }, {
                        key: "getPlayerList",
                        value: function() {
                            for (var e = this.getStreamList(), t = [], r = 0; r < e.length; r++) t.push(e[r].playerAttributes);
                            return t
                        }
                    }, {
                        key: "reset",
                        value: (t = s(h.mark((function e() {
                            var t, r, n;
                            return h.wrap((function(e) {
                                for (;;) switch (e.prev = e.next) {
                                    case 0:
                                        return t = [], this.streamList.forEach((function(e) {
                                            t.push(e.reset())
                                        })), e.next = 4, I(t);
                                    case 4:
                                        return r = e.sent, 0 < (n = r.reduce((function(e, t) {
                                            return "rejected" === t.status ? ++e : e
                                        }), 0)) ? m.warn(O, "".concat(n, " of ").concat(r.length, " stream").concat(1 === n ? "" : "s", " reset failed.")) : m.log(O, "all stream".concat(1 === r.length ? "" : "s", "(").concat(r.length, ") reset successfully.")), this.streamList = [], this.userList = [], this.userMap.clear(), e.abrupt("return", {
                                            userList: this.userList,
                                            streamList: this.streamList
                                        });
                                    case 11:
                                    case "end":
                                        return e.stop()
                                }
                            }), e, this)
                        }))), function() {
                            return t.apply(this, arguments)
                        })
                    }, {
                        key: "_removeUserAndStream",
                        value: function(e) {
                            this.streamList = this.streamList.filter((function(t) {
                                return t.playerAttributes.userID !== e && "" !== t.playerAttributes.userID
                            })), this.userList = this.userList.filter((function(t) {
                                return t.userID !== e
                            }))
                        }
                    }, {
                        key: "_addStream",
                        value: function(e) {
                            this.streamList.includes(e) || this.streamList.push(e)
                        }
                    }, {
                        key: "_removeStream",
                        value: function(e) {
                            this.streamList = this.streamList.filter((function(t) {
                                return t.playerAttributes.userID !== e.playerAttributes.userID || t.playerAttributes.streamType !== e.playerAttributes.streamType
                            })), this.getUser(e.playerAttributes.userID).streams[e.playerAttributes.streamType] = void 0
                        }
                    }]), e
                }(),
                D = function() {
                    function e() {
                        i(this, e)
                    }
                    return a(e, [{
                        key: "on",
                        value: function(e, t, r) {
                            "function" == typeof t ? (this._stores = this._stores || {}, (this._stores[e] = this._stores[e] || []).push({
                                cb: t,
                                ctx: r
                            })) : console.error("listener must be a function")
                        }
                    }, {
                        key: "emit",
                        value: function(e) {
                            this._stores = this._stores || {};
                            var t, r = this._stores[e];
                            if (r) {
                                r = r.slice(0), (t = [].slice.call(arguments, 1))[0] = {
                                    eventCode: e,
                                    data: t[0]
                                };
                                for (var n = 0, s = r.length; n < s; n++) r[n].cb.apply(r[n].ctx, t)
                            }
                        }
                    }, {
                        key: "off",
                        value: function(e, t) {
                            if (this._stores = this._stores || {}, arguments.length) {
                                var r = this._stores[e];
                                if (r)
                                    if (1 !== arguments.length) {
                                        for (var n = 0, s = r.length; n < s; n++)
                                            if (r[n].cb === t) {
                                                r.splice(n, 1);
                                                break
                                            }
                                    } else delete this._stores[e]
                            } else this._stores = {}
                        }
                    }]), e
                }();

            function T(e, t) {
                var r = Object.keys(e);
                if (Object.getOwnPropertySymbols) {
                    var n = Object.getOwnPropertySymbols(e);
                    t && (n = n.filter((function(t) {
                        return Object.getOwnPropertyDescriptor(e, t).enumerable
                    }))), r.push.apply(r, n)
                }
                return r
            }

            function k(e) {
                for (var t = 1; t < arguments.length; t++) {
                    var r = null != arguments[t] ? arguments[t] : {};
                    t % 2 ? T(Object(r), !0).forEach((function(t) {
                        o(e, t, r[t])
                    })) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(r)) : T(Object(r)).forEach((function(t) {
                        Object.defineProperty(e, t, Object.getOwnPropertyDescriptor(r, t))
                    }))
                }
                return e
            }
            return function() {
                function e(t, r) {
                    var n = this;
                    i(this, e), this.ctx = t, this.eventEmitter = new D, this.pusherInstance = null, this.userController = new x(this.eventEmitter, this.ctx), this.EVENT = d, "test" === r && (r = {
                        env: "test"
                    });
                    var s = r || {},
                        o = s.env,
                        a = s.logLevel,
                        u = void 0 === a ? 2 : a;
                    m.setLogLevel(u), "test" !== o ? wx.getSystemInfo({
                        success: function(e) {
                            return n.systemInfo = e
                        }
                    }) : _.log = function() {}
                }
                var t;
                return a(e, [{
                    key: "on",
                    value: function(e, t, r) {
                        m.log("[on] 事件订阅: ".concat(e)), this.eventEmitter.on(e, t, r)
                    }
                }, {
                    key: "off",
                    value: function(e, t) {
                        m.log("[off] 取消订阅: ".concat(e)), this.eventEmitter.off(e, t)
                    }
                }, {
                    key: "createPusher",
                    value: function(e) {
                        return this.pusherInstance = new A(e, this.ctx), console.log("pusherInstance", this.pusherInstance), this.pusherInstance
                    }
                }, {
                    key: "getPusherInstance",
                    value: function() {
                        return this.pusherInstance
                    }
                }, {
                    key: "enterRoom",
                    value: function(e) {
                        m.log("[apiLog] [enterRoom]", e);
                        var t = function(e) {
                            return function(e) {
                                var t = /[\u4e00-\u9fa5]/;
                                return e.sdkAppID ? void 0 === e.roomID && void 0 === e.strRoomID ? (m.error("未设置 roomID"), !1) : !e.strRoomID && (e.roomID < 1 || e.roomID > 4294967296) ? (m.error("roomID 超出取值范围 1 ~ 4294967295"), !1) : e.strRoomID && t.test(e.strRoomID) ? (m.error("strRoomID 请勿使用中文字符"), !1) : e.userID ? e.userID && t.test(e.userID) ? (m.error("userID 请勿使用中文字符"), !1) : !!e.userSig || (m.error("未设置 userSig"), !1) : (m.error("未设置 userID"), !1) : (m.error("未设置 sdkAppID"), !1)
                            }(e) ? (e.scene = e.scene && "rtc" !== e.scene ? e.scene : "videocall", e.enableBlackStream = e.enableBlackStream || "", e.encsmall = e.encsmall || 0, e.cloudenv = e.cloudenv || "PRO", e.streamID = e.streamID || "", e.userDefineRecordID = e.userDefineRecordID || "", e.privateMapKey = e.privateMapKey || "", e.pureAudioMode = e.pureAudioMode || "", e.recvMode = e.recvMode || 1, t = e.strRoomID ? "&strroomid=".concat(e.strRoomID) : "&roomid=".concat(e.roomID), "room://cloud.tencent.com/rtc?sdkappid=".concat(e.sdkAppID).concat(t, "&userid=").concat(e.userID, "&usersig=").concat(e.userSig, "&appscene=").concat(e.scene, "&encsmall=").concat(e.encsmall, "&cloudenv=").concat(e.cloudenv, "&enableBlackStream=").concat(e.enableBlackStream, "&streamid=").concat(e.streamID, "&userdefinerecordid=").concat(e.userDefineRecordID, "&privatemapkey=").concat(e.privateMapKey, "&pureaudiomode=").concat(e.pureAudioMode, "&recvmode=").concat(e.recvMode)) : null;
                            var t
                        }(e);
                        return t || this.eventEmitter.emit(d.ERROR, {
                            message: "进房参数错误"
                        }), _.setConfig({
                            sdkAppId: e.sdkAppID,
                            userId: e.userID,
                            version: "wechat-mini"
                        }), this.pusherInstance.setPusherAttributes(k(k({}, e), {}, {
                            url: t
                        })), m.warn("[statusLog] [enterRoom]", this.pusherInstance.pusherAttributes), _.log("api-enterRoom"), _.log("pusherConfig: ".concat(JSON.stringify(this.pusherInstance.pusherAttributes))), this.getPusherAttributes()
                    }
                }, {
                    key: "exitRoom",
                    value: (t = s(h.mark((function e() {
                        var t, r;
                        return h.wrap((function(e) {
                            for (;;) switch (e.prev = e.next) {
                                case 0:
                                    return _.log("api-exitRoom"), e.next = 3, this.userController.reset();
                                case 3:
                                    return e.next = 5, this.pusherInstance.reset();
                                case 5:
                                    return t = e.sent, r = Object.assign({
                                        pusher: t
                                    }, {
                                        playerList: this.userController.getPlayerList()
                                    }), this.eventEmitter.emit(d.LOCAL_LEAVE), e.abrupt("return", r);
                                case 9:
                                case "end":
                                    return e.stop()
                            }
                        }), e, this)
                    }))), function() {
                        return t.apply(this, arguments)
                    })
                }, {
                    key: "getPlayerList",
                    value: function() {
                        var e = this.userController.getPlayerList();
                        return m.log("[apiLog][getStreamList]", e), e
                    }
                }, {
                    key: "setPusherAttributes",
                    value: function(e) {
                        return m.log("[apiLog] [setPusherAttributes], ", e), this.pusherInstance.setPusherAttributes(e), m.warn("[statusLog] [setPusherAttributes]", this.pusherInstance.pusherAttributes), _.log("api-setPusherAttributes ".concat(JSON.stringify(e))), this.pusherInstance.pusherAttributes
                    }
                }, {
                    key: "getPusherAttributes",
                    value: function() {
                        return m.log("[apiLog] [getPusherConfig]"), this.pusherInstance.pusherAttributes
                    }
                }, {
                    key: "setPlayerAttributes",
                    value: function(e, t) {
                        m.log("[apiLog] [setPlayerAttributes] id", e, "options: ", t);
                        var r = this._transformStreamID(e),
                            n = r.userID,
                            s = r.streamType,
                            o = this.userController.getStream({
                                userID: n,
                                streamType: s
                            });
                        return o ? (o.setPlayerAttributes(t), _.log("api-setPlayerAttributes id: ".concat(e, " options: ").concat(JSON.stringify(t))), this.getPlayerList()) : this.getPlayerList()
                    }
                }, {
                    key: "getPlayerInstance",
                    value: function(e) {
                        var t = this._transformStreamID(e),
                            r = t.userID,
                            n = t.streamType;
                        return m.log("[api][getPlayerInstance] id:", e), this.userController.getStream({
                            userID: r,
                            streamType: n
                        })
                    }
                }, {
                    key: "switchStreamType",
                    value: function(e) {
                        m.log("[apiLog] [switchStreamType] id: ", e);
                        var t = this._transformStreamID(e),
                            r = t.userID,
                            n = t.streamType,
                            s = this.userController.getStream({
                                userID: r,
                                streamType: n
                            });
                        return "main" === s._definitionType ? (s.src = s.src.replace("main", "small"), s._definitionType = "small") : (s.src = s.src.replace("small", "main"), s._definitionType = "main"), this.getPlayerList()
                    }
                }, {
                    key: "pusherEventHandler",
                    value: function(e) {
                        this.userController.userEventHandler(e)
                    }
                }, {
                    key: "pusherNetStatusHandler",
                    value: function(e) {
                        var t = e.detail.info;
                        this.pusherInstance.setPusherAttributes(t), this.eventEmitter.emit(d.LOCAL_NET_STATE_UPDATE, {
                            pusher: this.pusherInstance.pusherAttributes
                        })
                    }
                }, {
                    key: "pusherErrorHandler",
                    value: function(e) {
                        try {
                            var t = e.detail.errCode,
                                r = e.detail.errMsg;
                            this.eventEmitter.emit(d.ERROR, {
                                code: t,
                                message: r
                            })
                        } catch (t) {
                            m.error("pusher error data parser exception", e, t)
                        }
                    }
                }, {
                    key: "pusherBGMStartHandler",
                    value: function(e) {
                        this.eventEmitter.emit(d.BGM_PLAY_START)
                    }
                }, {
                    key: "pusherBGMProgressHandler",
                    value: function(e) {
                        var t, r, n, s;
                        this.eventEmitter.emit(d.BGM_PLAY_PROGRESS, {
                            progress: null === (t = e.data) || void 0 === t || null === (r = t.detail) || void 0 === r ? void 0 : r.progress,
                            duration: null === (n = e.data) || void 0 === n || null === (s = n.detail) || void 0 === s ? void 0 : s.duration
                        })
                    }
                }, {
                    key: "pusherBGMCompleteHandler",
                    value: function(e) {
                        this.eventEmitter.emit(d.BGM_PLAY_COMPLETE)
                    }
                }, {
                    key: "pusherAudioVolumeNotify",
                    value: function(e) {
                        this.pusherInstance.pusherAttributes.volume = e.detail.volume, this.eventEmitter.emit(d.LOCAL_AUDIO_VOLUME_UPDATE, {
                            pusher: this.pusherInstance.pusherAttributes
                        })
                    }
                }, {
                    key: "playerEventHandler",
                    value: function(e) {
                        m.log("[statusLog][playerStateChange]", e), this.eventEmitter.emit(d.REMOTE_STATE_UPDATE, e)
                    }
                }, {
                    key: "playerFullscreenChange",
                    value: function(e) {
                        this.eventEmitter.emit(d.VIDEO_FULLSCREEN_UPDATE)
                    }
                }, {
                    key: "playerNetStatus",
                    value: function(e) {
                        var t = this._transformStreamID(e.currentTarget.dataset.streamid),
                            r = t.userID,
                            n = t.streamType,
                            s = this.userController.getStream({
                                userID: r,
                                streamType: n
                            });
                        !s || s.videoWidth === e.detail.info.videoWidth && s.videoHeight === e.detail.info.videoHeight || (s.setPlayerAttributes({
                            netStatus: e.detail.info
                        }), this.eventEmitter.emit(d.REMOTE_NET_STATE_UPDATE, {
                            playerList: this.userController.getPlayerList()
                        }))
                    }
                }, {
                    key: "playerAudioVolumeNotify",
                    value: function(e) {
                        var t = this._transformStreamID(e.currentTarget.dataset.streamid),
                            r = t.userID,
                            n = t.streamType,
                            s = this.userController.getStream({
                                userID: r,
                                streamType: n
                            }),
                            o = e.detail.volume;
                        s.setPlayerAttributes({
                            volume: o
                        }), this.eventEmitter.emit(d.REMOTE_AUDIO_VOLUME_UPDATE, {
                            playerList: this.userController.getPlayerList()
                        })
                    }
                }, {
                    key: "_transformStreamID",
                    value: function(e) {
                        var t = e.lastIndexOf("_");
                        return {
                            userID: e.slice(0, t),
                            streamType: e.slice(t + 1)
                        }
                    }
                }]), e
            }()
        }))
    }), (function(e) {
        return t({}[e], e)
    })), t(1735023415091));
});
define("pages/index/constants.js", function(require, module, exports, window, document, frames, self, location, navigator, localStorage, history, Caches, screen, alert, confirm, prompt, XMLHttpRequest, WebSocket, Reporter, webkit, WeixinJSCore) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
        value: !0
    }), exports.TOKEN_TYPE = exports.RedDotPath = void 0;
    exports.RedDotPath = {
        privacy_policy: "home://app.avatar.about_us.privacy_policy",
        service_agreement: "home://app.avatar.about_us.service_agreement"
    }, exports.TOKEN_TYPE = {
        W10: "110"
    };
});
define("resources/i18n/en/translation.js", function(require, module, exports, window, document, frames, self, location, navigator, localStorage, history, Caches, screen, alert, confirm, prompt, XMLHttpRequest, WebSocket, Reporter, webkit, WeixinJSCore) {
    "use strict";
    module.exports = {
        languageCon: {
            "欢迎使用腾讯会议": "Welcome to Tencent Meeting",
            "腾讯会议": "Tencent Meeting",
            "分钟": "min",
            "加入会议": "Join Now",
            "小程序入会": "Join via WeChat Mini Program",
            "电话入会": "Join by Phone",
            "添加到我的会议": "Add to My Meeting List",
            "待开始": "Upcoming",
            "会议已结束": "Meeting has ended",
            "会议已取消": "Meeting canceled",
            "会议已删除": "Meeting deleted",
            "会议已失效": "Meeting has expired",
            "会议号无效": "Invalid meeting ID",
            "进行中": "In progress",
            "已添加到我的会议": "Added to My Meeting List",
            "已添加至我的会议": "Added to My Meeting List",
            "切换账号": "Switch Account",
            "取消": "Cancel",
            "确认": "OK",
            "查看我的会议列表": "View My Meeting List",
            "《软件许可及服务协议》": "Service Agreement",
            "《隐私政策》": "Privacy Policy",
            "和": " and ",
            "授权": "Authorize",
            "中国大陆": "Chinese Mainland",
            "中国香港": "Hong Kong, China",
            "美国": "United States",
            "重新加载": "Reload",
            "仅1.8.0及以上版本才可发送特邀会议邀请": "Private meeting invitations can only be sent when using V1.8.0 and above",
            "会议号码已复制到剪切板": "Copied to clipboard",
            "会议链接已复制到剪切板": "Copied to clipboard",
            "电话号码已复制到剪切板": "Copied to clipboard",
            "复制失败": "Unable to copy",
            "复制": "Copy",
            "绑定微信账号": "Bind WeChat",
            "为了保证您的信息安全，请先绑定微信账号": "Please bind your WeChat account for data security.",
            "为了保证会议安全，请先验证手机号码": "Please verify your phone number to keep your meetings secure.",
            "点击【前往验证】按钮，即表示您已阅读并同意": "Tap the Verify button to confirm that you have read and agree to the ",
            "前往验证": "Verify",
            "允许": "Allow",
            "发送会议邀请": "Send meeting invitation",
            "会议邀请无效": "Invalid meeting invitation",
            "请您使用绑定该微信的账号加入特邀会议": "Please join the meeting using the account bound to your WeChat account.",
            "仅您邀请的微信好友或群成员可入会，该邀请无法被他人转发": "Only WeChat friends or group members invited by you are allowed to join. The meeting invitation cannot be forwarded.",
            "该会议仅允许受邀的微信好友或群成员入会": "Only WeChat friends or group members invited by you are allowed to join",
            "特邀您参加会议": " invites you to join the meeting",
            "预定的特邀会议": " Scheduled private meeting",
            "您无权加入该特邀会议": "You are not invited to this private meeting.",
            "专属会议需要授权用户信息才可使用": "Private meetings are only available when the user information has been authorized.",
            "授权用户信息失败": "Unable to authorize user information",
            "授权用户信息": "Authorize user information",
            "请先进行微信授权": "You need to authorize first.",
            "复制链接": "Copy link",
            "请使用创建者账号绑定的微信进行邀请": "Please send invitations using the account bound to your WeChat account.",
            "无法展示会议邀请": "Unable to display meeting invitation",
            "获取会议详情失败": "Unable to obtain meeting details",
            "添加会议失败": "Unable to add meeting",
            "电话拨打入会失败": "Unable to dial in",
            "登录失败": "Unable to log in",
            "若点击“加入会议”无反应，请": "If there is no response after tapping the join button, please ",
            "复制会议链接": "copy meeting link ",
            "到浏览器打开！": "and open it in the browser.",
            "特邀会议仅会议创建者可发送有效的会议邀请": "Only the creator of the private meeting can send meeting invitations.",
            "获取会议详情失败, 请稍后重试": "Unable to obtain meeting details. Please try again later.",
            "复制链接在浏览器中打开，可直接加入会议；或在应用内输入会议号入会。": "Copy link and visit it via the browser to join the meeting. You can also enter the meeting ID in the app to join.",
            "请选择您所在地区的电话入会": "Select a phone number in your area to dial in",
            "打开腾讯会议应用失败": "Unable to open Tencent Meeting",
            "发送邀请失败，请重试": "Unable to send invitation. Please try again later.",
            "会议邀请": "Meeting Invitation",
            "特邀会议": "Private Meeting",
            "您需要授权允许后方可添加会议": "You need to authorize first to add meeting",
            "入会电话号码获取失败": "Unable to retrieve dial in number",
            "授权被拒绝": "Authorization rejected",
            "授权被取消": "Authorization canceled",
            "会议号已复制": "Meeting ID copied",
            "请打开腾讯会议App，输入会议号加入会议": "You can enter the meeting ID in the app to join"
        }
    };
});
define("resources/i18n/zh_CN/translation.js", function(require, module, exports, window, document, frames, self, location, navigator, localStorage, history, Caches, screen, alert, confirm, prompt, XMLHttpRequest, WebSocket, Reporter, webkit, WeixinJSCore) {
    "use strict";
    module.exports = {
        languageCon: {
            "欢迎使用腾讯会议": "欢迎使用腾讯会议",
            "腾讯会议": "腾讯会议",
            "分钟": "分钟",
            "加入会议": "加入会议",
            "小程序入会": "小程序入会",
            "电话入会": "电话入会",
            "添加到我的会议": "添加到我的会议",
            "待开始": "待开始",
            "会议已结束": "会议已结束",
            "会议已取消": "会议已取消",
            "会议已删除": "会议已删除",
            "会议已失效": "会议已失效",
            "会议号无效": "会议号无效",
            "进行中": "进行中",
            "已添加到我的会议": "已添加到我的会议",
            "已添加至我的会议": "已添加至我的会议",
            "切换账号": "切换账号",
            "取消": "取消",
            "确认": "确认",
            "查看我的会议列表": "查看我的会议列表",
            "《软件许可及服务协议》": "《软件许可及服务协议》",
            "《隐私政策》": "《隐私政策》",
            "和": " 和 ",
            "授权": "授权",
            "中国大陆": "中国大陆",
            "中国香港": "中国香港",
            "美国": "美国",
            "重新加载": "重新加载",
            "仅1.8.0及以上版本才可发送特邀会议邀请": "仅1.8.0及以上版本才可发送特邀会议邀请",
            "会议号码已复制到剪切板": "会议号码已复制到剪切板",
            "会议链接已复制到剪切板": "会议链接已复制到剪切板",
            "电话号码已复制到剪切板": "电话号码已复制到剪切板",
            "复制失败": "复制失败",
            "绑定微信账号": "绑定微信账号",
            "为了保证您的信息安全，请先绑定微信账号": "为了保证您的信息安全，请先绑定微信账号",
            "为了保证会议安全，请先验证手机号码": "为了保证会议安全，请先验证手机号码",
            "点击【前往验证】按钮，即表示您已阅读并同意": "点击【前往验证】按钮，即表示您已阅读并同意",
            "前往验证": "前往验证",
            "允许": "允许",
            "发送会议邀请": "发送会议邀请",
            "会议邀请无效": "会议邀请无效",
            "预定的特邀会议": "预定的特邀会议",
            "请您使用绑定该微信的账号加入特邀会议": "请您使用绑定该微信的账号加入特邀会议",
            "仅您邀请的微信好友或群成员可入会，该邀请无法被他人转发": "仅您邀请的微信好友或群成员可入会，该邀请无法被他人转发",
            "该会议仅允许受邀的微信好友或群成员入会": "该会议仅允许受邀的微信好友或群成员入会",
            "特邀您参加会议": "特邀您参加会议",
            "您无权加入该特邀会议": "您无权加入该特邀会议",
            "专属会议需要授权用户信息才可使用": "专属会议需要授权用户信息才可使用",
            "授权用户信息失败": "授权用户信息失败",
            "授权用户信息": "授权用户信息",
            "请先进行微信授权": "请先进行微信授权",
            "复制链接": "复制链接",
            "复制": "复制",
            "请使用创建者账号绑定的微信进行邀请": "请使用创建者账号绑定的微信进行邀请",
            "无法展示会议邀请": "无法展示会议邀请",
            "获取会议详情失败": "获取会议详情失败",
            "添加会议失败": "添加会议失败",
            "电话拨打入会失败": "电话拨打入会失败",
            "登录失败": "登录失败",
            "若点击“加入会议”无反应，请": "若点击“加入会议”无反应，请",
            "复制会议链接": "复制会议链接",
            "到浏览器打开！": "到浏览器打开！",
            "特邀会议仅会议创建者可发送有效的会议邀请": "特邀会议仅会议创建者可发送有效的会议邀请",
            "获取会议详情失败, 请稍后重试": "获取会议详情失败, 请稍后重试",
            "复制链接在浏览器中打开，可直接加入会议；或在应用内输入会议号入会。": "复制链接在浏览器中打开，可直接加入会议；或在应用内输入会议号入会。",
            "请选择您所在地区的电话入会": "请选择您所在地区的电话入会",
            "打开腾讯会议应用失败": "打开腾讯会议应用失败",
            "发送邀请失败，请重试": "发送邀请失败，请重试",
            "会议邀请": "会议邀请",
            "特邀会议": "特邀会议",
            "您需要授权允许后方可添加会议": "您需要授权允许后方可添加会议",
            "入会电话号码获取失败": "入会电话号码获取失败",
            "授权被拒绝": "授权被拒绝",
            "授权被取消": "授权被取消",
            "会议号已复制": "会议号已复制",
            "请打开腾讯会议App，输入会议号加入会议": "请打开腾讯会议App，输入会议号加入会议"
        }
    };
});
define("sdk/tim/adapter/im-web-adapter.js", function(require, module, exports, window, document, frames, self, location, navigator, localStorage, history, Caches, screen, alert, confirm, prompt, XMLHttpRequest, WebSocket, Reporter, webkit, WeixinJSCore) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
        value: !0
    }), exports.ImWebDataAdapter = void 0;
    var e = require("../../../@babel/runtime/helpers/objectSpread2"),
        t = require("../interface/im-biz-types"),
        i = (exports.ImWebDataAdapter = function(e, n) {
            var a = [];
            return Array.isArray(e) ? (e.forEach((function(e) {
                var o = e.ID,
                    l = e.clientTime,
                    u = e.isRevoked,
                    s = e.from === n,
                    c = {
                        GROUP: t.IMChatConversationType.Group,
                        C2C: t.IMChatConversationType.ToC
                    }[e.conversationType] || 0,
                    d = -1,
                    m = "",
                    p = {},
                    v = {},
                    g = e._elements,
                    f = {};
                g.forEach((function(e) {
                    f[e.type] || (f[e.type] = []), f[e.type].push(e)
                })), Object.keys(f).forEach((function(e) {
                    var t = f[e],
                        n = t[0];
                    if ("TIMTextElem" === n.type && (m = n.content.text), "TIMCustomElem" === n.type) {
                        var a = i(t);
                        d = a.chatType, p = a.customMessage
                    }
                    "TIMImageElem" === n.type && (v = r(n))
                })), a.push({
                    id: o,
                    chatType: d,
                    time: l,
                    defaultText: m,
                    conversationType: c,
                    fromSelf: s,
                    isRevoked: u,
                    customMessage: p,
                    imageMessage: v
                })
            })), a) : []
        }, function(i) {
            var r = i[0],
                n = -1,
                a = {};
            try {
                var o = i.find((function(e) {
                    return e.content.description.includes("chat_type")
                }));
                if (!o) return {
                    chatType: n,
                    customMessage: a
                };
                if (n = (a = JSON.parse(o.content.description || "{}")).chat_type, i.length > 0 && n === t.IMChatBizType.RedPacket) {
                    var l = i.find((function(e) {
                        return e.content.data.includes("sender_info")
                    }));
                    l && (a = e(e({}, a), JSON.parse(l.content.data || "{}")))
                }
                var u = r.content;
                if ("" !== u.extension) {
                    var s = JSON.parse(u.extension || "{}");
                    a.extension = s
                }
            } catch (e) {
                console.error("解析自定义消息失败，Error:", r, e)
            }
            return {
                chatType: n,
                customMessage: a
            }
        }),
        r = function(e) {
            var t = {},
                i = e.content;
            t.imageFormat = i.imageFormat, t.uuid = i.uuid;
            var r = i.imageInfoArray.find((function(e) {
                    return 1 === e.sizeType
                })),
                n = i.imageInfoArray.find((function(e) {
                    return 2 === e.sizeType
                })),
                a = i.imageInfoArray.find((function(e) {
                    return 3 === e.sizeType
                }));
            return t.largeImageUrl = (null == r ? void 0 : r.imageUrl) || (null == r ? void 0 : r.url) || "", t.largeImageWidth = (null == r ? void 0 : r.width) || 0, t.largeImageHeight = (null == r ? void 0 : r.height) || 0, t.largeImageSize = (null == r ? void 0 : r.size) || 0, t.smallImageUrl = (null == n ? void 0 : n.imageUrl) || (null == n ? void 0 : n.url) || "", t.smallImageWidth = (null == n ? void 0 : n.width) || 0, t.smallImageHeight = (null == n ? void 0 : n.height) || 0, t.smallImageSize = (null == n ? void 0 : n.size) || 0, t.previewImageUrl = (null == a ? void 0 : a.imageUrl) || (null == a ? void 0 : a.url) || "", t.previewImageWidth = (null == a ? void 0 : a.width) || 0, t.previewImageHeight = (null == a ? void 0 : a.height) || 0, t.previewImageSize = (null == a ? void 0 : a.size) || 0, t
        };
});
define("sdk/tim/im-event-bridge.js", function(require, module, exports, window, document, frames, self, location, navigator, localStorage, history, Caches, screen, alert, confirm, prompt, XMLHttpRequest, WebSocket, Reporter, webkit, WeixinJSCore) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
        value: !0
    }), exports.imEventBridge = void 0;
    var e, t = require("../../@babel/runtime/helpers/regeneratorRuntime"),
        r = require("../../@babel/runtime/helpers/asyncToGenerator"),
        a = (e = require("./tim-sdk")) && e.__esModule ? e : {
            default: e
        };
    exports.imEventBridge = function() {
        var e = r(t().mark((function e(r, s) {
            return t().wrap((function(e) {
                for (;;) switch (e.prev = e.next) {
                    case 0:
                        console.log("TaroIm: 子->父通信,", r, s), e.t0 = r, e.next = "isReady" === e.t0 ? 4 : "addEventListener" === e.t0 ? 6 : "sendMessage" === e.t0 ? 8 : "reSendMessage" === e.t0 ? 10 : "revokeMessage" === e.t0 ? 12 : "getChatNotice" === e.t0 ? 14 : "deleteMessage" === e.t0 ? 16 : "hasHistoryMessage" === e.t0 ? 18 : "getInitMessageList" === e.t0 ? 20 : "getPrevMessage" === e.t0 ? 22 : "getNextMessage" === e.t0 ? 24 : 26;
                        break;
                    case 4:
                        return e.abrupt("return", a.default.isReady());
                    case 6:
                        return a.default.addEventListener(s), e.abrupt("break", 28);
                    case 8:
                        return e.abrupt("return", a.default.sendMessage(s));
                    case 10:
                        return e.abrupt("return", a.default.resendMessage(s));
                    case 12:
                        return e.abrupt("return", a.default.revokeMessage(s));
                    case 14:
                        return e.abrupt("return", a.default.getChatNotice());
                    case 16:
                        return e.abrupt("return", a.default.deleteMessage(s));
                    case 18:
                        return e.abrupt("return", a.default.hasHistoryMessage());
                    case 20:
                        return e.abrupt("return", a.default.getInitMessageList(s));
                    case 22:
                        return e.abrupt("return", a.default.getPrevMessage(s.msgId, s.count));
                    case 24:
                        return e.abrupt("return", a.default.getNextMessage(s.msgId, s.count));
                    case 26:
                        return console.error("未知的type类型:", r), e.abrupt("break", 28);
                    case 28:
                    case "end":
                        return e.stop()
                }
            }), e)
        })));
        return function(t, r) {
            return e.apply(this, arguments)
        }
    }();
});
define("sdk/tim/im-web-ws.js", function(require, module, exports, window, document, frames, self, location, navigator, localStorage, history, Caches, screen, alert, confirm, prompt, XMLHttpRequest, WebSocket, Reporter, webkit, WeixinJSCore) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
        value: !0
    }), exports.default = void 0;
    var e, r, t = require("../../@babel/runtime/helpers/objectSpread2"),
        i = require("../../@babel/runtime/helpers/regeneratorRuntime"),
        n = require("../../@babel/runtime/helpers/asyncToGenerator"),
        a = require("../../@babel/runtime/helpers/classCallCheck"),
        o = require("../../@babel/runtime/helpers/createClass"),
        s = require("../../@babel/runtime/helpers/defineProperty"),
        u = (e = require("@tencentcloud/chat")) && e.__esModule ? e : {
            default: e
        },
        d = require("./interface/im-events"),
        l = require("./adapter/im-web-adapter"),
        c = require("./interface/im-biz-types"),
        g = require("./interface/error-code"),
        I = require("./storage/index");
    var v = (s(r = {}, c.IMChatBizType.Text, "收到一条消息"), s(r, c.IMChatBizType.Face, "收到一条表情消息"), s(r, c.IMChatBizType.RedPacket, "收到了一个红包"), s(r, c.IMChatBizType.RedPacketReceipt, ""), s(r, c.IMChatBizType.WebinarRedPacketReceipt, ""), s(r, c.IMChatBizType.Pic, "收到一条图片消息"), s(r, c.IMChatBizType.Notice, "通知消息"), s(r, c.IMChatBizType.OpenApp, "收到一条应用消息"), s(r, c.IMChatBizType.File, "发送了一个文件"), s(r, c.IMChatBizType.WebinarRedPacket, "收到了一个红包"), s(r, c.IMChatBizType.SystemTip, "收到了系统提示消息"), s(r, c.IMChatBizType.EmojiTextMixed, "收到了一条消息"), s(r, c.IMChatBizType.BusinessTip, "收到了一条消息"), s(r, c.IMChatBizType.Tip, "收到了一条消息"), r),
        h = function() {
            function e() {
                a(this, e), this.instanceId = 0
            }
            var r, s, c;
            return o(e, [{
                key: "init",
                value: (c = n(i().mark((function e(r) {
                    var t, n, a, o, s, d, l;
                    return i().wrap((function(e) {
                        for (;;) switch (e.prev = e.next) {
                            case 0:
                                if (a = r.group, o = r.userId, s = r.userSig, d = r.nickname, !this.instance) {
                                    e.next = 3;
                                    break
                                }
                                return e.abrupt("return", {
                                    code: 0,
                                    msg: "ok"
                                });
                            case 3:
                                return this.instanceId = 8, this.initUserInfo(), this.sdkInfo = {
                                    group: a,
                                    userId: o,
                                    userSig: s,
                                    sdkAppID: 1400187600,
                                    nickname: d
                                }, l = {
                                    SDKAppID: (null === (t = this.sdkInfo) || void 0 === t ? void 0 : t.sdkAppID) || 0
                                }, this.instance = u.default.create(l), null === (n = this.instance) || void 0 === n || n.setLogLevel(1), e.abrupt("return", this.login());
                            case 10:
                            case "end":
                                return e.stop()
                        }
                    }), e, this)
                }))), function(e) {
                    return c.apply(this, arguments)
                })
            }, {
                key: "isReady",
                value: function() {
                    var e;
                    return null === (e = this.instance) || void 0 === e ? void 0 : e.isReady()
                }
            }, {
                key: "addEventListener",
                value: function(e) {
                    this.instance ? (this.callback = e, this.instance.on(u.default.EVENT.MESSAGE_RECEIVED, this.onMessageReceived, this), this.instance.on(u.default.EVENT.SDK_READY, this.onSDKReady, this), this.instance.on(u.default.EVENT.KICKED_OUT, this.onKickedOut, this), this.instance.on(u.default.EVENT.NET_STATE_CHANGE, this.onNetChange, this), this.instance.on(u.default.EVENT.MESSAGE_REVOKED, this.onMessageRevoked, this)) : this.error("addEventListener error")
                }
            }, {
                key: "sendMessage",
                value: (s = n(i().mark((function e(r) {
                    var n = this;
                    return i().wrap((function(e) {
                        for (;;) switch (e.prev = e.next) {
                            case 0:
                                return e.abrupt("return", new Promise((function(e) {
                                    var i, a;
                                    if (n.instance) {
                                        var o = r.chatType,
                                            s = r.extension,
                                            u = r.message,
                                            d = r.toUserId,
                                            c = r.images,
                                            h = v[o] ? "".concat(v[o], "，请使用最新版客户端查看") : "",
                                            p = [{
                                                MsgType: "TIMTextElem",
                                                MsgContent: {
                                                    Text: u || h
                                                }
                                            }, {
                                                MsgType: "TIMCustomElem",
                                                MsgContent: {
                                                    Data: null === (i = n.sdkInfo) || void 0 === i ? void 0 : i.nickname,
                                                    Desc: JSON.stringify(n.getClientCustomObject(r)),
                                                    Ext: s ? JSON.stringify(s) : ""
                                                }
                                            }];
                                        c && (p = [p[0], n.getTIMImageMsgBody(c), p[1]]);
                                        var m, f = {
                                            From_Account: null === (a = n.sdkInfo) || void 0 === a ? void 0 : a.userId,
                                            MsgBody: p
                                        };
                                        f = t(t({}, f), {}, d ? {
                                            To_Account: d,
                                            MsgRandom: Math.floor(9e4 * Math.random() + 1e4)
                                        } : {
                                            GroupId: null === (m = n.sdkInfo) || void 0 === m ? void 0 : m.group,
                                            Random: Math.floor(9e4 * Math.random() + 1e4),
                                            MsgTimeStamp: Math.floor((new Date).getTime() / 1e3)
                                        }), n.log("[im-web-ws] sendMessage", f), n.instance.callExperimentalAPI("sendComboMessage", f).then((function(r) {
                                            var i, a;
                                            n.log("sendMessage Success:", r), (0, I.setSendedMessage)(null === (i = n.sdkInfo) || void 0 === i ? void 0 : i.group, r.data.message);
                                            var o = r.data.message;
                                            c && o._elements.push(n.transImageReqToResp(c)), console.log("sendedMessage:", o), e(t(t({}, r), {}, {
                                                imMsg: (0, l.ImWebDataAdapter)([o], (null === (a = n.sdkInfo) || void 0 === a ? void 0 : a.userId) || "")
                                            }))
                                        })).catch((function(r) {
                                            n.log("sendMessage Error:", r), e(n.formatSdkError(r))
                                        }))
                                    } else e({
                                        code: g.IMErrorCode.NOT_READY,
                                        msg: g.IMErrorCodeDescription.NOT_READY
                                    })
                                })));
                            case 1:
                            case "end":
                                return e.stop()
                        }
                    }), e)
                }))), function(e) {
                    return s.apply(this, arguments)
                })
            }, {
                key: "revokeMessage",
                value: (r = n(i().mark((function e(r) {
                    var n = this;
                    return i().wrap((function(e) {
                        for (;;) switch (e.prev = e.next) {
                            case 0:
                                return e.abrupt("return", new Promise((function(e) {
                                    var i, a = r.id;
                                    n.instance ? r.isRevoked ? e({
                                        code: g.IMErrorCode.HAD_REVOKED,
                                        msg: g.IMErrorCodeDescription.HAD_REVOKED
                                    }) : r.time && Date.now() - 1e3 * r.time > 12e4 ? e({
                                        code: g.IMErrorCode.OVERDUE_REVOKE,
                                        msg: g.IMErrorCodeDescription.OVERDUE_REVOKE
                                    }) : (0, I.getSendedMessage)(null === (i = n.sdkInfo) || void 0 === i ? void 0 : i.group, a).then((function(r) {
                                        var i;
                                        if (!r) return n.log("消息不存在"), void e({
                                            code: -1,
                                            msg: "消息不支持撤回"
                                        });
                                        n.log("[im-web-ws] revokeMessage", r), null === (i = n.instance) || void 0 === i || i.revokeMessage(r).then((function(r) {
                                            var i;
                                            n.log("revokeMessage Success:", r), e(t(t({}, r), {}, {
                                                imMsg: (0, l.ImWebDataAdapter)([r.data.message], (null === (i = n.sdkInfo) || void 0 === i ? void 0 : i.userId) || "")[0]
                                            }))
                                        })).catch((function(r) {
                                            n.log("sendMessage error:", r), e(n.formatSdkError(r))
                                        }))
                                    })) : e({
                                        code: g.IMErrorCode.NOT_READY,
                                        msg: g.IMErrorCodeDescription.NOT_READY
                                    })
                                })));
                            case 1:
                            case "end":
                                return e.stop()
                        }
                    }), e)
                }))), function(e) {
                    return r.apply(this, arguments)
                })
            }, {
                key: "login",
                value: function() {
                    var e = this;
                    return new Promise((function(r) {
                        return e.instance && e.sdkInfo && e.instance.login({
                            userID: e.sdkInfo.userId,
                            userSig: e.sdkInfo.userSig
                        }).then((function(t) {
                            e.log("Login Success=", t), r(t)
                        })).catch((function(t) {
                            e.error("Login Error=", t), 70001 === t.code ? r({
                                code: g.IMErrorCode.LOGIN_ERROR,
                                msg: g.IMErrorCodeDescription.LOGIN_ERROR
                            }) : r({
                                code: g.IMErrorCode.ERROR,
                                msg: (null == t ? void 0 : t.message) || g.IMErrorCodeDescription.ERROR
                            })
                        })), null
                    }))
                }
            }, {
                key: "logout",
                value: function() {
                    this.instance && this.instance.logout()
                }
            }, {
                key: "destroy",
                value: function() {
                    this.instance && this.instance.destroy()
                }
            }, {
                key: "formatSdkError",
                value: function(e) {
                    return 10007 === e.code ? {
                        code: g.IMErrorCode.NOT_IN_GROUP,
                        msg: g.IMErrorCodeDescription.NOT_IN_GROUP
                    } : 10010 === e.code ? {
                        code: g.IMErrorCode.GROUP_NOT_EXIST,
                        msg: g.IMErrorCodeDescription.GROUP_NOT_EXIST
                    } : {
                        code: g.IMErrorCode.ERROR,
                        msg: (null == e ? void 0 : e.message) || g.IMErrorCodeDescription.ERROR
                    }
                }
            }, {
                key: "initUserInfo",
                value: function() {
                    this.userInfo = {
                        avatarUrl: "",
                        avatarToken: "",
                        uid: "",
                        appid: "",
                        uniqueId: ""
                    }
                }
            }, {
                key: "onSDKReady",
                value: function(e) {
                    var r, t;
                    this.log("onSDKReady", e), null === (r = this.callback) || void 0 === r || r.call(this, d.EVENTS.SDK_READY, (0, l.ImWebDataAdapter)(e.data, (null === (t = this.sdkInfo) || void 0 === t ? void 0 : t.userId) || ""))
                }
            }, {
                key: "onKickedOut",
                value: function(e) {
                    var r, t;
                    this.log("onKickedOut", e), null === (r = this.callback) || void 0 === r || r.call(this, d.EVENTS.KICKED_OUT, (0, l.ImWebDataAdapter)(e.data, (null === (t = this.sdkInfo) || void 0 === t ? void 0 : t.userId) || ""))
                }
            }, {
                key: "onNetChange",
                value: function(e) {
                    var r, t;
                    this.log("onNetChange", e), null === (r = this.callback) || void 0 === r || r.call(this, d.EVENTS.NET_STATE_CHANGE, (0, l.ImWebDataAdapter)(e.data, (null === (t = this.sdkInfo) || void 0 === t ? void 0 : t.userId) || ""))
                }
            }, {
                key: "onMessageReceived",
                value: function(e) {
                    var r, t;
                    this.log("onMessageReceived", e), null === (r = this.callback) || void 0 === r || r.call(this, d.EVENTS.MESSAGE_RECEIVED, (0, l.ImWebDataAdapter)(e.data, (null === (t = this.sdkInfo) || void 0 === t ? void 0 : t.userId) || ""))
                }
            }, {
                key: "onMessageRevoked",
                value: function(e) {
                    var r, t;
                    this.log("onMessageRevoked", e), null === (r = this.callback) || void 0 === r || r.call(this, d.EVENTS.MESSAGE_REVOKED, (0, l.ImWebDataAdapter)(e.data, (null === (t = this.sdkInfo) || void 0 === t ? void 0 : t.userId) || ""))
                }
            }, {
                key: "log",
                value: function() {
                    for (var e, r = arguments.length, t = new Array(r), i = 0; i < r; i++) t[i] = arguments[i];
                    (e = console).log.apply(e, ["[IMChatSDK]"].concat(t))
                }
            }, {
                key: "error",
                value: function() {
                    for (var e, r = arguments.length, t = new Array(r), i = 0; i < r; i++) t[i] = arguments[i];
                    (e = console).error.apply(e, ["[IMChatSDK]"].concat(t))
                }
            }, {
                key: "getSenderInfo",
                value: function() {
                    var e, r, t, i, n, a, o = Number((null === (e = this.userInfo) || void 0 === e ? void 0 : e.uid) || 0),
                        s = String((null === (r = this.userInfo) || void 0 === r ? void 0 : r.uniqueId) || 0);
                    return {
                        avatar_type: 3,
                        instance_id: this.instanceId,
                        nickname: (null === (t = this.sdkInfo) || void 0 === t ? void 0 : t.nickname) || "",
                        avatar_token: (null === (i = this.userInfo) || void 0 === i ? void 0 : i.avatarToken) || "",
                        av_uid: o,
                        avatar_url: (null === (n = this.userInfo) || void 0 === n ? void 0 : n.avatarUrl) || "",
                        user_district: 0,
                        role_type: 1,
                        user_type: 1,
                        app_uid: String(o),
                        unique_id: s || String(o),
                        app_id: (null === (a = this.userInfo) || void 0 === a ? void 0 : a.appid) || ""
                    }
                }
            }, {
                key: "getPrivateUserInfo",
                value: function(e) {
                    var r = e.toUserId,
                        t = e.toUserNickname,
                        i = void 0 === t ? "" : t,
                        n = e.toUserAvatar,
                        a = void 0 === n ? "" : n;
                    return {
                        avatar_type: 1,
                        instance_id: this.instanceId,
                        nickname: i,
                        avatar_token: "",
                        av_uid: 0,
                        avatar_url: a,
                        user_district: 0,
                        role_type: 1,
                        user_type: 1,
                        app_uid: String(r),
                        unique_id: String(r),
                        app_id: ""
                    }
                }
            }, {
                key: "getClientCustomObject",
                value: function(e) {
                    var r, t, i, n, a, o = e.chatType,
                        s = e.toUserId,
                        u = String(null === (r = this.userInfo) || void 0 === r ? void 0 : r.uniqueId),
                        d = {
                            chat_type: o,
                            receiver_type: 0,
                            main_meeting_id: String(null === (t = this.sdkInfo) || void 0 === t ? void 0 : t.group),
                            room_type: 0,
                            app_uid: (null === (i = this.userInfo) || void 0 === i ? void 0 : i.uid) || "",
                            instance_id: this.instanceId,
                            nickname: (null === (n = this.sdkInfo) || void 0 === n ? void 0 : n.nickname) || "",
                            group_id: String(null === (a = this.sdkInfo) || void 0 === a ? void 0 : a.group),
                            role_type: 0,
                            user_type: 0,
                            unique_id: u || "",
                            app_id: "",
                            sender_info: this.getSenderInfo(),
                            av_uid: 0,
                            extension: {}
                        };
                    return s && (d.private_chat_user_info = this.getPrivateUserInfo(e)), d
                }
            }, {
                key: "getTIMImageMsgBody",
                value: function(e) {
                    return {
                        MsgType: "TIMImageElem",
                        MsgContent: {
                            UUID: e.uuid,
                            ImageFormat: e.imageFormat,
                            ImageInfoArray: [{
                                Type: 1,
                                Size: e.largeImageSize,
                                Width: e.largeImageWidth,
                                Height: e.largeImageHeight,
                                URL: e.largeImageUrl
                            }, {
                                Type: 2,
                                Size: e.smallImageSize,
                                Width: e.smallImageWidth,
                                Height: e.smallImageHeight,
                                URL: e.smallImageUrl
                            }, {
                                Type: 3,
                                Size: e.previewImageSize,
                                Width: e.previewImageWidth,
                                Height: e.previewImageHeight,
                                URL: e.previewImageUrl
                            }]
                        }
                    }
                }
            }, {
                key: "transImageReqToResp",
                value: function(e) {
                    return {
                        type: "TIMImageElem",
                        content: {
                            imageFormat: e.imageFormat,
                            uuid: e.uuid,
                            imageInfoArray: [{
                                sizeType: 1,
                                size: e.largeImageSize,
                                width: e.largeImageWidth,
                                height: e.largeImageHeight,
                                imageUrl: e.largeImageUrl,
                                url: e.largeImageUrl
                            }, {
                                sizeType: 2,
                                size: e.smallImageSize,
                                width: e.smallImageWidth,
                                height: e.smallImageHeight,
                                imageUrl: e.smallImageUrl,
                                url: e.smallImageUrl
                            }, {
                                sizeType: 3,
                                size: e.previewImageSize,
                                width: e.previewImageWidth,
                                height: e.previewImageHeight,
                                imageUrl: e.previewImageUrl,
                                url: e.previewImageUrl
                            }]
                        }
                    }
                }
            }, {
                key: "joinGroup",
                value: function(e) {
                    var r = this;
                    return new Promise(function() {
                        var t = n(i().mark((function t(n) {
                            return i().wrap((function(t) {
                                for (;;) switch (t.prev = t.next) {
                                    case 0:
                                        return r.instance && r.sdkInfo && r.instance.joinGroup({
                                            groupID: e
                                        }).then((function(e) {
                                            switch (e.data.status) {
                                                case u.default.TYPES.JOIN_STATUS_WAIT_APPROVAL:
                                                    n(u.default.TYPES.JOIN_STATUS_WAIT_APPROVAL);
                                                    break;
                                                case u.default.TYPES.JOIN_STATUS_SUCCESS:
                                                    n(e.data.group);
                                                    break;
                                                case u.default.TYPES.JOIN_STATUS_ALREADY_IN_GROUP:
                                                    n(u.default.TYPES.JOIN_STATUS_ALREADY_IN_GROUP)
                                            }
                                        })).catch((function(e) {
                                            r.error("joinGroup error:", e), n({
                                                code: g.IMErrorCode.ERROR,
                                                msg: (null == e ? void 0 : e.message) || g.IMErrorCodeDescription.ERROR
                                            })
                                        })), t.abrupt("return", null);
                                    case 2:
                                    case "end":
                                        return t.stop()
                                }
                            }), t)
                        })));
                        return function(e) {
                            return t.apply(this, arguments)
                        }
                    }())
                }
            }, {
                key: "quitGroup",
                value: function(e) {
                    var r = this;
                    return new Promise((function(t) {
                        return r.instance && r.sdkInfo && r.instance.quitGroup(e).then((function(e) {
                            t(e.data.groupID)
                        })).catch((function(e) {
                            r.error("quitGroup error:", e), t({
                                code: g.IMErrorCode.ERROR,
                                msg: (null == e ? void 0 : e.message) || g.IMErrorCodeDescription.ERROR
                            })
                        })), null
                    }))
                }
            }, {
                key: "getUserProfile",
                value: function(e) {
                    var r = this;
                    return new Promise((function(t) {
                        return r.instance && r.sdkInfo && r.instance.getUserProfile({
                            userIDList: e
                        }).then((function(e) {
                            t(e.data)
                        })).catch((function(e) {
                            r.error("getUserProfile error:", e), t({
                                code: g.IMErrorCode.ERROR,
                                msg: (null == e ? void 0 : e.message) || g.IMErrorCodeDescription.ERROR
                            })
                        })), null
                    }))
                }
            }]), e
        }();
    exports.default = h;
});
define("sdk/tim/interface/error-code.js", function(require, module, exports, window, document, frames, self, location, navigator, localStorage, history, Caches, screen, alert, confirm, prompt, XMLHttpRequest, WebSocket, Reporter, webkit, WeixinJSCore) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
        value: !0
    }), exports.IMErrorCodeDescription = exports.IMErrorCode = void 0;
    exports.IMErrorCode = function(E) {
        return E[E.ERROR = -1] = "ERROR", E[E.LOGIN_ERROR = -10] = "LOGIN_ERROR", E[E.NOT_READY = -11] = "NOT_READY", E[E.NOT_IN_GROUP = -20] = "NOT_IN_GROUP", E[E.GROUP_NOT_EXIST = -21] = "GROUP_NOT_EXIST", E[E.HAD_REVOKED = -21] = "HAD_REVOKED", E[E.OVERDUE_REVOKE = -22] = "OVERDUE_REVOKE", E[E.EMPTY_MSG = -23] = "EMPTY_MSG", E
    }({}), exports.IMErrorCodeDescription = function(E) {
        return E.ERROR = "系统繁忙，请稍候再试", E.LOGIN_ERROR = "登录失败，请稍候再试", E.NOT_READY = "未连接聊天服务，请稍候再试", E.NOT_IN_GROUP = "不在会议中，请从会议进入聊天", E.GROUP_NOT_EXIST = "会议不存在，请从会议进入聊天", E.HAD_REVOKED = "消息已撤回，请勿重复操作", E.OVERDUE_REVOKE = "无法撤回2分钟前发送的消息", E.EMPTY_MSG = "消息内容为空", E
    }({});
});
define("sdk/tim/interface/im-biz-types.js", function(require, module, exports, window, document, frames, self, location, navigator, localStorage, history, Caches, screen, alert, confirm, prompt, XMLHttpRequest, WebSocket, Reporter, webkit, WeixinJSCore) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
        value: !0
    }), exports.IMChatConversationType = exports.IMChatBizType = void 0;
    exports.IMChatConversationType = function(e) {
        return e[e.Invalid = 0] = "Invalid", e[e.ToC = 1] = "ToC", e[e.Group = 2] = "Group", e[e.System = 3] = "System", e
    }({}), exports.IMChatBizType = function(e) {
        return e[e.SystemTime = -10] = "SystemTime", e[e.Tip = -1] = "Tip", e[e.Text = 0] = "Text", e[e.Face = 1] = "Face", e[e.RedPacket = 2] = "RedPacket", e[e.RedPacketReceipt = 3] = "RedPacketReceipt", e[e.Pic = 4] = "Pic", e[e.ChatControl = 5] = "ChatControl", e[e.Notice = 6] = "Notice", e[e.OpenApp = 7] = "OpenApp", e[e.File = 8] = "File", e[e.WebinarRedPacket = 9] = "WebinarRedPacket", e[e.WebinarRedPacketReceipt = 10] = "WebinarRedPacketReceipt", e[e.SystemTip = 11] = "SystemTip", e[e.EmojiTextMixed = 12] = "EmojiTextMixed", e[e.BusinessTip = 13] = "BusinessTip", e
    }({});
});
define("sdk/tim/interface/im-events.js", function(require, module, exports, window, document, frames, self, location, navigator, localStorage, history, Caches, screen, alert, confirm, prompt, XMLHttpRequest, WebSocket, Reporter, webkit, WeixinJSCore) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
        value: !0
    }), exports.EVENTS = void 0;
    exports.EVENTS = function(e) {
        return e.SDK_READY = "sdkStateReady", e.MESSAGE_RECEIVED = "onMessageReceived", e.MESSAGE_REVOKED = "onMessageRevoked", e.KICKED_OUT = "kickedOut", e.ERROR = "error", e.DESTROY = "destroy", e.NET_STATE_CHANGE = "netStateChange", e.MESSAGE_DELETED = "onMessageDeleted", e
    }({});
});
define("sdk/tim/storage/index.js", function(require, module, exports, window, document, frames, self, location, navigator, localStorage, history, Caches, screen, alert, confirm, prompt, XMLHttpRequest, WebSocket, Reporter, webkit, WeixinJSCore) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
        value: !0
    }), exports.updateDbMessage = exports.setSendedMessage = exports.imMessageToDb = exports.hasHistoryMessage = exports.getSendedMessage = exports.getPrevMessage = exports.getNextMessage = exports.getIMMessageWhenInit = exports.deleteDbMessage = void 0;
    var e = require("../../../@babel/runtime/helpers/regeneratorRuntime"),
        r = require("../../../@babel/runtime/helpers/asyncToGenerator"),
        t = require("./localstorage");
    exports.imMessageToDb = function(e) {
        var r = e.filter((function(e) {
            return e.id
        }));
        if (r.length > 0) {
            var n = r[0].customMessage,
                s = n.main_meeting_id,
                a = n.group_id;
            (0, t.saveLocalStorageMsg)(s || String(a), r)
        }
    }, exports.updateDbMessage = function(e, r) {
        (0, t.revokeLocalStorageMsg)(e, r)
    }, exports.deleteDbMessage = function(e, r) {
        (0, t.removeLocalStorageMsg)(e, r)
    }, exports.setSendedMessage = function(e, r) {
        (0, t.setSendedLocalStorageMsg)(e, r)
    }, exports.getSendedMessage = function() {
        var n = r(e().mark((function r(n, s) {
            var a, o;
            return e().wrap((function(e) {
                for (;;) switch (e.prev = e.next) {
                    case 0:
                        return null, o = (0, t.getSendedLocalMessage)(n, s), a = (null == o ? void 0 : o.find((function(e) {
                            return (null == e ? void 0 : e.ID) === s
                        }))) || null, e.abrupt("return", a);
                    case 4:
                    case "end":
                        return e.stop()
                }
            }), r)
        })));
        return function(e, r) {
            return n.apply(this, arguments)
        }
    }(), exports.hasHistoryMessage = function() {
        var n = r(e().mark((function r(n) {
            return e().wrap((function(e) {
                for (;;) switch (e.prev = e.next) {
                    case 0:
                        return e.abrupt("return", (0, t.getLocalStorageMsg)(n).length > 0);
                    case 1:
                    case "end":
                        return e.stop()
                }
            }), r)
        })));
        return function(e) {
            return n.apply(this, arguments)
        }
    }(), exports.getIMMessageWhenInit = function() {
        var n = r(e().mark((function r(n) {
            var s, a, o = arguments;
            return e().wrap((function(e) {
                for (;;) switch (e.prev = e.next) {
                    case 0:
                        return s = o.length > 1 && void 0 !== o[1] ? o[1] : 50, (0, t.updateChatGroupInfo)(n), a = [], a = (a = (0, t.getLocalStorageMsg)(n)).slice(-s), e.abrupt("return", a);
                    case 6:
                    case "end":
                        return e.stop()
                }
            }), r)
        })));
        return function(e) {
            return n.apply(this, arguments)
        }
    }(), exports.getNextMessage = function() {
        var n = r(e().mark((function r(n, s, a) {
            var o, u;
            return e().wrap((function(e) {
                for (;;) switch (e.prev = e.next) {
                    case 0:
                        if (o = [], o = (0, t.getLocalStorageMsg)(n), -1 !== (u = o.findIndex((function(e) {
                                return e.id === s
                            })))) {
                            e.next = 5;
                            break
                        }
                        return e.abrupt("return", []);
                    case 5:
                        return o = o.slice(u + 1, u + 1 + a), e.abrupt("return", o);
                    case 7:
                    case "end":
                        return e.stop()
                }
            }), r)
        })));
        return function(e, r, t) {
            return n.apply(this, arguments)
        }
    }(), exports.getPrevMessage = function() {
        var n = r(e().mark((function r(n, s, a) {
            var o, u, i;
            return e().wrap((function(e) {
                for (;;) switch (e.prev = e.next) {
                    case 0:
                        if (o = [], o = (0, t.getLocalStorageMsg)(n), -1 !== (u = o.findIndex((function(e) {
                                return e.id === s
                            })))) {
                            e.next = 5;
                            break
                        }
                        return e.abrupt("return", []);
                    case 5:
                        return i = Math.max(0, u - a), o = o.slice(i, u), e.abrupt("return", o);
                    case 8:
                    case "end":
                        return e.stop()
                }
            }), r)
        })));
        return function(e, r, t) {
            return n.apply(this, arguments)
        }
    }();
});
define("sdk/tim/storage/localstorage.js", function(require, module, exports, window, document, frames, self, location, navigator, localStorage, history, Caches, screen, alert, confirm, prompt, XMLHttpRequest, WebSocket, Reporter, webkit, WeixinJSCore) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
        value: !0
    }), exports.updateChatNotice = exports.updateChatGroupInfo = exports.unique = exports.setSendedLocalStorageMsg = exports.saveLocalStorageMsg = exports.revokeLocalStorageMsg = exports.removeLocalStorageMsg = exports.getSendedLocalMessage = exports.getLocalStorageMsg = exports.getChatNotice = void 0;
    var e = require("../../../@babel/runtime/helpers/objectSpread2"),
        t = require("../../../@babel/runtime/helpers/regeneratorRuntime"),
        r = require("../../../@babel/runtime/helpers/toConsumableArray"),
        o = require("../../../@babel/runtime/helpers/asyncToGenerator"),
        n = "im-chat-message-",
        a = exports.saveLocalStorageMsg = function() {
            var e = o(t().mark((function e(o, a) {
                var c, i, g, u = arguments;
                return t().wrap((function(e) {
                    for (;;) switch (e.prev = e.next) {
                        case 0:
                            c = !(u.length > 2 && void 0 !== u[2]) || u[2], i = wx.getStorageSync("".concat(n).concat(o)) || "[]", g = JSON.parse(i), g = s([].concat(r(g), r(a))), c || (g = s(a)), wx.setStorageSync("".concat(n).concat(o), JSON.stringify(g.slice(-200)));
                        case 6:
                        case "end":
                            return e.stop()
                    }
                }), e)
            })));
            return function(t, r) {
                return e.apply(this, arguments)
            }
        }(),
        c = (exports.revokeLocalStorageMsg = function(e, t) {
            console.log("revokeLocalStorageMsg", t);
            var r = t.id,
                o = c(e),
                n = o.findIndex((function(e) {
                    return e.id === r
                }));
            o[n] = t, a(e, o, !1)
        }, exports.removeLocalStorageMsg = function(e, t) {
            var r = c(e).filter((function(e) {
                return e.id !== t
            }));
            a(e, r, !1)
        }, exports.getLocalStorageMsg = function(e) {
            var t = wx.getStorageSync("".concat(n).concat(e)) || "[]";
            return JSON.parse(t)
        }),
        s = exports.unique = function(e) {
            return e.filter((function(e, t, r) {
                return r.findIndex((function(t) {
                    return t.id === e.id
                })) === t
            }))
        };
    exports.updateChatGroupInfo = function(t) {
        var r = wx.getStorageSync("im-chat-list") || "{}",
            o = JSON.parse(r);
        o[t] = e(e({}, o[t] || {}), {}, {
            date: (new Date).getTime()
        });
        Object.keys(o).forEach((function(e) {
            o[e].date && (new Date).getTime() - o[e].date > 2592e5 && (wx.removeStorageSync("".concat(n).concat(e)), wx.removeStorageSync("".concat("im-chat-send-").concat(e)), delete o[e])
        })), wx.setStorageSync("im-chat-list", JSON.stringify(o))
    }, exports.updateChatNotice = function(t, r) {
        var o = wx.getStorageSync("im-chat-list") || "{}",
            n = JSON.parse(o);
        n[t] && (n[t] = e(e({}, n[t]), {}, {
            notice: r
        }), wx.setStorageSync("im-chat-list", JSON.stringify(n)))
    }, exports.getChatNotice = function(e) {
        var t = wx.getStorageSync("im-chat-list") || "{}",
            r = JSON.parse(t);
        return r[e] && r[e].notice || null
    }, exports.setSendedLocalStorageMsg = function(e, t) {
        var o = wx.getStorageSync("".concat("im-chat-send-").concat(e)) || "[]",
            n = JSON.parse(o);
        n = (n = r(n).concat(t)).filter((function(e) {
            return (new Date).getTime() - 1e3 * e.time < 12e4
        })), wx.setStorageSync("".concat("im-chat-send-").concat(e), JSON.stringify(n))
    }, exports.getSendedLocalMessage = function(e, t) {
        var r = wx.getStorageSync("".concat("im-chat-send-").concat(e)) || "[]",
            o = JSON.parse(r);
        return t ? [o.find((function(e) {
            return e.ID === t
        }))] : o
    };
});
define("sdk/tim/tim-sdk.js", function(require, module, exports, window, document, frames, self, location, navigator, localStorage, history, Caches, screen, alert, confirm, prompt, XMLHttpRequest, WebSocket, Reporter, webkit, WeixinJSCore) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
        value: !0
    }), exports.default = void 0, require("../../@babel/runtime/helpers/Arrayincludes");
    var e = require("../../@babel/runtime/helpers/regeneratorRuntime"),
        t = require("../../@babel/runtime/helpers/asyncToGenerator"),
        r = require("../../@babel/runtime/helpers/classCallCheck"),
        n = require("../../@babel/runtime/helpers/createClass"),
        s = require("./interface/error-code"),
        a = require("./interface/im-events"),
        i = E(require("./im-web-ws")),
        u = require("./storage/index"),
        o = E(require("../../clients/WemeetClient")),
        c = require("./storage/localstorage"),
        l = require("./interface/im-biz-types");

    function E(e) {
        return e && e.__esModule ? e : {
            default: e
        }
    }
    var p = new(function() {
        function E() {
            r(this, E), this.callback = new Map
        }
        var p, d, h, f, v, g, M, b, k;
        return n(E, [{
            key: "init",
            value: (k = t(e().mark((function r(n) {
                var s = this;
                return e().wrap((function(r) {
                    for (;;) switch (r.prev = r.next) {
                        case 0:
                            return r.abrupt("return", new Promise(function() {
                                var r = t(e().mark((function t(r) {
                                    var o, c;
                                    return e().wrap((function(e) {
                                        for (;;) switch (e.prev = e.next) {
                                            case 0:
                                                if (!s.instance) {
                                                    e.next = 2;
                                                    break
                                                }
                                                return e.abrupt("return", r({
                                                    code: 0,
                                                    msg: "ok"
                                                }));
                                            case 2:
                                                return s.groupId = n.group, s.instance || (s.instance = new i.default), e.next = 6, s.instance.init(n);
                                            case 6:
                                                if (0 !== (null == (o = e.sent) ? void 0 : o.code)) {
                                                    e.next = 15;
                                                    break
                                                }
                                                return s.instance.addEventListener((function() {
                                                    return s.eventHandler.apply(s, arguments)
                                                })), e.next = 11, (0, u.getIMMessageWhenInit)(s.groupId, 200);
                                            case 11:
                                                (c = e.sent) && s.eventHandler(a.EVENTS.MESSAGE_RECEIVED, c, !1), e.next = 16;
                                                break;
                                            case 15:
                                                console.error("TaroIm: 初始化失败", o);
                                            case 16:
                                                r(o);
                                            case 17:
                                            case "end":
                                                return e.stop()
                                        }
                                    }), t)
                                })));
                                return function(e) {
                                    return r.apply(this, arguments)
                                }
                            }()));
                        case 1:
                        case "end":
                            return r.stop()
                    }
                }), r)
            }))), function(e) {
                return k.apply(this, arguments)
            })
        }, {
            key: "addEventListener",
            value: function(e) {
                this.on(a.EVENTS.MESSAGE_RECEIVED, (function(t) {
                    return e(a.EVENTS.MESSAGE_RECEIVED, t)
                })), this.on(a.EVENTS.MESSAGE_REVOKED, (function(t) {
                    return e(a.EVENTS.MESSAGE_REVOKED, t)
                })), this.on(a.EVENTS.KICKED_OUT, (function(t) {
                    return e(a.EVENTS.KICKED_OUT, t)
                })), this.on(a.EVENTS.NET_STATE_CHANGE, (function(t) {
                    return e(a.EVENTS.NET_STATE_CHANGE, t)
                })), this.on(a.EVENTS.DESTROY, (function(t) {
                    return e(a.EVENTS.DESTROY, t)
                })), this.on(a.EVENTS.SDK_READY, (function(t) {
                    return e(a.EVENTS.SDK_READY, t)
                }))
            }
        }, {
            key: "on",
            value: function(e, t) {
                var r = "".concat(e, "_").concat((new Date).getTime());
                return this.callback.set(r, {
                    event: e,
                    callback: t
                }), r
            }
        }, {
            key: "off",
            value: function(e) {
                this.callback.delete(e)
            }
        }, {
            key: "isReady",
            value: function() {
                var e;
                return null === (e = this.instance) || void 0 === e ? void 0 : e.isReady()
            }
        }, {
            key: "sendMessage",
            value: (b = t(e().mark((function t(r) {
                var n, i, u;
                return e().wrap((function(e) {
                    for (;;) switch (e.prev = e.next) {
                        case 0:
                            if (this.instance && this.instance.isReady()) {
                                e.next = 2;
                                break
                            }
                            return e.abrupt("return", {
                                code: s.IMErrorCode.NOT_READY,
                                msg: s.IMErrorCodeDescription.NOT_READY
                            });
                        case 2:
                            if ("" !== (null === (n = r.message) || void 0 === n ? void 0 : n.trim())) {
                                e.next = 4;
                                break
                            }
                            return e.abrupt("return", {
                                code: s.IMErrorCode.EMPTY_MSG,
                                msg: s.IMErrorCodeDescription.EMPTY_MSG
                            });
                        case 4:
                            return e.next = 6, null === (i = this.instance) || void 0 === i ? void 0 : i.sendMessage(r);
                        case 6:
                            return (null == (u = e.sent) ? void 0 : u.imMsg) && this.eventHandler(a.EVENTS.MESSAGE_RECEIVED, u.imMsg), e.abrupt("return", u);
                        case 9:
                        case "end":
                            return e.stop()
                    }
                }), t, this)
            }))), function(e) {
                return b.apply(this, arguments)
            })
        }, {
            key: "resendMessage",
            value: (M = t(e().mark((function t(r) {
                return e().wrap((function(e) {
                    for (;;) switch (e.prev = e.next) {
                        case 0:
                            if (this.instance && this.instance.isReady()) {
                                e.next = 2;
                                break
                            }
                            return e.abrupt("return", {
                                code: s.IMErrorCode.NOT_READY,
                                msg: s.IMErrorCodeDescription.NOT_READY
                            });
                        case 2:
                            console.log("resendMessage", r);
                        case 3:
                        case "end":
                            return e.stop()
                    }
                }), t, this)
            }))), function(e) {
                return M.apply(this, arguments)
            })
        }, {
            key: "revokeMessage",
            value: (g = t(e().mark((function t(r) {
                var n, a;
                return e().wrap((function(e) {
                    for (;;) switch (e.prev = e.next) {
                        case 0:
                            if (this.instance && this.instance.isReady()) {
                                e.next = 2;
                                break
                            }
                            return e.abrupt("return", {
                                code: s.IMErrorCode.NOT_READY,
                                msg: s.IMErrorCodeDescription.NOT_READY
                            });
                        case 2:
                            return e.next = 4, null === (n = this.instance) || void 0 === n ? void 0 : n.revokeMessage(r);
                        case 4:
                            return null != (a = e.sent) && a.imMsg && (0, u.updateDbMessage)(this.groupId, a.imMsg), e.abrupt("return", a);
                        case 7:
                        case "end":
                            return e.stop()
                    }
                }), t, this)
            }))), function(e) {
                return g.apply(this, arguments)
            })
        }, {
            key: "deleteMessage",
            value: (v = t(e().mark((function t(r) {
                return e().wrap((function(e) {
                    for (;;) switch (e.prev = e.next) {
                        case 0:
                            (0, u.deleteDbMessage)(this.groupId, r), this.eventHandler(a.EVENTS.MESSAGE_DELETED, [{
                                id: r
                            }]);
                        case 2:
                        case "end":
                            return e.stop()
                    }
                }), t, this)
            }))), function(e) {
                return v.apply(this, arguments)
            })
        }, {
            key: "getChatNotice",
            value: (f = t(e().mark((function t() {
                var r;
                return e().wrap((function(e) {
                    for (;;) switch (e.prev = e.next) {
                        case 0:
                            return e.next = 2, (0, c.getChatNotice)(String(this.groupId));
                        case 2:
                            return r = e.sent, e.abrupt("return", r);
                        case 4:
                        case "end":
                            return e.stop()
                    }
                }), t, this)
            }))), function() {
                return f.apply(this, arguments)
            })
        }, {
            key: "destroy",
            value: function() {
                var e;
                this.eventHandler(a.EVENTS.DESTROY, []), this.logout(), null === (e = this.instance) || void 0 === e || e.destroy(), this.instance = void 0
            }
        }, {
            key: "logout",
            value: function() {
                this.instance && (this.instance.logout(), this.callback.clear())
            }
        }, {
            key: "hasHistoryMessage",
            value: function() {
                return (0, u.hasHistoryMessage)(this.groupId)
            }
        }, {
            key: "getInitMessageList",
            value: (h = t(e().mark((function t(r) {
                var n;
                return e().wrap((function(e) {
                    for (;;) switch (e.prev = e.next) {
                        case 0:
                            return e.next = 2, (0, u.getIMMessageWhenInit)(this.groupId, r);
                        case 2:
                            return n = e.sent, e.abrupt("return", n);
                        case 4:
                        case "end":
                            return e.stop()
                    }
                }), t, this)
            }))), function(e) {
                return h.apply(this, arguments)
            })
        }, {
            key: "getNextMessage",
            value: (d = t(e().mark((function t(r, n) {
                var s;
                return e().wrap((function(e) {
                    for (;;) switch (e.prev = e.next) {
                        case 0:
                            return e.next = 2, (0, u.getNextMessage)(this.groupId, r, n);
                        case 2:
                            return s = e.sent, e.abrupt("return", s);
                        case 4:
                        case "end":
                            return e.stop()
                    }
                }), t, this)
            }))), function(e, t) {
                return d.apply(this, arguments)
            })
        }, {
            key: "getPrevMessage",
            value: (p = t(e().mark((function t(r, n) {
                var s;
                return e().wrap((function(e) {
                    for (;;) switch (e.prev = e.next) {
                        case 0:
                            return e.next = 2, (0, u.getPrevMessage)(this.groupId, r, n);
                        case 2:
                            return s = e.sent, e.abrupt("return", s);
                        case 4:
                        case "end":
                            return e.stop()
                    }
                }), t, this)
            }))), function(e, t) {
                return p.apply(this, arguments)
            })
        }, {
            key: "eventHandler",
            value: function(e, t) {
                var r, n = !(arguments.length > 2 && void 0 !== arguments[2]) || arguments[2];
                if (n) {
                    if ([a.EVENTS.MESSAGE_RECEIVED].includes(e)) {
                        this.saveMessageToDb(t);
                        var s = t.filter((function(e) {
                            return e.chatType === l.IMChatBizType.Notice
                        }));
                        s.length > 0 && (0, c.updateChatNotice)(this.groupId, s[s.length - 1])
                    }
                    a.EVENTS.MESSAGE_REVOKED === e && (0, u.updateDbMessage)(this.groupId, t[0])
                }
                null === (r = this.callback) || void 0 === r || r.forEach((function(r, n) {
                    n.startsWith("".concat(e, "_")) && r.callback(t)
                })), o.default.publish("im_message_events", {
                    event: e,
                    data: t
                })
            }
        }, {
            key: "saveMessageToDb",
            value: function(e) {
                (0, u.imMessageToDb)(e)
            }
        }]), E
    }());
    exports.default = p;
});
define("sdk/wemeet.js", function(require, module, exports, window, document, frames, self, location, navigator, localStorage, history, Caches, screen, alert, confirm, prompt, XMLHttpRequest, WebSocket, Reporter, webkit, WeixinJSCore) {
    "use strict";
    require("../@babel/runtime/helpers/Objectvalues");
    var e = require("../@babel/runtime/helpers/typeof");
    module.exports = function(t) {
        function n(e) {
            if (i[e]) return i[e].exports;
            var r = i[e] = {
                i: e,
                l: !1,
                exports: {}
            };
            return t[e].call(r.exports, r, r.exports, n), r.l = !0, r.exports
        }
        var i = {};
        return n.m = t, n.c = i, n.d = function(e, t, i) {
            n.o(e, t) || Object.defineProperty(e, t, {
                enumerable: !0,
                get: i
            })
        }, n.r = function(e) {
            "undefined" != typeof Symbol && Symbol.toStringTag && Object.defineProperty(e, Symbol.toStringTag, {
                value: "Module"
            }), Object.defineProperty(e, "__esModule", {
                value: !0
            })
        }, n.t = function(t, i) {
            if (1 & i && (t = n(t)), 8 & i) return t;
            if (4 & i && "object" == e(t) && t && t.__esModule) return t;
            var r = Object.create(null);
            if (n.r(r), Object.defineProperty(r, "default", {
                    enumerable: !0,
                    value: t
                }), 2 & i && "string" != typeof t)
                for (var o in t) n.d(r, o, function(e) {
                    return t[e]
                }.bind(null, o));
            return r
        }, n.n = function(e) {
            var t = e && e.__esModule ? function() {
                return e.default
            } : function() {
                return e
            };
            return n.d(t, "a", t), t
        }, n.o = function(e, t) {
            return Object.prototype.hasOwnProperty.call(e, t)
        }, n.p = "", n(n.s = 0)
    }([function(e, t, n) {
        e.exports = n(1)
    }, function(e, t, n) {
        var i = n(2),
            r = n(3),
            o = n(4),
            s = n(22),
            a = n(34),
            u = n(33),
            c = n(35),
            l = n(36),
            d = n(12),
            h = n(11),
            _ = n(13),
            p = function() {
                function e() {
                    i(this, e), this.authService = o.getInstance(), this.meetingUserController = s.getInstance(), this.meetingAudioController = a.getInstance(), this.meetingVideoController = u.getInstance(), this.preMeetingManager = c.getInstance(), this.scout = l.getInstance(), this.loggerReportor = _.getInstance(), this.logger = new d, this.constants = h, this.appId = ""
                }
                return r(e, [{
                    key: "setAppId",
                    value: function(e) {
                        "" !== this.appId && this.appId !== e && console.log("NOTICE: setting AppId from", this.appId, "to", e), this.appId = e, this.meetingUserController.app_id = this.appId, this.preMeetingManager.app_id = this.appId
                    }
                }, {
                    key: "getVersion",
                    value: function() {
                        return h.Version
                    }
                }, {
                    key: "queryAuthService",
                    value: function() {
                        return this.authService
                    }
                }, {
                    key: "queryMeetingUserController",
                    value: function() {
                        return this.meetingUserController
                    }
                }, {
                    key: "queryMeetingAudioController",
                    value: function() {
                        return this.meetingAudioController
                    }
                }, {
                    key: "queryMeetingVideoController",
                    value: function() {
                        return this.meetingVideoController
                    }
                }, {
                    key: "querySettingService",
                    value: function() {
                        return this.settingService
                    }
                }, {
                    key: "queryPreMeetingManager",
                    value: function() {
                        return this.preMeetingManager
                    }
                }, {
                    key: "queryLoggerReportor",
                    value: function() {
                        return this.loggerReportor
                    }
                }, {
                    key: "queryLogger",
                    value: function() {
                        return this.logger
                    }
                }, {
                    key: "setTimeout",
                    value: function(e) {
                        this.authService.xmppService.timeout = e
                    }
                }, {
                    key: "getTimeout",
                    value: function() {
                        return this.authService.xmppService.timeout
                    }
                }, {
                    key: "isSupportWebRTC",
                    value: function() {
                        return this.scout.isSupportWebRTC()
                    }
                }, {
                    key: "sendXMPPRaw",
                    value: function(e) {
                        return this.authService.xmppService.freeXMPPRequest(e)
                    }
                }, {
                    key: "chaos",
                    get: function() {
                        return this.logger.chaos
                    },
                    set: function(e) {
                        this.logger.chaos = e
                    }
                }], [{
                    key: "getInstance",
                    value: function(t, n) {
                        return void 0 === t ? (console.error("WeMeetSDK.getInstance(appId): you must specify appId!"), null) : (void 0 === e.prototype.instance && (e.prototype.instance = new e), console.log("WeMeetSDK returning instance with sdkappid:", t), e.prototype.instance.setAppId(t), "function" == typeof n && e.prototype.instance.logger.setAjaxSender(n), e.prototype.instance)
                    }
                }, {
                    key: "getSDKConstants",
                    value: function() {
                        return h
                    }
                }]), e
            }();
        e.exports = p
    }, function(e, t) {
        e.exports = function(e, t) {
            if (!(e instanceof t)) throw new TypeError("Cannot call a class as a function")
        }, e.exports.__esModule = !0, e.exports.default = e.exports
    }, function(e, t) {
        function n(e, t) {
            for (var n = 0; n < t.length; n++) {
                var i = t[n];
                i.enumerable = i.enumerable || !1, i.configurable = !0, "value" in i && (i.writable = !0), Object.defineProperty(e, i.key, i)
            }
        }
        e.exports = function(e, t, i) {
            return t && n(e.prototype, t), i && n(e, i), Object.defineProperty(e, "prototype", {
                writable: !1
            }), e
        }, e.exports.__esModule = !0, e.exports.default = e.exports
    }, function(e, t, n) {
        function i(e) {
            var t = function() {
                if ("undefined" == typeof Reflect || !Reflect.construct) return !1;
                if (Reflect.construct.sham) return !1;
                if ("function" == typeof Proxy) return !0;
                try {
                    return Date.prototype.toString.call(Reflect.construct(Date, [], (function() {}))), !0
                } catch (e) {
                    return !1
                }
            }();
            return function() {
                var n, i = c(e);
                if (t) {
                    var r = c(this).constructor;
                    n = Reflect.construct(i, arguments, r)
                } else n = i.apply(this, arguments);
                return u(this, n)
            }
        }
        var r = n(2),
            o = n(3),
            s = n(5),
            a = n(6),
            u = n(8),
            c = n(10),
            l = n(11),
            d = n(12),
            h = n(14),
            _ = function(e) {
                function t() {
                    var e;
                    r(this, t), (e = n.call(this)).logger = new d, e.loginState = l.LoginState.LOGIN_STATE_NULL, e.xmppService = h.getInstance(), e.eventListenersMap = new Map, e.uid = null, e.onLogin = e.onLogin.bind(s(e)), e.onLogout = e.onLogout.bind(s(e)), e.onConnFailed = e.onConnFailed.bind(s(e));
                    var i = function(t) {
                        return e[t] = e[t].bind(s(e))
                    };
                    return i("login"), i("logout"), i("onLogout"), i("getLoginState"), i("registerEventHandler"), i("getEventHandler"), i("internalLogin"), i("internalLogout"), e.xmppService.registerEventHandler("login", e.onLogin), e.xmppService.registerEventHandler("logout", e.onLogout), e.xmppService.registerEventHandler("connfailed", e.onConnFailed), e
                }
                a(t, e);
                var n = i(t);
                return o(t, [{
                    key: "login",
                    value: function(e) {
                        if (this.logger.info("login start"), 0 === e.app_uid.length) return console.error("SdkError.SDK_ERROR_INVALID_PARAMS"), l.SdkError.SDK_ERROR_INVALID_PARAMS;
                        if (e.auth_type === l.AuthType.AUTH_TYPE_USER) {
                            if (0 === e.app_token.length) return console.error("login: token length should be > 0"), l.SdkError.SDK_ERROR_INVALID_PARAMS;
                            if (e.app_uid.length < 3) return console.error("login: uid length should be > 3"), l.SdkError.SDK_ERROR_INVALID_PARAMS
                        }
                        return e.env_id || (e.env_id = ""), this.loginState === l.LoginState.LOGIN_STATE_LOGOUT || this.loginState === l.LoginState.LOGIN_STATE_NULL ? (this.authType = e.auth_type, e.sdk_id = l.SDK_ID, this.internalLogin(e), l.SdkError.SDK_ERROR_SUCCESS) : (console.error("SdkError.SDK_ERROR_INVALID_OPERATION"), l.SdkError.SDK_ERROR_INVALID_OPERATION)
                    }
                }, {
                    key: "getLoginState",
                    value: function() {
                        return this.logger.info(this.loginState), this.loginState
                    }
                }, {
                    key: "logout",
                    value: function() {
                        return this.logger.info("logout start"), this.loginState === l.LoginState.LOGIN_STATE_LOGIN ? (this.logger.info("calling this.internalLogout"), this.internalLogout(), l.SdkError.SDK_ERROR_SUCCESS) : l.SdkError.SDK_ERROR_INVALID_OPERATION
                    }
                }, {
                    key: "onLogin",
                    value: function(e, t) {
                        e ? (this.loginState = l.LoginState.LOGIN_STATE_LOGIN, this.xmppService.jid && (this.uid = this.xmppService.jid.split("/")[0], this.logger.setUid(this.uid), this.logger.report(1, "login", "login success"))) : this.loginState = l.LoginState.LOGIN_STATE_NULL, this.getEventHandler("login")(e, t)
                    }
                }, {
                    key: "onLogout",
                    value: function(e, t) {
                        console.log("auth_service logout"), this.uid = null, this.logger.report(1, "logout", "disconnect:", t), this.loginState = l.LoginState.LOGIN_STATE_LOGOUT, this.uid && this.logger.setUid(this.uid + "(disconnected)"), this.getEventHandler("logout")(e, t)
                    }
                }, {
                    key: "onConnFailed",
                    value: function(e, t) {
                        this.getEventHandler("connfailed")(e, t)
                    }
                }, {
                    key: "internalLogin",
                    value: function(e) {
                        this.loginState = l.LoginState.LOGIN_STATE_LOGGINING, this.logger.report(1, "login", "user login with\n          uid: ".concat(e.app_uid, "\n          instance id: ").concat(l.INSTANCE_ID, "\n          sdkappid:  ").concat(e.app_id, "\n          sdk version: ").concat(l.Version, "\n          sdk id: ").concat(e.sdk_id, "\n          env id: ").concat(e.env_id, "\n        "));
                        var t = e.app_uid + "/" + l.INSTANCE_ID.toString(),
                            n = e.app_token,
                            i = e.token_obj;
                        i.app_id = e.app_id, i.auth_type = e.auth_type, i.sdk_id = e.sdk_id, i.instance_id = l.INSTANCE_ID, i.env_id = e.env_id, this.xmppService.connect(t, n, i)
                    }
                }, {
                    key: "internalLogout",
                    value: function() {
                        this.logger.info("calling xmppService.disconnect"), this.xmppService.disconnect()
                    }
                }], [{
                    key: "getInstance",
                    value: function() {
                        return void 0 === t.prototype.instance && (t.prototype.instance = new t), t.prototype.instance
                    }
                }]), t
            }(n(20));
        e.exports = _
    }, function(e, t) {
        e.exports = function(e) {
            if (void 0 === e) throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
            return e
        }, e.exports.__esModule = !0, e.exports.default = e.exports
    }, function(e, t, n) {
        var i = n(7);
        e.exports = function(e, t) {
            if ("function" != typeof t && null !== t) throw new TypeError("Super expression must either be null or a function");
            e.prototype = Object.create(t && t.prototype, {
                constructor: {
                    value: e,
                    writable: !0,
                    configurable: !0
                }
            }), Object.defineProperty(e, "prototype", {
                writable: !1
            }), t && i(e, t)
        }, e.exports.__esModule = !0, e.exports.default = e.exports
    }, function(e, t) {
        function n(t, i) {
            return e.exports = n = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function(e, t) {
                return e.__proto__ = t, e
            }, e.exports.__esModule = !0, e.exports.default = e.exports, n(t, i)
        }
        e.exports = n, e.exports.__esModule = !0, e.exports.default = e.exports
    }, function(e, t, n) {
        var i = n(9).default,
            r = n(5);
        e.exports = function(e, t) {
            if (t && ("object" === i(t) || "function" == typeof t)) return t;
            if (void 0 !== t) throw new TypeError("Derived constructors may only return object or undefined");
            return r(e)
        }, e.exports.__esModule = !0, e.exports.default = e.exports
    }, function(t, n) {
        function i(n) {
            return t.exports = i = "function" == typeof Symbol && "symbol" == e(Symbol.iterator) ? function(t) {
                return e(t)
            } : function(t) {
                return t && "function" == typeof Symbol && t.constructor === Symbol && t !== Symbol.prototype ? "symbol" : e(t)
            }, t.exports.__esModule = !0, t.exports.default = t.exports, i(n)
        }
        t.exports = i, t.exports.__esModule = !0, t.exports.default = t.exports
    }, function(e, t) {
        function n(t) {
            return e.exports = n = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function(e) {
                return e.__proto__ || Object.getPrototypeOf(e)
            }, e.exports.__esModule = !0, e.exports.default = e.exports, n(t)
        }
        e.exports = n, e.exports.__esModule = !0, e.exports.default = e.exports
    }, function(e, t) {
        var n = "unknown";
        navigator && (n = navigator.platform);
        var i = {
                INSTANCE_WEB: 5,
                INSTANCE_MP: 8
            },
            r = i.INSTANCE_MP,
            o = {
                BEGIN_INVITE: 1,
                SUCC_ENTER: 2,
                USER_FAIL: 3,
                INMEETING_HANGUP: 4,
                INVITER_CANCEL: 5,
                UNKNOWN: 100
            },
            s = {
                INVITING: 1,
                FAILED: 2,
                UNKNOWN: 100
            },
            a = {
                BEING_INVITED: 1,
                ENTERED_MEETING: 4,
                HUNGUP: 6,
                CANCELED: 7,
                FAILED_TO_INVITE: 8,
                NO_RESPONSE: 9
            };
        e.exports = {
            ConfWebSocketUrl: "wss://meetingwsdev.medialab.qq.com/websocket/connection",
            Version: "v2.2.1",
            Os: n,
            Platform: "mp",
            InstanceType: i,
            INSTANCE_ID: r,
            AuthType: {
                AUTH_TYPE_NONE: 0,
                AUTH_TYPE_USER: 1,
                AUTH_TYPE_VISITOR: 2
            },
            LoginState: {
                LOGIN_STATE_NULL: 0,
                LOGIN_STATE_LOGIN: 1,
                LOGIN_STATE_LOGGINING: 2,
                LOGIN_STATE_LOGOUT: 3
            },
            InviteEvent: o,
            InviteStatus: s,
            ParticipationStatus: a,
            inviteEventToStatus: function(e) {
                e = parseInt(e);
                var t = s.UNKNOWN;
                switch (e) {
                    case o.BEGIN_INVITE:
                        t = s.INVITING;
                        break;
                    case o.USER_FAIL:
                        t = s.FAILED;
                        break;
                    default:
                        t = s.UNKNOWN
                }
                return console.log(t), t
            },
            HangupReason: {
                USER_HANGUP: 1,
                INVITATION_CANCELED: 2,
                KICKED_OUT: 3,
                DISACCEPT: 4,
                HEARTBEAT_TIMEOUT: 5,
                SYSTEM_HANGUP: 6,
                KICKED_BY_MULTI_INSTANCE: 7
            },
            participationStatusToInviteStatus: function(e) {
                e = parseInt(e);
                var t = s.UNKNOWN;
                switch (e) {
                    case a.BEING_INVITED:
                        t = s.INVITING;
                        break;
                    case a.HUNGUP:
                    case a.FAILED_TO_INVITE:
                    case a.NO_RESPONSE:
                        t = s.FAILED;
                        break;
                    default:
                        t = s.UNKNOWN
                }
                return console.log(t), t
            },
            DeviceType: {
                CAMERA: 0,
                MIC: 1,
                SPEAKER: 2,
                UNKNOWN: 3
            },
            SdkError: {
                SDK_ERROR_SUCCESS: 0,
                SDK_ERROR_ENGINE_NOT_INIT: 1,
                SDK_ERROR_ENGINE_INIT_ERROR: 2,
                SDK_ERROR_AV_ENGINE_ERROR: 3,
                SDK_ERROR_SERVICE_ERROR: 4,
                SDK_ERROR_NOT_IMPL: 5,
                SDK_ERROR_OUT_OF_MEMORY: 6,
                SDK_ERROR_INVALID_PARAMS: 7,
                SDK_ERROR_INVALID_OPERATION: 8,
                SDK_ERROR_NO_PEMISSION: 9,
                SDK_ERROR_UNKNOWN: 99,
                WEBSOCKET_ERROR_EVICTED: 4014,
                WEBSOCKET_ERROR_LIMITED: 4015
            },
            SdkResult: {
                SDK_RESULT_SUCCESS: 0,
                SDK_RESULT_APP_AUTH_FAILED: 1,
                SDK_RESULT_USER_AUTH_FAILED: 2,
                SDK_RESULT_TIMEOUT: 3,
                SDK_RESULT_CREATE_ERROR: 4,
                SDK_RESULT_LOGOUT_ERROR: 5,
                SDK_RESULT_PARSE_ERROR: 6,
                SDK_RESULT_REQUEST_TIMEOUT: 7
            },
            MediaType: {
                AUDIO: 1,
                VIDEO: 2,
                SCREEN_SHARE: 3,
                LOCAL_RECORD: 4
            },
            LimitState: {
                NO_LIMIT: 0,
                FULL: 1
            },
            UserState: {
                JOIN: 1,
                LEAVE: 2,
                UPDATE: 3,
                KICKED: 4,
                OFFLINE: 5,
                UPLEVEL: 8,
                DOWNLEVEL: 9
            },
            SwitchReason: {
                BYSELF: 1,
                BYHOST: 2
            },
            SwitchStreamReason: {
                OPERATE_BIND_DEVICE: 1,
                OPERATED_BY_HOST: 2
            },
            MeetingErrorCodes: {
                MEETING_NOT_EXIST: 9003
            },
            UserType: {
                UNKNOWN_USER: 0,
                VOIP_USER: 1,
                PSTN_USER: 2
            },
            KickoutReason: {
                UNKNOWN: 0,
                HOST_OPERATION: 1,
                MEETING_TERMINATED: 2
            },
            LocalPermissionType: {
                LOCAL_RECORD: 1
            },
            LimitType: {
                MEMBERS_COUNT_WILL_REACH_LIMIT_SOON: 0,
                MEMBERS_COUNT_HAS_REACHED_LIMIT_ALREADY: 1,
                MEETING_DURATION_WILL_REACH_LIMIT_SOON: 11,
                PSTN_DURATION_WILL_REACH_LIMIT_SOON: 21,
                PSTN_DURATION_HAS_REACHED_LIMIT_ALREADY: 22,
                SOMEBODY_TRIED_JOIN_MEETING_AFTER_REACH_LIMIT: 31,
                ENOUGH_RESOURCE: 99,
                ENOUGH_RESOURCE_ON_MEETING_DURATION: 109
            },
            AssociateType: {
                VOIP: 1,
                PSTN: 2,
                ASSOC_PRO_VOIP: 3,
                LINUX_SDK_VOIP: 4,
                ASSOC_AUDIO_PSTN: 5,
                ASSOC_VIDEO_PSTN: 6
            },
            LeaveReason: {
                SELF: 1,
                KICKED_BY_HOST: 2,
                MEETING_DISMISSED: 3,
                KICKED_BY_SAME_ACCOUNT: 4,
                RECEIVE_NOT_ENOUGH_MEETING_TIME_PUSH: 10,
                MEETING_TIME_REACHES_END_OF_COUNTDOWN_AT_CLIENT: 11,
                MOVED_BY_HOST_FROM_MEETING_ROOM_TO_WAITING_ROOM: 12
            },
            RoomType: {
                OUTSIDE: -1,
                MEETING_ROOM: 0,
                WAITING_ROOM: 1
            },
            MediaRoomState: {
                OUT: 0,
                IN: 1,
                RECONNECTING: 2,
                RESTARTING: 3,
                INTERRUPTED: 4,
                REDIRECTING: 5,
                JOINING: 6,
                LEAVING: 7,
                getReadableState: function(e) {
                    switch (e) {
                        case 0:
                            return "不在媒体房间中";
                        case 1:
                            return "在媒体房间中";
                        case 2:
                            return "媒体房间重连中...";
                        case 3:
                            return "媒体房间重启推流中";
                        case 4:
                            return "推流被系统来电或者微信VOIP中断";
                        case 5:
                            return "正在重定向中...";
                        case 6:
                            return "正在加入媒体房间...";
                        case 7:
                            return "正在离开媒体房间...";
                        default:
                            return "Unknown media room state: ".concat(e)
                    }
                }
            },
            EnterRoomType: {
                MEMBER_IN_WAITING_ROOM: 0,
                MEMBER_MOVED_BY_HOST_FROM_WAITING_ROOM_TO_MEETING_ROOM: 1,
                MEMBER_MOVED_BY_HOST_FROM_MEETING_ROOM_TO_WAITING_ROOM: 2,
                MEMBER_MOVED_BY_HOST_FROM_WAITING_ROOM_TO_OUTSIDE: 3,
                MEMBER_JOINED_IN_WAITING_ROOM: 11,
                MEMBER_LEFT_FROM_WAITING_ROOM: 12,
                USER_STATUS_CHANGED_BY_SELF: 17,
                USER_STATUS_CHANGED_BY_HOST: 18
            },
            DefaultMediaStateReasonBit: {
                AudioReasonBit: {
                    MembersNumReachesN: 16,
                    AudioOnNumReachesLimit: 8,
                    AllMuted: 4,
                    UnmuteNotAllowed: 2,
                    MuteAfterJoin: 1
                },
                VideoReasonBit: {}
            },
            CloudRecordAction: {
                STOP: 0,
                START: 1,
                PAUSE: 2,
                RESUME: 3,
                CONFIRM_START: 4
            },
            CloudRecordingStatus: {
                STOPPED: 0,
                PREPARING: 1,
                STARTED: 2,
                PAUSED: 3
            },
            AutoInWaitingRoom: {
                DefaultValue: 0,
                Close: 1,
                Open: 2
            },
            MediaSetType: {
                ExternalMeeting: 0,
                InternalMeeting: 1
            },
            AllowInBeforeHost: {
                DefaultValue: 0,
                NotAllow: 1,
                Allow: 2
            },
            MaxCustomerDataLength: 256,
            MediaNetworkLevel: {
                Excellent: 1,
                Good: 2,
                Fair: 3,
                Poor: 4,
                NoSignal: 5
            },
            QueryMeetingListSubAction: {
                QueryItemById: 0,
                QueryItemByCode: 1,
                QueryListByBeginTime: 2,
                QueryListByLastModifyTime: 3,
                QueryMoreSubItemById: 4,
                QueryMoreSubItemByCode: 5
            },
            MeetingType: {
                Normal: 0,
                Quick: 1
            },
            RoleGroupType: {
                WebinarPanelist: 1,
                WebinarAttendee: 2,
                NormalMeetingRole: 4
            },
            SDK_ID: "",
            SignType: {
                UseTRTC: 1
            },
            InMeetingUserVisibility: {
                Visible: 0,
                InvisibleInMembersList: 1,
                InvisibleInAudioLayout: 2,
                InvisibleInVideoLayout: 4,
                InvisibleInIM: 8
            },
            ModifyUserInfoScene: {
                Meeting_Room: 0,
                Waiting_Room: 1
            },
            ERenaming: {
                Begin: -1,
                DefaultAllow: 0,
                Allow: 1,
                NotAllowed: 2,
                End: 3
            },
            MeetingInfoMaskFlagBit: {
                MeetingCode: 0,
                InviteLink: 1
            }
        }
    }, function(e, t, n) {
        var i = n(9),
            r = n(2),
            o = n(3),
            s = (n(11), n(13)),
            a = function() {
                function e() {
                    r(this, e), this.loggerReportor = s.getInstance(), this.logver = 1;
                    this.chaos = function(e) {
                        for (var t = Math.random().toString().substr(2); t.length < e;) t += Math.random().toString().substr(2);
                        return t.substr(0, e)
                    }(16), this.serialnum = 1, this.uid = "(null)"
                }
                return o(e, [{
                    key: "send",
                    value: function(e) {
                        this.loggerReportor.report(e)
                    }
                }, {
                    key: "setUid",
                    value: function(e) {
                        this.uid = e
                    }
                }, {
                    key: "log",
                    value: function(e, t, n) {
                        if (e = Number(e), isNaN(e) || e < 1) throw console.log("web log error: lv must be greater than 0!!"), new Error("web log error: lv must be greater than 0!!");
                        if ("string" != typeof t) throw console.log("web log error: classid must be a string!!"), new Error("web log error: classid must be a string!!");
                        if ("object" === i(n)) try {
                            n = JSON.stringify(n)
                        } catch (e) {
                            throw console.log("web log error: when turning content(object) into string:", e), new Error("web log error: when turning content(object) into string")
                        }
                        if ("string" != typeof n) throw console.log("web log error: invalid content:", n), new Error("web log error: invalid content:");
                        n.replace(/\r|\n/g, " ");
                        var r = {
                            logver: this.logver,
                            uid: this.uid,
                            chaos: this.chaos,
                            serialnum: this.serialnum++,
                            clientstamp: (new Date).getTime(),
                            lv: e,
                            classid: t,
                            content: n
                        };
                        this.send(r, this.url)
                    }
                }], [{
                    key: "getInstance",
                    value: function() {
                        return void 0 === e.prototype.instance && (e.prototype.instance = new e), e.prototype.instance
                    }
                }]), e
            }(),
            u = function() {
                function e() {
                    r(this, e)
                }
                return o(e, [{
                    key: "debug",
                    value: function(e) {
                        var t, n = (new Error).stack,
                            i = "";
                        if ("string" == typeof n && "function" == typeof n.split) {
                            var r = n.split("\n");
                            r.length > 2 && (i = r[2])
                        }
                        for (var o = arguments.length, s = new Array(o > 1 ? o - 1 : 0), a = 1; a < o; a++) s[a - 1] = arguments[a];
                        (t = console).log.apply(t, [e].concat(s, ["\n", i]))
                    }
                }, {
                    key: "info",
                    value: function(e) {
                        var t, n = (new Error).stack,
                            i = "";
                        if ("string" == typeof n && "function" == typeof n.split) {
                            var r = n.split("\n");
                            r.length > 2 && (i = r[2])
                        }
                        for (var o = arguments.length, s = new Array(o > 1 ? o - 1 : 0), a = 1; a < o; a++) s[a - 1] = arguments[a];
                        (t = console).log.apply(t, [e].concat(s, ["\n", i]))
                    }
                }, {
                    key: "log",
                    value: function(e) {
                        var t, n = (new Error).stack,
                            i = "";
                        if ("string" == typeof n && "function" == typeof n.split) {
                            var r = n.split("\n");
                            r.length > 2 && (i = r[2])
                        }
                        for (var o = arguments.length, s = new Array(o > 1 ? o - 1 : 0), a = 1; a < o; a++) s[a - 1] = arguments[a];
                        (t = console).log.apply(t, [e].concat(s, ["\n", i]))
                    }
                }, {
                    key: "warn",
                    value: function(e) {
                        var t, n = (new Error).stack,
                            i = "";
                        if ("string" == typeof n && "function" == typeof n.split) {
                            var r = n.split("\n");
                            r.length > 2 && (i = r[2])
                        }
                        for (var o = arguments.length, s = new Array(o > 1 ? o - 1 : 0), a = 1; a < o; a++) s[a - 1] = arguments[a];
                        (t = console).log.apply(t, [e].concat(s, ["\n", i]))
                    }
                }, {
                    key: "error",
                    value: function(e) {
                        var t, n = (new Error).stack,
                            i = "";
                        if ("string" == typeof n && "function" == typeof n.split) {
                            var r = n.split("\n");
                            r.length > 2 && (i = r[2])
                        }
                        for (var o = arguments.length, s = new Array(o > 1 ? o - 1 : 0), a = 1; a < o; a++) s[a - 1] = arguments[a];
                        (t = console).log.apply(t, [e].concat(s, ["\n", i]))
                    }
                }, {
                    key: "setUid",
                    value: function(e) {
                        a.getInstance().setUid(e)
                    }
                }, {
                    key: "report",
                    value: function(e, t, n) {
                        for (var r = arguments.length, o = new Array(r > 3 ? r - 3 : 0), s = 3; s < r; s++) o[s - 3] = arguments[s];
                        var u = [n].concat(o);
                        u = u.map((function(e) {
                            var t = i(e);
                            if ("object" === t) try {
                                e = JSON.stringify(e)
                            } catch (e) {
                                console.log(e)
                            } else e = "undefined" === t ? '"undefined"' : e.toString();
                            return e
                        })), a.getInstance().log(e, t, u.join(" "))
                    }
                }, {
                    key: "setAjaxSender",
                    value: function(e) {
                        a.getInstance().setSendFunc(e)
                    }
                }, {
                    key: "chaos",
                    get: function() {
                        return a.getInstance().chaos
                    },
                    set: function(e) {
                        a.getInstance().chaos = e
                    }
                }]), e
            }();
        e.exports = u
    }, function(e, t, n) {
        var i = n(2),
            r = n(3),
            o = function() {
                function e() {
                    i(this, e), this._reportorCallback = null
                }
                return r(e, [{
                    key: "setReportCallback",
                    value: function(e) {
                        this._reportorCallback = e
                    }
                }, {
                    key: "report",
                    value: function(e) {
                        "function" == typeof this._reportorCallback && this._reportorCallback(e)
                    }
                }], [{
                    key: "getInstance",
                    value: function() {
                        return void 0 === e.prototype.instance && (e.prototype.instance = new e), e.prototype.instance
                    }
                }]), e
            }();
        e.exports = o
    }, function(e, t, n) {
        function i(e, t) {
            var n = Object.keys(e);
            if (Object.getOwnPropertySymbols) {
                var i = Object.getOwnPropertySymbols(e);
                t && (i = i.filter((function(t) {
                    return Object.getOwnPropertyDescriptor(e, t).enumerable
                }))), n.push.apply(n, i)
            }
            return n
        }

        function r(e, t) {
            var n;
            if ("undefined" == typeof Symbol || null == e[Symbol.iterator]) {
                if (Array.isArray(e) || (n = o(e)) || t && e && "number" == typeof e.length) {
                    n && (e = n);
                    var i = 0,
                        r = function() {};
                    return {
                        s: r,
                        n: function() {
                            return i >= e.length ? {
                                done: !0
                            } : {
                                done: !1,
                                value: e[i++]
                            }
                        },
                        e: function(e) {
                            throw e
                        },
                        f: r
                    }
                }
                throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")
            }
            var s, a = !0,
                u = !1;
            return {
                s: function() {
                    n = e[Symbol.iterator]()
                },
                n: function() {
                    var e = n.next();
                    return a = e.done, e
                },
                e: function(e) {
                    u = !0, s = e
                },
                f: function() {
                    try {
                        a || null == n.return || n.return()
                    } finally {
                        if (u) throw s
                    }
                }
            }
        }

        function o(e, t) {
            if (e) {
                if ("string" == typeof e) return s(e, t);
                var n = Object.prototype.toString.call(e).slice(8, -1);
                return "Object" === n && e.constructor && (n = e.constructor.name), "Map" === n || "Set" === n ? Array.from(e) : "Arguments" === n || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n) ? s(e, t) : void 0
            }
        }

        function s(e, t) {
            (null == t || t > e.length) && (t = e.length);
            for (var n = 0, i = new Array(t); n < t; n++) i[n] = e[n];
            return i
        }

        function a(e) {
            var t = function() {
                if ("undefined" == typeof Reflect || !Reflect.construct) return !1;
                if (Reflect.construct.sham) return !1;
                if ("function" == typeof Proxy) return !0;
                try {
                    return Date.prototype.toString.call(Reflect.construct(Date, [], (function() {}))), !0
                } catch (e) {
                    return !1
                }
            }();
            return function() {
                var n, i = g(e);
                if (t) {
                    var r = g(this).constructor;
                    n = Reflect.construct(i, arguments, r)
                } else n = i.apply(this, arguments);
                return p(this, n)
            }
        }
        var u = n(15),
            c = n(9),
            l = n(2),
            d = n(3),
            h = n(5),
            _ = n(6),
            p = n(8),
            g = n(10),
            m = n(11),
            f = n(12),
            v = n(16),
            y = n(19),
            S = n(17),
            b = n(20),
            E = n(21),
            w = S.Strophe,
            R = S.$iq,
            k = S.$pres,
            T = S.xbtoa,
            N = S.encodeUtf8ThenB64,
            I = S.decodeB64ThenUtf8,
            C = S.get_val,
            A = S.get_int_val,
            M = S.get_bool_val,
            O = S.get_attr,
            x = S.get_int_attr,
            P = S.stringifyXmlObject,
            D = S.format2XMPP,
            H = function(e) {
                function t() {
                    var e;
                    l(this, t), (e = n.call(this)).logger = new f, e.SERVER_URL = m.ConfWebSocketUrl, e.connection = null, e.connected = !1, e.eventListenersMap = new Map, e.jid = null, e.timeout = 1e4, e.userLogoutFlag = !1, e.connFailed = !1, e.meetingPingTimer = null, e.createMeetingResponseSuccess = e.createMeetingResponseSuccess.bind(h(e)), e.createMeetingResponseError = e.createMeetingResponseError.bind(h(e));
                    var i = function(t) {
                        return e[t] = e[t].bind(h(e))
                    };
                    return i("sendIQ"), i("genErrorCallback"), i("setServerUrl"), i("connect"), i("getEventHandler"), i("userStatusPush"), i("changeHostPush"), i("changeCoHostPush"), i("notifyBeenKickedout"), i("changeSettingPush"), i("notifyHansUpPush"), i("notifyHandsUpResult"), i("handsUpResponseSuccess"), i("handsUpResponseError"), i("queryMeetingItemListResponseSuccess"), i("queryMeetingItemListResponseError"), i("cancelMeetingResponseSuccess"), i("cancelMeetingResponseError"), i("modifyMeetingItemResponseSuccess"), i("modifyMeetingItemResponseError"), i("handleHandsUpResponseSuccess"), i("handleHandsUpResponseError"), i("switchMediaPermissionResponseSuccess"), i("switchMediaPermissionResponseError"), i("joinMeetingResponseSuccess"), i("joinMeetingResponseError"), i("leaveMeetingResponseSuccess"), i("refreshMediaAuthInfoResponseSuccess"), i("refreshMediaAuthInfoResponseError"), i("dissolveMeetingResponseSuccess"), i("dissolveMeetingResponseError"), i("userStatusResponseSuccess"), i("userStatusResponseError"), i("reportMediaStreamStatusSuccess"), i("reportMediaStreamStatusError"), i("changeHostRequest"), i("changeHostResponseSuccess"), i("changeHostResponseError"), i("dissolveMeetingRequest"), i("dissolveMeetingResponseSuccess"), i("dissolveMeetingResponseError"), i("modifyNicknameRequest"), i("setVideoLayoutRequest"), i("kickoutRequest"), i("sendSecurityVerifyResult"), i("queryUserSigResponseSuccess"), i("queryUserSigResponseError"), i("queryMeetingNotice"), e
                }
                _(t, e);
                var n = a(t);
                return d(t, [{
                    key: "setServerUrl",
                    value: function(e) {
                        return this.SERVER_URL = e, !0
                    }
                }, {
                    key: "connect",
                    value: function(e, t, n) {
                        var i = this;
                        if (!this.connected) {
                            this.connection = new w.Connection(this.SERVER_URL);
                            var r = t;
                            r = '<token xmlns="wemeet:auth" ', r += 'wemeet-auth:app_id="'.concat(n.app_id, '" '), r += 'wemeet-auth:device_id="'.concat(n.device_id, '" '), r += 'wemeet-auth:network_type="'.concat(n.network_type, '" '), r += 'wemeet-auth:app_version="'.concat(n.app_version, '" '), r += 'wemeet-auth:sdk_version="'.concat(m.Version, '" '), r += 'wemeet-auth:sdk_id="'.concat(n.sdk_id, '" '), r += 'wemeet-auth:instance_id="'.concat(n.instance_id, '" '), r += 'wemeet-auth:auth_type="'.concat(n.auth_type, '" '), r += 'wemeet-auth:env_id="'.concat(n.env_id, '">'), r += T(t) + "</token>", this.connection.connect(e, r, (function(t, n) {
                                var r = i.getEventHandler("login");
                                if (t === w.Status.CONNFAIL) console.log("connection failed:", n), i.jid = null, i.connFailed = !0, i.getEventHandler("connfailed")(!0, {
                                    code: "CONNFAIL",
                                    msg: "disconnected",
                                    data: n
                                });
                                else if (t === w.Status.AUTHFAIL) console.log("authentication failed:", n), r(!1, {
                                    code: "AUTHFAIL",
                                    msg: "authentication failed"
                                });
                                else if (t === w.Status.DISCONNECTED) {
                                    console.log("disconnected:", n), i.jid = null, "object" === c(n) && console.log("condition:", JSON.stringify(n)), i.meetingPingTimer && (clearInterval(i.meetingPingTimer), i.meetingPingTimer = null), i.connected = !1;
                                    var o = i.getEventHandler("logout"),
                                        s = {
                                            msg: "disconnected",
                                            code: "DISCONNECTED",
                                            ecode: 99900,
                                            condition: n
                                        };
                                    void 0 !== n && void 0 !== n.code ? s.ecode = n.code : i.connFailed && (s.ecode = 98888, i.connFailed = !1), o(i.userLogoutFlag, s), i.userLogoutFlag = !1
                                } else t === w.Status.CONNECTED && (console.log("connect success:", n), i.connected = !0, i.connection.addHandler((function(e) {
                                    var t = e.getAttribute("type");
                                    if ("result" === t) {
                                        if (e.childNodes.length > 0) {
                                            var n = e.childNodes[0];
                                            if ("tencent:wemeet:push" === n.getAttribute("xmlns") || "tencent:wemeet:breakoutroom:push" === n.getAttribute("xmlns")) {
                                                var r = n.nodeName;
                                                i.serverToClientMsgParser(e, r)
                                            }
                                        }
                                    } else if ("set" === t && e.childNodes.length > 0) {
                                        var o = e.childNodes[0];
                                        if ("tencent:wemeet:push" === o.getAttribute("xmlns") || "tencent:wemeet:breakoutroom:push" === o.getAttribute("xmlns")) {
                                            var s = o.nodeName;
                                            i.serverToClientMsgParser(e, s)
                                        }
                                    }
                                    return !0
                                }), null, "iq", null, null, null), i.connection.send(k().tree()), i.jid = e, setTimeout((function() {
                                    r(!0, {
                                        code: "CONNECTED",
                                        msg: "connect success"
                                    })
                                }), 10))
                            }))
                        }
                    }
                }, {
                    key: "disconnect",
                    value: function() {
                        this.logger.info("xmpp disconnect called"), this.logger.info("this.connected: " + this.connected), this.connected && (this.userLogoutFlag = !0, this.logger.info("xmpp calling connection disconnect"), this.connection.disconnect("libWeMeet.xmpp_service")), this.connected = !1
                    }
                }, {
                    key: "send",
                    value: function(e) {
                        this.connected ? (this.logger.info(e), this.connection.send(e)) : console.log("please build connection first")
                    }
                }, {
                    key: "getFullyQualifiedProtocol",
                    value: function(e) {
                        var t = "",
                            n = "";
                        try {
                            n = e.nodeTree.firstChild.tagName, t = e.nodeTree.firstChild.getAttribute("xmlns")
                        } catch (e) {
                            this.logger.report(3, "getFullyQualifiedProtocol", "cannot get tagName or xmlns for iq: xmlns:".concat(t, ", protocol:").concat(n))
                        }
                        return {
                            namespace: t,
                            protocolName: n
                        }
                    }
                }, {
                    key: "getErrorDetail",
                    value: function(e) {
                        if (!e) return {
                            code: -1,
                            msg: "timeout"
                        };
                        if (e.hasOwnProperty("isNOTXml") && e.isNOTXml) return {
                            code: -2,
                            msg: "isNOTXml"
                        };
                        try {
                            var t = e.getElementsByTagName("error")[0];
                            if (!t) return {
                                code: -3,
                                msg: "cannot find <error> tag in package"
                            };
                            var n = "";
                            return void 0 !== t.childNodes[0] && (n = "".concat(I(t.childNodes[0].nodeValue), "(").concat(t.getAttribute("detail"), ")")), {
                                code: t.getAttribute("code"),
                                msg: n
                            }
                        } catch (e) {
                            return this.logger.report(3, "getErrorDetail", "cannot get error detail: ".concat((null == e ? void 0 : e.message) || "unknown error")), {
                                code: -4,
                                msg: "exception at parsing msg"
                            }
                        }
                    }
                }, {
                    key: "sendIQ",
                    value: function(e, t, n, i) {
                        var r = this;
                        if (this.connected) {
                            var o = this.getFullyQualifiedProtocol(e),
                                s = o.namespace,
                                a = o.protocolName,
                                u = +new Date;
                            this.connection.sendIQ(e, (function(e) {
                                var n = +new Date - u;
                                return E.report({
                                    namespace: s,
                                    protocolName: a,
                                    timeCost: n,
                                    code: 0
                                }), t(e, i)
                            }), (function(e) {
                                var t = +new Date - u,
                                    o = r.getErrorDetail(e),
                                    c = o.code,
                                    l = o.msg;
                                return E.report({
                                    namespace: s,
                                    protocolName: a,
                                    timeCost: t,
                                    code: c,
                                    msg: l
                                }), n(e, i)
                            }), this.timeout)
                        } else console.log("please build connection first"), "function" == typeof n && n({
                            isNOTXml: !0,
                            code: "0",
                            msg: "please build connection first"
                        })
                    }
                }, {
                    key: "genErrorCallback",
                    value: function(e, t) {
                        var n = this;
                        return function(i) {
                            var r = !1,
                                o = function() {};
                            if ("string" == typeof t ? o = n.getEventHandler(t) : "function" == typeof t && (o = t, r = !0), e)
                                if (e.hasOwnProperty("isNOTXml") && e.isNOTXml) r ? o(e) : o(!1, e);
                                else {
                                    var s = e.getElementsByTagName("error")[0],
                                        a = "";
                                    void 0 !== s.childNodes[0] && (a = I(s.childNodes[0].nodeValue));
                                    var u = {
                                        msg: a,
                                        detail: s.getAttribute("detail"),
                                        code: s.getAttribute("code"),
                                        sender_data: i
                                    };
                                    r ? o(u) : o(!1, u)
                                } else console.log("ErrorCallback timeout:", e), r ? o(null) : (console.warn("event is: ", t), o(!1, null))
                        }
                    }
                }, {
                    key: "getUniqueId",
                    value: function(e) {
                        var t = "xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx".replace(/[xy]/g, (function(e) {
                            var t = 16 * Math.random() | 0;
                            return ("x" === e ? t : 3 & t | 8).toString(16)
                        }));
                        return "string" == typeof e || "number" == typeof e ? t + ":" + e : t + ""
                    }
                }, {
                    key: "getConnectState",
                    value: function() {
                        return this.connected
                    }
                }, {
                    key: "serverToClientMsgParser",
                    value: function(e, t) {
                        var n = {
                                user_status: "userStatusPush",
                                breakout_room_started: "breakoutRoomPush",
                                change_host: "changeHostPush",
                                change_co_host: "changeCoHostPush",
                                change_setting: "changeSettingPush",
                                notify_hands_up: "notifyHansUpPush",
                                notify_hands_up_result: "notifyHandsUpResult",
                                kick_out: "notifyBeenKickedout",
                                modify: "notifyMeetingModified",
                                schedule: "notifySchedule",
                                meeting_item_update: "notifyMeetingItemUpdate",
                                meeting_summary_notify: "summaryAudioUploadPush",
                                meeting_summary_message: "summaryMessagePush",
                                invite_status: "inviteStatusPush",
                                meeting_settings_update: "meetingSettingsUpdate",
                                switch_media_stream: "notifySwitchMediaStream",
                                join_audio_mix_user_info: "joinAudioMixUserInfo",
                                meeting_will_limited: "meetingWillLimited",
                                host_status: "hostStatusPush",
                                waiting_user_status: "waitingUserStatusPush",
                                switch_local_permission: "switchLocalPermissionPush",
                                switch_user_role: "switchUserRole",
                                cloud_record_state: "cloudRecordState",
                                report_media_stream_status: "reportMediaStreamStatusPush",
                                meeting_invitee_notify: "meetingInviteeNotifyPush",
                                notify_raise_hand_list_changed: "notifyRaiseHandListChangedPush",
                                notify_user_be_put_handsdown: "notifyUserBePutHandsdownPush",
                                notify_role_group_be_put_handsdown: "notifyRoleGroupBePutHandsdownPush",
                                notify_permission_result: "notifyPermissionResultPush",
                                directed_push: "directedPush",
                                meeting_notice: "meetingNotice"
                            },
                            i = {
                                user_status: "userStatusPush",
                                breakout_room_started: "breakoutRoomPush",
                                change_host: "changeHostPush",
                                change_co_host: "changeCoHostPush",
                                change_setting: "changeSettingPush",
                                notify_hands_up: "notifyHansUpPush",
                                notify_hands_up_result: "notifyHandsUpResult",
                                kick_out: "notifyBeenKickedout",
                                modify: "notifyMeetingModified",
                                schedule: "notifySchedule",
                                meeting_item_update: "notifyMeetingItemUpdate",
                                meeting_summary_notify: "summaryAudioUploadPush",
                                meeting_summary_message: "summaryMessagePush",
                                invite_status: "inviteStatusPush",
                                meeting_settings_update: "meetingSettingsUpdate",
                                switch_media_stream: "notifySwitchMediaStream",
                                join_audio_mix_user_info: "joinAudioMixUserInfo",
                                meeting_will_limited: "meetingWillLimited",
                                host_status: "hostStatusPush",
                                waiting_user_status: "waitingUserStatusPush",
                                switch_local_permission: "switchLocalPermissionPush",
                                switch_user_role: "switchUserRole",
                                cloud_record_state: "cloudRecordState",
                                report_media_stream_status: "reportMediaStreamStatusPush",
                                meeting_invitee_notify: "meetingInviteeNotifyPush",
                                notify_raise_hand_list_changed: "notifyRaiseHandListChangedPush",
                                notify_user_be_put_handsdown: "notifyUserBePutHandsdownPush",
                                notify_role_group_be_put_handsdown: "notifyRoleGroupBePutHandsdownPush",
                                notify_permission_result: "notifyPermissionResultPush",
                                directed_push: "directedPush",
                                meeting_notice: "meetingNotice"
                            }[t];
                        if (void 0 !== i) try {
                            this[i](e)
                        } catch (n) {
                            var r = D(e);
                            this.logger.report(3, "serverToClientMsgParser(PUSH)", "failed to handle protocol '".concat(t, "'.\n          error message: ").concat(n.message, "\n          xmpp pkg received: ").concat(r, "\n        "))
                        }
                    }
                }, {
                    key: "breakoutRoomPush",
                    value: function(e) {
                        console.log("on Push breakoutRoom, msg:", e);
                        var t = e.getElementsByTagName("breakout_room_started")[0].getElementsByTagName("meeting_id")[0].childNodes[0].nodeValue;
                        this.getEventHandler("breakout_room_started")(!0, {
                            meeting_id: t
                        })
                    }
                }, {
                    key: "userStatusPush",
                    value: function(e) {
                        var t = D(e);
                        this.logger.report(1, "S2C-user_status(PUSH)", t);
                        for (var n, i = e.getElementsByTagName("user_status")[0], r = parseInt(i.getElementsByTagName("type")[0].childNodes[0].nodeValue), o = i.getElementsByTagName("meeting_id")[0].childNodes[0].nodeValue, s = i.getElementsByTagName("list")[0].childNodes, a = {
                                user_list: [],
                                meeting_id: o
                            }, u = 0; u < s.length; u++) {
                            var c = s[u],
                                l = this._parse_user_status(c);
                            a.user_list.push(l)
                        }
                        switch (r) {
                            case m.UserState.JOIN:
                                n = "user_join";
                                break;
                            case m.UserState.LEAVE:
                                n = "user_leave";
                                break;
                            case m.UserState.UPLEVEL:
                            case m.UserState.DOWNLEVEL:
                            case m.UserState.UPDATE:
                                n = "user_update";
                                break;
                            case m.UserState.KICKED:
                                n = "user_kicked";
                                break;
                            case m.UserState.OFFLINE:
                                n = "user_offline"
                        }
                        this.getEventHandler(n)(!0, a)
                    }
                }, {
                    key: "_parse_user_status",
                    value: function(e) {
                        var t = function(e) {
                                if (!e) return {};
                                var t = {
                                    uid: e.getAttribute("app_uid"),
                                    app_id: e.getAttribute("app_id"),
                                    instance_id: e.getAttribute("instance_id"),
                                    user_type: e.getAttribute("user_type"),
                                    userType: Number(e.getAttribute("user_type")),
                                    phone_number: e.getAttribute("phone_number"),
                                    unique_id: e.getAttribute("unique_id")
                                };
                                return "2" == t.user_type && (t.device_type = e.getAttribute("device_type") || "0"), t
                            },
                            n = e.getElementsByTagName("affiliated_users")[0];
                        n && n.parentNode.removeChild(n);
                        var i = {
                            nickname: I(C(e, "nickname")),
                            is_creator: C(e, "is_creator"),
                            is_host: C(e, "is_host"),
                            associate_type: Number.parseInt(C(e, "associate_type")),
                            associator_id: t(e.getElementsByTagName("associator_id")[0]),
                            role_type: C(e, "role_type"),
                            id: t(e.getElementsByTagName("id")[0]),
                            video_on: C(e, "up_video_on"),
                            audio_on: C(e, "up_audio_on"),
                            share_on: C(e, "up_share_on"),
                            web_share_on: C(e, "up_web_share_on"),
                            web_share_reason: O(e, "up_web_share_on", "reason"),
                            video_reason: O(e, "up_video_on", "reason"),
                            video_pause: O(e, "up_video_on", "pause"),
                            audio_reason: O(e, "up_audio_on", "reason"),
                            audio_pause: O(e, "up_audio_on", "pause"),
                            share_reason: O(e, "up_share_on", "reason"),
                            share_pause: O(e, "up_share_on", "pause"),
                            share_start_time: O(e, "up_share_on", "start_time"),
                            handsup: C(e, "handsup"),
                            raise_hand: C(e, "raise_hand"),
                            invite_id: C(e, "invite_id"),
                            authType: Number.parseInt(C(e, "auth_type")),
                            participation_status: C(e, "participation_status"),
                            participation_status_stamp: O(e, "participation_status", "last_update_time"),
                            hangup_reason: C(e, "hangup_reason"),
                            members_seq: Number.parseInt(C(e, "members_seq")),
                            avatar_type: isNaN(Number.parseInt(C(e, "avatar_type"))) ? "" : Number.parseInt(C(e, "avatar_type")),
                            avatar_token: C(e, "avatar_token"),
                            user_action: A(e, "user_action"),
                            local_record_on: C(e, "local_record_on"),
                            access_type: A(e, "access_type"),
                            allow_speak: A(e, "allow_speak")
                        };
                        i.id.av_uid = C(e, "av_uid"), i.id.unique_id || (i.id.unique_id = i.id.av_uid, this.logger.report(2, "_parse_user_status", "[warning] property 'unique_id' is missing in 'id'. For compatibility, we use 'av_uid' to fix it.")), "2" == i.user_type && "" === i.id.phone_number && (i.id.phone_number = e.getElementsByTagName("id")[0].getAttribute("app_uid"));
                        var r = e.getElementsByTagName("inviter");
                        r.length > 0 && (i.inviter = t(r[0]));
                        var o = A(e, "user_invisible");
                        return isNaN(o) || (i.user_invisible = o), i
                    }
                }, {
                    key: "changeHostPush",
                    value: function(e) {
                        var t = e.getElementsByTagName("change_host")[0],
                            n = t.getElementsByTagName("meeting_id")[0].childNodes[0].nodeValue,
                            i = C(t, "reason"),
                            r = t.getElementsByTagName("id")[0],
                            o = this._parse_user_id(r);
                        this.getEventHandler("change_host_push")(!0, {
                            meeting_id: n,
                            reason: i,
                            host: o
                        })
                    }
                }, {
                    key: "changeCoHostPush",
                    value: function(e) {
                        var t = e.getElementsByTagName("change_co_host")[0],
                            n = t.getElementsByTagName("meeting_id")[0].childNodes[0].nodeValue,
                            i = C(t, "reason"),
                            r = t.getElementsByTagName("id")[0],
                            o = this._parse_user_id(r);
                        o.host_type = C(t, "host_type"), o.assign = C(t, "assign"), this.getEventHandler("change_co_host_push")(!0, {
                            meeting_id: n,
                            reason: i,
                            host: o
                        })
                    }
                }, {
                    key: "changeSettingPush",
                    value: function(e) {
                        console.log("on Push change_setting, msg:", e);
                        var t = e.getElementsByTagName("change_setting")[0],
                            n = {
                                op_type: t.getElementsByTagName("type")[0].childNodes[0].nodeValue,
                                user: {
                                    uid: t.getElementsByTagName("attach")[0].getElementsByTagName("id")[0].getAttribute("uid"),
                                    app_id: t.getElementsByTagName("attach")[0].getElementsByTagName("id")[0].getAttribute("app_id"),
                                    instance_id: t.getElementsByTagName("attach")[0].getElementsByTagName("id")[0].getAttribute("instance_id")
                                }
                            };
                        console.log("  data:", n), this.getEventHandler("on_spot_light_video_push")(!0, n)
                    }
                }, {
                    key: "notifyHansUpPush",
                    value: function(e) {
                        console.log("on Push notify_hands_up, msg:", e);
                        var t = e.getElementsByTagName("notify_hands_up")[0],
                            n = [],
                            i = t.getElementsByTagName("permission_list");
                        if (i && i.length) {
                            var r = i[0].getElementsByTagName("permission");
                            if (r && r.length)
                                for (var o = 0; o < r.length; ++o) {
                                    var s = r[o];
                                    s && n.push(parseInt(s.getAttribute("type")))
                                }
                        }
                        var a = {
                            user: {
                                uid: t.getElementsByTagName("id")[0].getAttribute("uid"),
                                app_id: t.getElementsByTagName("id")[0].getAttribute("app_id"),
                                instance_id: t.getElementsByTagName("id")[0].getAttribute("instance_id"),
                                user_type: t.getElementsByTagName("id")[0].getAttribute("user_type")
                            },
                            permission: n
                        };
                        console.log("  data:", a), this.getEventHandler("notify_hands_up_push")(!0, a)
                    }
                }, {
                    key: "notifyHandsUpResult",
                    value: function(e) {
                        this.logger.debug("xmpp notifyHandsUpResult msg:", e);
                        for (var t = {
                                permissionList: []
                            }, n = e.getElementsByTagName("notify_hands_up_result")[0], i = n.getElementsByTagName("permission_list")[0].getElementsByTagName("permission"), r = !1, o = 0; o < i.length; ++o) {
                            var s = i[o],
                                a = {
                                    type: s.getAttribute("type"),
                                    is_grant: s.getAttribute("is_grant")
                                };
                            t.permissionList.push(a), 1 == a.is_grant && (r = !0)
                        }
                        if (r) {
                            var u = this._parse_media_platform(n);
                            null !== u && (t.media_platform = u)
                        }
                        this.getEventHandler("notify_hands_up_result")(!0, t)
                    }
                }, {
                    key: "notifyBeenKickedout",
                    value: function(e) {
                        this.logger.debug("notifyBeenKickedout, msg:", e);
                        var t = e.getElementsByTagName("kick_out")[0],
                            n = {};
                        n.meetingId = C(t, "meeting_id"), n.kicker = {
                            uid: O(t, "kicker", "app_uid"),
                            app_id: O(t, "kicker", "app_id"),
                            instance_id: O(t, "kicker", "instance_id")
                        }, n.reason = C(t, "reason"), n.reasonCode = Number(O(t, "reason", "code")), n.room_type = A(t, "room_type", 0);
                        var i = C(t, "custom_data", "");
                        if (i) try {
                            n.custom_data = JSON.parse(I(i))
                        } catch (e) {
                            this.logger.report(3, "notifyBeenKickedout", "cannot parse json from 'custom_data': ".concat(i))
                        }
                        this.getEventHandler("kicked_out")(!0, n)
                    }
                }, {
                    key: "notifyMeetingModified",
                    value: function(e) {
                        this.logger.debug("notifyMeetingModified, msg:", e);
                        var t = e.getElementsByTagName("modify")[0],
                            n = {};
                        n.meeting_id = C(t, "meeting_id"), n.subject = I(C(t, "subject", null)), n.begin_time = C(t, "begin_time", null), n.end_time = C(t, "end_time", null), n.password = I(C(t, "password", null)), n.location = I(C(t, "location", null)), n.custom_buffer = I(C(t, "custom_buffer")), n.auto_in_waiting_room = A(t, "auto_in_waiting_room"), n.allow_in_before_host = A(t, "allow_in_before_host", null), this.getEventHandler("meeting_modified")(!0, n)
                    }
                }, {
                    key: "notifySchedule",
                    value: function(e) {
                        var t = e.getElementsByTagName("schedule")[0],
                            n = this._parse_meeting_updated(t);
                        this.getEventHandler("notify_schedule")(!0, n)
                    }
                }, {
                    key: "notifyMeetingItemUpdate",
                    value: function(e) {
                        var t = e.getElementsByTagName("meeting_item_update")[0],
                            n = this._parse_meeting_updated(t);
                        this.getEventHandler("notify_meeting_item_update")(!0, n)
                    }
                }, {
                    key: "_parse_meeting_updated",
                    value: function(e) {
                        var t = {
                            meeting_id: C(e, "meeting_id"),
                            meeting_code: C(e, "meeting_code"),
                            meeting_state: A(e, "meeting_state"),
                            begin_time: A(e, "begin_time"),
                            end_time: A(e, "end_time"),
                            last_modify_time: A(e, "last_modify_time"),
                            actual_begin_time: A(e, "actual_begin_time"),
                            actual_end_time: A(e, "actual_end_time"),
                            subject: I(C(e, "subject")),
                            describe: I(C(e, "describe")),
                            role_type: A(e, "role_type"),
                            meeting_type_flags: C(e, "role_typmeeting_type_flagse"),
                            auto_in_waiting_room: A(e, "auto_in_waiting_room"),
                            allow_in_before_host: A(e, "allow_in_before_host"),
                            custom_buffer: I(C(e, "custom_buffer")),
                            meeting_type: A(e, "meeting_type"),
                            current_period_id: C(e, "current_period_id"),
                            creator_time_zone: C(e, "creator_time_zone"),
                            has_more_periods: A(e, "has_more_periods"),
                            remain_periods: A(e, "remain_periods"),
                            create_type: A(e, "create_type"),
                            creator_uid: C(e, "creator_uid"),
                            bit_mask_info_hiden: C(e, "bit_mask_info_hiden"),
                            si_enable: A(e, "si_enable")
                        };
                        if (e.hasOwnProperty("live_stream")) {
                            var n = e.getElementsByTagName("live_stream");
                            n && 1 === n.length ? t.live_stream = {
                                enable: A(n, "enable"),
                                view_url: A(n, "view_url"),
                                password: I(C(n, "password"))
                            } : this.logger.report(3, "_parse_meeting_updated", "node 'live_stream' doesn't exist, or appears more than once")
                        }
                        if (e.hasOwnProperty("recurring_rule")) {
                            var i = e.getElementsByTagName("recurring_rule");
                            i && 1 === i.length ? t.recurring_rule = {
                                first_start_time: A(i, "first_start_time"),
                                first_end_time: A(i, "first_end_time"),
                                recurring_type: A(i, "recurring_type"),
                                recurring_days: A(i, "recurring_days"),
                                until_type: A(i, "until_type"),
                                until_date: A(i, "until_date"),
                                until_times: A(i, "until_times")
                            } : this.logger.report(3, "_parse_meeting_updated", "node 'recurring_rule' doesn't exist, or appears more than 1")
                        }
                        if (e.hasOwnProperty("periods")) {
                            var r = e.getElementsByTagName("periods");
                            if (r && 1 === r.length) {
                                for (var o = r.childNodes || [], s = [], a = 0; a < o.length; a++) {
                                    var u = o[a];
                                    s.push({
                                        period_id: C(u, "period_id"),
                                        start_time: A(u, "start_time"),
                                        end_time: A(u, "end_time"),
                                        status: A(u, "status")
                                    })
                                }
                                t.periods = s
                            } else this.logger.report(3, "_parse_meeting_updated", "node 'periods' doesn't exist, or appears more than once")
                        }
                        if (e.hasOwnProperty("appointed_host_list")) {
                            var c = e.getElementsByTagName("appointed_host_list");
                            if (c && 1 === c.length) {
                                for (var l = [], d = 0; d < c.childNodes.length; d++) {
                                    var h = c.childNodes[d];
                                    l.push({
                                        app_id: h.getAttribute("app_id"),
                                        app_uid: h.getAttribute("app_uid")
                                    })
                                }
                                t.appointed_host_list = l
                            } else this.logger.report(3, "_parse_meeting_updated", "node 'appointed_host_list' doesn't exist, or appears 2+")
                        }
                        return t
                    }
                }, {
                    key: "meetingSettingsUpdate",
                    value: function(e) {
                        var t = e.getElementsByTagName("meeting_settings_update")[0],
                            n = this._parse_meeting_settings(t);
                        this.getEventHandler("notify_meeting_settings_update")(!0, n)
                    }
                }, {
                    key: "_parse_query_ui_config",
                    value: function(e) {
                        var t = e && e.getElementsByTagName("ui_config")[0];
                        if (!t) return null;
                        try {
                            var n = I(C(t, "config"));
                            return {
                                meeting_ability_pstn: !1 !== JSON.parse(n).meeting_ability_pstn
                            }
                        } catch (e) {
                            return this.logger.report(3, "S2C-query_ui_config", "parse ui_config error response which is type of result failed: ".concat(e)), null
                        }
                    }
                }, {
                    key: "_parse_meeting_settings",
                    value: function(e) {
                        var t = {};
                        if (!e) return t;
                        t.meetingId = C(e, "meeting_id"), t.mediaSettingsList = [];
                        var n = e.getElementsByTagName("media_settings_list")[0];
                        if (n)
                            for (var i = 0; i < n.childNodes.length; ++i) {
                                var r = n.childNodes[i],
                                    o = {
                                        type: A(r, "type")
                                    };
                                o.type === m.MediaType.AUDIO || o.type === m.MediaType.VIDEO ? Object.assign(o, {
                                    muteOnJoin: M(r, "mute_on_join"),
                                    muteAll: M(r, "mute_all"),
                                    allowUnmuteBySelf: M(r, "allow_unmute_by_self"),
                                    watermark: A(r, "watermark")
                                }) : o.type === m.MediaType.SCREEN_SHARE ? Object.assign(o, {
                                    watermark: A(r, "watermark"),
                                    share_screen_host_only: A(r, "share_screen_host_only"),
                                    multipleRowWatermark: 1 === Number(O(r, "watermark", "type"))
                                }) : console.error("unsupported type got from query_meeting_settings: ".concat(o.type)), t.mediaSettingsList.push(o)
                            }
                        t.localSettingsList = [];
                        var s = e.getElementsByTagName("local_settings_list")[0];
                        if (s)
                            for (var a = 0; a < s.childNodes.length; ++a) {
                                var u = s.childNodes[a],
                                    c = {
                                        type: A(u, "type")
                                    };
                                c.type === m.LocalPermissionType.LOCAL_RECORD ? Object.assign(c, {
                                    allow_record: A(u, "allow_record")
                                }) : console.error("unsupported type got from query_meeting_settings: ".concat(c.type)), t.localSettingsList.push(c)
                            }
                        var l = e.getElementsByTagName("ivr_settings")[0];
                        l && (t.ivrSettings = {
                            memberInOutTone: A(l, "member_in_out_tone")
                        });
                        var d = e.getElementsByTagName("meeting_lock_settings")[0];
                        d && (t.meetingLockSettings = {
                            meeting_lock: A(d, "meeting_lock")
                        });
                        var h = A(e, "auto_in_waiting_room");
                        void 0 !== h && (t.autoInWaitingRoom = h);
                        var _ = C(e, "request_up_stream_token", "");
                        _ && (t.request_up_stream_token = _);
                        var p = A(e, "hide_meeting_code_password");
                        isNaN(p) || (t.hideMeetingCodePassword = p), t.allow_audience_hands_up = C(e, "allow_hands_up");
                        var g = A(e, "allow_open_video");
                        isNaN(g) || (t.allow_open_video = g);
                        var f = A(e, "allow_renaming");
                        isNaN(f) || (t.allow_renaming = f);
                        var v = A(e, "allow_look_audience_count");
                        return isNaN(v) || (t.allow_look_audience_count = v), t
                    }
                }, {
                    key: "notifySwitchMediaStream",
                    value: function(e) {
                        var t = e.getElementsByTagName("switch_media_stream")[0],
                            n = {};
                        if (n.meetingId = C(t, "meeting_id"), n.type = parseInt(C(t, "type")), n.upStreamOn = parseInt(C(t, "up_stream_on")), n.reason = parseInt(O(t, "up_stream_on", "reason")), 1 === n.upStreamOn) {
                            var i = this._parse_media_platform(t);
                            null !== i && (n.media_platform = i)
                        }
                        this.getEventHandler("notify_switch_media_stream")(!0, n)
                    }
                }, {
                    key: "_parse_media_platform",
                    value: function(e) {
                        var t = e.getElementsByTagName("media_platform")[0];
                        if (!t) return null;
                        var n = {
                                qcloud_user_signature: C(t, "qcloud_user_signature", ""),
                                qcloud_user_private_map_key: C(t, "qcloud_user_private_map_key", "")
                            },
                            i = this._parse_trtc_token(t);
                        null !== i && (n.trtc_token = i);
                        var r = A(t, "role");
                        return void 0 !== r && (n.role = r), n
                    }
                }, {
                    key: "_parse_trtc_token",
                    value: function(e) {
                        if (!e) return this.logger.report(3, "assert", "parentNode must not be null to parse trtc_token"), null;
                        var t = e.getElementsByTagName("trtc_token")[0];
                        return t ? {
                            group_id: C(t, "group_id", ""),
                            set_flag: C(t, "set_flag", ""),
                            priv_map: C(t, "priv_map", ""),
                            usr_sig: C(t, "usr_sig", "")
                        } : (this.logger.report(1, "_parse_trtc_token", "cannot find 'trtc_token' in: ".concat(D(e))), null)
                    }
                }, {
                    key: "joinAudioMixUserInfo",
                    value: function(e) {
                        var t = e.getElementsByTagName("join_audio_mix_user_info")[0],
                            n = {
                                meetingId: C(t, "meeting_id"),
                                meetingCode: C(t, "meeting_code"),
                                infoList: []
                            },
                            i = t.getElementsByTagName("info_list")[0];
                        if (void 0 !== i && i.childNodes.length)
                            for (var r = 0; r < i.childNodes.length; ++r) {
                                var o = i.childNodes[r],
                                    s = o.getElementsByTagName("id")[0],
                                    a = {
                                        energy: A(o, "audio_energy"),
                                        user: {
                                            app_uid: s.getAttribute("app_uid"),
                                            app_id: s.getAttribute("app_id"),
                                            instance_id: s.getAttribute("instance_id"),
                                            user_type: s.getAttribute("user_type"),
                                            unique_id: s.getAttribute("unique_id")
                                        }
                                    };
                                n.infoList.push(a)
                            }
                        this.getEventHandler("notify_join_audio_mix_user_info")(!0, n)
                    }
                }, {
                    key: "meetingWillLimited",
                    value: function(e) {
                        var t = e.getElementsByTagName("meeting_will_limited")[0];
                        if (!t) return console.error("meetingWillLimited invoked with invalid mainNode"), void this.genErrorCallback(e, "meeting_will_limited")();
                        var n = {
                            meeting_id: C(t, "meeting_id"),
                            limite_type: parseInt(C(t, "limite_type")),
                            expire_time: parseInt(C(t, "expire_time")),
                            member_limit: parseInt(C(t, "member_limit")),
                            member_count: parseInt(C(t, "member_count")),
                            pstn_time: parseInt(C(t, "pstn_time")),
                            owner_nickname: C(t, "owner_nickname")
                        };
                        this.getEventHandler("meeting_will_limited")(!0, n)
                    }
                }, {
                    key: "hostStatusPush",
                    value: function(e) {
                        this.logger.report(1, "S2C-host_status", D(e));
                        var t = e.getElementsByTagName("host_status")[0],
                            n = {
                                meeting_id: C(t, "meeting_id"),
                                status: A(t, "status"),
                                msg: I(C(t, "msg"))
                            };
                        this.getEventHandler("host_status")(!0, n)
                    }
                }, {
                    key: "waitingUserStatusPush",
                    value: function(e) {
                        this.logger.report(1, "S2C-waiting_user_status", D(e));
                        var t = e.getElementsByTagName("waiting_user_status")[0],
                            n = {
                                meeting_id: C(t, "meeting_id"),
                                list: []
                            },
                            i = t.getElementsByTagName("list");
                        if (void 0 !== i)
                            for (var r = i[0].childNodes, o = 0; o < r.length; ++o) n.list.push(this._parse_waiting_user_status(r[o]));
                        n.host_status = {};
                        var s = t.getElementsByTagName("host_status")[0];
                        void 0 !== s && (n.host_status.status = A(s, "status"), n.host_status.msg = C(s, "msg")), this.getEventHandler("waiting_user_status")(!0, n)
                    }
                }, {
                    key: "_parse_waiting_user_status",
                    value: function(e) {
                        var t = {
                            id: function(e) {
                                if (!e) return {};
                                var t = {
                                    instance_id: e.getAttribute("instance_id"),
                                    uid: e.getAttribute("app_uid"),
                                    app_id: e.getAttribute("app_id"),
                                    user_type: e.getAttribute("user_type"),
                                    phone_number: e.getAttribute("phone_number"),
                                    device_type: e.getAttribute("device_type"),
                                    unique_id: e.getAttribute("unique_id")
                                };
                                return "2" == t.user_type && (t.device_type = e.getAttribute("device_type") || "0"), t
                            }(e.getElementsByTagName("id")[0]),
                            av_uid: C(e, "av_uid"),
                            nickname: I(C(e, "nickname")),
                            avatar_type: isNaN(Number.parseInt(C(e, "avatar_type"))) ? "" : Number.parseInt(C(e, "avatar_type")),
                            avatar_token: C(e, "avatar_token", ""),
                            enter_room_type: A(e, "enter_room_type")
                        };
                        return t.id.unique_id || (t.id.unique_id = t.av_uid, this.logger.report(2, "_parse_waiting_user_status", "[warning] property 'unique_id' is missing in 'id'. For compatibility, we use 'av_uid' to fix it.")), t
                    }
                }, {
                    key: "userStatusRequest",
                    value: function(e) {
                        var t = R({
                                type: "set",
                                id: this.getUniqueId("sendIQ")
                            }).c("user_status", {
                                xmlns: "tencent:wemeet:meeting_ctrl"
                            }).c("meeting_id").t(e.meeting_id).up().c("type").t(e.type).up(),
                            n = function(n, i) {
                                e.hasOwnProperty(n) && t.c("up_" + n, {
                                    reason: i.toString()
                                }).t(e[n]).up()
                            };
                        e.hasOwnProperty("nickname") && (e.nickname = N(e.nickname)), ["nickname", "avatar_type", "user_action", "local_record_on", "access_type"].map((function(n) {
                            e.hasOwnProperty(n) && t.c(n).t(e[n]).up()
                        })), n("video_on", e.video_reason), n("audio_on", e.audio_reason), n("share_on", e.share_reason), n("web_share_on", e.web_share_reason);
                        var i = e.type,
                            r = "";
                        for (var o in m.UserState)
                            if (m.UserState[o] === i) {
                                r = o;
                                break
                            }
                        this.logger.report(1, "C2S-user_status(".concat(r, ")"), t.toString()), this.sendIQ(t, this.userStatusResponseSuccess, this.userStatusResponseError)
                    }
                }, {
                    key: "userStatusResponseSuccess",
                    value: function(e) {
                        this.logger.report(1, "S2C-user_status", D(e)), this.getEventHandler("user_status")(!0, {
                            msg: e
                        })
                    }
                }, {
                    key: "userStatusResponseError",
                    value: function(e) {
                        this.logger.report(3, "S2C-user_status", D(e)), this.genErrorCallback(e, "user_status")()
                    }
                }, {
                    key: "reportMediaStreamStatus",
                    value: function(e) {
                        var t = R({
                            type: "set",
                            id: this.getUniqueId("sendIQ")
                        }).c("report_media_stream_status", {
                            xmlns: "tencent:wemeet:meeting_ctrl"
                        }).c("meeting_id").t(e.meeting_id).up();
                        Object.prototype.hasOwnProperty.call(e, "noise_type") && Object.prototype.hasOwnProperty.call(e, "noise_value") && t.c("audio").c("mic_noise", {
                            noise_type: e.noise_type
                        }).t(e.noise_value).up().up(), Object.prototype.hasOwnProperty.call(e, "network_level") && t.c("network").c("network_level").t(e.network_level).up().up(), this.logger.report(1, "C2S-report_media_stream_status", t.toString()), this.sendIQ(t, this.reportMediaStreamStatusSuccess, this.reportMediaStreamStatusError)
                    }
                }, {
                    key: "reportMediaStreamStatusSuccess",
                    value: function(e) {
                        this.logger.report(1, "S2C-report_media_stream_status", D(e));
                        var t = this.getEventHandler("report_media_stream_status"),
                            n = e.getElementsByTagName("report_media_stream_status")[0];
                        if (0 < n.getElementsByTagName("error").length) {
                            var i = {};
                            try {
                                i = {
                                    error: I(C(n, "error"))
                                }
                            } catch (e) {
                                this.logger.report(3, "reportMediaStreamStatusSuccess", "parse 'error' node in 'report_media_stream_status' response failed: ".concat(e.message)), i.error = "parse 'error' node in S2C failed: ".concat(e.message)
                            }
                            t(!1, i)
                        } else t(!0, {})
                    }
                }, {
                    key: "reportMediaStreamStatusError",
                    value: function(e) {
                        this.logger.report(3, "S2C-report_media_stream_status", D(e)), this.genErrorCallback(e, "report_media_stream_status")()
                    }
                }, {
                    key: "changeHostRequest",
                    value: function(e, t) {
                        var n = R({
                            type: "set"
                        }).c("change_host", {
                            xmlns: "tencent:wemeet:meeting_ctrl"
                        }).c("meeting_id").t(e).up().c("id", {
                            app_uid: t.uid,
                            app_id: t.app_id,
                            instance_id: t.instance_id,
                            user_type: t.user_type
                        }).up();
                        this.sendIQ(n, this.changeHostResponseSuccess, this.changeHostResponseError)
                    }
                }, {
                    key: "changeHostResponseSuccess",
                    value: function(e) {
                        this.getEventHandler("change_host")(!0, {
                            msg: "change host success"
                        })
                    }
                }, {
                    key: "changeHostResponseError",
                    value: function(e) {
                        this.genErrorCallback(e, "change_host")()
                    }
                }, {
                    key: "switchMediaPermissionRequest",
                    value: function(e, t, n, i, r) {
                        2 == e.user_type && (e.instance_id = 0);
                        var o = R({
                            type: "set"
                        }).c("switch_media_permission", {
                            xmlns: "tencent:wemeet:meeting_ctrl"
                        }).c("meeting_id").t(t).up().c("id", {
                            app_uid: e.uid,
                            app_id: e.app_id,
                            instance_id: e.instance_id,
                            user_type: e.user_type
                        }).up().c("type").t(n).up().c("is_grant").t(i).up().c("all_user").t(r).up();
                        this.logger.report(2, "xmpp", "host switch_media_permission, account:", e, " meeting_id=".concat(t, ", op_type=").concat(n, ", is_enable=").concat(i, ", is_all_users=").concat(r));
                        var s = null;
                        if (r) switch (n) {
                            case m.MediaType.AUDIO:
                                s = "mute_all_audio";
                                break;
                            case m.MediaType.VIDEO:
                                s = "mute_all_video"
                        } else switch (n) {
                            case m.MediaType.AUDIO:
                                s = "mute_audio";
                                break;
                            case m.MediaType.VIDEO:
                                s = "mute_video"
                        }
                        this.sendIQ(o, this.switchMediaPermissionResponseSuccess, this.switchMediaPermissionResponseError, s)
                    }
                }, {
                    key: "switchMediaPermissionResponseSuccess",
                    value: function(e, t) {
                        this.getEventHandler(t)(!0, {
                            msg: e
                        })
                    }
                }, {
                    key: "switchMediaPermissionResponseError",
                    value: function(e, t) {
                        this.getEventHandler(t)(!1, e)
                    }
                }, {
                    key: "getUploadMediaStreamRequestIQ",
                    value: function(e, t) {
                        var n = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : 0,
                            i = arguments.length > 3 && void 0 !== arguments[3] ? arguments[3] : "";
                        return R({
                            type: "set",
                            id: this.getUniqueId("sendIQ")
                        }).c("request_up_stream", {
                            xmlns: "tencent:wemeet:media_ctrl"
                        }).c("meeting_id").t(e).up().c("refresh_media_platform_auth_info").t(n).up().c("request_up_stream_token").t(i).up().c("permission_list").c("permission", {
                            type: t
                        }).up().up()
                    }
                }, {
                    key: "turnAudioRequest",
                    value: function(e) {
                        var t = this,
                            n = e.meeting_id,
                            i = e.succCallBack,
                            r = void 0 === i ? null : i,
                            o = e.failCallback,
                            s = void 0 === o ? null : o,
                            a = e.needRefreshToken,
                            u = void 0 === a ? 0 : a,
                            c = e.requestUpStreamToken,
                            l = void 0 === c ? "" : c,
                            d = this.getUploadMediaStreamRequestIQ(n, m.MediaType.AUDIO, u, l);
                        this.logger.report(1, "C2S-request_up_stream(turn on audio)", d.toString()), this.sendIQ(d, (function(e, n) {
                            if (t.logger.report(1, "S2C-request_up_stream(turn on audio)", D(e)), "function" == typeof r) t.upMediaStreamResponseSuccess(e, n, r, !0);
                            else {
                                var i = t.getEventHandler("turn_audio");
                                t.upMediaStreamResponseSuccess(e, n, i)
                            }
                        }), (function(e) {
                            t.logger.report(3, "S2C-request_up_stream(turn on audio)", D(e)), "function" == typeof s ? t.genErrorCallback(e, s)() : t.genErrorCallback(e, "turn_audio")()
                        }), {
                            needRefreshToken: u
                        })
                    }
                }, {
                    key: "turnVideoRequest",
                    value: function(e) {
                        var t = this,
                            n = e.meeting_id,
                            i = e.needRefreshToken,
                            r = void 0 === i ? 0 : i,
                            o = e.requestUpStreamToken,
                            s = void 0 === o ? "" : o,
                            a = this.getUploadMediaStreamRequestIQ(n, m.MediaType.VIDEO, r, s);
                        this.logger.report(1, "C2S-request_up_stream(turn on video)", a.toString()), this.sendIQ(a, (function(e, n) {
                            t.logger.report(1, "S2C-request_up_stream(turn on video)", D(e));
                            var i = t.getEventHandler("turn_video");
                            t.upMediaStreamResponseSuccess(e, n, i)
                        }), (function(e) {
                            t.logger.report(3, "S2C-request_up_stream(turn on video)", D(e)), t.genErrorCallback(e, "turn_video")()
                        }), {
                            needRefreshToken: r
                        })
                    }
                }, {
                    key: "upMediaStreamResponseSuccess",
                    value: function(e, t, n) {
                        var i = arguments.length > 3 && void 0 !== arguments[3] && arguments[3];
                        this.logger.debug("xmpp upMediaStreamResponseSuccess msg:", e, "\nmsg(str):", P(e));
                        var r = e.getElementsByTagName("request_up_stream")[0],
                            o = C(r, "meeting_id"),
                            s = [],
                            a = r.getElementsByTagName("permission_list");
                        if (a && a.length) {
                            var u = a[0].getElementsByTagName("permission");
                            if (u && u.length)
                                for (var c = 0; c < u.length; ++c) {
                                    var l = u[c];
                                    l && s.push({
                                        type: parseInt(l.getAttribute("type")),
                                        isGrant: parseInt(l.getAttribute("is_grant")),
                                        limitState: parseInt(l.getAttribute("limit_state"))
                                    })
                                }
                        }
                        var d = {
                                meeting_id: o,
                                permission_list: s
                            },
                            h = this._parse_media_platform(r);
                        null !== h && (d.media_platform = h), t.needRefreshToken, i ? n(d) : n(!0, d)
                    }
                }, {
                    key: "upMediaStreamResponseError",
                    value: function(e) {
                        this.genErrorCallback(e, "up_media_stream")()
                    }
                }, {
                    key: "operateCloudRecording",
                    value: function(e) {
                        var t = this,
                            n = e.meeting_id,
                            i = e.type,
                            r = e.check_token,
                            o = void 0 === r ? "" : r,
                            s = R({
                                type: "set"
                            }).c("cloud_record", {
                                xmlns: "tencent:wemeet:meeting_ctrl"
                            }).c("meeting_id").t(n).up().c("type").t(i).up();
                        o && s.c("check_token").t(o).up();
                        var a = "";
                        switch (i) {
                            case m.CloudRecordAction.STOP:
                                a = "cloud_record_stop";
                                break;
                            case m.CloudRecordAction.START:
                                a = "cloud_record_start";
                                break;
                            case m.CloudRecordAction.PAUSE:
                                a = "cloud_record_pause";
                                break;
                            case m.CloudRecordAction.RESUME:
                                a = "cloud_record_resume"
                        }
                        this.sendIQ(s, (function(e) {
                            var n = t.getEventHandler(a);
                            if (n) {
                                var i = e.getElementsByTagName("cloud_record");
                                if (!i || !i[0]) return w.error("operateCloudRecording success: but cannot find cloud_record node in resp:", msg), void n(!1, {
                                    code: -101,
                                    msg: "cannot find cloud_record node in resp",
                                    resp: e
                                });
                                var r = i[0];
                                if (0 < r.getElementsByTagName("error").length) {
                                    n(!1, {
                                        meeting_id: C(r, "meeting_id"),
                                        code: parseInt(O(r, "error", "code"), 10),
                                        msg: I(C(r, "error"))
                                    })
                                } else {
                                    var o = {
                                        meeting_id: C(r, "meeting_id")
                                    };
                                    if (0 < r.getElementsByTagName("need_check").length) {
                                        var s = O(r, "need_check", "token");
                                        if (s) return void n(!1, {
                                            token: s,
                                            code: parseInt(O(r, "need_check", "code"), 10),
                                            msg: I(C(r, "need_check"))
                                        })
                                    }
                                    n(!0, o)
                                }
                            } else n(!1, {
                                code: -100,
                                msg: "did you miss to define the callback '".concat(a, "' to xmpp_service?")
                            })
                        }), (function(e) {
                            t.genErrorCallback(e, a)()
                        }))
                    }
                }, {
                    key: "queryRecordStorage",
                    value: function(e) {
                        var t = this,
                            n = R({
                                type: "get"
                            }).c("query_record_storage", {
                                xmlns: "tencent:wemeet:cloud_record_storage"
                            }).c("meeting_id").t(e).up();
                        this.sendIQ(n, (function(e) {
                            var n = t.getEventHandler("query_record_storage");
                            if (n) {
                                var i = e.getElementsByTagName("query_record_storage");
                                if (i.length < 1) n(!1, {
                                    code: -101,
                                    msg: "cannot find tag 'query_record_storage' in resp",
                                    resp: e
                                });
                                else {
                                    var r = i[0];
                                    n(!0, {
                                        total_storage: A(r, "total_storage"),
                                        used_storage: A(r, "used_storage")
                                    })
                                }
                            } else n(!1, {
                                code: -100,
                                msg: "did you miss to define the callback 'query_record_storage' to xmpp_service?"
                            })
                        }), (function(e) {
                            t.genErrorCallback(e, "query_record_storage")()
                        }))
                    }
                }, {
                    key: "notifyMediaStatusRequest",
                    value: function(e, t, n) {
                        var i = R({
                            type: "set"
                        }).c("notify_media_status", {
                            xmlns: "tencent:wemeet:media_ctrl"
                        }).c("type").t(t).up().c("on").t(n).up().c("id", {
                            uid: e.uid,
                            app_id: e.app_id,
                            instance_id: e.app_id
                        }).up();
                        this.sendIQ(i, this.notifyMediaStatusResponseSuccess, this.notifyMediaStatusResponseError)
                    }
                }, {
                    key: "notifyMediaStatusResponseSuccess",
                    value: function(e) {
                        this.getEventHandler("notify_media_status")(!0, {
                            msg: "notify_media_status success"
                        })
                    }
                }, {
                    key: "notifyMediaStatusResponseError",
                    value: function(e) {
                        this.genErrorCallback(e, "notify_media_status")()
                    }
                }, {
                    key: "changeSettingRequest",
                    value: function(e, t) {
                        var n = R({
                            type: "set"
                        }).c("change_setting", {
                            xmlns: "tencent:wemeet:meeting_ctrl"
                        }).c("type").t(t).up().c("attach").c("id", {
                            uid: e.uid,
                            app_id: e.app_id,
                            instance_id: e.app_id
                        }).up();
                        this.sendIQ(n, this.changeSettingResponseSuccess, this.changeSettingResponseRequest)
                    }
                }, {
                    key: "changeSettingResponseSuccess",
                    value: function() {
                        this.getEventHandler("change_setting")(!0, {
                            msg: "change_setting success"
                        })
                    }
                }, {
                    key: "changeSettingResponseRequest",
                    value: function() {
                        this.genErrorCallback(msg, "change_setting")()
                    }
                }, {
                    key: "handsUpRequest",
                    value: function(e, t, n) {
                        var i, o = R({
                                type: "set"
                            }).c("handsup", {
                                xmlns: "tencent:wemeet:meeting_ctrl"
                            }).c("type", t.toString()).up().c("meeting_id", e).up().c("permission_list"),
                            s = r(n);
                        try {
                            for (s.s(); !(i = s.n()).done;) {
                                var a = i.value;
                                o.c("permission", {
                                    type: a
                                }).up()
                            }
                        } catch (e) {
                            s.e(e)
                        } finally {
                            s.f()
                        }
                        this.sendIQ(o, this.handsUpResponseSuccess, this.handsUpResponseError)
                    }
                }, {
                    key: "handsUpResponseSuccess",
                    value: function(e) {
                        console.log("xmpp service handsUpResponseSuccess"), this.getEventHandler("hands_up")(!0, {
                            msg: "hands_up success"
                        })
                    }
                }, {
                    key: "handsUpResponseError",
                    value: function(e) {
                        this.genErrorCallback(e, "hands_up")()
                    }
                }, {
                    key: "handleHandsUpRequest",
                    value: function(e, t, n, i) {
                        var r = R({
                            type: "set"
                        }).c("handle_handsup", {
                            xmlns: "tencent:wemeet:meeting_ctrl"
                        }).c("meeting_id").t(e).up().c("id", {
                            app_uid: t.uid,
                            app_id: t.app_id,
                            instance_id: t.instance_id,
                            user_type: t.user_type
                        }).up().c("permission_list").c("permission", {
                            type: n,
                            is_grant: i
                        }).up().up();
                        this.sendIQ(r, this.handleHandsUpResponseSuccess, this.handleHandsUpResponseError)
                    }
                }, {
                    key: "handleHandsUpResponseSuccess",
                    value: function(e) {
                        this.getEventHandler("handle_hands_up")(!0, u({
                            msg: "handle_hands_up success, msg:"
                        }, "msg", e))
                    }
                }, {
                    key: "handleHandsUpResponseError",
                    value: function(e) {
                        this.genErrorCallback(e, "handle_hands_up")()
                    }
                }, {
                    key: "createMeetingRequest",
                    value: function(e) {
                        var t = R({
                            type: "set"
                        }).c("schedule", {
                            xmlns: "tencent:wemeet:meeting"
                        });
                        if (e.hasOwnProperty("subject") && (e.subject = N(e.subject)), e.hasOwnProperty("location") && (e.location = N(e.location)), e.hasOwnProperty("password") && (e.password = N(e.password)), e.hasOwnProperty("is_quick_meeting") ? e.create_type = e.is_quick_meeting : e.create_type = "0", e.hasOwnProperty("auto_in_waiting_room")) {
                            var n = e.auto_in_waiting_room;
                            Object.values(m.AutoInWaitingRoom).includes(n) ? e.auto_in_waiting_room = n : this.logger.error("createMeetingRequest", "property passed in 'auto_in_waiting_room' is invalid. 0, 1, 2 expected, but we got ".concat(n))
                        }
                        if (e.hasOwnProperty("media_set_type")) {
                            var i = e.media_set_type;
                            Object.values(m.MediaSetType).includes(i) ? e.media_set_type = i : this.logger.error("createMeetingRequest", "property passed in 'media_set_type' is invalid. 0, 1, expected, but we got ".concat(i))
                        }
                        if (e.hasOwnProperty("allow_in_before_host")) {
                            var r = e.allow_in_before_host;
                            Object.values(m.AllowInBeforeHost).includes(r) ? e.allow_in_before_host = r : this.logger.error("createMeetingRequest", "property passed in 'allow_in_before_host' is invalid. 0, 1, 2 expected, but we got ".concat(r))
                        }["subject", "begin_time", "end_time", "location", "custom_buffer", "password", "create_type", "auto_in_waiting_room", "allow_in_before_host", "media_set_type"].map((function(n) {
                            e.hasOwnProperty(n) && t.c(n).t(e[n]).up()
                        })), t.c("invite_list");
                        for (var o = 0; o < e.invite_list.length; o++) {
                            var s = e.invite_list[o];
                            t.c("member", {
                                app_uid: s.app_uid,
                                app_id: s.app_id
                            }).up()
                        }
                        this.sendIQ(t, this.createMeetingResponseSuccess, this.createMeetingResponseError)
                    }
                }, {
                    key: "createMeetingResponseSuccess",
                    value: function(e) {
                        var t = e.getElementsByTagName("schedule")[0],
                            n = C(t, "meeting_id"),
                            i = I(C(t, "url")),
                            r = C(t, "meeting_code"),
                            o = C(t, "begin_time"),
                            s = C(t, "end_time"),
                            a = I(C(t, "password")),
                            u = C(t, "create_type"),
                            c = C(t, "media_set_type"),
                            l = C(t, "pstn_phone"),
                            d = {
                                meeting_id: n,
                                meeting_code: r,
                                meeting_state: C(t, "meeting_state", "0"),
                                url: i,
                                begin_time: o,
                                end_time: s,
                                password: a,
                                is_quick_meeting: u,
                                media_set_type: c,
                                pstn_phone: l,
                                pstn_code: t.getElementsByTagName("pstn_code")[0].childNodes[0].nodeValue,
                                host: {
                                    app_id: t.getElementsByTagName("host")[0].getAttribute("app_id"),
                                    app_uid: t.getElementsByTagName("host")[0].getAttribute("app_uid")
                                },
                                subject: I(C(t, "subject")),
                                location: I(C(t, "location")),
                                invite_list: []
                            };
                        this.getEventHandler("create_meeting")(!0, d)
                    }
                }, {
                    key: "createMeetingResponseError",
                    value: function(e) {
                        this.genErrorCallback(e, "create_meeting")()
                    }
                }, {
                    key: "queryMeetingItemListRequest",
                    value: function(e) {
                        var t = R({
                            type: "get",
                            id: this.getUniqueId("sendIQ")
                        }).c("query_meeting_item_list", {
                            xmlns: "tencent:wemeet:meeting"
                        });
                        if (e.hasOwnProperty("sub_action") ? t.c("sub_action").t(e.sub_action).up() : t.c("sub_action").t(m.QueryMeetingListSubAction.QueryListByBeginTime).up(), e.hasOwnProperty("begin_time") && t.c("begin_time").t(e.begin_time).up(), e.hasOwnProperty("end_time") && t.c("end_time").t(e.end_time).up(), e.hasOwnProperty("meeting_code") && t.c("meeting_code").t(e.meeting_code).up(), e.hasOwnProperty("creator_uid") && t.c("creator_uid").t(e.creator_uid).up(), e.hasOwnProperty("is_creator") && t.c("is_creator").t(e.is_creator).up(), e.hasOwnProperty("is_invitee") && t.c("is_invitee").t(e.is_invitee).up(), e.hasOwnProperty("meeting_last_modify_time") && t.c("meeting_last_modify_time").t(e.meeting_last_modify_time).up(), e.hasOwnProperty("meeting_id") && t.c("meeting_id").t(e.meeting_id).up(), e.hasOwnProperty("expect_meeting_count") && t.c("expect_meeting_count").t(e.expect_meeting_count).up(), t.c("meeting_state_list"), Array.isArray(e.meeting_state_list))
                            for (var n = 0, i = e.meeting_state_list.length; n < i; n++) t.c("meeting_state").t(e.meeting_state_list[n].toString()).up(), n === i - 1 && t.up();
                        else t.c("meeting_state").t("0").up(), t.c("meeting_state").t("2").up(), t.c("meeting_state").t("4").up(), t.c("meeting_state").t("5").up().up();
                        e.hasOwnProperty("create_type") ? t.c("create_type").t(e.create_type).up() : t.c("create_type").t(m.MeetingType.Normal).up(), e.hasOwnProperty("purpose_type") && t.c("purpose_type").t(e.purpose_type).up(), this.logger.report(1, "C2S-query_meeting_item_list", t.toString()), this.sendIQ(t, this.queryMeetingItemListResponseSuccess, this.queryMeetingItemListResponseError)
                    }
                }, {
                    key: "queryMeetingItemListResponseSuccess",
                    value: function(e) {
                        this.logger.report(1, "S2C-query_meeting_item_list", D(e));
                        var t = {
                                more: null,
                                meeting_item_list: []
                            },
                            n = this.getEventHandler("query_meeting_item_list"),
                            i = e.getElementsByTagName("query_meeting_item_list")[0];
                        if (0 !== i.childNodes.length) {
                            void 0 !== i.getElementsByTagName("has_remain_meeting")[0] && (t.more = "1" === C(i, "has_remain_meeting"));
                            var r = i.getElementsByTagName("meeting_item_list")[0];
                            if (void 0 !== r)
                                for (var o = 0; o < r.childNodes.length; o++) {
                                    var s = r.childNodes[o],
                                        a = this._parse_meeting_item(s);
                                    t.meeting_item_list.push(a)
                                }
                            n(!0, t)
                        } else n(!0, t)
                    }
                }, {
                    key: "_parse_meeting_item",
                    value: function(e) {
                        var t = {
                            meeting_id: C(e, "meeting_id"),
                            meeting_code: C(e, "meeting_code"),
                            breakout_room_status: C(e, "breakout_room_status"),
                            pmi_code: C(e, "pmi_code", ""),
                            meeting_state: C(e, "meeting_state"),
                            meeting_type: A(e, "meeting_type"),
                            url: I(C(e, "url")),
                            pstn_phone: C(e, "pstn_phone"),
                            pstn_code: C(e, "pstn_code"),
                            pstn_password: I(C(e, "pstn_password")),
                            begin_time: C(e, "begin_time"),
                            end_time: C(e, "end_time"),
                            last_modify_time: C(e, "last_modify_time"),
                            password: I(C(e, "password")),
                            need_auth: C(e, "need_auth", "1"),
                            auth_type: C(e, "auth_type", "0"),
                            is_quick_meeting: C(e, "create_type"),
                            host: {
                                app_id: O(e, "host", "app_id"),
                                app_uid: O(e, "host", "app_uid")
                            },
                            creator: {
                                appId: O(e, "creator", "app_id"),
                                appUid: O(e, "creator", "app_uid")
                            },
                            subject: I(C(e, "subject")),
                            location: I(C(e, "location")),
                            inviteList: [],
                            mediaSettings: [],
                            auto_in_waiting_room: A(e, "auto_in_waiting_room"),
                            allow_in_before_host: A(e, "allow_in_before_host"),
                            meeting_lock_settings: {
                                meeting_lock: A(e, "meeting_lock")
                            },
                            login_users_only: A(e, "login_users_only"),
                            creator_nickname: I(C(e, "creator_nickname")),
                            media_set_type: A(e, "media_set_type"),
                            need_enroll: A(e, "need_enroll"),
                            enroll_status: A(e, "enroll_status"),
                            is_anonymous: A(e, "is_anonymous"),
                            security_verify_type: A(e, "security_verify_type")
                        };
                        if (e.hasOwnProperty("invite_list"))
                            for (var n = e.getElementsByTagName("invite_list")[0], i = 0; i < n.childNodes.length; i++) {
                                var r = n.childNodes[i];
                                t.inviteList.push({
                                    app_id: r.getAttribute("app_id"),
                                    app_uid: r.getAttribute("app_uid")
                                })
                            }
                        if (t.mediaSettings = [], e.hasOwnProperty("media_settings_list"))
                            for (var o = e.getElementsByTagName("media_settings_list")[0], s = 0; s < o.childNodes.length; ++s) {
                                var a = o.childNodes[s];
                                t.mediaSettings.push({
                                    type: C(a, "type"),
                                    muteOnJoin: C(a, "mute_on_join")
                                })
                            }
                        var u = A(e, "meeting_info_mask_flag");
                        return isNaN(u) || (t.meeting_info_mask_flag = u), t
                    }
                }, {
                    key: "queryMeetingItemListResponseError",
                    value: function(e) {
                        this.logger.report(3, "S2C-query_meeting_item_list", D(e)), this.genErrorCallback(e, "query_meeting_item_list")()
                    }
                }, {
                    key: "queryUserStatus",
                    value: function(e) {
                        var t = this,
                            n = R({
                                type: "get"
                            }).c("query_user_status", {
                                xmlns: "tencent:wemeet:meeting_ctrl"
                            }).c("meeting_id").t(e.meeting_id).up().c("user_type").t(e.user_type).up().c("is_callin").t(e.is_callin).up();
                        n.c("participation_status_list");
                        var i, o = r(e.participation_status_list);
                        try {
                            for (o.s(); !(i = o.n()).done;) {
                                var s = i.value;
                                n.c("status").t(s).up()
                            }
                        } catch (e) {
                            o.e(e)
                        } finally {
                            o.f()
                        }
                        n.up(), this.sendIQ(n, (function(e, n) {
                            var i = e.getElementsByTagName("query_user_status")[0],
                                r = {
                                    user_list: [],
                                    meeting_id: C(i, "meeting_id"),
                                    sender_data: n
                                },
                                o = i.getElementsByTagName("list");
                            if (o.length > 0)
                                for (var s = o[0].childNodes, a = 0; a < s.length; ++a) r.user_list.push(t._parse_user_status(s[a]));
                            t.getEventHandler("query_user_status")(!0, r)
                        }), (function(e, n) {
                            t.genErrorCallback(e, "query_user_status")()
                        }), {
                            queryParams: e
                        })
                    }
                }, {
                    key: "queryMeetingPayInfoRequest",
                    value: function(e) {
                        var t = this,
                            n = R({
                                type: "set"
                            }).c("query_meeting_pay_info", {
                                xmlns: "tencent:wemeet:query"
                            }).c("meeting_id").t(e);
                        this.sendIQ(n, (function(e, n) {
                            var i = e.getElementsByTagName("query_meeting_pay_info")[0],
                                r = {
                                    meeting_id: C(i, "meeting_id"),
                                    expire_time: parseInt(C(i, "expire_time")),
                                    countdown_time: parseInt(C(i, "countdown_time")),
                                    member_limit: parseInt(C(i, "member_limit")),
                                    member_count: parseInt(C(i, "member_count")),
                                    countdown_member: parseInt(C(i, "countdown_member")),
                                    pstn_time: parseInt(C(i, "pstn_time")),
                                    owner_nickname: C(i, "owner_nickname")
                                };
                            t.getEventHandler("query_meeting_pay_info")(!0, r)
                        }), (function(e, n) {
                            t.genErrorCallback(e, "query_meeting_pay_info")()
                        }), {
                            queryParams: {
                                meetingId: e
                            }
                        })
                    }
                }, {
                    key: "modifyMeetingItemRequest",
                    value: function(e) {
                        var t = R({
                            type: "set"
                        }).c("modify", {
                            xmlns: "tencent:wemeet:meeting"
                        }).c("meeting_id").t(e.meeting_id).up();
                        if (e.hasOwnProperty("subject") && t.c("subject").t(N(e.subject)).up(), e.hasOwnProperty("begin_time") && t.c("begin_time").t(e.begin_time).up(), e.hasOwnProperty("end_time") && t.c("end_time").t(e.end_time).up(), e.hasOwnProperty("password") && t.c("password").t(N(e.password)).up(), e.hasOwnProperty("location") && t.c("location").t(N(e.location)).up(), e.hasOwnProperty("host") && t.c("host", {
                                app_uid: e.host.app_uid,
                                app_id: e.host.app_id
                            }).up(), e.hasOwnProperty("invite_list")) {
                            t.c("invite_list");
                            for (var n = 0; n < e.invite_list.length; n++) {
                                var i = e.invite_list[n];
                                t.c("member", {
                                    app_uid: i.app_uid,
                                    app_id: i.app_id
                                }).up()
                            }
                        }
                        if (e.hasOwnProperty("auto_in_waiting_room") && (0 !== e.auto_in_waiting_room && 1 !== e.auto_in_waiting_room && 2 !== e.auto_in_waiting_room ? this.logger.error("modifyMeetingItemRequest", "'auto_in_waiting_room' expected to be either Number 0, Number 1 or Number 2, but got ".concat(e.auto_in_waiting_room)) : t.c("auto_in_waiting_room").t(e.auto_in_waiting_room).up()), e.hasOwnProperty("allow_in_before_host\t") && (0 !== e.allow_in_before_host && 1 !== e.allow_in_before_host && 2 !== e.allow_in_before_host ? this.logger.error("modifyMeetingItemRequest", "'allow_in_before_host' expected to be either Number 0, Number 1 or Number 2, but got ".concat(e.allow_in_before_host)) : t.c("allow_in_before_host").t(e.allow_in_before_host).up()), e.hasOwnProperty("local_settings_list"))
                            for (t.c("local_settings_list"), n = 0; n < e.local_settings_list.length; n++) i = e.local_settings_list[n], t.c("local_settings").c("type").t(i.type).up().c("allow_record").t(i.allow_record).up().up();
                        this.sendIQ(t, this.modifyMeetingItemResponseSuccess, this.modifyMeetingItemResponseError)
                    }
                }, {
                    key: "modifyMeetingItemResponseSuccess",
                    value: function(e) {
                        e.getElementsByTagName("modify")[0], this.getEventHandler("modify_meeting")(!0, {
                            msg: "modify meeting info success"
                        })
                    }
                }, {
                    key: "modifyMeetingItemResponseError",
                    value: function(e) {
                        this.genErrorCallback(e, "modify_meeting")
                    }
                }, {
                    key: "cancelMeetingRequest",
                    value: function(e) {
                        var t = R({
                            type: "set"
                        }).c("cancel", {
                            xmlns: "tencent:wemeet:meeting"
                        }).c("meeting_id").t(e.meeting_id).up().c("reason", {
                            code: e.code
                        }).t(e.reason).up();
                        this.sendIQ(t, this.cancelMeetingResponseSuccess, this.cancelMeetingResponseError)
                    }
                }, {
                    key: "cancelMeetingResponseSuccess",
                    value: function(e) {
                        e.getElementsByTagName("cancel")[0], this.getEventHandler("cancel_meeting")(!0, {})
                    }
                }, {
                    key: "cancelMeetingResponseError",
                    value: function(e) {
                        this.genErrorCallback(e, "cancel_meeting")()
                    }
                }, {
                    key: "joinMeetingRequest",
                    value: function(e) {
                        var t = e.hasOwnProperty("join_from") && !isNaN(e.join_from) ? e.join_from : 0,
                            n = R({
                                type: "set",
                                id: this.getUniqueId("sendIQ")
                            }).c("join", {
                                xmlns: "tencent:wemeet:meeting"
                            }).c("nickname").t(N(e.nickname)).up().c("join_from").t(t).up().c("default_auth_bits").t(e.default_auth_bits).up(),
                            i = {
                                meeting_code: e.meeting_code
                            };
                        e.hasOwnProperty("password") && n.c("password").t(N(e.password)).up(), e.hasOwnProperty("token") && n.c("token").t(e.token).up(), e.hasOwnProperty("meeting_code") && n.c("meeting_code").t(e.meeting_code).up(), e.hasOwnProperty("meeting_id") && n.c("meeting_id").t(e.meeting_id).up(), e.hasOwnProperty("pmi_code") && n.c("pmi_code").t(e.pmi_code).up(), e.hasOwnProperty("country_code") && n.c("country_code").t(e.country_code).up(), e.hasOwnProperty("phone") && n.c("phone").t(e.phone).up(), e.hasOwnProperty("verification_code") && n.c("verification_code").t(e.verification_code).up(), e.hasOwnProperty("media_set_type") && n.c("media_set_type").t(e.media_set_type).up(), e.hasOwnProperty("meeting_appid") && n.c("meeting_appid").t(e.meeting_appid).up(), e.hasOwnProperty("im") && (n.c("im"), e.im.hasOwnProperty("im_type") && n.c("im_type").t(e.im.im_type).up().up()), e.hasOwnProperty("rs") && n.c("rs").t(e.rs).up(), e.hasOwnProperty("sign_type") && (n.c("sign_type").t(e.sign_type).up(), i.sign_type = e.sign_type), e.hasOwnProperty("customer_data") && n.c("customer_data").t(e.customer_data).up(), this.logger.report(1, "C2S-join", n.toString()), this.sendIQ(n, this.joinMeetingResponseSuccess, this.joinMeetingResponseError, i)
                    }
                }, {
                    key: "joinMeetingResponseSuccess",
                    value: function(e, t) {
                        this.logger.report(1, "S2C-join", D(e));
                        var n = e.getElementsByTagName("join")[0];
                        if (0 < n.getElementsByTagName("error").length && "22328" !== O(n, "error", "code")) {
                            var i = this.getEventHandler("join_meeting"),
                                r = {};
                            try {
                                var o = O(n, "error", "code"),
                                    s = I(C(n, "error"));
                                (r = {
                                    meeting_id: C(n, "meeting_id"),
                                    meeting_code: t.meeting_code,
                                    meeting_type: C(n, "meeting_type"),
                                    pmi_code: C(n, "pmi_code", ""),
                                    error: s,
                                    code: o
                                }).meetingInUseList = [];
                                var a = n.getElementsByTagName("meeting_in_use_list")[0];
                                if (void 0 !== a)
                                    for (var u = 0; u < a.childNodes.length; u++) {
                                        var c = a.childNodes[u];
                                        r.meetingInUseList.push({
                                            meeting_id: c.getElementsByTagName("meeting_id")[0].childNodes[0].nodeValue,
                                            meeting_code: c.getElementsByTagName("meeting_code")[0].childNodes[0].nodeValue,
                                            meeting_type: C(n, "meeting_type"),
                                            pmi_code: C(c, "pmi_code", ""),
                                            subject: I(c.getElementsByTagName("subject")[0].childNodes[0].nodeValue)
                                        })
                                    }
                            } catch (e) {
                                console.error("parse join_meeting error response which is type of result failed: ", e)
                            }
                            i(!1, r)
                        } else {
                            var l = null;
                            if (A(n, "enter_room_type") === m.RoomType.WAITING_ROOM) {
                                (l = {
                                    meeting_id: n.getElementsByTagName("meeting_id")[0].childNodes[0].nodeValue,
                                    meeting_code: t.meeting_code,
                                    meeting_type: C(n, "meeting_type"),
                                    pmi_code: C(n, "pmi_code", ""),
                                    av_user_id: n.getElementsByTagName("av_user_id")[0].childNodes[0].nodeValue,
                                    enter_room_type: m.RoomType.WAITING_ROOM,
                                    unique_id: this.get_unique_id(n)
                                }).host_status = {};
                                var d = n.getElementsByTagName("host_status")[0];
                                void 0 !== d && (l.host_status.status = A(d, "status"), l.host_status.msg = C(d, "msg"))
                            } else {
                                (l = {
                                    meeting_id: n.getElementsByTagName("meeting_id")[0].childNodes[0].nodeValue,
                                    meeting_code: t.meeting_code,
                                    meeting_type: C(n, "meeting_type"),
                                    pmi_code: C(n, "pmi_code", ""),
                                    av_room_id: n.getElementsByTagName("av_room_id")[0].childNodes[0].nodeValue,
                                    av_user_id: n.getElementsByTagName("av_user_id")[0].childNodes[0].nodeValue,
                                    enter_room_type: m.RoomType.MEETING_ROOM,
                                    app_id: n.getElementsByTagName("app_id")[0].childNodes[0].nodeValue,
                                    media_platform_auth_token: C(n, "media_platform_auth_token"),
                                    qcloud_user_signature: C(n, "qcloud_user_signature"),
                                    qcloud_user_private_map_key: C(n, "qcloud_user_private_map_key"),
                                    expire_time: A(n, "expire_time"),
                                    av_feature_switches: C(n, "av_feature_switches"),
                                    watermark_content: I(C(n, "watermark_content")),
                                    participate_id: C(n, "participate_id"),
                                    role: A(n, "role"),
                                    code: O(n, "error", "code"),
                                    meeting_type_flags: C(n, "meeting_type_flags")
                                }).unique_id = C(n, "unique_id"), l.defaultMediaStateList = [];
                                var h = n.getElementsByTagName("default_media_state_list")[0];
                                if (void 0 !== h)
                                    for (var _ = 0; _ < h.childNodes.length; _++) {
                                        var p = h.childNodes[_],
                                            g = p.getAttribute("type"),
                                            f = p.getAttribute("state"),
                                            v = p.getAttribute("reason_bits");
                                        l.defaultMediaStateList.push({
                                            type: g,
                                            state: f,
                                            reason_bits: v
                                        })
                                    }
                                l.media_platform = {};
                                var y = n.getElementsByTagName("media_platform")[0];
                                if (void 0 !== y && (l.media_platform = {
                                        room_id: C(y, "room_id"),
                                        auth_token: C(y, "auth_token"),
                                        expire_time: A(y, "expire_time"),
                                        media_access_info: C(y, "media_access_info"),
                                        auth_bits: A(y, "auth_bits"),
                                        room_type: A(y, "room_type")
                                    }), t.sign_type === m.SignType.UseTRTC) {
                                    var S = n.getElementsByTagName("trtc_token")[0];
                                    S ? l.trtc_token = {
                                        group_id: C(S, "group_id", ""),
                                        set_flag: C(S, "set_flag", ""),
                                        priv_map: C(S, "priv_map", ""),
                                        usr_sig: C(S, "usr_sig", "")
                                    } : this.logger.report(3, "assert", "sign_type is trtc, but cannot find 'trtc_token'")
                                }
                                l.set_flag = C(n, "set_flag", ""), l.im = {};
                                var b = n.getElementsByTagName("im")[0];
                                if (void 0 !== b) {
                                    l.im.im_type = C(b, "im_type");
                                    var E = b.getElementsByTagName("qcloud_im_sdk")[0];
                                    void 0 !== E && (l.im.qcloud_im_sdk = {
                                        group_id: E.getAttribute("group_id"),
                                        attendee_group_id: E.getAttribute("attendee_group_id")
                                    })
                                }
                                l.warmup_media = {};
                                var w = n.getElementsByTagName("warmup_media")[0];
                                void 0 !== w && (l.warmup_media.warmup_type = C(w, "warmup_type"))
                            }
                            this.getEventHandler("join_meeting")(!0, l)
                        }
                    }
                }, {
                    key: "get_unique_id",
                    value: function(e) {
                        var t, n;
                        if (!e) return this.logger.report(3, "getUniqueId", "node must not be null"), "";
                        var i = e.getElementsByTagName("unique_id")[0];
                        if (i && (null === (t = i.childNodes[0]) || void 0 === t ? void 0 : t.nodeValue)) return i.childNodes[0].nodeValue;
                        var r = e.getElementsByTagName("av_user_id")[0];
                        return r && (null === (n = r.childNodes[0]) || void 0 === n ? void 0 : n.nodeValue) ? r.childNodes[0].nodeValue : ""
                    }
                }, {
                    key: "startMeetingPing",
                    value: function(e, t) {
                        var n = this;
                        this.cancelXmppPing(), this.meetingPingTimer && (clearInterval(this.meetingPingTimer), this.meetingPingTimer = null), this.meetingPingTimer = setInterval((function() {
                            e > 0 && n.meetingPingRequest(e, t)
                        }), 5e3)
                    }
                }, {
                    key: "stopMeetingPing",
                    value: function() {
                        this.meetingPingTimer && (clearInterval(this.meetingPingTimer), this.meetingPingTimer = null, this.logger.report(1, "ping", "meeting ping stopped."))
                    }
                }, {
                    key: "refreshMediaAuthInfo",
                    value: function(e) {
                        var t = R({
                            type: "get"
                        }).c("refresh_media_auth_info", {
                            xmlns: "tencent:wemeet:meeting_ctrl"
                        }).c("meeting_id").t(e);
                        this.sendIQ(t, this.refreshMediaAuthInfoResponseSuccess, this.refreshMediaAuthInfoResponseError)
                    }
                }, {
                    key: "refreshMediaAuthInfoResponseSuccess",
                    value: function(e) {
                        var t = this.getEventHandler("refresh_media_auth_info"),
                            n = e.getElementsByTagName("refresh_media_auth_info")[0];
                        if (0 < n.getElementsByTagName("error").length) {
                            t(!1, {
                                error: I(C(n, "error")),
                                errorcode: O(n, "error", "code")
                            })
                        } else {
                            var i = {};
                            i.meeting_id = C(n, "meeting_id"), i.qcloud_user_private_map_key = C(n, "qcloud_user_private_map_key"), i.qcloud_user_signature = C(n, "qcloud_user_signature"), i.media_platform_expire_time = A(n, "media_platform_expire_time", 0);
                            var r = this._parse_trtc_token(n);
                            null !== r && (i.trtc_token = r), t(!0, i)
                        }
                    }
                }, {
                    key: "refreshMediaAuthInfoResponseError",
                    value: function(e) {
                        this.genErrorCallback(e, "refresh_media_auth_info")()
                    }
                }, {
                    key: "joinMeetingResponseError",
                    value: function(e) {
                        this.logger.report(3, "S2C-join", D(e));
                        try {
                            var t = e.getElementsByTagName("join")[0],
                                n = O(t, "error", "code"),
                                i = I(C(t, "error"));
                            if ("13426" === n) {
                                var r = {
                                    code: n,
                                    dialogConfig: JSON.parse(i)
                                };
                                return void this.getEventHandler("join_meeting")(!1, r)
                            }
                        } catch (e) {
                            this.logger.report(3, "parse join response error node failed.", e.message)
                        }
                        this.genErrorCallback(e, "join_meeting")()
                    }
                }, {
                    key: "leaveMeetingRequest",
                    value: function(e) {
                        var t = this,
                            n = e || {},
                            i = n.meeting_id,
                            r = n.room_type,
                            o = n.reason;
                        if (r == m.RoomType.MEETING_ROOM) {
                            var s = R({
                                type: "set",
                                id: this.getUniqueId("sendIQ")
                            }).c("user_status", {
                                xmlns: "tencent:wemeet:meeting_ctrl"
                            }).c("meeting_id").t(i).up().c("type").t(2).up();
                            this.logger.report(1, "C2S-user_status(leave)", s.toString()), this.sendIQ(s, (function(e) {
                                t.logger.report(1, "S2C-user_status(leave)", D(e))
                            }), (function(e) {
                                t.logger.report(3, "S2C-user_status(leave)", JSON.stringify(e))
                            }))
                        }
                        var a = R({
                            type: "set",
                            id: this.getUniqueId("sendIQ")
                        }).c("leave", {
                            xmlns: "tencent:wemeet:meeting"
                        }).c("meeting_id").t(i).up().c("reason", {
                            code: o
                        }).t("").up().c("room_type").t(r).up();
                        this.logger.report(1, "C2S-leave", a.toString()), this.sendIQ(a, (function(e) {
                            t.logger.report(1, "S2C-leave", D(e))
                        }), (function(e) {
                            t.logger.report(3, "S2C-leave", JSON.stringify(e))
                        })), this.leaveMeetingResponseSuccess()
                    }
                }, {
                    key: "leaveMeetingResponseSuccess",
                    value: function(e, t) {
                        this.meetingPingTimer && (clearInterval(this.meetingPingTimer), this.meetingPingTimer = null), this.getEventHandler("leave_meeting")(!0, function(e) {
                            for (var t = 1; t < arguments.length; t++) {
                                var n = null != arguments[t] ? arguments[t] : {};
                                t % 2 ? i(Object(n), !0).forEach((function(t) {
                                    u(e, t, n[t])
                                })) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(n)) : i(Object(n)).forEach((function(t) {
                                    Object.defineProperty(e, t, Object.getOwnPropertyDescriptor(n, t))
                                }))
                            }
                            return e
                        }({
                            msg: "left from meeting"
                        }, t))
                    }
                }, {
                    key: "getReadableUserStatusType",
                    value: function(e) {
                        switch (e) {
                            case 1:
                                return "join";
                            case 2:
                                return "leave";
                            case 3:
                                return "update";
                            case 4:
                                return "kicked";
                            case 5:
                                return "heartbeats timeout";
                            default:
                                return "unknown"
                        }
                    }
                }, {
                    key: "sendUserStatusLeave",
                    value: function(e) {
                        var t = this;
                        return new Promise((function(n, i) {
                            var r = e || {},
                                o = r.meeting_id,
                                s = r.type,
                                a = void 0 === s ? 2 : s,
                                u = r.user_action,
                                c = void 0 === u ? null : u,
                                l = R({
                                    type: "set",
                                    id: t.getUniqueId("sendIQ")
                                }).c("user_status", {
                                    xmlns: "tencent:wemeet:meeting_ctrl"
                                }).c("meeting_id").t(o).up().c("type").t(a).up();
                            null !== c && l.c("user_action").t(c).up();
                            var d = "user_status(".concat(t.getReadableUserStatusType(a), ")");
                            t.logger.report(1, "C2S-".concat(d), l.toString()), t.sendIQ(l, (function(e) {
                                t.logger.report(1, "S2C-".concat(d), D(e)), n()
                            }), (function(e) {
                                i(t.getStanzaError({
                                    errorStanza: e,
                                    cmd: d
                                }))
                            }))
                        }))
                    }
                }, {
                    key: "sendLeave",
                    value: function(e) {
                        var t = this;
                        return new Promise((function(n, i) {
                            var r = e || {},
                                o = r.meeting_id,
                                s = r.reason,
                                a = r.room_type,
                                u = R({
                                    type: "set",
                                    id: t.getUniqueId("sendIQ")
                                }).c("leave", {
                                    xmlns: "tencent:wemeet:meeting"
                                }).c("meeting_id").t(o).up().c("reason", {
                                    code: s
                                }).t("").up().c("room_type").t(a).up();
                            t.logger.report(1, "C2S-leave", u.toString()), t.sendIQ(u, (function(e) {
                                t.logger.report(1, "S2C-leave", D(e)), n()
                            }), (function(e) {
                                i(t.getStanzaError({
                                    errorStanza: e,
                                    cmd: "leave"
                                }))
                            }))
                        }))
                    }
                }, {
                    key: "getStanzaError",
                    value: function(e) {
                        var t = e.errorStanza,
                            n = e.cmd,
                            i = "S2C-".concat(n);
                        if (null === t) return this.logger.report(3, i, "waiting for response timeout"), {
                            errcod: "-2",
                            detail: "timeout",
                            msg: "couldn't receive '".concat(i, "' until timeout.")
                        };
                        this.logger.report(3, i, D(t));
                        var r = {
                            errcod: "",
                            detail: "",
                            msg: ""
                        };
                        try {
                            r.errcod = O(t, "error", "code"), r.detail = O(t, "error", "detail"), r.msg = I(C(t, "error", "text node of <error> body is not defined yet"))
                        } catch (e) {
                            r.errcod = "-1", r.detail = "exception caught at getting error info from xmpp stanza", r.msg = "see log for detail", this.logger.report(3, "getStanzaError", "exception caught when getting error object from this stanza. see log for detail.")
                        } finally {
                            return r
                        }
                    }
                }, {
                    key: "backToWaitingRoomRequest",
                    value: function(e) {
                        var t = this;
                        return new Promise((function(n, i) {
                            var r = R({
                                type: "set",
                                id: t.getUniqueId("sendIQ")
                            }).c("user_status", {
                                xmlns: "tencent:wemeet:meeting_ctrl"
                            }).c("meeting_id").t(e).up().c("type").t(2).up().c("user_action").t(1).up();
                            t.logger.report(1, "C2S-user_status(leave, user_action=1)", r.toString()), t.sendIQ(r, (function(e) {
                                t.logger.report(1, "S2C-user_status(leave, user_action=1)", D(e)), n()
                            }), (function(e) {
                                t.logger.report(3, "S2C-user_status(leave, user_action=1)", D(e)), i(e)
                            }))
                        }))
                    }
                }, {
                    key: "finishKickedOutRequest",
                    value: function(e) {
                        var t = this,
                            n = R({
                                type: "set",
                                id: this.getUniqueId("sendIQ")
                            }).c("user_status", {
                                xmlns: "tencent:wemeet:meeting_ctrl"
                            }).c("meeting_id").t(e.meetingId).up().c("type").t(4).up();
                        this.logger.report(1, "C2S-user_status(kickout)", n.toString()), this.sendIQ(n, (function(e) {
                            t.logger.report(1, "S2C-user_status(kickout)", D(e))
                        }), (function(e) {
                            t.logger.report(3, "S2C-user_status(kickout)", JSON.stringify(e))
                        }));
                        var i = e.room_type || 0,
                            r = R({
                                type: "set"
                            }).c("leave", {
                                xmlns: "tencent:wemeet:meeting"
                            }).c("meeting_id").t(e.meetingId).up().c("reason", {
                                code: e.reasonCode
                            }).t("").up().c("room_type").t(i).up();
                        this.logger.report(1, "C2S-leave(kickout)", r.toString()), this.sendIQ(r, (function(e) {
                            t.logger.report(1, "S2C-leave(kickout)", D(e))
                        }), (function(e) {
                            t.logger.report(3, "S2C-leave(kickout)", JSON.stringify(e))
                        })), this.leaveMeetingResponseSuccess()
                    }
                }, {
                    key: "dissolveMeetingRequest",
                    value: function(e) {
                        var t = R({
                            type: "set"
                        }).c("dissolve", {
                            xmlns: "tencent:wemeet:meeting"
                        }).c("meeting_id").t(e.meeting_id).up().c("reason", {
                            code: e.code
                        }).t(e.reason).up();
                        this.sendIQ(t, this.dissolveMeetingResponseSuccess, this.dissolveMeetingResponseError)
                    }
                }, {
                    key: "dissolveMeetingResponseSuccess",
                    value: function(e) {
                        var t = e.getElementsByTagName("dissolve")[0];
                        this.getEventHandler("dissolve_meeting")(!0, {
                            msg: "dissolve meeting success",
                            data: t
                        })
                    }
                }, {
                    key: "dissolveMeetingResponseError",
                    value: function(e) {
                        this.genErrorCallback(e, "dissolve_meeting")()
                    }
                }, {
                    key: "modifyNicknameRequest",
                    value: function(e, t, n, i) {
                        var r = this,
                            o = R({
                                type: "set"
                            }).c("modify_user_info", {
                                xmlns: "tencent:wemeet:meeting_ctrl"
                            }).c("meeting_id").t(e).up().c("from_type").t(i).up().c("user_list").c("item").c("id", {
                                app_uid: t.uid,
                                app_id: t.app_id,
                                instance_id: t.instance_id,
                                user_type: t.user_type,
                                unique_id: t.unique_id
                            }).up().c("nickname").t(N(n));
                        this.sendIQ(o, (function(e) {
                            r.getEventHandler("modify_user_info")(!0, {
                                msg: "modify_user_info success",
                                nickname: n
                            })
                        }), (function(e) {
                            r.genErrorCallback(e, "modify_user_info")()
                        }))
                    }
                }, {
                    key: "setVideoLayoutRequest",
                    value: function() {}
                }, {
                    key: "kickoutRequest",
                    value: function(e, t, n) {
                        var i, o = this,
                            s = R({
                                type: "set"
                            }).c("kick_out", {
                                xmlns: "tencent:wemeet:meeting_ctrl"
                            }).c("meeting_id").t(e).up().c("reason", {
                                code: n
                            }).t(0).up().c("user_list"),
                            a = r(t);
                        try {
                            for (a.s(); !(i = a.n()).done;) {
                                var u = i.value;
                                2 == u.user_type && (u.instance_id = "0", u.app_id = "0"), s.c("id", {
                                    app_uid: u.uid,
                                    app_id: u.app_id,
                                    instance_id: u.instance_id,
                                    user_type: u.user_type
                                }).up()
                            }
                        } catch (e) {
                            a.e(e)
                        } finally {
                            a.f()
                        }
                        this.sendIQ(s, (function(e) {
                            o.getEventHandler("kickout")(!0, {
                                msg: "modify_user_info success",
                                data: e
                            })
                        }), (function(e) {
                            o.genErrorCallback(e, "kickout")()
                        }))
                    }
                }, {
                    key: "sendXmppPing",
                    value: function() {
                        var e = this,
                            t = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : 5e3;
                        this.xmppPingTimer = setTimeout((function() {
                            e.xmppPingRequest()
                        }), t)
                    }
                }, {
                    key: "cancelXmppPing",
                    value: function() {
                        this.xmppPingTimer && (clearTimeout(this.xmppPingTimer), this.xmppPingTimer = 0)
                    }
                }, {
                    key: "xmppPingRequest",
                    value: function() {}
                }, {
                    key: "meetingPingRequest",
                    value: function(e, t) {
                        var n = this,
                            i = R({
                                type: "get"
                            }).c("ping", {
                                xmlns: "tencent:wemeet:ping"
                            }).c("meeting_id").t(e).up().c("type").t(t).up();
                        this.sendIQ(i, (function(e) {
                            return e
                        }), (function(e) {
                            if (console.log(e), void 0 !== e && e) {
                                n.meetingPingTimer && (clearInterval(n.meetingPingTimer), n.meetingPingTimer = null);
                                var t = e.getElementsByTagName("ping")[0],
                                    i = C(t, "error"),
                                    r = O(t, "error", "code");
                                console.log("meeting ping error, code:", r, ", msg:", i), n.getEventHandler("leave_meeting")(!0, {
                                    msg: "leave from meeting bacause ping recv bad rep."
                                })
                            }
                        }))
                    }
                }, {
                    key: "queryMeetingSettingsRequest",
                    value: function(e) {
                        var t = this,
                            n = R({
                                type: "get",
                                id: this.getUniqueId("sendIQ")
                            }).c("query", {
                                xmlns: "tencent:wemeet:meeting_settings"
                            }).c("meeting_id").t(e);
                        this.logger.report(1, "C2S-query_meeting_settings", n.toString()), this.sendIQ(n, (function(e) {
                            t.logger.report(1, "S2C-query_meeting_settings", D(e));
                            var n = e.getElementsByTagName("query")[0],
                                i = t._parse_meeting_settings(n);
                            t.getEventHandler("query_meeting_settings")(!0, i)
                        }), (function(e) {
                            t.logger.report(3, "S2C-query_meeting_settings", D(e)), t.genErrorCallback(e, "query_meeting_settings")()
                        }))
                    }
                }, {
                    key: "queryUiCfgRequest",
                    value: function() {
                        var e = this,
                            t = R({
                                type: "get",
                                id: this.getUniqueId("sendIQ")
                            }).c("query_ui_config", {
                                xmlns: "tencent:wemeet:ui_config"
                            });
                        this.logger.report(1, "C2S-query_ui_config", t.toString()), this.sendIQ(t, (function(t) {
                            e.logger.report(1, "S2C-query_ui_config", D(t));
                            var n = t.getElementsByTagName("query_ui_config")[0],
                                i = e._parse_query_ui_config(n);
                            e.getEventHandler("query_ui_config")(!0, i)
                        }), (function(t) {
                            e.logger.report(3, "S2C-query_ui_config", D(t)), e.genErrorCallback(t, "query_ui_config")()
                        }))
                    }
                }, {
                    key: "freeXMPPRequest",
                    value: function(e) {
                        this.connection.sendRawString(e)
                    }
                }, {
                    key: "queryLocalPermission",
                    value: function(e, t) {
                        var n = this,
                            i = R({
                                type: "set"
                            }).c("local_permission", {
                                xmlns: "tencent:wemeet:local_ctrl"
                            }).c("meeting_id").t(e).c("permission_list").c("permission", {
                                type: t
                            });
                        this.sendIQ(i, (function(e) {
                            var t = n.getEventHandler("query_local_permission"),
                                i = e.getElementsByTagName("local_permission")[0],
                                r = O(i, "error", "code");
                            r ? t(!1, {
                                errcod: r
                            }) : t(!0, {})
                        }), (function(e) {
                            n.genErrorCallback(e, "query_local_permission")()
                        }))
                    }
                }, {
                    key: "switchLocalPermissionPush",
                    value: function(e) {
                        console.log("on Push switch_local_permission, msg:", e);
                        var t = e.getElementsByTagName("switch_local_permission")[0],
                            n = t.getElementsByTagName("id")[0],
                            i = {
                                uid: n.getAttribute("app_uid"),
                                app_id: n.getAttribute("app_id"),
                                instance_id: n.getAttribute("instance_id"),
                                user_type: n.getAttribute("user_type")
                            },
                            r = {
                                meeting_id: C(t, "meeting_id"),
                                id: i,
                                permission_list: []
                            },
                            o = t.getElementsByTagName("permission_list")[0].getElementsByTagName("permission");
                        if (o && o.length)
                            for (var s = 0; s < o.length; ++s) {
                                var a = o[s];
                                a && r.permissionList.push({
                                    type: parseInt(a.getAttribute("type")),
                                    action: C(a, "action")
                                })
                            }
                        this.getEventHandler("switch_local_permission")(!0, r)
                    }
                }, {
                    key: "switchUserRole",
                    value: function(e) {
                        console.log("on Push switch_user_role, msg:", e);
                        var t = e.getElementsByTagName("switch_user_role")[0],
                            n = {};
                        n.meetingId = C(t, "meeting_id");
                        var i = this._parse_media_platform(t);
                        null !== i && (n.media_platform = i), this.getEventHandler("switch_user_role")(!0, n)
                    }
                }, {
                    key: "cloudRecordState",
                    value: function(e) {
                        console.log("on Push cloud_record_state, msg:", e);
                        var t = this.getEventHandler("cloud_record_state");
                        if (!e) return t(!1, "empty response"), void this.logger.warn("empty response for cloud_record_state");
                        var n = e.getElementsByTagName("cloud_record_state"),
                            i = n[0];
                        if (!n || !i) return t(!1, 'invalid response: "cloud_record_state" tag not found'), void this.logger.warn('invalid response: "cloud_record_state" tag not found');
                        t(!0, this._parse_cloud_record_state(i))
                    }
                }, {
                    key: "queryCloudRecordState",
                    value: function(e) {
                        var t = R({
                            type: "get"
                        }).c("query_record_state", {
                            xmlns: "tencent:wemeet:cloud_record_state"
                        }).c("meeting_id").t(e).up();
                        this.sendIQ(t, this.queryCloudRecordStateSuccess.bind(this), this.queryCloudRecordStateError.bind(this))
                    }
                }, {
                    key: "queryCloudRecordStateSuccess",
                    value: function(e) {
                        console.log("on query_cloud_record_state success, msg:", e);
                        var t = this.getEventHandler("query_cloud_record_state");
                        if (!e) return this.logger.warn("empty response for query_cloud_record_state"), void t(!1, "empty response");
                        t(!0, this._parse_cloud_record_state(e))
                    }
                }, {
                    key: "queryCloudRecordStateError",
                    value: function(e) {
                        console.log("on query_cloud_record_state error, msg:", e), this.genErrorCallback(e, "query_cloud_record_state")()
                    }
                }, {
                    key: "_parse_cloud_record_state",
                    value: function(e) {
                        if (!e) return this.logger.error("_parse_cloud_record_state error: empty mainNode passed in"), null;
                        var t = {};
                        t.meetingId = C(e, "meeting_id"), t.state = A(e, "state");
                        var n = e.getElementsByTagName("stop_reason");
                        return n && n[0] ? t.stop_reason = {
                            code: parseInt(n[0].getAttribute("code"), 10),
                            msg: I(C(e, "stop_reason"))
                        } : this.logger.warn('attention: "stop_reason" tag not found, current state: '.concat(t.state)), t
                    }
                }, {
                    key: "reportMediaStreamStatusPush",
                    value: function(e) {
                        try {
                            for (var t = e.getElementsByTagName("report_media_stream_status")[0], n = t.getElementsByTagName("meeting_id")[0].childNodes[0].nodeValue, i = t.getElementsByTagName("list")[0].childNodes, r = {
                                    user_list: [],
                                    meeting_id: n
                                }, o = 0, s = i.length; o < s; o++) {
                                var a = i[o],
                                    u = this._parse_user_media_stream_status(a);
                                r.user_list.push(u)
                            }
                            this.getEventHandler("report_media_stream_status_push")(!0, r)
                        } catch (e) {
                            this.logger.report(3, "reportMediaStreamStatusPush", "failed to parse xmpp response 'report_media_stream_status': ".concat(e.message))
                        }
                    }
                }, {
                    key: "meetingInviteeNotifyPush",
                    value: function(e) {
                        var t = e.getElementsByTagName("meeting_invitee_notify")[0],
                            n = this._parse_meeting_invitee_updated(t);
                        this.getEventHandler("meeting_invitee_notify")(!0, n)
                    }
                }, {
                    key: "_parse_meeting_invitee_updated",
                    value: function(e) {
                        var t = {
                            action_type: A(e, "action_type"),
                            meeting_id: C(e, "meeting_id"),
                            meeting_code: C(e, "meeting_code"),
                            meeting_state: A(e, "meeting_state"),
                            begin_time: A(e, "begin_time"),
                            end_time: A(e, "end_time"),
                            last_modify_time: A(e, "last_modify_time"),
                            actual_begin_time: A(e, "actual_begin_time"),
                            actual_end_time: A(e, "actual_end_time"),
                            subject: I(C(e, "subject")),
                            describe: I(C(e, "describe")),
                            role_type: A(e, "role_type"),
                            auth_type: A(e, "auth_type"),
                            custom_buffer: I(C(e, "custom_buffer")),
                            creator_uid: C(e, "creator_uid"),
                            meeting_url: I(C(e, "meeting_url")),
                            create_type: A(e, "create_type"),
                            meeting_type: A(e, "meeting_type"),
                            creator: {
                                appId: O(e, "creator", "app_id"),
                                appUid: O(e, "creator", "app_uid"),
                                instanceId: O(e, "creator", "instance_id"),
                                userType: x(e, "creator", "user_type")
                            },
                            creator_nickname: I(C(e, "creator_nickname")),
                            meeting_type_flags: C(e, "role_typmeeting_type_flagse"),
                            si_enable: A(e, "si_enable")
                        };
                        if (e.hasOwnProperty("live_stream")) {
                            var n = e.getElementsByTagName("live_stream");
                            n && 1 === n.length ? t.live_stream = {
                                enable: A(n, "enable"),
                                view_url: A(n, "view_url"),
                                password: I(C(n, "password"))
                            } : this.logger.report(3, "_parse_meeting_invitee_updated", "node 'live_stream' doesn't exist, or appears more than once")
                        }
                        if (e.hasOwnProperty("recurring_rule")) {
                            var i = e.getElementsByTagName("recurring_rule");
                            i && 1 === i.length ? t.recurring_rule = {
                                first_start_time: A(i, "first_start_time"),
                                first_end_time: A(i, "first_end_time"),
                                recurring_type: A(i, "recurring_type"),
                                recurring_days: A(i, "recurring_days"),
                                until_type: A(i, "until_type"),
                                until_date: A(i, "until_date")
                            } : this.logger.report(3, "_parse_meeting_invitee_updated", "node 'recurring_rule' doesn't exist, or appears more than 1")
                        }
                        if (e.hasOwnProperty("appointed_host_list")) {
                            var r = e.getElementsByTagName("appointed_host_list");
                            if (r && 1 === r.length) {
                                for (var o = [], s = 0; s < r.childNodes.length; s++) {
                                    var a = r.childNodes[s];
                                    o.push({
                                        app_id: a.getAttribute("app_id"),
                                        app_uid: a.getAttribute("app_uid")
                                    })
                                }
                                t.appointed_host_list = o
                            } else this.logger.report(3, "_parse_meeting_invitee_updated", "node 'appointed_host_list' doesn't exist, or appears 2+")
                        }
                        if (e.hasOwnProperty("si_member_list")) {
                            var u = e.getElementsByTagName("si_member_list");
                            if (u && 1 === u.length) {
                                for (var c = [], l = 0; l < u.childNodes.length; l++) {
                                    var d = u.childNodes[l],
                                        h = d.getElementsByTagName("id"),
                                        _ = {
                                            id: {
                                                app_uid: h.getAttribute("app_uid"),
                                                app_id: h.getAttribute("app_id"),
                                                instance_id: h.getAttribute("instance_id"),
                                                user_type: Number(h.getAttribute("user_type"))
                                            },
                                            av_user_id: C(d, "av_user_id"),
                                            nickname: I(C(d, "nickname")),
                                            order_number: A(d, "order_number")
                                        };
                                    d.getElementsByTagName("phone") && (_.phone = {
                                        area: O(d, "phone", "area"),
                                        phone: C(d, "phone")
                                    }), d.getElementsByTagName("current_language") && (_.current_language = {
                                        id: O(d, "current_language", "id"),
                                        lang: C(d, "current_language")
                                    });
                                    var p = d.getElementsByTagName("language_list");
                                    if (p) {
                                        for (var g = [], m = 0; m < p.childNodes.length; m++) {
                                            var f = p.childNodes[m];
                                            g.push({
                                                id: f.getAttribute("id"),
                                                lang: f.nodeValue
                                            })
                                        }
                                        _.language_list = g
                                    }
                                    c.push(_)
                                }
                                t.si_member_list = c
                            } else this.logger.report(3, "_parse_meeting_invitee_updated", "node 'si_member_list' doesn't exist, or appears 2+")
                        }
                        return t
                    }
                }, {
                    key: "_parse_user_media_stream_status",
                    value: function(e) {
                        var t = e.getElementsByTagName("id")[0],
                            n = e.getElementsByTagName("audio")[0],
                            i = e.getElementsByTagName("network")[0],
                            r = {};
                        (r.id = this._parse_user_id(t), n) && (n.getElementsByTagName("mic_noise")[0] && (r.noise_type = x(n, "noise_type"), r.noise_value = A(n, "mic_noise")));
                        return i && (r.network_level = A(i, "network_level")), r
                    }
                }, {
                    key: "_parse_user_id",
                    value: function(e) {
                        if (!e) return this.logger.report(3, "_parse_user_id", "idNode must not be null"), {};
                        try {
                            var t = {
                                uid: e.getAttribute("app_uid"),
                                app_id: e.getAttribute("app_id"),
                                instance_id: e.getAttribute("instance_id"),
                                user_type: e.getAttribute("user_type"),
                                userType: Number(e.getAttribute("user_type")),
                                phone_number: e.getAttribute("phone_number"),
                                unique_id: e.getAttribute("unique_id")
                            };
                            return "2" == t.user_type && (t.device_type = e.getAttribute("device_type") || "0"), t
                        } catch (t) {
                            return this.logger.report(3, "_parse_user_id", "parsing id from idNode failed.\n        error message: ".concat(null == t ? void 0 : t.message, "\n        idNode: ").concat(D(e), "\n      ")), {}
                        }
                    }
                }, {
                    key: "queryParticipantsSummary",
                    value: function(e) {
                        var t = this,
                            n = R({
                                type: "get",
                                id: this.getUniqueId("sendIQ")
                            }).c("get_webinar_participants_summary", {
                                xmlns: "tencent:wemeet:webinar"
                            }).c("meeting_id").t(e).up();
                        this.sendIQ(n, (function(e) {
                            var n = t.getEventHandler("get_webinar_participants_summary"),
                                i = e.getElementsByTagName("get_webinar_participants_summary")[0],
                                r = C(i, "meeting_id"),
                                o = C(i, "cumulative_join_meeting_count") || 0,
                                s = C(i, "refresh_interval") || 1e4,
                                a = i.getElementsByTagName("attendee")[0];
                            n(!0, {
                                meetingId: r,
                                cumulative_join_meeting_count: o,
                                total_count: C(a, "total_count"),
                                refresh_interval: s
                            })
                        }), (function(e) {
                            t.genErrorCallback(e, "get_webinar_participants_summary")()
                        }))
                    }
                }, {
                    key: "applyPermissionWebinar",
                    value: function(e) {
                        var t = this,
                            n = "apply_permission",
                            i = R({
                                type: "set",
                                id: this.getUniqueId("sendIQ")
                            }).c(n, {
                                xmlns: "tencent:wemeet:permission_ctrl"
                            }).c("meeting_id").t(e.meeting_id).up().c("permission_switch").c("permission_type").t(e.permission_type).up().c("permission_state").t(e.permission_state).up().up();
                        this.logger.report(1, "C2S-".concat(n), i.toString()), this.sendIQ(i, (function(i) {
                            t.logger.report(1, "S2C-".concat(n), D(i)), t.getEventHandler(n)(!0, {
                                permission_type: e.permission_type,
                                permission_state: e.permission_state
                            })
                        }), (function(e) {
                            t.logger.report(3, "S2C-".concat(n), D(e)), t.genErrorCallback(e, n)()
                        }))
                    }
                }, {
                    key: "applyPermission",
                    value: function(e) {
                        var t = this,
                            n = "handle_apply_permission",
                            i = R({
                                type: "set",
                                id: this.getUniqueId("sendIQ")
                            }).c(n, {
                                xmlns: "tencent:wemeet:permission_ctrl"
                            }).c("meeting_id").t(e.meeting_id).up().c("permission_list").c("permission_switch").c("permission_type").t(e.permission_type).up().c("permission_state").t(e.permission_state).up().c("user_personal_key", {
                                tiny_id: e.user.tinyId,
                                app_id: e.user.appId,
                                instance: e.user.instanceId,
                                user_type: e.user.userType
                            }).up().up();
                        this.logger.report(1, "C2S-".concat(n), i.toString()), this.sendIQ(i, (function(e) {
                            t.logger.report(1, "S2C-".concat(n), D(e)), t.getEventHandler(n)(!0, {})
                        }), (function(e) {
                            t.logger.report(3, "S2C-".concat(n), D(e)), t.genErrorCallback(e, n)()
                        }))
                    }
                }, {
                    key: "raiseHand",
                    value: function(e) {
                        var t = this,
                            n = "member_raise_hand",
                            i = R({
                                type: "set",
                                id: this.getUniqueId("sendIQ")
                            }).c(n, {
                                xmlns: "tencent:wemeet:meeting_ctrl"
                            }).c("meeting_id").t(e.meeting_id).up().c("raise_hand").t(e.raise_hand).up();
                        this.logger.report(1, "C2S-".concat(n), i.toString()), this.sendIQ(i, (function(i) {
                            t.logger.report(1, "S2C-".concat(n), D(i)), t.getEventHandler(n)(!0, {
                                raise_hand: e.raise_hand
                            })
                        }), (function(e) {
                            t.logger.report(3, "S2C-".concat(n), D(e)), t.genErrorCallback(e, n)()
                        }))
                    }
                }, {
                    key: "putHandsDown",
                    value: function(e) {
                        var t = this,
                            n = "put_handsdown_with_user",
                            i = R({
                                type: "set",
                                id: this.getUniqueId("sendIQ")
                            }).c(n, {
                                xmlns: "tencent:wemeet:meeting_ctrl"
                            }).c("meeting_id").t(e.meeting_id).up().c("id", {
                                app_uid: e.user.app_uid,
                                app_id: e.user.app_id,
                                instance_id: e.user.instance_id,
                                user_type: e.user.user_type,
                                device_type: e.user.device_type
                            }).up().c("reason", {
                                code: e.reason.code
                            }).t(e.reason.detail);
                        this.logger.report(1, "C2S-".concat(n), i.toString()), this.sendIQ(i, (function(e) {
                            t.logger.report(1, "S2C-".concat(n), D(e)), t.getEventHandler(n)(!0, {
                                msg: e
                            })
                        }), (function(e) {
                            t.logger.report(3, "S2C-".concat(n), D(e)), t.genErrorCallback(e, n)()
                        }))
                    }
                }, {
                    key: "notifyRaiseHandListChangedPush",
                    value: function(e) {
                        var t = "notify_raise_hand_list_changed";
                        try {
                            var n = D(e);
                            this.logger.report(1, "S2C-".concat(t, "(PUSH)"), n);
                            for (var i = e.getElementsByTagName(t)[0], r = C(i, "meeting_id"), o = C(i, "meeting_code"), s = A(i, "total_count"), a = M(i, "has_new_member_raise_hand"), u = i.getElementsByTagName("the_recent_user_list")[0], c = (null == u ? void 0 : u.childNodes) || [], l = {
                                    meetingId: r,
                                    meetingCode: o,
                                    totalCount: s,
                                    hasNewMemberRaiseHand: a,
                                    theRecentUserList: []
                                }, d = 0, h = c.length; d < h; d++) {
                                var _ = c[d],
                                    p = {
                                        nickname: I(C(_, "nickname")),
                                        raise_hand_timestamp: A(_, "raise_hand_timestamp")
                                    };
                                l.theRecentUserList.push(p)
                            }
                            this.getEventHandler(t)(!0, l)
                        } catch (e) {
                            this.logger.report(3, "notifyRaiseHandListChangedPush", "failed to parse xmpp response '".concat(t, "': ").concat(e.message))
                        }
                    }
                }, {
                    key: "notifyUserBePutHandsdownPush",
                    value: function(e) {
                        var t = "notify_user_be_put_handsdown";
                        try {
                            var n = D(e);
                            this.logger.report(1, "S2C-".concat(t, "(PUSH)"), n);
                            var i = e.getElementsByTagName(t)[0],
                                r = {
                                    meetingId: C(i, "meeting_id"),
                                    raiseHand: A(i, "is_raise_hand"),
                                    ctrlUser: {
                                        appUid: O(i, "ctrl_user", "app_uid"),
                                        appId: O(i, "ctrl_user", "app_id"),
                                        instanceId: O(i, "ctrl_user", "instance_id"),
                                        userType: x(i, "ctrl_user", "user_type")
                                    },
                                    reason: {
                                        detail: C(i, "reason", ""),
                                        code: x(i, "reason", "code")
                                    }
                                };
                            this.getEventHandler(t)(!0, r)
                        } catch (e) {
                            this.logger.report(3, "notifyUserBePutHandsdownPush", "failed to parse xmpp response '".concat(t, "': ").concat(e.message))
                        }
                    }
                }, {
                    key: "putHandsDownAgainstGivenRoleGroup",
                    value: function(e) {
                        var t = this,
                            n = "put_handsdown_with_role_group",
                            i = R({
                                type: "set",
                                id: this.getUniqueId("sendIQ")
                            }).c(n, {
                                xmlns: "tencent:wemeet:meeting_ctrl"
                            }).c("meeting_id").t(e.meeting_id).up().c("role_group_type").t(e.role_group_type);
                        this.logger.report(1, "C2S-".concat(n), i.toString()), this.sendIQ(i, (function(e) {
                            t.logger.report(1, "S2C-".concat(n), D(e)), t.getEventHandler(n)(!0, {
                                msg: e
                            })
                        }), (function(e) {
                            t.logger.report(3, "S2C-".concat(n), D(e)), t.genErrorCallback(e, n)()
                        }))
                    }
                }, {
                    key: "notifyRoleGroupBePutHandsdownPush",
                    value: function(e) {
                        var t = "notify_role_group_be_put_handsdown";
                        try {
                            var n = D(e);
                            this.logger.report(1, "S2C-".concat(t, "(PUSH)"), n);
                            var i = e.getElementsByTagName(t)[0],
                                r = {
                                    meetingId: C(i, "meeting_id"),
                                    roleGroupType: A(i, "role_group_type"),
                                    ctrlUser: {
                                        appUid: O(i, "ctrl_user", "app_uid"),
                                        appId: O(i, "ctrl_user", "app_id"),
                                        instanceId: O(i, "ctrl_user", "instance_id"),
                                        userType: x(i, "ctrl_user", "user_type")
                                    }
                                };
                            this.getEventHandler(t)(!0, r)
                        } catch (e) {
                            this.logger.report(3, "notifyRoleGroupBePutHandsdownPush", "failed to parse xmpp response '".concat(t, "': ").concat(e.message))
                        }
                    }
                }, {
                    key: "notifyPermissionResultPush",
                    value: function(e) {
                        var t = "notify_permission_result";
                        try {
                            var n = D(e);
                            this.logger.report(1, "S2C-".concat(t, "(PUSH)"), n);
                            var i = e.getElementsByTagName(t)[0],
                                r = i.getElementsByTagName("permission_list")[0].getElementsByTagName("permission_switch")[0],
                                o = C(i, "meeting_id"),
                                s = C(r, "apply_id"),
                                a = C(r, "permission_type"),
                                u = C(r, "permission_state"),
                                c = {
                                    meetingId: o,
                                    permissionType: a,
                                    userPersonal: {
                                        tinyId: O(r, "user_personal_key", "tiny_id"),
                                        appId: O(r, "user_personal_key", "app_id"),
                                        instanceId: O(r, "user_personal_key", "instance_id"),
                                        userType: x(r, "user_personal_key", "user_type")
                                    },
                                    permissionState: u,
                                    applyId: s
                                };
                            this.getEventHandler(t)(!0, c)
                        } catch (e) {
                            this.logger.report(3, "notifyPermissionResultPush", "failed to parse xmpp response '".concat(t, "': ").concat(e.message))
                        }
                    }
                }, {
                    key: "directedPush",
                    value: function(e) {
                        var t = "directed_push";
                        try {
                            var n = D(e);
                            this.logger.report(1, "S2C-".concat(t, "(PUSH)"), n);
                            var i = e.getElementsByTagName(t)[0],
                                r = {
                                    meeting_id: C(i, "meeting_id"),
                                    type: A(i, "type"),
                                    content: I(C(i, "content"))
                                },
                                o = A(i, "sub_type");
                            isNaN(o) || (r.sub_type = o);
                            var s = i.getElementsByTagName("id")[0];
                            s && (r.id = function(e) {
                                if (!e) return {};
                                var t = {
                                    instance_id: e.getAttribute("instance_id"),
                                    uid: e.getAttribute("app_uid"),
                                    app_id: e.getAttribute("app_id"),
                                    user_type: e.getAttribute("user_type"),
                                    phone_number: e.getAttribute("phone_number"),
                                    device_type: e.getAttribute("device_type"),
                                    unique_id: e.getAttribute("unique_id")
                                };
                                return "2" == t.user_type && (t.device_type = e.getAttribute("device_type") || "0"), t
                            }(s));
                            var a = C(i, "av_user_id");
                            a && (r.av_user_id = a), this.getEventHandler(t)(!0, r)
                        } catch (e) {
                            this.logger.report(3, "directedPush", "failed to parse xmpp response '".concat(t, "': ").concat(e.message))
                        }
                    }
                }, {
                    key: "sendSecurityVerifyResult",
                    value: function(e) {
                        var t = this;
                        return new Promise((function(n, i) {
                            var r = e || {},
                                o = r.security_verify_type,
                                s = void 0 === o ? 0 : o,
                                a = r.data,
                                u = R({
                                    type: "set"
                                }).c("meeting_id").t(null == a ? void 0 : a.meeting_id).up().c("agree").t(null == a ? void 0 : a.agree).up().c("meeting_code").t(null == a ? void 0 : a.meeting_code).up().c("nickname").t(null == a ? void 0 : a.nickname).up(),
                                c = R({
                                    type: "set",
                                    id: t.getUniqueId("sendIQ")
                                }).c("security_verify_result_sync", {
                                    xmlns: "tencent:wemeet:meeting"
                                }).c("security_verify_type").t(s).up().c("data").t(N(u.toString())).up(),
                                l = "sendSecurityVerifyResult";
                            t.logger.report(1, "C2S-".concat(l), c.toString()), t.sendIQ(c, (function(e) {
                                t.logger.report(1, "S2C-".concat(l), D(e)), n()
                            }), (function(e) {
                                i(t.getStanzaError({
                                    errorStanza: e,
                                    cmd: l
                                }))
                            }))
                        }))
                    }
                }, {
                    key: "queryUserSig",
                    value: function() {
                        var e = R({
                            type: "get"
                        }).c("query_usersig", {
                            xmlns: "tencent:wemeet:usersig"
                        }).c("sig_list").c("sig", {
                            sig_type: "W6"
                        }).up().c("sig", {
                            sig_type: "W10"
                        }).up().c("sig", {
                            sig_type: "W15"
                        }).up().up();
                        this.logger.report(1, "C2S-".concat("query_user_sig"), e.toString()), this.sendIQ(e, this.queryUserSigResponseSuccess, this.queryUserSigResponseError)
                    }
                }, {
                    key: "queryUserSigResponseSuccess",
                    value: function(e) {
                        this.logger.report(1, "S2C-query_user_sig", D(e));
                        for (var t = this.getEventHandler("query_user_sig"), n = {
                                sig_list: []
                            }, i = e.getElementsByTagName("sig_list")[0], r = 0; r < i.childNodes.length; r++) {
                            var o = i.childNodes[r],
                                s = {
                                    sig_type: o.getAttribute("sig_type"),
                                    sig_validity: o.getAttribute("sig_validity"),
                                    user_sig: o.getAttribute("user_sig")
                                };
                            n.sig_list.push(s)
                        }
                        t(!0, n)
                    }
                }, {
                    key: "queryUserSigResponseError",
                    value: function(e) {
                        this.logger.report(3, "S2C-query_user_sig", D(e)), this.genErrorCallback(e, "query_user_sig")()
                    }
                }, {
                    key: "meetingNotice",
                    value: function(e) {
                        var t = "meeting_notice",
                            n = this.getEventHandler(t);
                        try {
                            var i = D(e);
                            this.logger.report(1, "S2C-".concat(t, "(PUSH)"), i);
                            var r = e.getElementsByTagName(t)[0];
                            n(!0, {
                                meeting_id: C(r, "meeting_id"),
                                notice_version: C(r, "notice_version")
                            })
                        } catch (e) {
                            this.logger.report(3, "meetingNotice", "failed to parse xmpp response '".concat(t, "': ").concat(e.message)), n(!1, e)
                        }
                    }
                }, {
                    key: "queryMeetingNotice",
                    value: function(e) {
                        var t = this;
                        return new Promise((function(n, i) {
                            var r = "queryMeetingNotice",
                                o = R({
                                    type: "get",
                                    id: t.getUniqueId("sendIQ")
                                }).c("query_meeting_notice", {
                                    xmlns: "tencent:wemeet:meeting_notice"
                                }).c("meeting_id").t(e).up().up();
                            t.logger.report(1, "C2S-".concat(r), o.toString()), t.sendIQ(o, (function(e) {
                                t.logger.report(1, "S2C-".concat(r), D(e));
                                var i = e.getElementsByTagName("query_meeting_notice")[0],
                                    o = {
                                        meeting_id: C(i, "meeting_id"),
                                        notice_type: C(i, "notice_type"),
                                        notice_version: C(i, "notice_version"),
                                        notice_content: C(i, "notice_content"),
                                        send_time: C(i, "send_time"),
                                        is_read: C(i, "is_read")
                                    },
                                    s = i.getElementsByTagName("sender")[0];
                                if (s) {
                                    var a = {
                                        app_uid: s.getAttribute("app_uid"),
                                        app_id: s.getAttribute("app_id"),
                                        instance_id: s.getAttribute("instance_id"),
                                        user_type: s.getAttribute("user_type"),
                                        device_type: s.getAttribute("device_type"),
                                        unique_id: s.getAttribute("unique_id"),
                                        phone_number: s.getAttribute("phone_number"),
                                        nickname: s.getAttribute("nickname")
                                    };
                                    o.sender = a
                                }
                                n(o)
                            }), (function(e) {
                                i(t.getStanzaError({
                                    errorStanza: e,
                                    cmd: r
                                }))
                            }))
                        }))
                    }
                }, {
                    key: "readMeetingNotice",
                    value: function(e, t) {
                        var n = this;
                        return new Promise((function(i, r) {
                            var o = "queryMeetingNotice",
                                s = R({
                                    type: "set",
                                    id: n.getUniqueId("sendIQ")
                                }).c("read_meeting_notice", {
                                    xmlns: "tencent:wemeet:meeting_notice"
                                }).c("meeting_id").t(e).up().c("notice_version").t(t).up().up();
                            n.logger.report(1, "C2S-".concat(o), s.toString()), n.sendIQ(s, (function(e) {
                                n.logger.report(1, "S2C-".concat(o), D(e)), i(e)
                            }), (function(e) {
                                r(n.getStanzaError({
                                    errorStanza: e,
                                    cmd: o
                                }))
                            }))
                        }))
                    }
                }], [{
                    key: "getInstance",
                    value: function() {
                        return void 0 === t.prototype.instance && (t.prototype.instance = new t), t.prototype.instance
                    }
                }]), t
            }(b);
        [v, y].map((function(e) {
            return function(e) {
                for (var t in e) H.prototype[t] = e[t]
            }(e)
        })), e.exports = H
    }, function(e, t) {
        e.exports = function(e, t, n) {
            return t in e ? Object.defineProperty(e, t, {
                value: n,
                enumerable: !0,
                configurable: !0,
                writable: !0
            }) : e[t] = n, e
        }, e.exports.__esModule = !0, e.exports.default = e.exports
    }, function(e, t, n) {
        var i = n(17),
            r = i.$iq,
            o = i.get_val,
            s = i.get_attr;
        e.exports = {
            summaryRequest: function(e, t) {
                var n = this,
                    i = r({
                        type: "set"
                    }).c("request_summary", {
                        xmlns: "tencent:wemeet:summary"
                    }).c("meeting_id").t(e).up().c("operation").t(t).up();
                this.sendIQ(i, (function(e, t) {
                    n.getEventHandler("summary_request")(!0, t)
                }), (function(e, t) {
                    n.getEventHandler("summary_request")(!1, e, t)
                }), {
                    meetingId: e,
                    operation: t
                })
            },
            summaryAudioUploadPush: function(e) {
                var t = e.getElementsByTagName("meeting_summary_notify")[0],
                    n = {};
                n.meeting_id = o(t, "meeting_id"), n.upload = o(t, "upload"), n.token = o(t, "token"), this.getEventHandler("summary_audio_upload_push")(!0, n)
            },
            summaryMessagePush: function(e) {
                var t = e.getElementsByTagName("meeting_summary_notify")[0],
                    n = {};
                n.meeting_id = o(t, "meeting_id");
                var i = t.getElementsByTagName("message")[0],
                    r = {
                        uid: s(i, "user", "app_uid"),
                        app_id: s(i, "user", "app_id"),
                        instance_id: s(i, "user", "instance_id")
                    },
                    a = [],
                    u = i.getElementsByTagName("sentence");
                if (u && u.length)
                    for (var c = 0; c < u.length; ++c) {
                        var l = u[c];
                        if (l) {
                            var d = {
                                id: l.getAttribute("id"),
                                ver: l.getAttribute("ver"),
                                cid: l.getAttribute("cid"),
                                seTime: l.getAttribute("seTime"),
                                op: l.getAttribute("op"),
                                source: l.getAttribute("source"),
                                target: l.getAttribute("target"),
                                targetText: l.getAttribute("targetText"),
                                sourceStableSize: l.getAttribute("sourceStableSize"),
                                targetStableSize: l.getAttribute("targetStableSize"),
                                startTime: l.getAttribute("startTime"),
                                endTime: l.getAttribute("endTime"),
                                isEnd: l.getAttribute("isEnd"),
                                sourceText: ""
                            };
                            l.childNodes.length && (d.sourceText = l.childNodes[0].nodeValue), a.push(d)
                        }
                    }
                n.user = r, n.sentenceList = a, this.getEventHandler("summary_message_push")(!0, n)
            }
        }
    }, function(e, t, n) {
        var i, r, o = n(18).Strophe,
            s = n(12);
        "undefined" == typeof window ? ((new s).debug("window does not exist, setting xbtoa"), i = o.btoa) : ((new s).debug("window does exist, no need to set xbtoa"), i = window.btoa), "undefined" == typeof window ? ((new s).debug("window does not exist, setting xatob"), r = function(e) {
            var t, n, i, r, o, s, a, u = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=",
                c = "",
                l = 0;
            if ("" === (e = e.replace(/[^A-Za-z0-9\+\/\=]/g, ""))) return "";
            do {
                r = u.indexOf(e.charAt(l++)), t = r << 2 | (o = u.indexOf(e.charAt(l++))) >> 4, n = (15 & o) << 4 | (s = u.indexOf(e.charAt(l++))) >> 2, i = (3 & s) << 6 | (a = u.indexOf(e.charAt(l++))), c += String.fromCharCode(t), 64 !== s && (c += String.fromCharCode(n)), 64 !== a && (c += String.fromCharCode(i))
            } while (l < e.length);
            return c
        }) : ((new s).debug("window does exist, no need to set xatob"), r = window.atob);
        var a = function(e, t) {
                var n = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : "",
                    i = e.getElementsByTagName(t);
                return void 0 !== i && i.length && i[0].childNodes.length ? i[0].childNodes[0].nodeValue : n
            },
            u = function(e) {
                function t(e) {
                    var t = e.length;
                    if (!t) return null;
                    for (var n = {}, i = 0; i < t; i++) n[e[i].nodeName] = e[i].nodeValue;
                    return n
                }
                var n = {};
                return n.tagName = e.tagName, n.attrs = t(e.attributes), n.child = function e(n) {
                    var i = n.length;
                    if (!i) return null;
                    if (1 === i && !n[0].tagName) return n[0].data || null;
                    for (var r = [], o = 0; o < i; o++) {
                        var s = {};
                        s.child = e(n[o].childNodes), s.attrs = t(n[o].attributes), s.tagName = n[o].tagName, r.push(s)
                    }
                    return r
                }(e.childNodes), n
            };
        e.exports = {
            Strophe: o,
            $build: function(e, t) {
                return new o.Builder(e, t)
            },
            $iq: function(e) {
                return new o.Builder("iq", e)
            },
            $msg: function(e) {
                return new o.Builder("message", e)
            },
            $pres: function(e) {
                return new o.Builder("presence", e)
            },
            xbtoa: i,
            xatob: r,
            encodeUtf8ThenB64: function(e) {
                return i(unescape(encodeURIComponent(e)))
            },
            decodeB64ThenUtf8: function(e) {
                var t;
                try {
                    var n = r(e);
                    return n = escape(n), t = decodeURIComponent(n)
                } catch (t) {
                    return (new s).report(3, "xmpp_kit", "decodeB64ThenUtf8 errmsg: ".concat(t.message, ", input: ").concat(e)), e
                }
            },
            get_val: a,
            get_int_val: function(e, t) {
                var n = a(e, t);
                if ("" !== n) return parseInt(n)
            },
            get_bool_val: function(e, t) {
                var n = a(e, t);
                if ("" !== n) return "1" === n
            },
            get_attr: function(e, t, n) {
                var i = e.getElementsByTagName(t);
                return i.length && i[0].getAttribute(n) || ""
            },
            get_int_attr: function(e, t, n) {
                var i = e.getElementsByTagName(t)[0];
                if (i) return parseInt(i.getAttribute(n) || "")
            },
            stringifyXmlObject: function(e) {
                var t = "";
                try {
                    t = (new XMLSerializer).serializeToString(e)
                } catch (e) {}
                return t
            },
            format2XMPP: function(e) {
                try {
                    var t = function(e) {
                            return null === e ? "" : Object.keys(e).map((function(t) {
                                return "".concat(t, "='").concat(e[t], "'")
                            })).join(" ")
                        },
                        n = function(e) {
                            var t = e.child,
                                n = "";
                            if (null === t) n = "</".concat(o.pop(), ">");
                            else if ("string" == typeof t) n = "".concat(t, "</").concat(o.pop(), ">");
                            else {
                                for (var i = t.length, s = 0; s < i; s++) n += r(t[s]);
                                n += "</".concat(o.pop(), ">")
                            }
                            return n
                        },
                        i = function(e) {
                            var t = e.tagName,
                                n = e.attrs,
                                i = function(e) {
                                    return null === e ? "" : Object.keys(e).map((function(t) {
                                        return "".concat(t, "='").concat(e[t], "'")
                                    })).join(" ")
                                }(n);
                            return o.push(t), "<".concat(t).concat(i ? " " + i : "", ">")
                        },
                        r = function(e) {
                            var t = e.tagName,
                                r = e.attrs,
                                o = e.child,
                                s = "";
                            return s += i({
                                tagName: t,
                                attrs: r
                            }), s += n({
                                child: o
                            })
                        },
                        o = [],
                        a = u(e);
                    return r(a)
                } catch (t) {
                    (new s).report(3, "format2XMPP", "exception caught: ".concat(t.message, ". input: ").concat(e))
                }
            },
            format2JSON: u,
            get_val_by_uid: function(e, t) {
                var n = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : "",
                    i = e.getElementsByTagName(t);
                if (i.length) {
                    var r = Array.from(i).filter((function(e) {
                        return "id" !== e.parentNode.tagName
                    }));
                    if (void 0 !== r && r.length && r[0].childNodes && r[0].childNodes.length) return r[0].childNodes[0].nodeValue
                }
                return n
            }
        }
    }, function(e, t, n) {
        var i, r, o, s, a, u = n(9);
        a = this, s = function() {
            var n, i, r, o, s;
            (function(e) {
                function t(e, t) {
                    return b.call(e, t)
                }

                function o(e, t) {
                    var n, i, r, o, s, a, u, c, l, d, h, _ = t && t.split("/"),
                        p = y.map,
                        g = p && p["*"] || {};
                    if (e) {
                        for (s = (e = e.split("/")).length - 1, y.nodeIdCompat && w.test(e[s]) && (e[s] = e[s].replace(w, "")), "." === e[0].charAt(0) && _ && (e = _.slice(0, _.length - 1).concat(e)), l = 0; l < e.length; l++)
                            if ("." === (h = e[l])) e.splice(l, 1), l -= 1;
                            else if (".." === h) {
                            if (0 === l || 1 === l && ".." === e[2] || ".." === e[l - 1]) continue;
                            l > 0 && (e.splice(l - 1, 2), l -= 2)
                        }
                        e = e.join("/")
                    }
                    if ((_ || g) && p) {
                        for (l = (n = e.split("/")).length; l > 0; l -= 1) {
                            if (i = n.slice(0, l).join("/"), _)
                                for (d = _.length; d > 0; d -= 1)
                                    if ((r = p[_.slice(0, d).join("/")]) && (r = r[i])) {
                                        o = r, a = l;
                                        break
                                    }
                            if (o) break;
                            !u && g && g[i] && (u = g[i], c = l)
                        }!o && u && (o = u, a = c), o && (n.splice(0, a, o), e = n.join("/"))
                    }
                    return e
                }

                function s(t, n) {
                    return function() {
                        var i = E.call(arguments, 0);
                        return "string" != typeof i[0] && 1 === i.length && i.push(null), p.apply(e, i.concat([t, n]))
                    }
                }

                function a(e) {
                    return function(t) {
                        f[e] = t
                    }
                }

                function c(n) {
                    if (t(v, n)) {
                        var i = v[n];
                        delete v[n], S[n] = !0, _.apply(e, i)
                    }
                    if (!t(f, n) && !t(S, n)) throw new Error("No " + n);
                    return f[n]
                }

                function l(e) {
                    var t, n = e ? e.indexOf("!") : -1;
                    return n > -1 && (t = e.substring(0, n), e = e.substring(n + 1, e.length)), [t, e]
                }

                function d(e) {
                    return e ? l(e) : []
                }

                function h(e) {
                    return function() {
                        return y && y.config && y.config[e] || {}
                    }
                }
                var _, p, g, m, f = {},
                    v = {},
                    y = {},
                    S = {},
                    b = Object.prototype.hasOwnProperty,
                    E = [].slice,
                    w = /\.js$/;
                g = function(e, t) {
                    var n, i = l(e),
                        r = i[0],
                        s = t[1];
                    return e = i[1], r && (n = c(r = o(r, s))), r ? e = n && n.normalize ? n.normalize(e, function(e) {
                        return function(t) {
                            return o(t, e)
                        }
                    }(s)) : o(e, s) : (r = (i = l(e = o(e, s)))[0], e = i[1], r && (n = c(r))), {
                        f: r ? r + "!" + e : e,
                        n: e,
                        pr: r,
                        p: n
                    }
                }, m = {
                    require: function(e) {
                        return s(e)
                    },
                    exports: function(e) {
                        var t = f[e];
                        return void 0 !== t ? t : f[e] = {}
                    },
                    module: function(e) {
                        return {
                            id: e,
                            uri: "",
                            exports: f[e],
                            config: h(e)
                        }
                    }
                }, _ = function(n, i, r, o) {
                    var l, h, _, p, y, b, E, w = [],
                        R = u(r);
                    if (b = d(o = o || n), "undefined" === R || "function" === R) {
                        for (i = !i.length && r.length ? ["require", "exports", "module"] : i, y = 0; y < i.length; y += 1)
                            if (p = g(i[y], b), "require" === (h = p.f)) w[y] = m.require(n);
                            else if ("exports" === h) w[y] = m.exports(n), E = !0;
                        else if ("module" === h) l = w[y] = m.module(n);
                        else if (t(f, h) || t(v, h) || t(S, h)) w[y] = c(h);
                        else {
                            if (!p.p) throw new Error(n + " missing " + h);
                            p.p.load(p.n, s(o, !0), a(h), {}), w[y] = f[h]
                        }
                        _ = r ? r.apply(f[n], w) : void 0, n && (l && l.exports !== e && l.exports !== f[n] ? f[n] = l.exports : _ === e && E || (f[n] = _))
                    } else n && (f[n] = r)
                }, n = i = p = function(t, n, i, r, o) {
                    if ("string" == typeof t) return m[t] ? m[t](n) : c(g(t, d(n)).f);
                    if (!t.splice) {
                        if ((y = t).deps && p(y.deps, y.callback), !n) return;
                        n.splice ? (t = n, n = i, i = null) : t = e
                    }
                    return n = n || function() {}, "function" == typeof i && (i = r, r = o), r ? _(e, t, n, i) : setTimeout((function() {
                        _(e, t, n, i)
                    }), 4), p
                }, p.config = function(e) {
                    return p(e)
                }, n._defined = f, (r = function(e, n, i) {
                    if ("string" != typeof e) throw new Error("See almond README: incorrect module build, no module name");
                    n.splice || (i = n, n = []), t(f, e) || t(v, e) || (v[e] = [e, n, i])
                }).amd = {
                    jQuery: !0
                }
            })(), r("node_modules/almond/almond.js", (function() {})),
                function(e, t) {
                    if ("function" != typeof r || !r.amd) return t(e);
                    r("strophe-polyfill", [], (function() {
                        return t(e)
                    }))
                }(a, (function(e) {
                    Function.prototype.bind || (Function.prototype.bind = function(e) {
                        var t = this,
                            n = Array.prototype.slice,
                            i = Array.prototype.concat,
                            r = n.call(arguments, 1);
                        return function() {
                            return t.apply(e || this, i.call(r, n.call(arguments, 0)))
                        }
                    }), Array.isArray || (Array.isArray = function(e) {
                        return "[object Array]" === Object.prototype.toString.call(e)
                    }), Array.prototype.indexOf || (Array.prototype.indexOf = function(e) {
                        var t = this.length,
                            n = Number(arguments[1]) || 0;
                        for ((n = n < 0 ? Math.ceil(n) : Math.floor(n)) < 0 && (n += t); n < t; n++)
                            if (n in this && this[n] === e) return n;
                        return -1
                    }), Array.prototype.forEach || (Array.prototype.forEach = function(e, t) {
                        var n, i;
                        if (null === this) throw new TypeError(" this is null or not defined");
                        var r = Object(this),
                            o = r.length >>> 0;
                        if ("function" != typeof e) throw new TypeError(e + " is not a function");
                        for (arguments.length > 1 && (n = t), i = 0; i < o;) {
                            var s;
                            i in r && (s = r[i], e.call(n, s, i, r)), i++
                        }
                    });
                    var t = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=";
                    e.btoa || (e.btoa = function(e) {
                        var n, i, r, o, s, a, u, c = "",
                            l = 0;
                        do {
                            o = (n = e.charCodeAt(l++)) >> 2, s = (3 & n) << 4 | (i = e.charCodeAt(l++)) >> 4, a = (15 & i) << 2 | (r = e.charCodeAt(l++)) >> 6, u = 63 & r, isNaN(i) ? (s = (3 & n) << 4, a = u = 64) : isNaN(r) && (u = 64), c = c + t.charAt(o) + t.charAt(s) + t.charAt(a) + t.charAt(u)
                        } while (l < e.length);
                        return c
                    }), e.atob || (e.atob = function(e) {
                        var n, i, r, o, s, a, u = "",
                            c = 0;
                        e = e.replace(/[^A-Za-z0-9\+\/\=]/g, "");
                        do {
                            n = t.indexOf(e.charAt(c++)) << 2 | (o = t.indexOf(e.charAt(c++))) >> 4, i = (15 & o) << 4 | (s = t.indexOf(e.charAt(c++))) >> 2, r = (3 & s) << 6 | (a = t.indexOf(e.charAt(c++))), u += String.fromCharCode(n), 64 !== s && (u += String.fromCharCode(i)), 64 !== a && (u += String.fromCharCode(r))
                        } while (c < e.length);
                        return u
                    })
                })), o = a, s = function() {
                    function e(e, i) {
                        e[i >> 5] |= 128 << 24 - i % 32, e[15 + (i + 64 >> 9 << 4)] = i;
                        var s, a, u, c, l, d, h, _, p = new Array(80),
                            g = 1732584193,
                            m = -271733879,
                            f = -1732584194,
                            v = 271733878,
                            y = -1009589776;
                        for (s = 0; s < e.length; s += 16) {
                            for (c = g, l = m, d = f, h = v, _ = y, a = 0; a < 80; a++) p[a] = a < 16 ? e[s + a] : o(p[a - 3] ^ p[a - 8] ^ p[a - 14] ^ p[a - 16], 1), u = r(r(o(g, 5), t(a, m, f, v)), r(r(y, p[a]), n(a))), y = v, v = f, f = o(m, 30), m = g, g = u;
                            g = r(g, c), m = r(m, l), f = r(f, d), v = r(v, h), y = r(y, _)
                        }
                        return [g, m, f, v, y]
                    }

                    function t(e, t, n, i) {
                        return e < 20 ? t & n | ~t & i : e < 40 ? t ^ n ^ i : e < 60 ? t & n | t & i | n & i : t ^ n ^ i
                    }

                    function n(e) {
                        return e < 20 ? 1518500249 : e < 40 ? 1859775393 : e < 60 ? -1894007588 : -899497514
                    }

                    function i(t, n) {
                        var i = s(t);
                        i.length > 16 && (i = e(i, 8 * t.length));
                        for (var r = new Array(16), o = new Array(16), a = 0; a < 16; a++) r[a] = 909522486 ^ i[a], o[a] = 1549556828 ^ i[a];
                        var u = e(r.concat(s(n)), 512 + 8 * n.length);
                        return e(o.concat(u), 672)
                    }

                    function r(e, t) {
                        var n = (65535 & e) + (65535 & t);
                        return (e >> 16) + (t >> 16) + (n >> 16) << 16 | 65535 & n
                    }

                    function o(e, t) {
                        return e << t | e >>> 32 - t
                    }

                    function s(e) {
                        for (var t = [], n = 0; n < 8 * e.length; n += 8) t[n >> 5] |= (255 & e.charCodeAt(n / 8)) << 24 - n % 32;
                        return t
                    }

                    function a(e) {
                        for (var t = "", n = 0; n < 32 * e.length; n += 8) t += String.fromCharCode(e[n >> 5] >>> 24 - n % 32 & 255);
                        return t
                    }

                    function u(e) {
                        for (var t, n, i = "", r = 0; r < 4 * e.length; r += 3)
                            for (t = (e[r >> 2] >> 8 * (3 - r % 4) & 255) << 16 | (e[r + 1 >> 2] >> 8 * (3 - (r + 1) % 4) & 255) << 8 | e[r + 2 >> 2] >> 8 * (3 - (r + 2) % 4) & 255, n = 0; n < 4; n++) 8 * r + 6 * n > 32 * e.length ? i += "=" : i += "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/".charAt(t >> 6 * (3 - n) & 63);
                        return i
                    }
                    return {
                        b64_hmac_sha1: function(e, t) {
                            return u(i(e, t))
                        },
                        b64_sha1: function(t) {
                            return u(e(s(t), 8 * t.length))
                        },
                        binb2str: a,
                        core_hmac_sha1: i,
                        str_hmac_sha1: function(e, t) {
                            return a(i(e, t))
                        },
                        str_sha1: function(t) {
                            return a(e(s(t), 8 * t.length))
                        }
                    }
                }, "function" == typeof r && r.amd ? r("strophe-sha1", [], (function() {
                    return s()
                })) : "object" === u(t) ? e.exports = s() : o.SHA1 = s(),
                function(n, i) {
                    "function" == typeof r && r.amd ? r("strophe-md5", [], (function() {
                        return i()
                    })) : "object" === u(t) ? e.exports = i() : n.MD5 = i()
                }(a, (function() {
                    var e = function(e, t) {
                            var n = (65535 & e) + (65535 & t);
                            return (e >> 16) + (t >> 16) + (n >> 16) << 16 | 65535 & n
                        },
                        t = function(e) {
                            for (var t = [], n = 0; n < 8 * e.length; n += 8) t[n >> 5] |= (255 & e.charCodeAt(n / 8)) << n % 32;
                            return t
                        },
                        n = function(t, n, i, r, o, s) {
                            return e(function(e, t) {
                                return e << t | e >>> 32 - t
                            }(e(e(n, t), e(r, s)), o), i)
                        },
                        i = function(e, t, i, r, o, s, a) {
                            return n(t & i | ~t & r, e, t, o, s, a)
                        },
                        r = function(e, t, i, r, o, s, a) {
                            return n(t & r | i & ~r, e, t, o, s, a)
                        },
                        o = function(e, t, i, r, o, s, a) {
                            return n(t ^ i ^ r, e, t, o, s, a)
                        },
                        s = function(e, t, i, r, o, s, a) {
                            return n(i ^ (t | ~r), e, t, o, s, a)
                        },
                        a = function(t, n) {
                            t[n >> 5] |= 128 << n % 32, t[14 + (n + 64 >>> 9 << 4)] = n;
                            for (var a, u, c, l, d = 1732584193, h = -271733879, _ = -1732584194, p = 271733878, g = 0; g < t.length; g += 16) a = d, u = h, c = _, l = p, d = i(d, h, _, p, t[g + 0], 7, -680876936), p = i(p, d, h, _, t[g + 1], 12, -389564586), _ = i(_, p, d, h, t[g + 2], 17, 606105819), h = i(h, _, p, d, t[g + 3], 22, -1044525330), d = i(d, h, _, p, t[g + 4], 7, -176418897), p = i(p, d, h, _, t[g + 5], 12, 1200080426), _ = i(_, p, d, h, t[g + 6], 17, -1473231341), h = i(h, _, p, d, t[g + 7], 22, -45705983), d = i(d, h, _, p, t[g + 8], 7, 1770035416), p = i(p, d, h, _, t[g + 9], 12, -1958414417), _ = i(_, p, d, h, t[g + 10], 17, -42063), h = i(h, _, p, d, t[g + 11], 22, -1990404162), d = i(d, h, _, p, t[g + 12], 7, 1804603682), p = i(p, d, h, _, t[g + 13], 12, -40341101), _ = i(_, p, d, h, t[g + 14], 17, -1502002290), h = i(h, _, p, d, t[g + 15], 22, 1236535329), d = r(d, h, _, p, t[g + 1], 5, -165796510), p = r(p, d, h, _, t[g + 6], 9, -1069501632), _ = r(_, p, d, h, t[g + 11], 14, 643717713), h = r(h, _, p, d, t[g + 0], 20, -373897302), d = r(d, h, _, p, t[g + 5], 5, -701558691), p = r(p, d, h, _, t[g + 10], 9, 38016083), _ = r(_, p, d, h, t[g + 15], 14, -660478335), h = r(h, _, p, d, t[g + 4], 20, -405537848), d = r(d, h, _, p, t[g + 9], 5, 568446438), p = r(p, d, h, _, t[g + 14], 9, -1019803690), _ = r(_, p, d, h, t[g + 3], 14, -187363961), h = r(h, _, p, d, t[g + 8], 20, 1163531501), d = r(d, h, _, p, t[g + 13], 5, -1444681467), p = r(p, d, h, _, t[g + 2], 9, -51403784), _ = r(_, p, d, h, t[g + 7], 14, 1735328473), h = r(h, _, p, d, t[g + 12], 20, -1926607734), d = o(d, h, _, p, t[g + 5], 4, -378558), p = o(p, d, h, _, t[g + 8], 11, -2022574463), _ = o(_, p, d, h, t[g + 11], 16, 1839030562), h = o(h, _, p, d, t[g + 14], 23, -35309556), d = o(d, h, _, p, t[g + 1], 4, -1530992060), p = o(p, d, h, _, t[g + 4], 11, 1272893353), _ = o(_, p, d, h, t[g + 7], 16, -155497632), h = o(h, _, p, d, t[g + 10], 23, -1094730640), d = o(d, h, _, p, t[g + 13], 4, 681279174), p = o(p, d, h, _, t[g + 0], 11, -358537222), _ = o(_, p, d, h, t[g + 3], 16, -722521979), h = o(h, _, p, d, t[g + 6], 23, 76029189), d = o(d, h, _, p, t[g + 9], 4, -640364487), p = o(p, d, h, _, t[g + 12], 11, -421815835), _ = o(_, p, d, h, t[g + 15], 16, 530742520), h = o(h, _, p, d, t[g + 2], 23, -995338651), d = s(d, h, _, p, t[g + 0], 6, -198630844), p = s(p, d, h, _, t[g + 7], 10, 1126891415), _ = s(_, p, d, h, t[g + 14], 15, -1416354905), h = s(h, _, p, d, t[g + 5], 21, -57434055), d = s(d, h, _, p, t[g + 12], 6, 1700485571), p = s(p, d, h, _, t[g + 3], 10, -1894986606), _ = s(_, p, d, h, t[g + 10], 15, -1051523), h = s(h, _, p, d, t[g + 1], 21, -2054922799), d = s(d, h, _, p, t[g + 8], 6, 1873313359), p = s(p, d, h, _, t[g + 15], 10, -30611744), _ = s(_, p, d, h, t[g + 6], 15, -1560198380), h = s(h, _, p, d, t[g + 13], 21, 1309151649), d = s(d, h, _, p, t[g + 4], 6, -145523070), p = s(p, d, h, _, t[g + 11], 10, -1120210379), _ = s(_, p, d, h, t[g + 2], 15, 718787259), h = s(h, _, p, d, t[g + 9], 21, -343485551), d = e(d, a), h = e(h, u), _ = e(_, c), p = e(p, l);
                            return [d, h, _, p]
                        };
                    return {
                        hexdigest: function(e) {
                            return function(e) {
                                for (var t = "0123456789abcdef", n = "", i = 0; i < 4 * e.length; i++) n += t.charAt(e[i >> 2] >> i % 4 * 8 + 4 & 15) + t.charAt(e[i >> 2] >> i % 4 * 8 & 15);
                                return n
                            }(a(t(e), 8 * e.length))
                        },
                        hash: function(e) {
                            return function(e) {
                                for (var t = "", n = 0; n < 32 * e.length; n += 8) t += String.fromCharCode(e[n >> 5] >>> n % 32 & 255);
                                return t
                            }(a(t(e), 8 * e.length))
                        }
                    }
                })),
                function(n, i) {
                    "function" == typeof r && r.amd ? r("strophe-utils", [], (function() {
                        return i()
                    })) : "object" === u(t) ? e.exports = i() : n.stropheUtils = i()
                }(a, (function() {
                    return {
                        utf16to8: function(e) {
                            var t, n, i = "",
                                r = e.length;
                            for (t = 0; t < r; t++)(n = e.charCodeAt(t)) >= 0 && n <= 127 ? i += e.charAt(t) : n > 2047 ? (i += String.fromCharCode(224 | n >> 12 & 15), i += String.fromCharCode(128 | n >> 6 & 63), i += String.fromCharCode(128 | n >> 0 & 63)) : (i += String.fromCharCode(192 | n >> 6 & 31), i += String.fromCharCode(128 | n >> 0 & 63));
                            return i
                        },
                        addCookies: function(e) {
                            var t, n, i, r, o, s, a;
                            for (t in e || {}) o = "", s = "", a = "", n = e[t], i = "object" === u(n), r = escape(unescape(i ? n.value : n)), i && (o = n.expires ? ";expires=" + n.expires : "", s = n.domain ? ";domain=" + n.domain : "", a = n.path ? ";path=" + n.path : ""), document.cookie = t + "=" + r + o + s + a
                        }
                    }
                }));
            var c = function(e) {
                    function t(i) {
                        if (n[i]) return n[i].exports;
                        var r = n[i] = {
                            i: i,
                            l: !1,
                            exports: {}
                        };
                        return e[i].call(r.exports, r, r.exports, t), r.l = !0, r.exports
                    }
                    var n = {};
                    return t.m = e, t.c = n, t.d = function(e, n, i) {
                        t.o(e, n) || Object.defineProperty(e, n, {
                            enumerable: !0,
                            get: i
                        })
                    }, t.r = function(e) {
                        "undefined" != typeof Symbol && Symbol.toStringTag && Object.defineProperty(e, Symbol.toStringTag, {
                            value: "Module"
                        }), Object.defineProperty(e, "__esModule", {
                            value: !0
                        })
                    }, t.t = function(e, n) {
                        if (1 & n && (e = t(e)), 8 & n) return e;
                        if (4 & n && "object" === u(e) && e && e.__esModule) return e;
                        var i = Object.create(null);
                        if (t.r(i), Object.defineProperty(i, "default", {
                                enumerable: !0,
                                value: e
                            }), 2 & n && "string" != typeof e)
                            for (var r in e) t.d(i, r, function(t) {
                                return e[t]
                            }.bind(null, r));
                        return i
                    }, t.n = function(e) {
                        var n = e && e.__esModule ? function() {
                            return e.default
                        } : function() {
                            return e
                        };
                        return t.d(n, "a", n), n
                    }, t.o = function(e, t) {
                        return Object.prototype.hasOwnProperty.call(e, t)
                    }, t.p = "", t(t.s = 0)
                }([function(e, t, n) {
                    function i(e) {
                        this.options = e || {
                            locator: {}
                        }
                    }

                    function r(e, t, n) {
                        function i(t) {
                            var i = e[t];
                            !i && s && (i = 2 == e.length ? function(n) {
                                e(t, n)
                            } : e), r[t] = i && function(e) {
                                i("[xmldom " + t + "]\t" + e + a(n))
                            } || function() {}
                        }
                        if (!e) {
                            if (t instanceof o) return t;
                            e = t
                        }
                        var r = {},
                            s = e instanceof Function;
                        return n = n || {}, i("warning"), i("error"), i("fatalError"), r
                    }

                    function o() {
                        this.cdata = !1
                    }

                    function s(e, t) {
                        t.lineNumber = e.lineNumber, t.columnNumber = e.columnNumber
                    }

                    function a(e) {
                        if (e) return "\n@" + (e.systemId || "") + "#[line:" + e.lineNumber + ",col:" + e.columnNumber + "]"
                    }

                    function u(e, t, n) {
                        return "string" == typeof e ? e.substr(t, n) : e.length >= t + n || t ? new java.lang.String(e, t, n) + "" : e
                    }

                    function c(e, t) {
                        e.currentElement ? e.currentElement.appendChild(t) : e.doc.appendChild(t)
                    }
                    i.prototype.parseFromString = function(e, t) {
                        var n = this.options,
                            i = new d,
                            s = n.domBuilder || new o,
                            a = n.errorHandler,
                            u = n.locator,
                            c = n.xmlns || {},
                            h = /\/x?html?$/.test(t),
                            _ = h ? l.entityMap : {
                                lt: "<",
                                gt: ">",
                                amp: "&",
                                quot: '"',
                                apos: "'"
                            };
                        return u && s.setDocumentLocator(u), i.errorHandler = r(a, s, u), i.domBuilder = n.domBuilder || s, h && (c[""] = "http://www.w3.org/1999/xhtml"), c.xml = c.xml || "http://www.w3.org/XML/1998/namespace", e ? i.parse(e, c, _) : i.errorHandler.error("invalid doc source"), s.doc
                    }, o.prototype = {
                        startDocument: function() {
                            this.doc = (new h).createDocument(null, null, null), this.locator && (this.doc.documentURI = this.locator.systemId)
                        },
                        startElement: function(e, t, n, i) {
                            var r = this.doc,
                                o = r.createElementNS(e, n || t),
                                a = i.length;
                            c(this, o), this.currentElement = o, this.locator && s(this.locator, o);
                            for (var u = 0; u < a; u++) {
                                e = i.getURI(u);
                                var l = i.getValue(u),
                                    d = (n = i.getQName(u), r.createAttributeNS(e, n));
                                this.locator && s(i.getLocator(u), d), d.value = d.nodeValue = l, o.setAttributeNode(d)
                            }
                        },
                        endElement: function(e, t, n) {
                            var i = this.currentElement;
                            i.tagName, this.currentElement = i.parentNode
                        },
                        startPrefixMapping: function(e, t) {},
                        endPrefixMapping: function(e) {},
                        processingInstruction: function(e, t) {
                            var n = this.doc.createProcessingInstruction(e, t);
                            this.locator && s(this.locator, n), c(this, n)
                        },
                        ignorableWhitespace: function(e, t, n) {},
                        characters: function(e, t, n) {
                            if (e = u.apply(this, arguments)) {
                                if (this.cdata) var i = this.doc.createCDATASection(e);
                                else i = this.doc.createTextNode(e);
                                this.currentElement ? this.currentElement.appendChild(i) : /^\s*$/.test(e) && this.doc.appendChild(i), this.locator && s(this.locator, i)
                            }
                        },
                        skippedEntity: function(e) {},
                        endDocument: function() {
                            this.doc.normalize()
                        },
                        setDocumentLocator: function(e) {
                            (this.locator = e) && (e.lineNumber = 0)
                        },
                        comment: function(e, t, n) {
                            e = u.apply(this, arguments);
                            var i = this.doc.createComment(e);
                            this.locator && s(this.locator, i), c(this, i)
                        },
                        startCDATA: function() {
                            this.cdata = !0
                        },
                        endCDATA: function() {
                            this.cdata = !1
                        },
                        startDTD: function(e, t, n) {
                            var i = this.doc.implementation;
                            if (i && i.createDocumentType) {
                                var r = i.createDocumentType(e, t, n);
                                this.locator && s(this.locator, r), c(this, r)
                            }
                        },
                        warning: function(e) {
                            console.warn("[xmldom warning]\t" + e, a(this.locator))
                        },
                        error: function(e) {
                            console.error("[xmldom error]\t" + e, a(this.locator))
                        },
                        fatalError: function(e) {
                            throw console.error("[xmldom fatalError]\t" + e, a(this.locator)), e
                        }
                    }, "endDTD,startEntity,endEntity,attributeDecl,elementDecl,externalEntityDecl,internalEntityDecl,resolveEntity,getExternalSubset,notationDecl,unparsedEntityDecl".replace(/\w+/g, (function(e) {
                        o.prototype[e] = function() {
                            return null
                        }
                    }));
                    var l = n(1),
                        d = n(2).XMLReader,
                        h = t.DOMImplementation = n(3).DOMImplementation;
                    t.XMLSerializer = n(3).XMLSerializer, t.DOMParser = i
                }, function(e, t) {
                    t.entityMap = {
                        lt: "<",
                        gt: ">",
                        amp: "&",
                        quot: '"',
                        apos: "'",
                        Agrave: "À",
                        Aacute: "Á",
                        Acirc: "Â",
                        Atilde: "Ã",
                        Auml: "Ä",
                        Aring: "Å",
                        AElig: "Æ",
                        Ccedil: "Ç",
                        Egrave: "È",
                        Eacute: "É",
                        Ecirc: "Ê",
                        Euml: "Ë",
                        Igrave: "Ì",
                        Iacute: "Í",
                        Icirc: "Î",
                        Iuml: "Ï",
                        ETH: "Ð",
                        Ntilde: "Ñ",
                        Ograve: "Ò",
                        Oacute: "Ó",
                        Ocirc: "Ô",
                        Otilde: "Õ",
                        Ouml: "Ö",
                        Oslash: "Ø",
                        Ugrave: "Ù",
                        Uacute: "Ú",
                        Ucirc: "Û",
                        Uuml: "Ü",
                        Yacute: "Ý",
                        THORN: "Þ",
                        szlig: "ß",
                        agrave: "à",
                        aacute: "á",
                        acirc: "â",
                        atilde: "ã",
                        auml: "ä",
                        aring: "å",
                        aelig: "æ",
                        ccedil: "ç",
                        egrave: "è",
                        eacute: "é",
                        ecirc: "ê",
                        euml: "ë",
                        igrave: "ì",
                        iacute: "í",
                        icirc: "î",
                        iuml: "ï",
                        eth: "ð",
                        ntilde: "ñ",
                        ograve: "ò",
                        oacute: "ó",
                        ocirc: "ô",
                        otilde: "õ",
                        ouml: "ö",
                        oslash: "ø",
                        ugrave: "ù",
                        uacute: "ú",
                        ucirc: "û",
                        uuml: "ü",
                        yacute: "ý",
                        thorn: "þ",
                        yuml: "ÿ",
                        nbsp: " ",
                        iexcl: "¡",
                        cent: "¢",
                        pound: "£",
                        curren: "¤",
                        yen: "¥",
                        brvbar: "¦",
                        sect: "§",
                        uml: "¨",
                        copy: "©",
                        ordf: "ª",
                        laquo: "«",
                        not: "¬",
                        shy: "­­",
                        reg: "®",
                        macr: "¯",
                        deg: "°",
                        plusmn: "±",
                        sup2: "²",
                        sup3: "³",
                        acute: "´",
                        micro: "µ",
                        para: "¶",
                        middot: "·",
                        cedil: "¸",
                        sup1: "¹",
                        ordm: "º",
                        raquo: "»",
                        frac14: "¼",
                        frac12: "½",
                        frac34: "¾",
                        iquest: "¿",
                        times: "×",
                        divide: "÷",
                        forall: "∀",
                        part: "∂",
                        exist: "∃",
                        empty: "∅",
                        nabla: "∇",
                        isin: "∈",
                        notin: "∉",
                        ni: "∋",
                        prod: "∏",
                        sum: "∑",
                        minus: "−",
                        lowast: "∗",
                        radic: "√",
                        prop: "∝",
                        infin: "∞",
                        ang: "∠",
                        and: "∧",
                        or: "∨",
                        cap: "∩",
                        cup: "∪",
                        int: "∫",
                        there4: "∴",
                        sim: "∼",
                        cong: "≅",
                        asymp: "≈",
                        ne: "≠",
                        equiv: "≡",
                        le: "≤",
                        ge: "≥",
                        sub: "⊂",
                        sup: "⊃",
                        nsub: "⊄",
                        sube: "⊆",
                        supe: "⊇",
                        oplus: "⊕",
                        otimes: "⊗",
                        perp: "⊥",
                        sdot: "⋅",
                        Alpha: "Α",
                        Beta: "Β",
                        Gamma: "Γ",
                        Delta: "Δ",
                        Epsilon: "Ε",
                        Zeta: "Ζ",
                        Eta: "Η",
                        Theta: "Θ",
                        Iota: "Ι",
                        Kappa: "Κ",
                        Lambda: "Λ",
                        Mu: "Μ",
                        Nu: "Ν",
                        Xi: "Ξ",
                        Omicron: "Ο",
                        Pi: "Π",
                        Rho: "Ρ",
                        Sigma: "Σ",
                        Tau: "Τ",
                        Upsilon: "Υ",
                        Phi: "Φ",
                        Chi: "Χ",
                        Psi: "Ψ",
                        Omega: "Ω",
                        alpha: "α",
                        beta: "β",
                        gamma: "γ",
                        delta: "δ",
                        epsilon: "ε",
                        zeta: "ζ",
                        eta: "η",
                        theta: "θ",
                        iota: "ι",
                        kappa: "κ",
                        lambda: "λ",
                        mu: "μ",
                        nu: "ν",
                        xi: "ξ",
                        omicron: "ο",
                        pi: "π",
                        rho: "ρ",
                        sigmaf: "ς",
                        sigma: "σ",
                        tau: "τ",
                        upsilon: "υ",
                        phi: "φ",
                        chi: "χ",
                        psi: "ψ",
                        omega: "ω",
                        thetasym: "ϑ",
                        upsih: "ϒ",
                        piv: "ϖ",
                        OElig: "Œ",
                        oelig: "œ",
                        Scaron: "Š",
                        scaron: "š",
                        Yuml: "Ÿ",
                        fnof: "ƒ",
                        circ: "ˆ",
                        tilde: "˜",
                        ensp: " ",
                        emsp: " ",
                        thinsp: " ",
                        zwnj: "‌",
                        zwj: "‍",
                        lrm: "‎",
                        rlm: "‏",
                        ndash: "–",
                        mdash: "—",
                        lsquo: "‘",
                        rsquo: "’",
                        sbquo: "‚",
                        ldquo: "“",
                        rdquo: "”",
                        bdquo: "„",
                        dagger: "†",
                        Dagger: "‡",
                        bull: "•",
                        hellip: "…",
                        permil: "‰",
                        prime: "′",
                        Prime: "″",
                        lsaquo: "‹",
                        rsaquo: "›",
                        oline: "‾",
                        euro: "€",
                        trade: "™",
                        larr: "←",
                        uarr: "↑",
                        rarr: "→",
                        darr: "↓",
                        harr: "↔",
                        crarr: "↵",
                        lceil: "⌈",
                        rceil: "⌉",
                        lfloor: "⌊",
                        rfloor: "⌋",
                        loz: "◊",
                        spades: "♠",
                        clubs: "♣",
                        hearts: "♥",
                        diams: "♦"
                    }
                }, function(e, t) {
                    function n() {}

                    function i(e, t, n, i, c) {
                        function _(e) {
                            var t = e.slice(1, -1);
                            return t in n ? n[t] : "#" === t.charAt(0) ? function(e) {
                                if (e > 65535) {
                                    var t = 55296 + ((e -= 65536) >> 10),
                                        n = 56320 + (1023 & e);
                                    return String.fromCharCode(t, n)
                                }
                                return String.fromCharCode(e)
                            }(parseInt(t.substr(1).replace("x", "0x"))) : (c.error("entity not found:" + e), e)
                        }

                        function p(t) {
                            if (t > E) {
                                var n = e.substring(E, t).replace(/&#?\w+;/g, _);
                                y && g(E), i.characters(n, 0, t - E), E = t
                            }
                        }

                        function g(t, n) {
                            for (; t >= f && (n = v.exec(e));) m = n.index, f = m + n[0].length, y.lineNumber++;
                            y.columnNumber = t - m + 1
                        }
                        for (var m = 0, f = 0, v = /.*(?:\r\n?|\n)|.*$/g, y = i.locator, S = [{
                                currentNSMap: t
                            }], b = {}, E = 0;;) {
                            try {
                                var w = e.indexOf("<", E);
                                if (w < 0) {
                                    if (!e.substr(E).match(/^\s*$/)) {
                                        var R = i.doc,
                                            k = R.createTextNode(e.substr(E));
                                        R.appendChild(k), i.currentElement = k
                                    }
                                    return
                                }
                                switch (w > E && p(w), e.charAt(w + 1)) {
                                    case "/":
                                        var T = e.indexOf(">", w + 3),
                                            N = e.substring(w + 2, T),
                                            I = S.pop();
                                        T < 0 ? (N = e.substring(w + 2).replace(/[\s<].*/, ""), c.error("end tag name: " + N + " is not complete:" + I.tagName), T = w + 1 + N.length) : N.match(/\s</) && (N = N.replace(/[\s<].*/, ""), c.error("end tag name: " + N + " maybe not complete"), T = w + 1 + N.length);
                                        var C = I.localNSMap,
                                            A = I.tagName == N;
                                        if (A || I.tagName && I.tagName.toLowerCase() == N.toLowerCase()) {
                                            if (i.endElement(I.uri, I.localName, N), C)
                                                for (var M in C) i.endPrefixMapping(M);
                                            A || c.fatalError("end tag name: " + N + " is not match the current start tagName:" + I.tagName)
                                        } else S.push(I);
                                        T++;
                                        break;
                                    case "?":
                                        y && g(w), T = d(e, w, i);
                                        break;
                                    case "!":
                                        y && g(w), T = l(e, w, i, c);
                                        break;
                                    default:
                                        y && g(w);
                                        var O = new h,
                                            x = S[S.length - 1].currentNSMap,
                                            P = (T = o(e, w, O, x, _, c), O.length);
                                        if (!O.closed && u(e, T, O.tagName, b) && (O.closed = !0, n.nbsp || c.warning("unclosed xml attribute")), y && P) {
                                            for (var D = r(y, {}), H = 0; H < P; H++) {
                                                var B = O[H];
                                                g(B.offset), B.locator = r(y, {})
                                            }
                                            i.locator = D, s(O, i, x) && S.push(O), i.locator = y
                                        } else s(O, i, x) && S.push(O);
                                        "http://www.w3.org/1999/xhtml" !== O.uri || O.closed ? T++ : T = a(e, T, O.tagName, _, i)
                                }
                            } catch (e) {
                                c.error("element parse error: " + e), T = -1
                            }
                            T > E ? E = T : p(Math.max(w, E) + 1)
                        }
                    }

                    function r(e, t) {
                        return t.lineNumber = e.lineNumber, t.columnNumber = e.columnNumber, t
                    }

                    function o(e, t, n, i, r, o) {
                        for (var s, a = ++t, u = m;;) {
                            var c = e.charAt(a);
                            switch (c) {
                                case "=":
                                    if (u === f) s = e.slice(t, a), u = y;
                                    else {
                                        if (u !== v) throw new Error("attribute equal must after attrName");
                                        u = y
                                    }
                                    break;
                                case "'":
                                case '"':
                                    if (u === y || u === f) {
                                        if (u === f && (o.warning('attribute value must after "="'), s = e.slice(t, a)), t = a + 1, !((a = e.indexOf(c, t)) > 0)) throw new Error("attribute value no end '" + c + "' match");
                                        l = e.slice(t, a).replace(/&#?\w+;/g, r), n.add(s, l, t - 1), u = b
                                    } else {
                                        if (u != S) throw new Error('attribute value must after "="');
                                        l = e.slice(t, a).replace(/&#?\w+;/g, r), n.add(s, l, t), o.warning('attribute "' + s + '" missed start quot(' + c + ")!!"), t = a + 1, u = b
                                    }
                                    break;
                                case "/":
                                    switch (u) {
                                        case m:
                                            n.setTagName(e.slice(t, a));
                                        case b:
                                        case E:
                                        case w:
                                            u = w, n.closed = !0;
                                        case S:
                                        case f:
                                        case v:
                                            break;
                                        default:
                                            throw new Error("attribute invalid close char('/')")
                                    }
                                    break;
                                case "":
                                    return o.error("unexpected end of input"), u == m && n.setTagName(e.slice(t, a)), a;
                                case ">":
                                    switch (u) {
                                        case m:
                                            n.setTagName(e.slice(t, a));
                                        case b:
                                        case E:
                                        case w:
                                            break;
                                        case S:
                                        case f:
                                            "/" === (l = e.slice(t, a)).slice(-1) && (n.closed = !0, l = l.slice(0, -1));
                                        case v:
                                            u === v && (l = s), u == S ? (o.warning('attribute "' + l + '" missed quot(")!!'), n.add(s, l.replace(/&#?\w+;/g, r), t)) : ("http://www.w3.org/1999/xhtml" === i[""] && l.match(/^(?:disabled|checked|selected)$/i) || o.warning('attribute "' + l + '" missed value!! "' + l + '" instead!!'), n.add(l, l, t));
                                            break;
                                        case y:
                                            throw new Error("attribute value missed!!")
                                    }
                                    return a;
                                case "":
                                    c = " ";
                                default:
                                    if (c <= " ") switch (u) {
                                        case m:
                                            n.setTagName(e.slice(t, a)), u = E;
                                            break;
                                        case f:
                                            s = e.slice(t, a), u = v;
                                            break;
                                        case S:
                                            var l = e.slice(t, a).replace(/&#?\w+;/g, r);
                                            o.warning('attribute "' + l + '" missed quot(")!!'), n.add(s, l, t);
                                        case b:
                                            u = E
                                    } else switch (u) {
                                        case v:
                                            n.tagName, "http://www.w3.org/1999/xhtml" === i[""] && s.match(/^(?:disabled|checked|selected)$/i) || o.warning('attribute "' + s + '" missed value!! "' + s + '" instead2!!'), n.add(s, s, t), t = a, u = f;
                                            break;
                                        case b:
                                            o.warning('attribute space is required"' + s + '"!!');
                                        case E:
                                            u = f, t = a;
                                            break;
                                        case y:
                                            u = S, t = a;
                                            break;
                                        case w:
                                            throw new Error("elements closed character '/' and '>' must be connected to")
                                    }
                            }
                            a++
                        }
                    }

                    function s(e, t, n) {
                        for (var i = e.tagName, r = null, o = e.length; o--;) {
                            var s = e[o],
                                a = s.qName,
                                u = s.value,
                                l = a.indexOf(":");
                            if (l > 0) var d = s.prefix = a.slice(0, l),
                                h = a.slice(l + 1),
                                _ = "xmlns" === d && h;
                            else h = a, d = null, _ = "xmlns" === a && "";
                            s.localName = h, !1 !== _ && (null == r && (r = {}, c(n, n = {})), n[_] = r[_] = u, s.uri = "http://www.w3.org/2000/xmlns/", t.startPrefixMapping(_, u))
                        }
                        for (o = e.length; o--;)(d = (s = e[o]).prefix) && ("xml" === d && (s.uri = "http://www.w3.org/XML/1998/namespace"), "xmlns" !== d && (s.uri = n[d || ""]));
                        (l = i.indexOf(":")) > 0 ? (d = e.prefix = i.slice(0, l), h = e.localName = i.slice(l + 1)) : (d = null, h = e.localName = i);
                        var p = e.uri = n[d || ""];
                        if (t.startElement(p, h, i, e), !e.closed) return e.currentNSMap = n, e.localNSMap = r, !0;
                        if (t.endElement(p, h, i), r)
                            for (d in r) t.endPrefixMapping(d)
                    }

                    function a(e, t, n, i, r) {
                        if (/^(?:script|textarea)$/i.test(n)) {
                            var o = e.indexOf("</" + n + ">", t),
                                s = e.substring(t + 1, o);
                            if (/[&<]/.test(s)) return /^script$/i.test(n) ? (r.characters(s, 0, s.length), o) : (s = s.replace(/&#?\w+;/g, i), r.characters(s, 0, s.length), o)
                        }
                        return t + 1
                    }

                    function u(e, t, n, i) {
                        var r = i[n];
                        return null == r && ((r = e.lastIndexOf("</" + n + ">")) < t && (r = e.lastIndexOf("</" + n)), i[n] = r), r < t
                    }

                    function c(e, t) {
                        for (var n in e) t[n] = e[n]
                    }

                    function l(e, t, n, i) {
                        switch (e.charAt(t + 2)) {
                            case "-":
                                if ("-" === e.charAt(t + 3)) {
                                    var r = e.indexOf("--\x3e", t + 4);
                                    return r > t ? (n.comment(e, t + 4, r - t - 4), r + 3) : (i.error("Unclosed comment"), -1)
                                }
                                return -1;
                            default:
                                if ("CDATA[" == e.substr(t + 3, 6)) return r = e.indexOf("]]>", t + 9), n.startCDATA(), n.characters(e, t + 9, r - t - 9), n.endCDATA(), r + 3;
                                var o = function(e, t) {
                                        var n, i = [],
                                            r = /'[^']+'|"[^"]+"|[^\s<>\/=]+=?|(\/?\s*>|<)/g;
                                        for (r.lastIndex = t, r.exec(e); n = r.exec(e);)
                                            if (i.push(n), n[1]) return i
                                    }(e, t),
                                    s = o.length;
                                if (s > 1 && /!doctype/i.test(o[0][0])) {
                                    var a = o[1][0],
                                        u = s > 3 && /^public$/i.test(o[2][0]) && o[3][0],
                                        c = s > 4 && o[4][0],
                                        l = o[s - 1];
                                    return n.startDTD(a, u && u.replace(/^(['"])(.*?)\1$/, "$2"), c && c.replace(/^(['"])(.*?)\1$/, "$2")), n.endDTD(), l.index + l[0].length
                                }
                        }
                        return -1
                    }

                    function d(e, t, n) {
                        var i = e.indexOf("?>", t);
                        if (i) {
                            var r = e.substring(t, i).match(/^<\?(\S*)\s*([\s\S]*?)\s*$/);
                            return r ? (r[0].length, n.processingInstruction(r[1], r[2]), i + 2) : -1
                        }
                        return -1
                    }

                    function h(e) {}
                    var _ = /[A-Z_a-z\xC0-\xD6\xD8-\xF6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD]/,
                        p = new RegExp("[\\-\\.0-9" + _.source.slice(1, -1) + "\\u00B7\\u0300-\\u036F\\u203F-\\u2040]"),
                        g = new RegExp("^" + _.source + p.source + "*(?::" + _.source + p.source + "*)?$"),
                        m = 0,
                        f = 1,
                        v = 2,
                        y = 3,
                        S = 4,
                        b = 5,
                        E = 6,
                        w = 7;
                    n.prototype = {
                        parse: function(e, t, n) {
                            var r = this.domBuilder;
                            r.startDocument(), c(t, t = {}), i(e, t, n, r, this.errorHandler), r.endDocument()
                        }
                    }, h.prototype = {
                        setTagName: function(e) {
                            if (!g.test(e)) throw new Error("invalid tagName:" + e);
                            this.tagName = e
                        },
                        add: function(e, t, n) {
                            if (!g.test(e)) throw new Error("invalid attribute:" + e);
                            this[this.length++] = {
                                qName: e,
                                value: t,
                                offset: n
                            }
                        },
                        length: 0,
                        getLocalName: function(e) {
                            return this[e].localName
                        },
                        getLocator: function(e) {
                            return this[e].locator
                        },
                        getQName: function(e) {
                            return this[e].qName
                        },
                        getURI: function(e) {
                            return this[e].uri
                        },
                        getValue: function(e) {
                            return this[e].value
                        }
                    }, t.XMLReader = n
                }, function(e, t) {
                    function n(e, t) {
                        for (var n in e) t[n] = e[n]
                    }

                    function i(e, t) {
                        var i = e.prototype;
                        if (!(i instanceof t)) {
                            var r = function() {};
                            r.prototype = t.prototype, n(i, r = new r), e.prototype = i = r
                        }
                        i.constructor != e && ("function" != typeof e && console.error("unknow Class:" + e), i.constructor = e)
                    }

                    function r(e, t) {
                        if (t instanceof Error) var n = t;
                        else n = this, Error.call(this, ee[e]), this.message = ee[e], Error.captureStackTrace && Error.captureStackTrace(this, r);
                        return n.code = e, t && (this.message = this.message + ": " + t), n
                    }

                    function o() {}

                    function s(e, t) {
                        this._node = e, this._refresh = t, a(this)
                    }

                    function a(e) {
                        var t = e._node._inc || e._node.ownerDocument._inc;
                        if (e._inc != t) {
                            var i = e._refresh(e._node);
                            U(e, "length", i.length), n(i, e), e._inc = t
                        }
                    }

                    function c() {}

                    function l(e, t) {
                        for (var n = e.length; n--;)
                            if (e[n] === t) return n
                    }

                    function d(e, t, n, i) {
                        if (i ? t[l(t, i)] = n : t[t.length++] = n, e) {
                            n.ownerElement = e;
                            var r = e.ownerDocument;
                            r && (i && v(r, e, i), function(e, t, n) {
                                e && e._inc++, "http://www.w3.org/2000/xmlns/" == n.namespaceURI && (t._nsMap[n.prefix ? n.localName : ""] = n.value)
                            }(r, e, n))
                        }
                    }

                    function h(e, t, n) {
                        var i = l(t, n);
                        if (!(i >= 0)) throw r(ne, new Error(e.tagName + "@" + n));
                        for (var o = t.length - 1; i < o;) t[i] = t[++i];
                        if (t.length = o, e) {
                            var s = e.ownerDocument;
                            s && (v(s, e, n), n.ownerElement = null)
                        }
                    }

                    function _(e) {
                        if (this._features = {}, e)
                            for (var t in e) this._features = e[t]
                    }

                    function p() {}

                    function g(e) {
                        return ("<" == e ? "&lt;" : ">" == e && "&gt;") || "&" == e && "&amp;" || '"' == e && "&quot;" || "&#" + e.charCodeAt() + ";"
                    }

                    function m(e, t) {
                        if (t(e)) return !0;
                        if (e = e.firstChild)
                            do {
                                if (m(e, t)) return !0
                            } while (e = e.nextSibling)
                    }

                    function f() {}

                    function v(e, t, n, i) {
                        e && e._inc++, "http://www.w3.org/2000/xmlns/" == n.namespaceURI && delete t._nsMap[n.prefix ? n.localName : ""]
                    }

                    function y(e, t, n) {
                        if (e && e._inc) {
                            e._inc++;
                            var i = t.childNodes;
                            if (n) i[i.length++] = n;
                            else {
                                for (var r = t.firstChild, o = 0; r;) i[o++] = r, r = r.nextSibling;
                                i.length = o
                            }
                        }
                    }

                    function S(e, t) {
                        var n = t.previousSibling,
                            i = t.nextSibling;
                        return n ? n.nextSibling = i : e.firstChild = i, i ? i.previousSibling = n : e.lastChild = n, y(e.ownerDocument, e), t
                    }

                    function b(e, t, n) {
                        var i = t.parentNode;
                        if (i && i.removeChild(t), t.nodeType === z) {
                            var r = t.firstChild;
                            if (null == r) return t;
                            var o = t.lastChild
                        } else r = o = t;
                        var s = n ? n.previousSibling : e.lastChild;
                        r.previousSibling = s, o.nextSibling = n, s ? s.nextSibling = r : e.firstChild = r, null == n ? e.lastChild = o : n.previousSibling = o;
                        do {
                            r.parentNode = e
                        } while (r !== o && (r = r.nextSibling));
                        return y(e.ownerDocument || e, e), t.nodeType == z && (t.firstChild = t.lastChild = null), t
                    }

                    function E() {
                        this._nsMap = {}
                    }

                    function w() {}

                    function R() {}

                    function k() {}

                    function T() {}

                    function N() {}

                    function I() {}

                    function C() {}

                    function A() {}

                    function M() {}

                    function O() {}

                    function x() {}

                    function P() {}

                    function D(e, t) {
                        var n = [],
                            i = 9 == this.nodeType && this.documentElement || this,
                            r = i.prefix,
                            o = i.namespaceURI;
                        if (o && null == r && null == (r = i.lookupPrefix(o))) var s = [{
                            namespace: o,
                            prefix: null
                        }];
                        return B(this, n, e, t, s), n.join("")
                    }

                    function H(e, t, n) {
                        var i = e.prefix || "",
                            r = e.namespaceURI;
                        if (!i && !r) return !1;
                        if ("xml" === i && "http://www.w3.org/XML/1998/namespace" === r || "http://www.w3.org/2000/xmlns/" == r) return !1;
                        for (var o = n.length; o--;) {
                            var s = n[o];
                            if (s.prefix == i) return s.namespace != r
                        }
                        return !0
                    }

                    function B(e, t, n, i, r) {
                        if (i) {
                            if (!(e = i(e))) return;
                            if ("string" == typeof e) return void t.push(e)
                        }
                        switch (e.nodeType) {
                            case j:
                                r || (r = []), r.length;
                                var o = e.attributes,
                                    s = o.length,
                                    a = e.firstChild,
                                    u = e.tagName;
                                n = L === e.namespaceURI || n, t.push("<", u);
                                for (var c = 0; c < s; c++) {
                                    var l = o.item(c);
                                    "xmlns" == l.prefix ? r.push({
                                        prefix: l.localName,
                                        namespace: l.value
                                    }) : "xmlns" == l.nodeName && r.push({
                                        prefix: "",
                                        namespace: l.value
                                    })
                                }
                                for (c = 0; c < s; c++) {
                                    if (H(l = o.item(c), 0, r)) {
                                        var d = l.prefix || "",
                                            h = l.namespaceURI,
                                            _ = d ? " xmlns:" + d : " xmlns";
                                        t.push(_, '="', h, '"'), r.push({
                                            prefix: d,
                                            namespace: h
                                        })
                                    }
                                    B(l, t, n, i, r)
                                }
                                if (H(e, 0, r) && (d = e.prefix || "", h = e.namespaceURI, _ = d ? " xmlns:" + d : " xmlns", t.push(_, '="', h, '"'), r.push({
                                        prefix: d,
                                        namespace: h
                                    })), a || n && !/^(?:meta|link|img|br|hr|input)$/i.test(u)) {
                                    if (t.push(">"), n && /^script$/i.test(u))
                                        for (; a;) a.data ? t.push(a.data) : B(a, t, n, i, r), a = a.nextSibling;
                                    else
                                        for (; a;) B(a, t, n, i, r), a = a.nextSibling;
                                    t.push("</", u, ">")
                                } else t.push("/>");
                                return;
                            case X:
                            case z:
                                for (a = e.firstChild; a;) B(a, t, n, i, r), a = a.nextSibling;
                                return;
                            case V:
                                return t.push(" ", e.name, '="', e.value.replace(/[<&"]/g, g), '"');
                            case F:
                                return t.push(e.data.replace(/[<&]/g, g));
                            case G:
                                return t.push("<![CDATA[", e.data, "]]>");
                            case K:
                                return t.push("\x3c!--", e.data, "--\x3e");
                            case Y:
                                var p = e.publicId,
                                    m = e.systemId;
                                if (t.push("<!DOCTYPE ", e.name), p) t.push(' PUBLIC "', p), m && "." != m && t.push('" "', m), t.push('">');
                                else if (m && "." != m) t.push(' SYSTEM "', m, '">');
                                else {
                                    var f = e.internalSubset;
                                    f && t.push(" [", f, "]"), t.push(">")
                                }
                                return;
                            case J:
                                return t.push("<?", e.target, " ", e.data, "?>");
                            case W:
                                return t.push("&", e.nodeName, ";");
                            default:
                                t.push("??", e.nodeName)
                        }
                    }

                    function U(e, t, n) {
                        e[t] = n
                    }
                    var L = "http://www.w3.org/1999/xhtml",
                        q = {},
                        j = q.ELEMENT_NODE = 1,
                        V = q.ATTRIBUTE_NODE = 2,
                        F = q.TEXT_NODE = 3,
                        G = q.CDATA_SECTION_NODE = 4,
                        W = q.ENTITY_REFERENCE_NODE = 5,
                        Q = q.ENTITY_NODE = 6,
                        J = q.PROCESSING_INSTRUCTION_NODE = 7,
                        K = q.COMMENT_NODE = 8,
                        X = q.DOCUMENT_NODE = 9,
                        Y = q.DOCUMENT_TYPE_NODE = 10,
                        z = q.DOCUMENT_FRAGMENT_NODE = 11,
                        $ = q.NOTATION_NODE = 12,
                        Z = {},
                        ee = {},
                        te = (Z.INDEX_SIZE_ERR = (ee[1] = "Index size error", 1), Z.DOMSTRING_SIZE_ERR = (ee[2] = "DOMString size error", 2), Z.HIERARCHY_REQUEST_ERR = (ee[3] = "Hierarchy request error", 3)),
                        ne = (Z.WRONG_DOCUMENT_ERR = (ee[4] = "Wrong document", 4), Z.INVALID_CHARACTER_ERR = (ee[5] = "Invalid character", 5), Z.NO_DATA_ALLOWED_ERR = (ee[6] = "No data allowed", 6), Z.NO_MODIFICATION_ALLOWED_ERR = (ee[7] = "No modification allowed", 7), Z.NOT_FOUND_ERR = (ee[8] = "Not found", 8)),
                        ie = (Z.NOT_SUPPORTED_ERR = (ee[9] = "Not supported", 9), Z.INUSE_ATTRIBUTE_ERR = (ee[10] = "Attribute in use", 10));
                    Z.INVALID_STATE_ERR = (ee[11] = "Invalid state", 11), Z.SYNTAX_ERR = (ee[12] = "Syntax error", 12), Z.INVALID_MODIFICATION_ERR = (ee[13] = "Invalid modification", 13), Z.NAMESPACE_ERR = (ee[14] = "Invalid namespace", 14), Z.INVALID_ACCESS_ERR = (ee[15] = "Invalid access", 15), r.prototype = Error.prototype, n(Z, r), o.prototype = {
                        length: 0,
                        item: function(e) {
                            return this[e] || null
                        },
                        toString: function(e, t) {
                            for (var n = [], i = 0; i < this.length; i++) B(this[i], n, e, t);
                            return n.join("")
                        }
                    }, s.prototype.item = function(e) {
                        return a(this), this[e]
                    }, i(s, o), c.prototype = {
                        length: 0,
                        item: o.prototype.item,
                        getNamedItem: function(e) {
                            for (var t = this.length; t--;) {
                                var n = this[t];
                                if (n.nodeName == e) return n
                            }
                        },
                        setNamedItem: function(e) {
                            var t = e.ownerElement;
                            if (t && t != this._ownerElement) throw new r(ie);
                            var n = this.getNamedItem(e.nodeName);
                            return d(this._ownerElement, this, e, n), n
                        },
                        setNamedItemNS: function(e) {
                            var t, n = e.ownerElement;
                            if (n && n != this._ownerElement) throw new r(ie);
                            return t = this.getNamedItemNS(e.namespaceURI, e.localName), d(this._ownerElement, this, e, t), t
                        },
                        removeNamedItem: function(e) {
                            var t = this.getNamedItem(e);
                            return h(this._ownerElement, this, t), t
                        },
                        removeNamedItemNS: function(e, t) {
                            var n = this.getNamedItemNS(e, t);
                            return h(this._ownerElement, this, n), n
                        },
                        getNamedItemNS: function(e, t) {
                            for (var n = this.length; n--;) {
                                var i = this[n];
                                if (i.localName == t && i.namespaceURI == e) return i
                            }
                            return null
                        }
                    }, _.prototype = {
                        hasFeature: function(e, t) {
                            var n = this._features[e.toLowerCase()];
                            return !(!n || t && !(t in n))
                        },
                        createDocument: function(e, t, n) {
                            var i = new f;
                            if (i.implementation = this, i.childNodes = new o, i.doctype = n, n && i.appendChild(n), t) {
                                var r = i.createElementNS(e, t);
                                i.appendChild(r)
                            }
                            return i
                        },
                        createDocumentType: function(e, t, n) {
                            var i = new I;
                            return i.name = e, i.nodeName = e, i.publicId = t, i.systemId = n, i
                        }
                    }, p.prototype = {
                        firstChild: null,
                        lastChild: null,
                        previousSibling: null,
                        nextSibling: null,
                        attributes: null,
                        parentNode: null,
                        childNodes: null,
                        ownerDocument: null,
                        nodeValue: null,
                        namespaceURI: null,
                        prefix: null,
                        localName: null,
                        insertBefore: function(e, t) {
                            return b(this, e, t)
                        },
                        replaceChild: function(e, t) {
                            this.insertBefore(e, t), t && this.removeChild(t)
                        },
                        removeChild: function(e) {
                            return S(this, e)
                        },
                        appendChild: function(e) {
                            return this.insertBefore(e, null)
                        },
                        hasChildNodes: function() {
                            return null != this.firstChild
                        },
                        cloneNode: function(e) {
                            return function e(t, n, i) {
                                var r = new n.constructor;
                                for (var s in n) {
                                    var a = n[s];
                                    "object" != u(a) && a != r[s] && (r[s] = a)
                                }
                                switch (n.childNodes && (r.childNodes = new o), r.ownerDocument = t, r.nodeType) {
                                    case j:
                                        var l = n.attributes,
                                            d = r.attributes = new c,
                                            h = l.length;
                                        d._ownerElement = r;
                                        for (var _ = 0; _ < h; _++) r.setAttributeNode(e(t, l.item(_), !0));
                                        break;
                                    case V:
                                        i = !0
                                }
                                if (i)
                                    for (var p = n.firstChild; p;) r.appendChild(e(t, p, i)), p = p.nextSibling;
                                return r
                            }(this.ownerDocument || this, this, e)
                        },
                        normalize: function() {
                            for (var e = this.firstChild; e;) {
                                var t = e.nextSibling;
                                t && t.nodeType == F && e.nodeType == F ? (this.removeChild(t), e.appendData(t.data)) : (e.normalize(), e = t)
                            }
                        },
                        isSupported: function(e, t) {
                            return this.ownerDocument.implementation.hasFeature(e, t)
                        },
                        hasAttributes: function() {
                            return this.attributes.length > 0
                        },
                        lookupPrefix: function(e) {
                            for (var t = this; t;) {
                                var n = t._nsMap;
                                if (n)
                                    for (var i in n)
                                        if (n[i] == e) return i;
                                t = t.nodeType == V ? t.ownerDocument : t.parentNode
                            }
                            return null
                        },
                        lookupNamespaceURI: function(e) {
                            for (var t = this; t;) {
                                var n = t._nsMap;
                                if (n && e in n) return n[e];
                                t = t.nodeType == V ? t.ownerDocument : t.parentNode
                            }
                            return null
                        },
                        isDefaultNamespace: function(e) {
                            return null == this.lookupPrefix(e)
                        }
                    }, n(q, p), n(q, p.prototype), f.prototype = {
                        nodeName: "#document",
                        nodeType: X,
                        doctype: null,
                        documentElement: null,
                        _inc: 1,
                        insertBefore: function(e, t) {
                            if (e.nodeType == z) {
                                for (var n = e.firstChild; n;) {
                                    var i = n.nextSibling;
                                    this.insertBefore(n, t), n = i
                                }
                                return e
                            }
                            return null == this.documentElement && e.nodeType == j && (this.documentElement = e), b(this, e, t), e.ownerDocument = this, e
                        },
                        removeChild: function(e) {
                            return this.documentElement == e && (this.documentElement = null), S(this, e)
                        },
                        importNode: function(e, t) {
                            return function e(t, n, i) {
                                var r;
                                switch (n.nodeType) {
                                    case j:
                                        (r = n.cloneNode(!1)).ownerDocument = t;
                                    case z:
                                        break;
                                    case V:
                                        i = !0
                                }
                                if (r || (r = n.cloneNode(!1)), r.ownerDocument = t, r.parentNode = null, i)
                                    for (var o = n.firstChild; o;) r.appendChild(e(t, o, i)), o = o.nextSibling;
                                return r
                            }(this, e, t)
                        },
                        getElementById: function(e) {
                            var t = null;
                            return m(this.documentElement, (function(n) {
                                if (n.nodeType == j && n.getAttribute("id") == e) return t = n, !0
                            })), t
                        },
                        createElement: function(e) {
                            var t = new E;
                            return t.ownerDocument = this, t.nodeName = e, t.tagName = e, t.childNodes = new o, (t.attributes = new c)._ownerElement = t, t
                        },
                        createDocumentFragment: function() {
                            var e = new O;
                            return e.ownerDocument = this, e.childNodes = new o, e
                        },
                        createTextNode: function(e) {
                            var t = new k;
                            return t.ownerDocument = this, t.appendData(e), t
                        },
                        createComment: function(e) {
                            var t = new T;
                            return t.ownerDocument = this, t.appendData(e), t
                        },
                        createCDATASection: function(e) {
                            var t = new N;
                            return t.ownerDocument = this, t.appendData(e), t
                        },
                        createProcessingInstruction: function(e, t) {
                            var n = new x;
                            return n.ownerDocument = this, n.tagName = n.target = e, n.nodeValue = n.data = t, n
                        },
                        createAttribute: function(e) {
                            var t = new w;
                            return t.ownerDocument = this, t.name = e, t.nodeName = e, t.localName = e, t.specified = !0, t
                        },
                        createEntityReference: function(e) {
                            var t = new M;
                            return t.ownerDocument = this, t.nodeName = e, t
                        },
                        createElementNS: function(e, t) {
                            var n = new E,
                                i = t.split(":"),
                                r = n.attributes = new c;
                            return n.childNodes = new o, n.ownerDocument = this, n.nodeName = t, n.tagName = t, n.namespaceURI = e, 2 == i.length ? (n.prefix = i[0], n.localName = i[1]) : n.localName = t, r._ownerElement = n, n
                        },
                        createAttributeNS: function(e, t) {
                            var n = new w,
                                i = t.split(":");
                            return n.ownerDocument = this, n.nodeName = t, n.name = t, n.namespaceURI = e, n.specified = !0, 2 == i.length ? (n.prefix = i[0], n.localName = i[1]) : n.localName = t, n
                        }
                    }, i(f, p), E.prototype = {
                        nodeType: j,
                        hasAttribute: function(e) {
                            return null != this.getAttributeNode(e)
                        },
                        getAttribute: function(e) {
                            var t = this.getAttributeNode(e);
                            return t && t.value || ""
                        },
                        getAttributeNode: function(e) {
                            return this.attributes.getNamedItem(e)
                        },
                        setAttribute: function(e, t) {
                            var n = this.ownerDocument.createAttribute(e);
                            n.value = n.nodeValue = "" + t, this.setAttributeNode(n)
                        },
                        removeAttribute: function(e) {
                            var t = this.getAttributeNode(e);
                            t && this.removeAttributeNode(t)
                        },
                        appendChild: function(e) {
                            return e.nodeType === z ? this.insertBefore(e, null) : function(e, t) {
                                var n = t.parentNode;
                                if (n) {
                                    var i = e.lastChild;
                                    n.removeChild(t), i = e.lastChild
                                }
                                return i = e.lastChild, t.parentNode = e, t.previousSibling = i, t.nextSibling = null, i ? i.nextSibling = t : e.firstChild = t, e.lastChild = t, y(e.ownerDocument, e, t), t
                            }(this, e)
                        },
                        setAttributeNode: function(e) {
                            return this.attributes.setNamedItem(e)
                        },
                        setAttributeNodeNS: function(e) {
                            return this.attributes.setNamedItemNS(e)
                        },
                        removeAttributeNode: function(e) {
                            return this.attributes.removeNamedItem(e.nodeName)
                        },
                        removeAttributeNS: function(e, t) {
                            var n = this.getAttributeNodeNS(e, t);
                            n && this.removeAttributeNode(n)
                        },
                        hasAttributeNS: function(e, t) {
                            return null != this.getAttributeNodeNS(e, t)
                        },
                        getAttributeNS: function(e, t) {
                            var n = this.getAttributeNodeNS(e, t);
                            return n && n.value || ""
                        },
                        setAttributeNS: function(e, t, n) {
                            var i = this.ownerDocument.createAttributeNS(e, t);
                            i.value = i.nodeValue = "" + n, this.setAttributeNode(i)
                        },
                        getAttributeNodeNS: function(e, t) {
                            return this.attributes.getNamedItemNS(e, t)
                        },
                        getElementsByTagName: function(e) {
                            return new s(this, (function(t) {
                                var n = [];
                                return m(t, (function(i) {
                                    i === t || i.nodeType != j || "*" !== e && i.tagName != e || n.push(i)
                                })), n
                            }))
                        },
                        getElementsByTagNameNS: function(e, t) {
                            return new s(this, (function(n) {
                                var i = [];
                                return m(n, (function(r) {
                                    r === n || r.nodeType !== j || "*" !== e && r.namespaceURI !== e || "*" !== t && r.localName != t || i.push(r)
                                })), i
                            }))
                        }
                    }, f.prototype.getElementsByTagName = E.prototype.getElementsByTagName, f.prototype.getElementsByTagNameNS = E.prototype.getElementsByTagNameNS, i(E, p), w.prototype.nodeType = V, i(w, p), R.prototype = {
                        data: "",
                        substringData: function(e, t) {
                            return this.data.substring(e, e + t)
                        },
                        appendData: function(e) {
                            e = this.data + e, this.nodeValue = this.data = e, this.length = e.length
                        },
                        insertData: function(e, t) {
                            this.replaceData(e, 0, t)
                        },
                        appendChild: function(e) {
                            throw new Error(ee[te])
                        },
                        deleteData: function(e, t) {
                            this.replaceData(e, t, "")
                        },
                        replaceData: function(e, t, n) {
                            n = this.data.substring(0, e) + n + this.data.substring(e + t), this.nodeValue = this.data = n, this.length = n.length
                        }
                    }, i(R, p), k.prototype = {
                        nodeName: "#text",
                        nodeType: F,
                        splitText: function(e) {
                            var t = this.data,
                                n = t.substring(e);
                            t = t.substring(0, e), this.data = this.nodeValue = t, this.length = t.length;
                            var i = this.ownerDocument.createTextNode(n);
                            return this.parentNode && this.parentNode.insertBefore(i, this.nextSibling), i
                        }
                    }, i(k, R), T.prototype = {
                        nodeName: "#comment",
                        nodeType: K
                    }, i(T, R), N.prototype = {
                        nodeName: "#cdata-section",
                        nodeType: G
                    }, i(N, R), I.prototype.nodeType = Y, i(I, p), C.prototype.nodeType = $, i(C, p), A.prototype.nodeType = Q, i(A, p), M.prototype.nodeType = W, i(M, p), O.prototype.nodeName = "#document-fragment", O.prototype.nodeType = z, i(O, p), x.prototype.nodeType = J, i(x, p), P.prototype.serializeToString = function(e, t, n) {
                        return D.call(e, t, n)
                    }, p.prototype.toString = D;
                    try {
                        if (Object.defineProperty) {
                            Object.defineProperty(s.prototype, "length", {get: function() {
                                    return a(this), this.$$length
                                }
                            }), Object.defineProperty(p.prototype, "textContent", {get: function() {
                                    return function e(t) {
                                        switch (t.nodeType) {
                                            case j:
                                            case z:
                                                var n = [];
                                                for (t = t.firstChild; t;) 7 !== t.nodeType && 8 !== t.nodeType && n.push(e(t)), t = t.nextSibling;
                                                return n.join("");
                                            default:
                                                return t.nodeValue
                                        }
                                    }(this)
                                },
                                set: function(e) {
                                    switch (this.nodeType) {
                                        case j:
                                        case z:
                                            for (; this.firstChild;) this.removeChild(this.firstChild);
                                            (e || String(e)) && this.appendChild(this.ownerDocument.createTextNode(e));
                                            break;
                                        default:
                                            this.data = e, this.value = e, this.nodeValue = e
                                    }
                                }
                            }), U = function(e, t, n) {
                                e["$$" + t] = n
                            }
                        }
                    } catch (e) {}
                    t.DOMImplementation = _, t.XMLSerializer = P
                }]),
                l = c.DOMParser,
                d = function(e) {
                    for (var t, n, i, r = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/", o = 0, s = e.length, a = ""; o < s;) {
                        if (t = 255 & e.charCodeAt(o++), o == s) {
                            a += r.charAt(t >> 2), a += r.charAt((3 & t) << 4), a += "==";
                            break
                        }
                        if (n = e.charCodeAt(o++), o == s) {
                            a += r.charAt(t >> 2), a += r.charAt((3 & t) << 4 | (240 & n) >> 4), a += r.charAt((15 & n) << 2), a += "=";
                            break
                        }
                        i = e.charCodeAt(o++), a += r.charAt(t >> 2), a += r.charAt((3 & t) << 4 | (240 & n) >> 4), a += r.charAt((15 & n) << 2 | (192 & i) >> 6), a += r.charAt(63 & i)
                    }
                    return a
                };
            return function(n, o) {
                    if ("function" == typeof r && r.amd) r("strophe-core", ["strophe-sha1", "strophe-md5", "strophe-utils"], (function() {
                        return o.apply(this, arguments)
                    }));
                    else if ("object" === u(t)) e.exports = o(i("./sha1"), i("./md5"), i("./utils"));
                    else {
                        var s = o(n.SHA1, n.MD5, n.stropheUtils);
                        n.Strophe = s.Strophe, n.$build = s.$build, n.$iq = s.$iq, n.$msg = s.$msg, n.$pres = s.$pres, n.SHA1 = s.SHA1, n.MD5 = s.MD5, n.b64_hmac_sha1 = s.SHA1.b64_hmac_sha1, n.b64_sha1 = s.SHA1.b64_sha1, n.str_hmac_sha1 = s.SHA1.str_hmac_sha1, n.str_sha1 = s.SHA1.str_sha1
                    }
                }(a, (function(e, t, n) {
                    function i(e, t) {
                        return new s.Builder(e, t)
                    }

                    function r(e) {
                        return new s.Builder("iq", e)
                    }

                    function o(e) {
                        return new s.Builder("presence", e)
                    }
                    var s;
                    return (s = {
                        VERSION: "",
                        NS: {
                            HTTPBIND: "http://jabber.org/protocol/httpbind",
                            BOSH: "urn:xmpp:xbosh",
                            CLIENT: "jabber:client",
                            AUTH: "jabber:iq:auth",
                            ROSTER: "jabber:iq:roster",
                            PROFILE: "jabber:iq:profile",
                            DISCO_INFO: "http://jabber.org/protocol/disco#info",
                            DISCO_ITEMS: "http://jabber.org/protocol/disco#items",
                            MUC: "http://jabber.org/protocol/muc",
                            SASL: "urn:ietf:params:xml:ns:xmpp-sasl",
                            STREAM: "http://etherx.jabber.org/streams",
                            FRAMING: "urn:ietf:params:xml:ns:xmpp-framing",
                            BIND: "urn:ietf:params:xml:ns:xmpp-bind",
                            SESSION: "urn:ietf:params:xml:ns:xmpp-session",
                            VERSION: "jabber:iq:version",
                            STANZAS: "urn:ietf:params:xml:ns:xmpp-stanzas",
                            XHTML_IM: "http://jabber.org/protocol/xhtml-im",
                            XHTML: "http://www.w3.org/1999/xhtml"
                        },
                        XHTML: {
                            tags: ["a", "blockquote", "br", "cite", "em", "img", "li", "ol", "p", "span", "strong", "ul", "body"],
                            attributes: {
                                a: ["href"],
                                blockquote: ["style"],
                                br: [],
                                cite: ["style"],
                                em: [],
                                img: ["src", "alt", "style", "height", "width"],
                                li: ["style"],
                                ol: ["style"],
                                p: ["style"],
                                span: ["style"],
                                strong: [],
                                ul: ["style"],
                                body: []
                            },
                            css: ["background-color", "color", "font-family", "font-size", "font-style", "font-weight", "margin-left", "margin-right", "text-align", "text-decoration"],
                            validTag: function(e) {
                                for (var t = 0; t < s.XHTML.tags.length; t++)
                                    if (e === s.XHTML.tags[t]) return !0;
                                return !1
                            },
                            validAttribute: function(e, t) {
                                if (void 0 !== s.XHTML.attributes[e] && s.XHTML.attributes[e].length > 0)
                                    for (var n = 0; n < s.XHTML.attributes[e].length; n++)
                                        if (t === s.XHTML.attributes[e][n]) return !0;
                                return !1
                            },
                            validCSS: function(e) {
                                for (var t = 0; t < s.XHTML.css.length; t++)
                                    if (e === s.XHTML.css[t]) return !0;
                                return !1
                            }
                        },
                        Status: {
                            ERROR: 0,
                            CONNECTING: 1,
                            CONNFAIL: 2,
                            AUTHENTICATING: 3,
                            AUTHFAIL: 4,
                            CONNECTED: 5,
                            DISCONNECTED: 6,
                            DISCONNECTING: 7,
                            ATTACHED: 8,
                            REDIRECT: 9,
                            CONNTIMEOUT: 10
                        },
                        ErrorCondition: {
                            BAD_FORMAT: "bad-format",
                            CONFLICT: "conflict",
                            MISSING_JID_NODE: "x-strophe-bad-non-anon-jid",
                            NO_AUTH_MECH: "no-auth-mech",
                            UNKNOWN_REASON: "unknown"
                        },
                        LogLevel: {
                            DEBUG: 0,
                            INFO: 1,
                            WARN: 2,
                            ERROR: 3,
                            FATAL: 4
                        },
                        ElementType: {
                            NORMAL: 1,
                            TEXT: 3,
                            CDATA: 4,
                            FRAGMENT: 11
                        },
                        TIMEOUT: 1.1,
                        SECONDARY_TIMEOUT: .1,
                        addNamespace: function(e, t) {
                            s.NS[e] = t
                        },
                        forEachChild: function(e, t, n) {
                            var i, r;
                            for (i = 0; i < e.childNodes.length; i++)(r = e.childNodes[i]).nodeType !== s.ElementType.NORMAL || t && !this.isTagEqual(r, t) || n(r)
                        },
                        isTagEqual: function(e, t) {
                            return e.tagName === t
                        },
                        _xmlGenerator: null,
                        _makeGenerator: function() {
                            return (new c.DOMImplementation).createDocument("jabber:client", "strophe", null)
                        },
                        xmlGenerator: function() {
                            return s._xmlGenerator || (s._xmlGenerator = s._makeGenerator()), s._xmlGenerator
                        },
                        _getIEXmlDom: function() {
                            for (var e = null, t = ["Msxml2.DOMDocument.6.0", "Msxml2.DOMDocument.5.0", "Msxml2.DOMDocument.4.0", "MSXML2.DOMDocument.3.0", "MSXML2.DOMDocument", "MSXML.DOMDocument", "Microsoft.XMLDOM"], n = 0; n < t.length && null === e; n++) try {
                                e = new ActiveXObject(t[n])
                            } catch (t) {
                                e = null
                            }
                            return e
                        },
                        xmlElement: function(e) {
                            if (!e) return null;
                            var t, n, i, r = s.xmlGenerator().createElement(e);
                            for (t = 1; t < arguments.length; t++) {
                                var o = arguments[t];
                                if (o)
                                    if ("string" == typeof o || "number" == typeof o) r.appendChild(s.xmlTextNode(o));
                                    else if ("object" === u(o) && "function" == typeof o.sort)
                                    for (n = 0; n < o.length; n++) {
                                        var a = o[n];
                                        "object" === u(a) && "function" == typeof a.sort && void 0 !== a[1] && null !== a[1] && r.setAttribute(a[0], a[1])
                                    } else if ("object" === u(o))
                                        for (i in o) o.hasOwnProperty(i) && void 0 !== o[i] && null !== o[i] && r.setAttribute(i, o[i])
                            }
                            return r
                        },
                        xmlescape: function(e) {
                            return e = (e = (e = (e = (e = e.replace(/\&/g, "&amp;")).replace(/</g, "&lt;")).replace(/>/g, "&gt;")).replace(/'/g, "&apos;")).replace(/"/g, "&quot;")
                        },
                        xmlunescape: function(e) {
                            return e = (e = (e = (e = (e = e.replace(/\&amp;/g, "&")).replace(/&lt;/g, "<")).replace(/&gt;/g, ">")).replace(/&apos;/g, "'")).replace(/&quot;/g, '"')
                        },
                        xmlTextNode: function(e) {
                            return s.xmlGenerator().createTextNode(e)
                        },
                        xmlHtmlNode: function(e) {
                            var t;
                            l ? t = (new l).parseFromString(e, "text/xml") : ((t = new ActiveXObject("Microsoft.XMLDOM")).async = "false", t.loadXML(e));
                            return t
                        },
                        getText: function(e) {
                            if (!e) return null;
                            var t = "";
                            0 === e.childNodes.length && e.nodeType === s.ElementType.TEXT && (t += e.nodeValue);
                            for (var n = 0; n < e.childNodes.length; n++) e.childNodes[n].nodeType === s.ElementType.TEXT && (t += e.childNodes[n].nodeValue);
                            return s.xmlescape(t)
                        },
                        copyElement: function(e) {
                            var t, n;
                            if (e.nodeType === s.ElementType.NORMAL) {
                                for (n = s.xmlElement(e.tagName), t = 0; t < e.attributes.length; t++) n.setAttribute(e.attributes[t].nodeName, e.attributes[t].value);
                                for (t = 0; t < e.childNodes.length; t++) n.appendChild(s.copyElement(e.childNodes[t]))
                            } else e.nodeType === s.ElementType.TEXT && (n = s.xmlGenerator().createTextNode(e.nodeValue));
                            return n
                        },
                        createHtml: function(e) {
                            var t, n, i, r, o, a, c, l, d, h, _;
                            if (e.nodeType === s.ElementType.NORMAL)
                                if (r = e.nodeName.toLowerCase(), s.XHTML.validTag(r)) try {
                                    for (n = s.xmlElement(r), t = 0; t < s.XHTML.attributes[r].length; t++)
                                        if (o = s.XHTML.attributes[r][t], null != (a = e.getAttribute(o)) && "" !== a && !1 !== a && 0 !== a)
                                            if ("style" === o && "object" === u(a) && void 0 !== a.cssText && (a = a.cssText), "style" === o) {
                                                for (c = [], l = a.split(";"), i = 0; i < l.length; i++) h = (d = l[i].split(":"))[0].replace(/^\s*/, "").replace(/\s*$/, "").toLowerCase(), s.XHTML.validCSS(h) && (_ = d[1].replace(/^\s*/, "").replace(/\s*$/, ""), c.push(h + ": " + _));
                                                c.length > 0 && (a = c.join("; "), n.setAttribute(o, a))
                                            } else n.setAttribute(o, a);
                                    for (t = 0; t < e.childNodes.length; t++) n.appendChild(s.createHtml(e.childNodes[t]))
                                } catch (e) {
                                    n = s.xmlTextNode("")
                                } else
                                    for (n = s.xmlGenerator().createDocumentFragment(), t = 0; t < e.childNodes.length; t++) n.appendChild(s.createHtml(e.childNodes[t]));
                                else if (e.nodeType === s.ElementType.FRAGMENT)
                                for (n = s.xmlGenerator().createDocumentFragment(), t = 0; t < e.childNodes.length; t++) n.appendChild(s.createHtml(e.childNodes[t]));
                            else e.nodeType === s.ElementType.TEXT && (n = s.xmlTextNode(e.nodeValue));
                            return n
                        },
                        escapeNode: function(e) {
                            return "string" != typeof e ? e : e.replace(/^\s+|\s+$/g, "").replace(/\\/g, "\\5c").replace(/ /g, "\\20").replace(/\"/g, "\\22").replace(/\&/g, "\\26").replace(/\'/g, "\\27").replace(/\//g, "\\2f").replace(/:/g, "\\3a").replace(/</g, "\\3c").replace(/>/g, "\\3e").replace(/@/g, "\\40")
                        },
                        unescapeNode: function(e) {
                            return "string" != typeof e ? e : e.replace(/\\20/g, " ").replace(/\\22/g, '"').replace(/\\26/g, "&").replace(/\\27/g, "'").replace(/\\2f/g, "/").replace(/\\3a/g, ":").replace(/\\3c/g, "<").replace(/\\3e/g, ">").replace(/\\40/g, "@").replace(/\\5c/g, "\\")
                        },
                        getNodeFromJid: function(e) {
                            return e.indexOf("@") < 0 ? e : e.split("@")[0]
                        },
                        getDomainFromJid: function(e) {
                            var t = s.getBareJidFromJid(e);
                            if (t.indexOf("@") < 0) return t;
                            var n = t.split("@");
                            return n.splice(0, 1), n.join("@")
                        },
                        getResourceFromJid: function(e) {
                            var t = e.split("/");
                            return t.length < 2 ? null : (t.splice(0, 1), t.join("/"))
                        },
                        getBareJidFromJid: function(e) {
                            return e ? e.split("/")[0] : null
                        },
                        _handleError: function(e) {
                            void 0 !== e.stack && s.fatal(e.stack), e.sourceURL ? s.fatal("error: " + this.handler + " " + e.sourceURL + ":" + e.line + " - " + e.name + ": " + e.message) : e.fileName ? s.fatal("error: " + this.handler + " " + e.fileName + ":" + e.lineNumber + " - " + e.name + ": " + e.message) : s.fatal("error: " + e.message)
                        },
                        log: function(e, t) {
                            e === this.LogLevel.FATAL && "object" === ("undefined" == typeof console ? "undefined" : u(console)) && "function" == typeof console.error && console.error(t)
                        },
                        debug: function(e) {
                            this.log(this.LogLevel.DEBUG, e)
                        },
                        info: function(e) {
                            this.log(this.LogLevel.INFO, e)
                        },
                        warn: function(e) {
                            this.log(this.LogLevel.WARN, e)
                        },
                        error: function(e) {
                            this.log(this.LogLevel.ERROR, e)
                        },
                        fatal: function(e) {
                            this.log(this.LogLevel.FATAL, e)
                        },
                        serialize: function(e) {
                            var t;
                            if (!e) return null;
                            "function" == typeof e.tree && (e = e.tree());
                            var n, i, r = e.nodeName;
                            for (e.getAttribute("_realname") && (r = e.getAttribute("_realname")), t = "<" + r, n = 0; n < e.attributes.length; n++) "_realname" !== e.attributes[n].nodeName && (t += " " + e.attributes[n].nodeName + "='" + s.xmlescape(e.attributes[n].value) + "'");
                            if (e.childNodes.length > 0) {
                                for (t += ">", n = 0; n < e.childNodes.length; n++) switch (i = e.childNodes[n], i.nodeType) {
                                    case s.ElementType.NORMAL:
                                        t += s.serialize(i);
                                        break;
                                    case s.ElementType.TEXT:
                                        t += s.xmlescape(i.nodeValue);
                                        break;
                                    case s.ElementType.CDATA:
                                        t += "<![CDATA[" + i.nodeValue + "]]>"
                                }
                                t += "</" + r + ">"
                            } else t += "/>";
                            return t
                        },
                        _requestId: 0,
                        _connectionPlugins: {},
                        addConnectionPlugin: function(e, t) {
                            s._connectionPlugins[e] = t
                        }
                    }).btoa = d, s.Builder = function(e, t) {
                        "presence" !== e && "message" !== e && "iq" !== e || (t && !t.xmlns ? t.xmlns = s.NS.CLIENT : t || (t = {
                            xmlns: s.NS.CLIENT
                        })), this.nodeTree = s.xmlElement(e, t), this.node = this.nodeTree
                    }, s.Builder.prototype = {
                        tree: function() {
                            return this.nodeTree
                        },
                        toString: function() {
                            return s.serialize(this.nodeTree)
                        },
                        up: function() {
                            return this.node = this.node.parentNode, this
                        },
                        root: function() {
                            return this.node = this.nodeTree, this
                        },
                        attrs: function(e) {
                            for (var t in e) e.hasOwnProperty(t) && (void 0 === e[t] ? this.node.removeAttribute(t) : this.node.setAttribute(t, e[t]));
                            return this
                        },
                        c: function(e, t, n) {
                            var i = s.xmlElement(e, t, n);
                            return this.node.appendChild(i), "string" != typeof n && "number" != typeof n && (this.node = i), this
                        },
                        cnode: function(e) {
                            var t, n = s.xmlGenerator();
                            try {
                                t = void 0 !== n.importNode
                            } catch (e) {
                                t = !1
                            }
                            var i = t ? n.importNode(e, !0) : s.copyElement(e);
                            return this.node.appendChild(i), this.node = i, this
                        },
                        t: function(e) {
                            var t = s.xmlTextNode(e);
                            return this.node.appendChild(t), this
                        },
                        h: function(e) {
                            var t = document.createElement("body");
                            t.innerHTML = e;
                            for (var n = s.createHtml(t); n.childNodes.length > 0;) this.node.appendChild(n.childNodes[0]);
                            return this
                        }
                    }, s.Handler = function(e, t, n, i, r, o, a) {
                        this.handler = e, this.ns = t, this.name = n, this.type = i, this.id = r, this.options = a || {
                            matchBareFromJid: !1,
                            ignoreNamespaceFragment: !1
                        }, this.options.matchBare && (s.warn('The "matchBare" option is deprecated, use "matchBareFromJid" instead.'), this.options.matchBareFromJid = this.options.matchBare, delete this.options.matchBare), this.options.matchBareFromJid ? this.from = o ? s.getBareJidFromJid(o) : null : this.from = o, this.user = !0
                    }, s.Handler.prototype = {
                        getNamespace: function(e) {
                            var t = e.getAttribute("xmlns");
                            return t && this.options.ignoreNamespaceFragment && (t = t.split("#")[0]), t
                        },
                        namespaceMatch: function(e) {
                            var t = !1;
                            if (!this.ns) return !0;
                            var n = this;
                            return s.forEachChild(e, null, (function(e) {
                                n.getNamespace(e) === n.ns && (t = !0)
                            })), t = t || this.getNamespace(e) === this.ns
                        },
                        isMatch: function(e) {
                            var t = e.getAttribute("from");
                            this.options.matchBareFromJid && (t = s.getBareJidFromJid(t));
                            var n = e.getAttribute("type");
                            return !(!this.namespaceMatch(e) || this.name && !s.isTagEqual(e, this.name) || this.type && (Array.isArray(this.type) ? -1 === this.type.indexOf(n) : n !== this.type) || this.id && e.getAttribute("id") !== this.id || this.from && t !== this.from)
                        },
                        run: function(e) {
                            var t = null;
                            try {
                                t = this.handler(e)
                            } catch (e) {
                                throw s._handleError(e), e
                            }
                            return t
                        },
                        toString: function() {
                            return "{Handler: " + this.handler + "(" + this.name + "," + this.id + "," + this.ns + ")}"
                        }
                    }, s.TimedHandler = function(e, t) {
                        this.period = e, this.handler = t, this.lastCalled = (new Date).getTime(), this.user = !0
                    }, s.TimedHandler.prototype = {
                        run: function() {
                            return this.lastCalled = (new Date).getTime(), this.handler()
                        },
                        reset: function() {
                            this.lastCalled = (new Date).getTime()
                        },
                        toString: function() {
                            return "{TimedHandler: " + this.handler + "(" + this.period + ")}"
                        }
                    }, s.Connection = function(e, t) {
                        this.service = e, this.options = t || {};
                        var i = this.options.protocol || "";
                        for (var r in 0 === e.indexOf("ws:") || 0 === e.indexOf("wss:") || 0 === i.indexOf("ws") ? this._proto = new s.Websocket(this) : this._proto = new s.Bosh(this), this.jid = "", this.domain = null, this.features = null, this._sasl_data = {}, this.do_session = !1, this.do_bind = !1, this.timedHandlers = [], this.handlers = [], this.removeTimeds = [], this.removeHandlers = [], this.addTimeds = [], this.addHandlers = [], this.protocolErrorHandlers = {
                                HTTP: {},
                                websocket: {}
                            }, this._idleTimeout = null, this._disconnectTimeout = null, this.authenticated = !1, this.connected = !1, this.disconnecting = !1, this.do_authentication = !0, this.paused = !1, this.restored = !1, this._data = [], this._uniqueId = 0, this._sasl_success_handler = null, this._sasl_failure_handler = null, this._sasl_challenge_handler = null, this.maxRetries = 5, this._idleTimeout = setTimeout(function() {
                                this._onIdle()
                            }.bind(this), 100), n.addCookies(this.options.cookies), this.registerSASLMechanisms(this.options.mechanisms), s._connectionPlugins)
                            if (s._connectionPlugins.hasOwnProperty(r)) {
                                var o = s._connectionPlugins[r],
                                    a = function() {};
                                a.prototype = o, this[r] = new a, this[r].init(this)
                            }
                    }, s.Connection.prototype = {
                        reset: function() {
                            this._proto._reset(), this.do_session = !1, this.do_bind = !1, this.timedHandlers = [], this.handlers = [], this.removeTimeds = [], this.removeHandlers = [], this.addTimeds = [], this.addHandlers = [], this.authenticated = !1, this.connected = !1, this.disconnecting = !1, this.restored = !1, this._data = [], this._requests = [], this._uniqueId = 0
                        },
                        pause: function() {
                            this.paused = !0
                        },
                        resume: function() {
                            this.paused = !1
                        },
                        getUniqueId: function(e) {
                            var t = "xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx".replace(/[xy]/g, (function(e) {
                                var t = 16 * Math.random() | 0;
                                return ("x" === e ? t : 3 & t | 8).toString(16)
                            }));
                            return "string" == typeof e || "number" == typeof e ? t + ":" + e : t + ""
                        },
                        addProtocolErrorHandler: function(e, t, n) {
                            this.protocolErrorHandlers[e][t] = n
                        },
                        connect: function(e, t, n, i, r, o, a) {
                            this.jid = e, this.authzid = "", this.authcid = this.jid.split("/")[0], this.pass = t, this.servtype = "xmpp", this.connect_callback = n, this.disconnecting = !1, this.connected = !1, this.authenticated = !1, this.restored = !1, this.domain = s.getDomainFromJid(this.jid), this._changeConnectStatus(s.Status.CONNECTING, null), this._proto._connect(i, r, o)
                        },
                        attach: function(e, t, n, i, r, o, a) {
                            if (!(this._proto instanceof s.Bosh)) throw {
                                name: "StropheSessionError",
                                message: 'The "attach" method can only be used with a BOSH connection.'
                            };
                            this._proto._attach(e, t, n, i, r, o, a)
                        },
                        restore: function(e, t, n, i, r) {
                            if (!this._sessionCachingSupported()) throw {
                                name: "StropheSessionError",
                                message: 'The "restore" method can only be used with a BOSH connection.'
                            };
                            this._proto._restore(e, t, n, i, r)
                        },
                        _sessionCachingSupported: function() {
                            if (this._proto instanceof s.Bosh) {
                                if (!JSON) return !1;
                                try {
                                    sessionStorage.setItem("_strophe_", "_strophe_"), sessionStorage.removeItem("_strophe_")
                                } catch (e) {
                                    return !1
                                }
                                return !0
                            }
                            return !1
                        },
                        xmlInput: function(e) {},
                        xmlOutput: function(e) {},
                        rawInput: function(e) {},
                        rawOutput: function(e) {},
                        nextValidRid: function(e) {},
                        send: function(e) {
                            if (null !== e) {
                                if ("function" == typeof e.sort)
                                    for (var t = 0; t < e.length; t++) this._queueData(e[t]);
                                else "function" == typeof e.tree ? this._queueData(e.tree()) : this._queueData(e);
                                this._proto._send()
                            }
                        },
                        flush: function() {
                            clearTimeout(this._idleTimeout), this._onIdle()
                        },
                        sendPresence: function(e, t, n, i) {
                            var r = null,
                                o = this;
                            "function" == typeof e.tree && (e = e.tree());
                            var s = e.getAttribute("id");
                            if (s || (s = this.getUniqueId("sendPresence"), e.setAttribute("id", s)), "function" == typeof t || "function" == typeof n) {
                                var a = this.addHandler((function(e) {
                                    r && o.deleteTimedHandler(r), "error" === e.getAttribute("type") ? n && n(e) : t && t(e)
                                }), null, "presence", null, s);
                                i && (r = this.addTimedHandler(i, (function() {
                                    return o.deleteHandler(a), n && n(null), !1
                                })))
                            }
                            return this.send(e), s
                        },
                        sendIQ: function(e, t, n, i) {
                            var r = null,
                                o = this;
                            "function" == typeof e.tree && (e = e.tree());
                            var s = e.getAttribute("id");
                            if (s || (s = this.getUniqueId("sendIQ"), e.setAttribute("id", s)), "function" == typeof t || "function" == typeof n) {
                                var a = this.addHandler((function(e) {
                                    r && o.deleteTimedHandler(r);
                                    var i = e.getAttribute("type");
                                    if ("result" === i) t && t(e);
                                    else {
                                        if ("error" !== i) throw {
                                            name: "StropheError",
                                            message: "Got bad IQ type of " + i
                                        };
                                        n && n(e)
                                    }
                                }), null, "iq", ["error", "result"], s);
                                i && (r = this.addTimedHandler(i, (function() {
                                    return o.deleteHandler(a), n && n(null), !1
                                })))
                            }
                            return this.send(e), s
                        },
                        _queueData: function(e) {
                            if (null === e || !e.tagName || !e.childNodes) throw {
                                name: "StropheError",
                                message: "Cannot queue non-DOMElement."
                            };
                            this._data.push(e)
                        },
                        _sendRestart: function() {
                            this._data.push("restart"), this._proto._sendRestart(), this._idleTimeout = setTimeout(function() {
                                this._onIdle()
                            }.bind(this), 100)
                        },
                        addTimedHandler: function(e, t) {
                            var n = new s.TimedHandler(e, t);
                            return this.addTimeds.push(n), n
                        },
                        deleteTimedHandler: function(e) {
                            this.removeTimeds.push(e)
                        },
                        addHandler: function(e, t, n, i, r, o, a) {
                            var u = new s.Handler(e, t, n, i, r, o, a);
                            return this.addHandlers.push(u), u
                        },
                        deleteHandler: function(e) {
                            this.removeHandlers.push(e);
                            var t = this.addHandlers.indexOf(e);
                            t >= 0 && this.addHandlers.splice(t, 1)
                        },
                        registerSASLMechanisms: function(e) {
                            this.mechanisms = {}, (e = e || [s.SASLAnonymous, s.SASLExternal, s.SASLMD5, s.SASLOAuthBearer, s.SASLXOAuth2, s.SASLPlain, s.SASLSHA1]).forEach(this.registerSASLMechanism.bind(this))
                        },
                        registerSASLMechanism: function(e) {
                            this.mechanisms[e.prototype.name] = e
                        },
                        disconnect: function(e) {
                            if (this._changeConnectStatus(s.Status.DISCONNECTING, e), s.info("Disconnect was called because: " + e), this.connected) {
                                var t = !1;
                                this.disconnecting = !0, this.authenticated && (t = o({
                                    xmlns: s.NS.CLIENT,
                                    type: "unavailable"
                                })), this._disconnectTimeout = this._addSysTimedHandler(3e3, this._onDisconnectTimeout.bind(this)), this._proto._disconnect(t)
                            } else s.info("Disconnect was called before Strophe connected to the server"), this._proto._abortAllRequests(), this._doDisconnect()
                        },
                        _changeConnectStatus: function(e, t, n) {
                            for (var i in s._connectionPlugins)
                                if (s._connectionPlugins.hasOwnProperty(i)) {
                                    var r = this[i];
                                    if (r.statusChanged) try {
                                        r.statusChanged(e, t)
                                    } catch (e) {
                                        s.error(i + " plugin caused an exception changing status: " + e)
                                    }
                                }
                            if (this.connect_callback) try {
                                this.connect_callback(e, t, n)
                            } catch (e) {
                                s._handleError(e), s.error("User connection callback caused an exception: " + e)
                            }
                        },
                        _doDisconnect: function(e) {
                            "number" == typeof this._idleTimeout && clearTimeout(this._idleTimeout), null !== this._disconnectTimeout && (this.deleteTimedHandler(this._disconnectTimeout), this._disconnectTimeout = null), s.info("_doDisconnect was called"), this._proto._doDisconnect(), this.authenticated = !1, this.disconnecting = !1, this.restored = !1, this.handlers = [], this.timedHandlers = [], this.removeTimeds = [], this.removeHandlers = [], this.addTimeds = [], this.addHandlers = [], this._changeConnectStatus(s.Status.DISCONNECTED, e), this.connected = !1
                        },
                        _dataRecv: function(e, t) {
                            s.info("_dataRecv called");
                            var n = this._proto._reqToData(e);
                            if (null !== n) {
                                var i, r;
                                for (this.xmlInput !== s.Connection.prototype.xmlInput && (n.nodeName === this._proto.strip && n.childNodes.length ? this.xmlInput(n.childNodes[0]) : this.xmlInput(n)), this.rawInput !== s.Connection.prototype.rawInput && (t ? this.rawInput(t) : this.rawInput(s.serialize(n))); this.removeHandlers.length > 0;) r = this.removeHandlers.pop(), (i = this.handlers.indexOf(r)) >= 0 && this.handlers.splice(i, 1);
                                for (; this.addHandlers.length > 0;) this.handlers.push(this.addHandlers.pop());
                                if (this.disconnecting && this._proto._emptyQueue()) this._doDisconnect();
                                else {
                                    var o, a, u = n.getAttribute("type");
                                    if (null !== u && "terminate" === u) {
                                        if (this.disconnecting) return;
                                        return o = n.getAttribute("condition"), a = n.getElementsByTagName("conflict"), null !== o ? ("remote-stream-error" === o && a.length > 0 && (o = "conflict"), this._changeConnectStatus(s.Status.CONNFAIL, o)) : this._changeConnectStatus(s.Status.CONNFAIL, s.ErrorCondition.UNKOWN_REASON), void this._doDisconnect(o)
                                    }
                                    var c = this;
                                    s.forEachChild(n, null, (function(e) {
                                        var t, n;
                                        for (n = c.handlers, c.handlers = [], t = 0; t < n.length; t++) {
                                            var i = n[t];
                                            try {
                                                (!i.isMatch(e) || !c.authenticated && i.user || i.run(e)) && c.handlers.push(i)
                                            } catch (e) {
                                                s.warn("Removing Strophe handlers due to uncaught exception: " + e.message)
                                            }
                                        }
                                    }))
                                }
                            }
                        },
                        mechanisms: {},
                        _no_auth_received: function(e) {
                            s.error("Server did not offer a supported authentication mechanism"), this._changeConnectStatus(s.Status.CONNFAIL, s.ErrorCondition.NO_AUTH_MECH), e && e.call(this), this._doDisconnect()
                        },
                        _connect_cb: function(e, t, n) {
                            var i;
                            s.info("_connect_cb was called"), this.connected = !0;
                            try {
                                i = this._proto._reqToData(e)
                            } catch (e) {
                                if ("badformat" !== e) throw e;
                                this._changeConnectStatus(s.Status.CONNFAIL, s.ErrorCondition.BAD_FORMAT), this._doDisconnect(s.ErrorCondition.BAD_FORMAT)
                            }
                            if (i && (this.xmlInput !== s.Connection.prototype.xmlInput && (i.nodeName === this._proto.strip && i.childNodes.length ? this.xmlInput(i.childNodes[0]) : this.xmlInput(i)), this.rawInput !== s.Connection.prototype.rawInput && (n ? this.rawInput(n) : this.rawInput(s.serialize(i))), this._proto._connect_cb(i) !== s.Status.CONNFAIL))
                                if (i.getElementsByTagNameNS ? i.getElementsByTagNameNS(s.NS.STREAM, "features").length > 0 : i.getElementsByTagName("stream:features").length > 0 || i.getElementsByTagName("features").length > 0) {
                                    var r, o, a = [],
                                        u = i.getElementsByTagName("mechanism");
                                    if (u.length > 0)
                                        for (r = 0; r < u.length; r++) o = s.getText(u[r]), this.mechanisms[o] && a.push(this.mechanisms[o]);
                                    0 !== a.length || 0 !== i.getElementsByTagName("auth").length ? !1 !== this.do_authentication && this.authenticate(a) : this._no_auth_received(t)
                                } else this._no_auth_received(t)
                        },
                        sortMechanismsByPriority: function(e) {
                            var t, n, i, r;
                            for (t = 0; t < e.length - 1; ++t) {
                                for (i = t, n = t + 1; n < e.length; ++n) e[n].prototype.priority > e[i].prototype.priority && (i = n);
                                i !== t && (r = e[t], e[t] = e[i], e[i] = r)
                            }
                            return e
                        },
                        _attemptSASLAuth: function(e) {
                            e = this.sortMechanismsByPriority(e || []);
                            var t = 0,
                                n = !1;
                            for (t = 0; t < e.length; ++t)
                                if (e[t].prototype.test(this)) {
                                    this._sasl_success_handler = this._addSysHandler(this._sasl_success_cb.bind(this), null, "success", null, null), this._sasl_failure_handler = this._addSysHandler(this._sasl_failure_cb.bind(this), null, "failure", null, null), this._sasl_challenge_handler = this._addSysHandler(this._sasl_challenge_cb.bind(this), null, "challenge", null, null), this._sasl_mechanism = new e[t], this._sasl_mechanism.onStart(this);
                                    var r = i("auth", {
                                        xmlns: s.NS.SASL,
                                        mechanism: this._sasl_mechanism.name
                                    });
                                    if (this._sasl_mechanism.isClientFirst) {
                                        var o = this._sasl_mechanism.onChallenge(this, null);
                                        r.t(d(o))
                                    }
                                    this.send(r.tree()), n = !0;
                                    break
                                }
                            return n
                        },
                        _attemptLegacyAuth: function() {
                            null === s.getNodeFromJid(this.jid) ? (this._changeConnectStatus(s.Status.CONNFAIL, s.ErrorCondition.MISSING_JID_NODE), this.disconnect(s.ErrorCondition.MISSING_JID_NODE)) : (this._changeConnectStatus(s.Status.AUTHENTICATING, null), this._addSysHandler(this._auth1_cb.bind(this), null, null, null, "_auth_1"), this.send(r({
                                type: "get",
                                to: this.domain,
                                id: "_auth_1"
                            }).c("query", {
                                xmlns: s.NS.AUTH
                            }).c("username", {}).t(s.getNodeFromJid(this.jid)).tree()))
                        },
                        authenticate: function(e) {
                            this._attemptSASLAuth(e) || this._attemptLegacyAuth()
                        },
                        _sasl_challenge_cb: function(e) {
                            var t = atob(s.getText(e)),
                                n = this._sasl_mechanism.onChallenge(this, t),
                                r = i("response", {
                                    xmlns: s.NS.SASL
                                });
                            return "" !== n && r.t(d(n)), this.send(r.tree()), !0
                        },
                        _auth1_cb: function(e) {
                            var t = r({
                                type: "set",
                                id: "_auth_2"
                            }).c("query", {
                                xmlns: s.NS.AUTH
                            }).c("username", {}).t(s.getNodeFromJid(this.jid)).up().c("password").t(this.pass);
                            return s.getResourceFromJid(this.jid) || (this.jid = s.getBareJidFromJid(this.jid) + "/strophe"), t.up().c("resource", {}).t(s.getResourceFromJid(this.jid)), this._addSysHandler(this._auth2_cb.bind(this), null, null, null, "_auth_2"), this.send(t.tree()), !1
                        },
                        _sasl_success_cb: function(e) {
                            if (this._sasl_data["server-signature"]) {
                                var t, n = atob(s.getText(e)).match(/([a-z]+)=([^,]+)(,|$)/);
                                if ("v" === n[1] && (t = n[2]), t !== this._sasl_data["server-signature"]) return this.deleteHandler(this._sasl_failure_handler), this._sasl_failure_handler = null, this._sasl_challenge_handler && (this.deleteHandler(this._sasl_challenge_handler), this._sasl_challenge_handler = null), this._sasl_data = {}, this._sasl_failure_cb(null)
                            }
                            s.info("SASL authentication succeeded."), this._sasl_mechanism && this._sasl_mechanism.onSuccess(), this.deleteHandler(this._sasl_failure_handler), this._sasl_failure_handler = null, this._sasl_challenge_handler && (this.deleteHandler(this._sasl_challenge_handler), this._sasl_challenge_handler = null);
                            var i = [],
                                r = function(e, t) {
                                    for (; e.length;) this.deleteHandler(e.pop());
                                    return this._sasl_auth1_cb.bind(this)(t), !1
                                };
                            return i.push(this._addSysHandler(function(e) {
                                r.bind(this)(i, e)
                            }.bind(this), null, "stream:features", null, null)), i.push(this._addSysHandler(function(e) {
                                r.bind(this)(i, e)
                            }.bind(this), s.NS.STREAM, "features", null, null)), this._sendRestart(), !1
                        },
                        _sasl_auth1_cb: function(e) {
                            var t, n;
                            for (this.features = e, t = 0; t < e.childNodes.length; t++) "bind" === (n = e.childNodes[t]).nodeName && (this.do_bind = !0), "session" === n.nodeName && (this.do_session = !0);
                            if (!this.do_bind) return this._changeConnectStatus(s.Status.AUTHFAIL, null), !1;
                            this._addSysHandler(this._sasl_bind_cb.bind(this), null, null, null, "_bind_auth_2");
                            var i = s.getResourceFromJid(this.jid);
                            return i ? this.send(r({
                                type: "set",
                                id: "_bind_auth_2"
                            }).c("bind", {
                                xmlns: s.NS.BIND
                            }).c("resource", {}).t(i).tree()) : this.send(r({
                                type: "set",
                                id: "_bind_auth_2"
                            }).c("bind", {
                                xmlns: s.NS.BIND
                            }).tree()), !1
                        },
                        _sasl_bind_cb: function(e) {
                            var t;
                            if ("error" === e.getAttribute("type")) return s.info("SASL binding failed."), e.getElementsByTagName("conflict").length > 0 && (t = s.ErrorCondition.CONFLICT), this._changeConnectStatus(s.Status.AUTHFAIL, t, e), !1;
                            var n, i = e.getElementsByTagName("bind");
                            if (!(i.length > 0)) return s.info("SASL binding failed."), this._changeConnectStatus(s.Status.AUTHFAIL, null, e), !1;
                            (n = i[0].getElementsByTagName("jid")).length > 0 && (this.jid = s.getText(n[0]), this.do_session ? (this._addSysHandler(this._sasl_session_cb.bind(this), null, null, null, "_session_auth_2"), this.send(r({
                                type: "set",
                                id: "_session_auth_2"
                            }).c("session", {
                                xmlns: s.NS.SESSION
                            }).tree())) : (this.authenticated = !0, this._changeConnectStatus(s.Status.CONNECTED, null)))
                        },
                        _sasl_session_cb: function(e) {
                            if ("result" === e.getAttribute("type")) this.authenticated = !0, this._changeConnectStatus(s.Status.CONNECTED, null);
                            else if ("error" === e.getAttribute("type")) return s.info("Session creation failed."), this._changeConnectStatus(s.Status.AUTHFAIL, null, e), !1;
                            return !1
                        },
                        _sasl_failure_cb: function(e) {
                            return this._sasl_success_handler && (this.deleteHandler(this._sasl_success_handler), this._sasl_success_handler = null), this._sasl_challenge_handler && (this.deleteHandler(this._sasl_challenge_handler), this._sasl_challenge_handler = null), this._sasl_mechanism && this._sasl_mechanism.onFailure(), this._changeConnectStatus(s.Status.AUTHFAIL, null, e), !1
                        },
                        _auth2_cb: function(e) {
                            return "result" === e.getAttribute("type") ? (this.authenticated = !0, this._changeConnectStatus(s.Status.CONNECTED, null)) : "error" === e.getAttribute("type") && (this._changeConnectStatus(s.Status.AUTHFAIL, null, e), this.disconnect("authentication failed")), !1
                        },
                        _addSysTimedHandler: function(e, t) {
                            var n = new s.TimedHandler(e, t);
                            return n.user = !1, this.addTimeds.push(n), n
                        },
                        _addSysHandler: function(e, t, n, i, r) {
                            var o = new s.Handler(e, t, n, i, r);
                            return o.user = !1, this.addHandlers.push(o), o
                        },
                        _onDisconnectTimeout: function() {
                            return s.info("_onDisconnectTimeout was called"), this._changeConnectStatus(s.Status.CONNTIMEOUT, null), this._proto._onDisconnectTimeout(), this._doDisconnect(), !1
                        },
                        _onIdle: function() {
                            for (var e, t, n; this.addTimeds.length > 0;) this.timedHandlers.push(this.addTimeds.pop());
                            for (; this.removeTimeds.length > 0;) t = this.removeTimeds.pop(), (e = this.timedHandlers.indexOf(t)) >= 0 && this.timedHandlers.splice(e, 1);
                            var i = (new Date).getTime();
                            for (n = [], e = 0; e < this.timedHandlers.length; e++) t = this.timedHandlers[e], !this.authenticated && t.user || (t.lastCalled + t.period - i <= 0 ? t.run() && n.push(t) : n.push(t));
                            this.timedHandlers = n, clearTimeout(this._idleTimeout), this._proto._onIdle(), this.connected && (this._idleTimeout = setTimeout(function() {
                                this._onIdle()
                            }.bind(this), 100))
                        }
                    }, s.SASLMechanism = function(e, t, n) {
                        this.name = e, this.isClientFirst = t, this.priority = n
                    }, s.SASLMechanism.prototype = {
                        test: function(e) {
                            return !0
                        },
                        onStart: function(e) {
                            this._connection = e
                        },
                        onChallenge: function(e, t) {
                            throw new Error("You should implement challenge handling!")
                        },
                        onFailure: function() {
                            this._connection = null
                        },
                        onSuccess: function() {
                            this._connection = null
                        }
                    }, s.SASLAnonymous = function() {}, s.SASLAnonymous.prototype = new s.SASLMechanism("ANONYMOUS", !1, 20), s.SASLAnonymous.prototype.test = function(e) {
                        return null === e.authcid
                    }, s.SASLPlain = function() {}, s.SASLPlain.prototype = new s.SASLMechanism("PLAIN", !0, 50), s.SASLPlain.prototype.test = function(e) {
                        return null !== e.authcid
                    }, s.SASLPlain.prototype.onChallenge = function(e) {
                        var t = e.authzid;
                        return t += "\0", t += e.authcid, t += "\0", t += e.pass, n.utf16to8(t)
                    }, s.SASLSHA1 = function() {}, s.SASLSHA1.prototype = new s.SASLMechanism("SCRAM-SHA-1", !0, 70), s.SASLSHA1.prototype.test = function(e) {
                        return null !== e.authcid
                    }, s.SASLSHA1.prototype.onChallenge = function(i, r, o) {
                        var s = o || t.hexdigest(1234567890 * Math.random()),
                            a = "n=" + n.utf16to8(i.authcid);
                        return a += ",r=", a += s, i._sasl_data.cnonce = s, i._sasl_data["client-first-message-bare"] = a, a = "n,," + a, this.onChallenge = function(t, i) {
                            for (var r, o, s, a, u, c, l, h, _, p, g, m, f = "c=biws,", v = t._sasl_data["client-first-message-bare"] + "," + i + ",", y = t._sasl_data.cnonce, S = /([a-z]+)=([^,]+)(,|$)/; i.match(S);) {
                                var b = i.match(S);
                                switch (i = i.replace(b[0], ""), b[1]) {
                                    case "r":
                                        r = b[2];
                                        break;
                                    case "s":
                                        o = b[2];
                                        break;
                                    case "i":
                                        s = b[2]
                                }
                            }
                            if (r.substr(0, y.length) !== y) return t._sasl_data = {}, t._sasl_failure_cb();
                            for (v += f += "r=" + r, o = atob(o), o += "\0\0\0", _ = n.utf16to8(t.pass), a = c = e.core_hmac_sha1(_, o), l = 1; l < s; l++) {
                                for (u = e.core_hmac_sha1(_, e.binb2str(c)), h = 0; h < 5; h++) a[h] ^= u[h];
                                c = u
                            }
                            for (a = e.binb2str(a), p = e.core_hmac_sha1(a, "Client Key"), g = e.str_hmac_sha1(a, "Server Key"), m = e.core_hmac_sha1(e.str_sha1(e.binb2str(p)), v), t._sasl_data["server-signature"] = e.b64_hmac_sha1(g, v), h = 0; h < 5; h++) p[h] ^= m[h];
                            return f += ",p=" + d(e.binb2str(p))
                        }.bind(this), a
                    }, s.SASLMD5 = function() {}, s.SASLMD5.prototype = new s.SASLMechanism("DIGEST-MD5", !1, 60), s.SASLMD5.prototype.test = function(e) {
                        return null !== e.authcid
                    }, s.SASLMD5.prototype._quote = function(e) {
                        return '"' + e.replace(/\\/g, "\\\\").replace(/"/g, '\\"') + '"'
                    }, s.SASLMD5.prototype.onChallenge = function(e, i, r) {
                        for (var o, s = /([a-z]+)=("[^"]+"|[^,"]+)(?:,|$)/, a = r || t.hexdigest("" + 1234567890 * Math.random()), u = "", c = null, l = ""; i.match(s);) switch (o = i.match(s), i = i.replace(o[0], ""), o[2] = o[2].replace(/^"(.+)"$/, "$1"), o[1]) {
                            case "realm":
                                u = o[2];
                                break;
                            case "nonce":
                                l = o[2];
                                break;
                            case "qop":
                                o[2];
                                break;
                            case "host":
                                c = o[2]
                        }
                        var d = e.servtype + "/" + e.domain;
                        null !== c && (d = d + "/" + c);
                        var h = n.utf16to8(e.authcid + ":" + u + ":" + this._connection.pass),
                            _ = t.hash(h) + ":" + l + ":" + a,
                            p = "AUTHENTICATE:" + d,
                            g = "";
                        return g += "charset=utf-8,", g += "username=" + this._quote(n.utf16to8(e.authcid)) + ",", g += "realm=" + this._quote(u) + ",", g += "nonce=" + this._quote(l) + ",", g += "nc=00000001,", g += "cnonce=" + this._quote(a) + ",", g += "digest-uri=" + this._quote(d) + ",", g += "response=" + t.hexdigest(t.hexdigest(_) + ":" + l + ":00000001:" + a + ":auth:" + t.hexdigest(p)) + ",", g += "qop=auth", this.onChallenge = function() {
                            return ""
                        }, g
                    }, s.SASLOAuthBearer = function() {}, s.SASLOAuthBearer.prototype = new s.SASLMechanism("OAUTHBEARER", !0, 40), s.SASLOAuthBearer.prototype.test = function(e) {
                        return null !== e.pass
                    }, s.SASLOAuthBearer.prototype.onChallenge = function(e) {
                        var t = "n,";
                        return null !== e.authcid && (t = t + "a=" + e.authzid), t += ",", t += "", t += "auth=Bearer ", t += e.pass, t += "", t += "", n.utf16to8(t)
                    }, s.SASLExternal = function() {}, s.SASLExternal.prototype = new s.SASLMechanism("EXTERNAL", !0, 10), s.SASLExternal.prototype.onChallenge = function(e) {
                        return e.authcid === e.authzid ? "" : e.authzid
                    }, s.SASLXOAuth2 = function() {}, s.SASLXOAuth2.prototype = new s.SASLMechanism("X-OAUTH2", !0, 30), s.SASLXOAuth2.prototype.test = function(e) {
                        return null !== e.pass
                    }, s.SASLXOAuth2.prototype.onChallenge = function(e) {
                        var t = "\0";
                        return null !== e.authcid && (t += e.authzid), t += "\0", t += e.pass, n.utf16to8(t)
                    }, {
                        Strophe: s,
                        $build: i,
                        $iq: r,
                        $msg: function(e) {
                            return new s.Builder("message", e)
                        },
                        $pres: o,
                        SHA1: e,
                        MD5: t,
                        b64_hmac_sha1: e.b64_hmac_sha1,
                        b64_sha1: e.b64_sha1,
                        str_hmac_sha1: e.str_hmac_sha1,
                        str_sha1: e.str_sha1
                    }
                })),
                function(n, o) {
                    if ("function" == typeof r && r.amd) r("strophe-bosh", ["strophe-core"], (function(e) {
                        return o(e.Strophe, e.$build)
                    }));
                    else {
                        if ("object" !== u(t)) return o(Strophe, $build);
                        var s = i("./core");
                        e.exports = o(s.Strophe, s.$build)
                    }
                }(0, (function(e, t) {
                    return e.Request = function(t, n, i, r) {
                        this.id = ++e._requestId, this.xmlData = t, this.data = e.serialize(t), this.origFunc = n, this.func = n, this.rid = i, this.date = NaN, this.sends = r || 0, this.abort = !1, this.dead = null, this.age = function() {
                            return this.date ? (new Date - this.date) / 1e3 : 0
                        }, this.timeDead = function() {
                            return this.dead ? (new Date - this.dead) / 1e3 : 0
                        }, this.xhr = this._newXHR()
                    }, e.Request.prototype = {
                        getResponse: function() {
                            var t = null;
                            if (this.xhr.responseXML && this.xhr.responseXML.documentElement) {
                                if ("parsererror" === (t = this.xhr.responseXML.documentElement).tagName) throw e.error("invalid response received"), e.error("responseText: " + this.xhr.responseText), e.error("responseXML: " + e.serialize(this.xhr.responseXML)), "parsererror"
                            } else if (this.xhr.responseText) {
                                if (e.debug("Got responseText but no responseXML; attempting to parse it with DOMParser..."), !(t = (new l).parseFromString(this.xhr.responseText, "application/xml").documentElement)) throw new Error("Parsing produced null node");
                                if (t.querySelector("parsererror")) throw e.error("invalid response received: " + t.querySelector("parsererror").textContent), e.error("responseText: " + this.xhr.responseText), "badformat"
                            }
                            return t
                        },
                        _newXHR: function() {
                            var e = null;
                            return window.XMLHttpRequest ? (e = new XMLHttpRequest).overrideMimeType && e.overrideMimeType("text/xml; charset=utf-8") : window.ActiveXObject && (e = new ActiveXObject("Microsoft.XMLHTTP")), e.onreadystatechange = this.func.bind(null, this), e
                        }
                    }, e.Bosh = function(e) {
                        this._conn = e, this.rid = Math.floor(4294967295 * Math.random()), this.sid = null, this.hold = 1, this.wait = 60, this.window = 5, this.errors = 0, this.inactivity = null, this.lastResponseHeaders = null, this._requests = []
                    }, e.Bosh.prototype = {
                        strip: null,
                        _buildBody: function() {
                            var n = t("body", {
                                rid: this.rid++,
                                xmlns: e.NS.HTTPBIND
                            });
                            return null !== this.sid && n.attrs({
                                sid: this.sid
                            }), this._conn.options.keepalive && this._conn._sessionCachingSupported() && this._cacheSession(), n
                        },
                        _reset: function() {
                            this.rid = Math.floor(4294967295 * Math.random()), this.sid = null, this.errors = 0, this._conn._sessionCachingSupported() && window.sessionStorage.removeItem("strophe-bosh-session"), this._conn.nextValidRid(this.rid)
                        },
                        _connect: function(t, n, i) {
                            this.wait = t || this.wait, this.hold = n || this.hold, this.errors = 0;
                            var r = this._buildBody().attrs({
                                to: this._conn.domain,
                                "xml:lang": "en",
                                wait: this.wait,
                                hold: this.hold,
                                content: "text/xml; charset=utf-8",
                                ver: "1.6",
                                "xmpp:version": "1.0",
                                "xmlns:xmpp": e.NS.BOSH
                            });
                            i && r.attrs({
                                route: i
                            });
                            var o = this._conn._connect_cb;
                            this._requests.push(new e.Request(r.tree(), this._onRequestStateChange.bind(this, o.bind(this._conn)), r.tree().getAttribute("rid"))), this._throttledRequestHandler()
                        },
                        _attach: function(t, n, i, r, o, s, a) {
                            this._conn.jid = t, this.sid = n, this.rid = i, this._conn.connect_callback = r, this._conn.domain = e.getDomainFromJid(this._conn.jid), this._conn.authenticated = !0, this._conn.connected = !0, this.wait = o || this.wait, this.hold = s || this.hold, this.window = a || this.window, this._conn._changeConnectStatus(e.Status.ATTACHED, null)
                        },
                        _restore: function(t, n, i, r, o) {
                            var s = JSON.parse(window.sessionStorage.getItem("strophe-bosh-session"));
                            if (!(null != s && s.rid && s.sid && s.jid && (null == t || e.getBareJidFromJid(s.jid) === e.getBareJidFromJid(t) || null === e.getNodeFromJid(t) && e.getDomainFromJid(s.jid) === t))) throw {
                                name: "StropheSessionError",
                                message: "_restore: no restoreable session."
                            };
                            this._conn.restored = !0, this._attach(s.jid, s.sid, s.rid, n, i, r, o)
                        },
                        _cacheSession: function() {
                            this._conn.authenticated ? this._conn.jid && this.rid && this.sid && window.sessionStorage.setItem("strophe-bosh-session", JSON.stringify({
                                jid: this._conn.jid,
                                rid: this.rid,
                                sid: this.sid
                            })) : window.sessionStorage.removeItem("strophe-bosh-session")
                        },
                        _connect_cb: function(t) {
                            var n, i, r = t.getAttribute("type");
                            if (null !== r && "terminate" === r) return n = t.getAttribute("condition"), e.error("BOSH-Connection failed: " + n), i = t.getElementsByTagName("conflict"), null !== n ? ("remote-stream-error" === n && i.length > 0 && (n = "conflict"), this._conn._changeConnectStatus(e.Status.CONNFAIL, n)) : this._conn._changeConnectStatus(e.Status.CONNFAIL, "unknown"), this._conn._doDisconnect(n), e.Status.CONNFAIL;
                            this.sid || (this.sid = t.getAttribute("sid"));
                            var o = t.getAttribute("requests");
                            o && (this.window = parseInt(o, 10));
                            var s = t.getAttribute("hold");
                            s && (this.hold = parseInt(s, 10));
                            var a = t.getAttribute("wait");
                            a && (this.wait = parseInt(a, 10));
                            var u = t.getAttribute("inactivity");
                            u && (this.inactivity = parseInt(u, 10))
                        },
                        _disconnect: function(e) {
                            this._sendTerminate(e)
                        },
                        _doDisconnect: function() {
                            this.sid = null, this.rid = Math.floor(4294967295 * Math.random()), this._conn._sessionCachingSupported() && window.sessionStorage.removeItem("strophe-bosh-session"), this._conn.nextValidRid(this.rid)
                        },
                        _emptyQueue: function() {
                            return 0 === this._requests.length
                        },
                        _callProtocolErrorHandlers: function(e) {
                            var t, n = this._getRequestStatus(e);
                            (t = this._conn.protocolErrorHandlers.HTTP[n]) && t.call(this, n)
                        },
                        _hitError: function(t) {
                            this.errors++, e.warn("request errored, status: " + t + ", number of errors: " + this.errors), this.errors > 4 && this._conn._onDisconnectTimeout()
                        },
                        _onDisconnectTimeout: function() {
                            this._abortAllRequests()
                        },
                        _abortAllRequests: function() {
                            for (var e; this._requests.length > 0;)(e = this._requests.pop()).abort = !0, e.xhr.abort(), e.xhr.onreadystatechange = function() {}
                        },
                        _onIdle: function() {
                            var t = this._conn._data;
                            if (this._conn.authenticated && 0 === this._requests.length && 0 === t.length && !this._conn.disconnecting && (e.info("no requests during idle cycle, sending blank request"), t.push(null)), !this._conn.paused) {
                                if (this._requests.length < 2 && t.length > 0) {
                                    for (var n = this._buildBody(), i = 0; i < t.length; i++) null !== t[i] && ("restart" === t[i] ? n.attrs({
                                        to: this._conn.domain,
                                        "xml:lang": "en",
                                        "xmpp:restart": "true",
                                        "xmlns:xmpp": e.NS.BOSH
                                    }) : n.cnode(t[i]).up());
                                    delete this._conn._data, this._conn._data = [], this._requests.push(new e.Request(n.tree(), this._onRequestStateChange.bind(this, this._conn._dataRecv.bind(this._conn)), n.tree().getAttribute("rid"))), this._throttledRequestHandler()
                                }
                                if (this._requests.length > 0) {
                                    var r = this._requests[0].age();
                                    null !== this._requests[0].dead && this._requests[0].timeDead() > Math.floor(e.SECONDARY_TIMEOUT * this.wait) && this._throttledRequestHandler(), r > Math.floor(e.TIMEOUT * this.wait) && (e.warn("Request " + this._requests[0].id + " timed out, over " + Math.floor(e.TIMEOUT * this.wait) + " seconds since last activity"), this._throttledRequestHandler())
                                }
                            }
                        },
                        _getRequestStatus: function(t, n) {
                            var i;
                            if (4 === t.xhr.readyState) try {
                                i = t.xhr.status
                            } catch (t) {
                                e.error("Caught an error while retrieving a request's status, reqStatus: " + i)
                            }
                            return void 0 === i && (i = "number" == typeof n ? n : 0), i
                        },
                        _onRequestStateChange: function(t, n) {
                            if (e.debug("request id " + n.id + "." + n.sends + " state changed to " + n.xhr.readyState), n.abort) n.abort = !1;
                            else if (4 === n.xhr.readyState) {
                                var i = this._getRequestStatus(n);
                                if (this.lastResponseHeaders = n.xhr.getAllResponseHeaders(), this.disconnecting && i >= 400) return this._hitError(i), void this._callProtocolErrorHandlers(n);
                                var r = i > 0 && i < 500,
                                    o = n.sends > this._conn.maxRetries;
                                if ((r || o) && (this._removeRequest(n), e.debug("request id " + n.id + " should now be removed")), 200 === i) {
                                    var s = this._requests[0] === n;
                                    (this._requests[1] === n || s && this._requests.length > 0 && this._requests[0].age() > Math.floor(e.SECONDARY_TIMEOUT * this.wait)) && this._restartRequest(0), this._conn.nextValidRid(Number(n.rid) + 1), e.debug("request id " + n.id + "." + n.sends + " got 200"), t(n), this.errors = 0
                                } else 0 === i || i >= 400 && i < 600 || i >= 12e3 ? (e.error("request id " + n.id + "." + n.sends + " error " + i + " happened"), this._hitError(i), this._callProtocolErrorHandlers(n), i >= 400 && i < 500 && (this._conn._changeConnectStatus(e.Status.DISCONNECTING, null), this._conn._doDisconnect())) : e.error("request id " + n.id + "." + n.sends + " error " + i + " happened");
                                r || o ? o && !this._conn.connected && this._conn._changeConnectStatus(e.Status.CONNFAIL, "giving-up") : this._throttledRequestHandler()
                            }
                        },
                        _processRequest: function(t) {
                            var n = this,
                                i = this._requests[t],
                                r = this._getRequestStatus(i, -1);
                            if (i.sends > this._conn.maxRetries) this._conn._onDisconnectTimeout();
                            else {
                                var o = i.age(),
                                    s = !isNaN(o) && o > Math.floor(e.TIMEOUT * this.wait),
                                    a = null !== i.dead && i.timeDead() > Math.floor(e.SECONDARY_TIMEOUT * this.wait),
                                    u = 4 === i.xhr.readyState && (r < 1 || r >= 500);
                                if ((s || a || u) && (a && e.error("Request " + this._requests[t].id + " timed out (secondary), restarting"), i.abort = !0, i.xhr.abort(), i.xhr.onreadystatechange = function() {}, this._requests[t] = new e.Request(i.xmlData, i.origFunc, i.rid, i.sends), i = this._requests[t]), 0 === i.xhr.readyState) {
                                    e.debug("request id " + i.id + "." + i.sends + " posting");
                                    try {
                                        var c = this._conn.options.contentType || "text/xml; charset=utf-8";
                                        i.xhr.open("POST", this._conn.service, !this._conn.options.sync), void 0 !== i.xhr.setRequestHeader && i.xhr.setRequestHeader("Content-Type", c), this._conn.options.withCredentials && (i.xhr.withCredentials = !0)
                                    } catch (t) {
                                        return e.error("XHR open failed: " + t.toString()), this._conn.connected || this._conn._changeConnectStatus(e.Status.CONNFAIL, "bad-service"), void this._conn.disconnect()
                                    }
                                    var l = function() {
                                        if (i.date = new Date, n._conn.options.customHeaders) {
                                            var e = n._conn.options.customHeaders;
                                            for (var t in e) e.hasOwnProperty(t) && i.xhr.setRequestHeader(t, e[t])
                                        }
                                        i.xhr.send(i.data)
                                    };
                                    if (i.sends > 1) {
                                        var d = 1e3 * Math.min(Math.floor(e.TIMEOUT * this.wait), Math.pow(i.sends, 3));
                                        setTimeout((function() {
                                            l()
                                        }), d)
                                    } else l();
                                    i.sends++, this._conn.xmlOutput !== e.Connection.prototype.xmlOutput && (i.xmlData.nodeName === this.strip && i.xmlData.childNodes.length ? this._conn.xmlOutput(i.xmlData.childNodes[0]) : this._conn.xmlOutput(i.xmlData)), this._conn.rawOutput !== e.Connection.prototype.rawOutput && this._conn.rawOutput(i.data)
                                } else e.debug("_processRequest: " + (0 === t ? "first" : "second") + " request has readyState of " + i.xhr.readyState)
                            }
                        },
                        _removeRequest: function(t) {
                            var n;
                            for (e.debug("removing request"), n = this._requests.length - 1; n >= 0; n--) t === this._requests[n] && this._requests.splice(n, 1);
                            t.xhr.onreadystatechange = function() {}, this._throttledRequestHandler()
                        },
                        _restartRequest: function(e) {
                            var t = this._requests[e];
                            null === t.dead && (t.dead = new Date), this._processRequest(e)
                        },
                        _reqToData: function(e) {
                            try {
                                return e.getResponse()
                            } catch (e) {
                                if ("parsererror" !== e) throw e;
                                this._conn.disconnect("strophe-parsererror")
                            }
                        },
                        _sendTerminate: function(t) {
                            e.info("_sendTerminate was called");
                            var n = this._buildBody().attrs({
                                type: "terminate"
                            });
                            t && n.cnode(t.tree());
                            var i = new e.Request(n.tree(), this._onRequestStateChange.bind(this, this._conn._dataRecv.bind(this._conn)), n.tree().getAttribute("rid"));
                            this._requests.push(i), this._throttledRequestHandler()
                        },
                        _send: function() {
                            clearTimeout(this._conn._idleTimeout), this._throttledRequestHandler(), this._conn._idleTimeout = setTimeout(function() {
                                this._onIdle()
                            }.bind(this._conn), 100)
                        },
                        _sendRestart: function() {
                            this._throttledRequestHandler(), clearTimeout(this._conn._idleTimeout)
                        },
                        _throttledRequestHandler: function() {
                            this._requests ? e.debug("_throttledRequestHandler called with " + this._requests.length + " requests") : e.debug("_throttledRequestHandler called with undefined requests"), this._requests && 0 !== this._requests.length && (this._requests.length > 0 && this._processRequest(0), this._requests.length > 1 && Math.abs(this._requests[0].rid - this._requests[1].rid) < this.window && this._processRequest(1))
                        }
                    }, e
                })),
                function(n, o) {
                    if ("function" == typeof r && r.amd) r("strophe-websocket", ["strophe-core"], (function(e) {
                        return o(e.Strophe, e.$build)
                    }));
                    else {
                        if ("object" !== u(t)) return o(Strophe, $build);
                        var s = i("./core");
                        e.exports = o(s.Strophe, s.$build)
                    }
                }(0, (function(e, t) {
                    return e.Websocket = function(e) {
                        this._conn = e, this.strip = "wrapper", this.alreadySwitchedToMsg = !1;
                        var t = e.service;
                        if (0 !== t.indexOf("ws:") && 0 !== t.indexOf("wss:")) {
                            var n = "";
                            "ws" === e.options.protocol && "https:" !== window.location.protocol ? n += "ws" : n += "wss", n += "://" + window.location.host, 0 !== t.indexOf("/") ? n += window.location.pathname + t : n += t, e.service = n
                        }
                    }, e.Websocket.prototype = {
                        _buildStream: function() {
                            return t("open", {
                                xmlns: e.NS.FRAMING,
                                to: this._conn.domain,
                                version: "1.0"
                            })
                        },
                        _wsLog: function(e) {},
                        _check_streamerror: function(t, n) {
                            var i;
                            if (0 === (i = t.getElementsByTagNameNS ? t.getElementsByTagNameNS(e.NS.STREAM, "error") : t.getElementsByTagName("stream:error")).length) return !1;
                            for (var r = i[0], o = "", s = "", a = 0; a < r.childNodes.length; a++) {
                                var u = r.childNodes[a];
                                if ("urn:ietf:params:xml:ns:xmpp-streams" !== u.getAttribute("xmlns")) break;
                                "text" === u.nodeName ? s = u.textContent : o = u.nodeName
                            }
                            var c = "WebSocket stream error: ";
                            return c += o || "unknown", s && (c += " - " + s), e.error(c), this._conn._changeConnectStatus(n, o), this._conn._doDisconnect(), !0
                        },
                        _reset: function() {},
                        _connect: function() {
                            this._wsLog("websocket _connect func called."), this._closeSocket(), this.socket = wx.connectSocket({
                                url: this._conn.service,
                                protocols: ["xmpp"]
                            }), this.socket.onOpen(this._onOpen.bind(this)), this.socket.onError(this._onError.bind(this)), this.socket.onClose(this._onClose.bind(this)), this.socket.onMessage(this._connect_cb_wrapper.bind(this))
                        },
                        _connect_cb: function(t) {
                            if (this._check_streamerror(t, e.Status.CONNFAIL)) return e.Status.CONNFAIL
                        },
                        _handleStreamStart: function(t) {
                            var n = !1,
                                i = t.getAttribute("xmlns");
                            "string" != typeof i ? n = "Missing xmlns in <open />" : i !== e.NS.FRAMING && (n = "Wrong xmlns in <open />: " + i);
                            var r = t.getAttribute("version");
                            return "string" != typeof r ? n = "Missing version in <open />" : "1.0" !== r && (n = "Wrong version in <open />: " + r), !n || (this._conn._changeConnectStatus(e.Status.CONNFAIL, n), this._conn._doDisconnect(), !1)
                        },
                        _connect_cb_wrapper: function(t) {
                            if (this._wsLog("_connect_cb_wrapper message", t), null == (t = t.data) && (console.error("_connect_cb_wrapper message got ".concat(t)), t = "BAD MESSAGE CAUSED INDEXOF EXCEPTION"), 0 === t.indexOf("<open ") || 0 === t.indexOf("<?xml")) {
                                this._wsLog("websocket connect cb on open tag");
                                var n = t.replace(/^(<\?.*?\?>\s*)*/, "");
                                if ("" === n) return;
                                var i = (new l).parseFromString(n, "text/xml").documentElement;
                                this._conn.xmlInput(i), this._conn.rawInput(t), this._handleStreamStart(i) && this._connect_cb(i)
                            } else if (0 === t.indexOf("<close ")) {
                                this._wsLog("websocket connect cb on close tag"), this._conn.rawInput(t);
                                this._conn.connected ? (this._conn._changeConnectStatus(e.Status.CONNFAIL, "Received closing stream"), this._conn._doDisconnect()) : console.log("%cStrophe.Connection is not connected, we wont respond to this socket message", "background-color:grey;color:white;font-weight:bold")
                            } else {
                                var r = "websocket connect cb on other state!";
                                if (!1 === this.alreadySwitchedToMsg) {
                                    this.alreadySwitchedToMsg = !0;
                                    var o = this._streamWrap(t),
                                        s = (new l).parseFromString(o, "text/xml").documentElement;
                                    this._conn._connect_cb(s, null, t), this._wsLog(r + " calling _conn._connect_cb...")
                                } else this._wsLog(r + " --will redirect to _onMessage..."), this._onMessage.call(this, t)
                            }
                        },
                        _disconnect: function(n) {
                            if (void 0 === i) var i = {
                                CLOSED: 3
                            };
                            if (this.socket && this.socket.readyState !== i.CLOSED) {
                                n && this._conn.send(n);
                                var r = t("close", {
                                    xmlns: e.NS.FRAMING
                                });
                                this._conn.xmlOutput(r.tree());
                                var o = e.serialize(r);
                                this._conn.rawOutput(o);
                                try {
                                    this.socket.send({
                                        data: o
                                    })
                                } catch (t) {
                                    e.info("Couldn't send <close /> tag.")
                                }
                            }
                            this._conn._doDisconnect()
                        },
                        _doDisconnect: function() {
                            e.info("WebSockets _doDisconnect was called"), this._closeSocket()
                        },
                        _streamWrap: function(e) {
                            return "<wrapper>" + e + "</wrapper>"
                        },
                        _closeSocket: function() {
                            if (this.socket) try {
                                this.socket.onerror = null, this.socket.close()
                            } catch (e) {}
                            this.socket = null
                        },
                        _emptyQueue: function() {
                            return !0
                        },
                        _onClose: function(t) {
                            console.error("websocket._onClose", t), this._conn.connected && !this._conn.disconnecting ? (e.error("Websocket closed unexpectedly"), this._conn._doDisconnect(t)) : !this._conn.connected && this.socket ? (e.error("Websocket closed unexcectedly"), this._conn._changeConnectStatus(e.Status.CONNFAIL, "The WebSocket connection could not be established or was disconnected."), this._conn._doDisconnect(t)) : e.info("Websocket closed")
                        },
                        _onDisconnectTimeout: function() {},
                        _abortAllRequests: function() {},
                        _onError: function(t) {
                            console.error("websocket._onError:", t), e.error("Websocket error " + t), this._wsLog("westrophe log: ----\x3e>", "Websocket error " + t), this._conn._changeConnectStatus(e.Status.CONNFAIL, "The WebSocket connection could not be established or was disconnected."), this._disconnect()
                        },
                        _onIdle: function() {
                            var t = this._conn._data;
                            if (t.length > 0 && !this._conn.paused) {
                                for (var n = 0; n < t.length; n++) {
                                    var i, r;
                                    null !== t[n] && (i = "restart" === t[n] ? this._buildStream().tree() : t[n], r = e.serialize(i), this._conn.xmlOutput(i), this._conn.rawOutput(r), this._wsLog("websocket sending data:", r), this.socket.send({
                                        data: r
                                    }))
                                }
                                this._conn._data = []
                            }
                        },
                        _onMessage: function(t) {
                            var n, i;
                            t = {
                                data: t
                            }, this._wsLog("_onMessage message", t);
                            var r = '<close xmlns="urn:ietf:params:xml:ns:xmpp-framing" />';
                            if (t.data === r) return this._wsLog("websocket meet close tag..."), this._conn.rawInput(r), this._conn.xmlInput(t), void(this._conn.disconnecting || this._conn._doDisconnect());
                            if (0 === t.data.search("<open ")) {
                                if (n = (new l).parseFromString(t.data, "text/xml").documentElement, !this._handleStreamStart(n)) return
                            } else i = this._streamWrap(t.data), n = (new l).parseFromString(i, "text/xml").documentElement;
                            return this._check_streamerror(n, e.Status.ERROR) ? void 0 : this._conn.disconnecting && "presence" === n.firstChild.nodeName && "unavailable" === n.firstChild.getAttribute("type") ? (this._conn.xmlInput(n), void this._conn.rawInput(e.serialize(n))) : void this._conn._dataRecv(n, t.data)
                        },
                        _onOpen: function(t) {
                            e.info("Websocket open"), this._wsLog("westrophe log: ----\x3e> Websocket open");
                            var n = this._buildStream();
                            this._conn.xmlOutput(n.tree());
                            var i = e.serialize(n);
                            this._conn.rawOutput(i), this.socket.send({
                                data: i
                            })
                        },
                        _reqToData: function(e) {
                            return e
                        },
                        _send: function() {
                            this._conn.flush()
                        },
                        _sendRestart: function() {
                            clearTimeout(this._conn._idleTimeout), this._conn._onIdle.bind(this._conn)()
                        }
                    }, e
                })),
                function(n) {
                    if ("function" == typeof r && r.amd) r("strophe", ["strophe-core", "strophe-bosh", "strophe-websocket"], (function(e) {
                        return e
                    }));
                    else if ("object" === u(t)) {
                        var o = i("./core");
                        i("./bosh"), i("./websocket"), e.exports = o
                    }
                }(), i(["strophe-polyfill"]), i("strophe")
        }, r = [], void 0 === (o = "function" == typeof(i = s) ? i.apply(t, r) : i) || (e.exports = o)
    }, function(e, t, n) {
        var i = n(17),
            r = i.$iq,
            o = i.get_val,
            s = i.get_attr,
            a = i.encodeUtf8ThenB64,
            u = i.decodeB64ThenUtf8;
        e.exports = {
            inviteRequest: function(e, t, n) {
                var i = this,
                    s = arguments.length > 4 && void 0 !== arguments[4] ? arguments[4] : 1,
                    u = r({
                        type: "set"
                    }).c("invite", {
                        xmlns: "tencent:wemeet:meeting_ctrl"
                    }).c("meeting_id").t(e).up();
                "string" == typeof t && t.length > 0 && u.c("nickname").t(a(t)).up(), "2" == n.user_type && u.c("id", {
                    user_type: n.user_type,
                    phone_number: n.phone_number
                }).up(), u.c("invite_strategy").t(s).up();
                var c = {
                    meetingId: e,
                    userId: n,
                    nickname: t
                };
                this.sendIQ(u, (function(e, t) {
                    var n = e.getElementsByTagName("invite")[0],
                        r = o(n, "invite_id");
                    i.getEventHandler("invite")(!0, {
                        invite_id: r,
                        sender_data: t
                    })
                }), (function(e, t) {
                    i.genErrorCallback(e, "invite")(t)
                }), c)
            },
            cancelInviteRequest: function(e, t, n) {
                var i = this,
                    o = r({
                        type: "set"
                    }).c("cancel_invite", {
                        xmlns: "tencent:wemeet:meeting_ctrl"
                    }).c("meeting_id").t(e).up().c("invite_id").t(n).up().c("id", {
                        user_type: "2",
                        phone_number: t
                    }),
                    s = {
                        meetingId: e,
                        phoneNumber: t,
                        inviteId: n
                    };
                this.sendIQ(o, (function(e, t) {
                    i.getEventHandler("cancel_invite")(!0, {
                        sender_data: t
                    })
                }), (function(e, t) {
                    i.genErrorCallback(e, "cancel_invite")()
                }), s)
            },
            inviteStatusPush: function(e) {
                var t = e.getElementsByTagName("invite_status")[0],
                    n = {};
                n.meeting_id = o(t, "meeting_id"), n.nickname = u(o(t, "nickname")), n.invite_id = o(t, "invite_id"), n.event_id = o(t, "status"), n.event_stamp = s(t, "status", "last_update_time");
                var i = {},
                    r = {};
                i.user_type = s(t, "inviter_id", "user_type"), i.app_uid = s(t, "inviter_id", "app_uid"), i.app_id = s(t, "inviter_id", "app_id"), i.instance_id = s(t, "inviter_id", "instance_id"), n.inviter = i, r.user_type = s(t, "invitee_id", "user_type"), r.phone_number = s(t, "invitee_id", "phone_number"), "string" == typeof r.phone_number && 0 === r.phone_number.length && (r.phone_number = s(t, "invitee_id", "app_uid")), n.invitee = r, this.getEventHandler("on_invite_event_push")(!0, n)
            }
        }
    }, function(e, t, n) {
        function i(e, t) {
            var n;
            if ("undefined" == typeof Symbol || null == e[Symbol.iterator]) {
                if (Array.isArray(e) || (n = r(e)) || t && e && "number" == typeof e.length) {
                    n && (e = n);
                    var i = 0,
                        o = function() {};
                    return {
                        s: o,
                        n: function() {
                            return i >= e.length ? {
                                done: !0
                            } : {
                                done: !1,
                                value: e[i++]
                            }
                        },
                        e: function(e) {
                            throw e
                        },
                        f: o
                    }
                }
                throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")
            }
            var s, a = !0,
                u = !1;
            return {
                s: function() {
                    n = e[Symbol.iterator]()
                },
                n: function() {
                    var e = n.next();
                    return a = e.done, e
                },
                e: function(e) {
                    u = !0, s = e
                },
                f: function() {
                    try {
                        a || null == n.return || n.return()
                    } finally {
                        if (u) throw s
                    }
                }
            }
        }

        function r(e, t) {
            if (e) {
                if ("string" == typeof e) return o(e, t);
                var n = Object.prototype.toString.call(e).slice(8, -1);
                return "Object" === n && e.constructor && (n = e.constructor.name), "Map" === n || "Set" === n ? Array.from(e) : "Arguments" === n || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n) ? o(e, t) : void 0
            }
        }

        function o(e, t) {
            (null == t || t > e.length) && (t = e.length);
            for (var n = 0, i = new Array(t); n < t; n++) i[n] = e[n];
            return i
        }
        var s = n(2),
            a = n(3),
            u = function() {
                function e() {
                    s(this, e), this.eventListenersMap = new Map
                }
                return a(e, [{
                    key: "registerEventHandler",
                    value: function(e, t) {
                        if ("function" == typeof t) {
                            var n = this.eventListenersMap.get(e);
                            return void 0 === n && (n = []), n.push(t), this.eventListenersMap.set(e, n), !0
                        }
                        return !1
                    }
                }, {
                    key: "getEventHandler",
                    value: function(e) {
                        var t = this.eventListenersMap.get(e);
                        if (void 0 === t) return function() {};
                        return function(e, n) {
                            var r, o = i(t);
                            try {
                                for (o.s(); !(r = o.n()).done;) {
                                    (0, r.value)(e, n)
                                }
                            } catch (e) {
                                o.e(e)
                            } finally {
                                o.f()
                            }
                        }
                    }
                }, {
                    key: "removeEventHandler",
                    value: function(e, t) {
                        if ("function" == typeof t) {
                            var n = this.eventListenersMap.get(e);
                            if (void 0 === n) return !1;
                            var i = n.indexOf(t);
                            return i > -1 ? n.splice(i, 1) : this.logger.debug("removeEventHandler event_key:", e, " func not found."), this.eventListenersMap.set(e, n), !0
                        }
                    }
                }]), e
            }();
        e.exports = u
    }, function(e, t, n) {
        var i = n(2),
            r = n(3),
            o = n(12),
            s = new(function() {
                function e() {
                    i(this, e), this.logger = new o
                }
                return r(e, [{
                    key: "report",
                    value: function(e) {
                        var t = this.getReportData(e);
                        null !== t && "ping" !== t.protocolName && this.logger.report(1, "report", t)
                    }
                }, {
                    key: "getReportData",
                    value: function(e) {
                        var t = e.namespace,
                            n = e.protocolName,
                            i = e.timeCost,
                            r = e.code,
                            o = e.msg,
                            s = void 0 === o ? "" : o;
                        return t ? n ? isNaN(i) || i <= 0 || 3e4 < i ? (this.logger.error(3, "QualityReporter::getReportData", "invalid timeCost of protocol '".concat(t, ":").concat(n, "': ").concat(i)), null) : {
                            namespace: t,
                            protocolName: n,
                            timeCost: i,
                            code: r,
                            msg: s
                        } : (this.logger.error(3, "QualityReporter::getReportData", "invalid protocolName. ns:".concat(t)), null) : (this.logger.error(3, "QualityReporter::getReportData", "invalid namespace. protocolName:".concat(n)), null)
                    }
                }]), e
            }());
        e.exports = s
    }, function(e, t, n) {
        function i(e, t) {
            var n = Object.keys(e);
            if (Object.getOwnPropertySymbols) {
                var i = Object.getOwnPropertySymbols(e);
                t && (i = i.filter((function(t) {
                    return Object.getOwnPropertyDescriptor(e, t).enumerable
                }))), n.push.apply(n, i)
            }
            return n
        }

        function r(e) {
            for (var t = 1; t < arguments.length; t++) {
                var n = null != arguments[t] ? arguments[t] : {};
                t % 2 ? i(Object(n), !0).forEach((function(t) {
                    d(e, t, n[t])
                })) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(n)) : i(Object(n)).forEach((function(t) {
                    Object.defineProperty(e, t, Object.getOwnPropertyDescriptor(n, t))
                }))
            }
            return e
        }

        function o(e, t) {
            var n;
            if ("undefined" == typeof Symbol || null == e[Symbol.iterator]) {
                if (Array.isArray(e) || (n = s(e)) || t && e && "number" == typeof e.length) {
                    n && (e = n);
                    var i = 0,
                        r = function() {};
                    return {
                        s: r,
                        n: function() {
                            return i >= e.length ? {
                                done: !0
                            } : {
                                done: !1,
                                value: e[i++]
                            }
                        },
                        e: function(e) {
                            throw e
                        },
                        f: r
                    }
                }
                throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")
            }
            var o, a = !0,
                u = !1;
            return {
                s: function() {
                    n = e[Symbol.iterator]()
                },
                n: function() {
                    var e = n.next();
                    return a = e.done, e
                },
                e: function(e) {
                    u = !0, o = e
                },
                f: function() {
                    try {
                        a || null == n.return || n.return()
                    } finally {
                        if (u) throw o
                    }
                }
            }
        }

        function s(e, t) {
            if (e) {
                if ("string" == typeof e) return a(e, t);
                var n = Object.prototype.toString.call(e).slice(8, -1);
                return "Object" === n && e.constructor && (n = e.constructor.name), "Map" === n || "Set" === n ? Array.from(e) : "Arguments" === n || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n) ? a(e, t) : void 0
            }
        }

        function a(e, t) {
            (null == t || t > e.length) && (t = e.length);
            for (var n = 0, i = new Array(t); n < t; n++) i[n] = e[n];
            return i
        }

        function u(e) {
            var t = function() {
                if ("undefined" == typeof Reflect || !Reflect.construct) return !1;
                if (Reflect.construct.sham) return !1;
                if ("function" == typeof Proxy) return !0;
                try {
                    return Date.prototype.toString.call(Reflect.construct(Date, [], (function() {}))), !0
                } catch (e) {
                    return !1
                }
            }();
            return function() {
                var n, i = y(e);
                if (t) {
                    var r = y(this).constructor;
                    n = Reflect.construct(i, arguments, r)
                } else n = i.apply(this, arguments);
                return v(this, n)
            }
        }
        var c = n(23),
            l = n(25),
            d = n(15),
            h = n(9),
            _ = n(26),
            p = n(2),
            g = n(3),
            m = n(5),
            f = n(6),
            v = n(8),
            y = n(10),
            S = n(11),
            b = n(12),
            E = n(14),
            w = n(32),
            R = n(33),
            k = n(34),
            T = n(20);
        void 0 === console.assert && (console.assert = function(e, t) {});
        var N = function(e) {
            function t() {
                var e;
                p(this, t), (e = n.call(this)).logger = new b, e.xmpp_service = E.getInstance(), e.rtc_service = w.getInstance(), e.meetingVideoController = R.getInstance(), e.meetingAudioController = k.getInstance(), e.meeting_id = 0, e.room_type = S.RoomType.OUTSIDE, e.media_room_state = S.MediaRoomState.OUT, e.mediaController = null, e.customer_data = "", e.selfId = null, e.app_id = "", e.nickname = "unnamed", e.host_uid = 0, e.saved_user_audio_switch = null, e.saved_user_video_switch = null, e.mutedBySelf = !0, e.muteAll = !1, e.muteOnJoin = !1, e.allowUnmuteBySelf = !1, e.isAllowOpenVideo = !0, e.isAllowRenaming = !0, e.enableWatermark = !1, e.multipleRowWatermark = !1, e.meetingLocked = !1, e.meetingAbilityPstn = !0, e.hideMeetingCodePassword = !1, e.turnAudioReason = S.SwitchReason.BYSELF, e.turnVideoReason = S.SwitchReason.BYSELF, e.cloud_recording_status = S.CloudRecordingStatus.STOPPED, e.cloud_recording_check_token = "", e.isSpotlight = !1, e.is_webinar = !1, e.userMap = new Map, e.inviteMap = new Map, e.associatorMap = new Map;
                var i = function(t) {
                    return e[t] = e[t].bind(m(e))
                };
                i("setSelfUserId"), i("getSelfId"), i("getUserById"), i("getSelfInfo"), i("formKeyById"), i("getUserInfoList"), i("setSelfNickname"), i("isInMeeting"), i("setMeetingId"), i("getMeetingId"), i("reset"), i("isHost"), i("handsUp"), i("kickout"), i("onLogout"), i("turnAudio"), i("turnVideo"), i("changeHost"), i("muteAudio"), i("muteVideo"), i("muteAllAudio"), i("muteAllVideo"), i("leaveMeeting"), i("updateUserInfo"), i("onChangeHostPush"), i("onChangeCoHostPush"), i("onKickoutCallBack"), i("onUserJoinCallBack"), i("onUserLeaveCallBack"), i("onUserOfflineCallBack"), i("onKickedOutCallBack"), i("handleHandsUpRequest"), i("onUserUpdateCallBack"), i("registerEventHandler"), i("onUserKickedCallBack"), i("onNotifyHandsUpResult"), i("onLeaveMeetingCallBack"), i("onBackToWaitingRoomCallBack"), i("onTurnAudioCallBack"), i("onTurnVideoCallBack"), i("onHandsUpCompleteCallBack"), i("onMuteAudioCompleteCallBack"), i("onChangeHostCompleteCallBack"), i("onMuteVideoCompleteCallBack"), i("onNotifyHandsupPushCallBack"), i("onMuteAllAudioCompleteCallBack"), i("onMuteAllVideoCompleteCallBack"), i("onHandleHandsUpCallBack"), i("onUpdateUserInfoCallBack"), i("onHostStatusPush"), i("onWaitingUserStatusPush"), i("onSwitchUserRolePush"), i("onModifyUserInfoCallBack"), i("onSummaryRequestCallBack"), i("onSummaryAudioUploadPush"), i("onRTCWebSocketClose"), i("onRTCRelayTimeout"), i("onRTCKickOut"), i("onInviteEventPush"), i("onInviteResponse"), i("onCancelInviteResponse"), i("onQueryUserStatusResponse"), i("onMeetingSettings"), i("onMeetingUiCfg"), i("onNotifySwitchMediaStream"), i("onNotifyJoinAudioMixUserInfo"), i("onNotifyMeetingSettingsUpdate"), i("onMeetingWillLimited"), i("onRefreshMediaAuthInfo"), i("onQueryLocalPermission"), i("onBreakoutRoomCallBack"), i("onCloudRecordStatePush"), i("onCloudRecordStartCallBack"), i("onCloudRecordPauseCallBack"), i("onCloudRecordResumeCallBack"), i("onCloudRecordStopCallBack"), i("onQueryCloudRecordStorageCallBack"), i("onQueryCloudRecordStateCallBack"), i("onReportMediaStreamStatusCallBack"), i("onReportMediaStreamStatusPush"), i("onNotifyRaiseHandListChangedPush"), i("memberRaiseHandComplete"), i("handleApplyPermissionComplete"), i("putHandsdownComplete"), i("onNotifyUserBePutHandsdownPush"), i("putHandsDownAgainstGivenRoleGroupComplete"), i("onNotifyRoleGroupBePutHandsdownPush"), i("onQueryParticipantsSummaryCallBack"), i("onNotifyPermissionResPush"), i("onApplyPermissionCallBack"), i("onDirectedPush"), i("onMeetingNotice"), i("onQueryUserSigCallBack"), m(e);
                var r = function(t) {
                    var n, i;
                    if (Array.isArray(t)) {
                        var r = _(t, 2);
                        n = r[0], i = r[1]
                    } else n = t;
                    e.xmpp_service.registerEventHandler(n, (function(t, r) {
                        "function" == typeof i && i(t, r), e.getEventHandler(n)(t, r)
                    }))
                };
                return [
                    ["invite", e.onInviteResponse],
                    ["cancel_invite", e.onCancelInviteResponse],
                    ["query_user_status", e.onQueryUserStatusResponse]
                ].map((function(e) {
                    return r(e)
                })), e.listenEvent(), e
            }
            f(t, e);
            var n = u(t);
            return g(t, [{
                key: "setSelfUserId",
                value: function(e) {
                    var t = e.uid,
                        n = e.unique_id;
                    this.selfId = {
                        uid: t,
                        app_id: this.app_id,
                        instance_id: S.INSTANCE_ID.toString(),
                        user_type: 1,
                        unique_id: n
                    }, this.selfKey = this.formKeyById(this.selfId)
                }
            }, {
                key: "getSelfId",
                value: function() {
                    return this.selfId
                }
            }, {
                key: "setMeetingId",
                value: function(e) {
                    this.meeting_id = e
                }
            }, {
                key: "getMeetingId",
                value: function() {
                    return this.meeting_id
                }
            }, {
                key: "setRoomType",
                value: function(e) {
                    e === S.RoomType.MEETING_ROOM || e === S.RoomType.WAITING_ROOM || e === S.RoomType.OUTSIDE ? this.room_type = e : this.logger.error("setRoomType", "invalid 'roomType' passed in: ".concat(e))
                }
            }, {
                key: "getReadableXmppRoomState",
                value: function() {
                    var e = this.getRoomType(),
                        t = "";
                    switch (e) {
                        case S.RoomType.MEETING_ROOM:
                            t = "in meeting";
                            break;
                        case S.RoomType.WAITING_ROOM:
                            t = "waiting room";
                            break;
                        case S.RoomType.OUTSIDE:
                            t = "outside";
                            break;
                        default:
                            t = "Unknown xmpp room type"
                    }
                    return "".concat(e, "(").concat(t, ")")
                }
            }, {
                key: "isInMeetingRoom",
                value: function() {
                    return this.room_type === S.RoomType.MEETING_ROOM
                }
            }, {
                key: "isInWaitingRoom",
                value: function() {
                    return this.room_type === S.RoomType.WAITING_ROOM
                }
            }, {
                key: "isInXmppRoom",
                value: function() {
                    return this.room_type !== S.RoomType.OUTSIDE
                }
            }, {
                key: "getRoomType",
                value: function() {
                    return this.room_type
                }
            }, {
                key: "setMediaRoomState",
                value: function(e) {
                    var t = S.MediaRoomState.getReadableState(this.media_room_state),
                        n = S.MediaRoomState.getReadableState(e);
                    this.media_room_state !== e ? (this.logger.report(1, "MeetingUserController", "media_room_state updated from ".concat(this.media_room_state, "(").concat(t, ") to ").concat(e, "(").concat(n, ")")), this.media_room_state = e) : this.logger.report(2, "MeetingUserController", "ignore to update media_room_state since it is as same as before: ".concat(e, "(").concat(n, ")"))
                }
            }, {
                key: "getMediaRoomState",
                value: function() {
                    return this.media_room_state
                }
            }, {
                key: "getReadableMediaRoomState",
                value: function() {
                    var e = this.getMediaRoomState();
                    return "".concat(e, "(").concat(S.MediaRoomState.getReadableState(e), ")")
                }
            }, {
                key: "isInMediaRoom",
                value: function() {
                    var e = this.getMediaRoomState();
                    return !(e === S.MediaRoomState.OUT || e === S.MediaRoomState.JOINING)
                }
            }, {
                key: "setMediaController",
                value: function(e) {
                    this.mediaController = e
                }
            }, {
                key: "getMediaController",
                value: function() {
                    return this.mediaController
                }
            }, {
                key: "setTurnAudioReason",
                value: function(e) {
                    e === S.SwitchReason.BYSELF || e === S.SwitchReason.BYHOST ? this.turnAudioReason = e : console.error("setTurnAudioReason is supposed to be passed in BYSELF or BYHOST, but got ".concat(e))
                }
            }, {
                key: "getTurnAudioReason",
                value: function() {
                    return this.turnAudioReason
                }
            }, {
                key: "setTurnVideoReason",
                value: function(e) {
                    e === S.SwitchReason.BYSELF || e === S.SwitchReason.BYHOST ? this.turnVideoReason = e : console.error("setTurnVideoReason is supposed to be passed in BYSELF or BYHOST, but got ".concat(e))
                }
            }, {
                key: "getTurnVideoReason",
                value: function() {
                    return this.turnVideoReason
                }
            }, {
                key: "setSelfNickname",
                value: function(e) {
                    this.nickname = e
                }
            }, {
                key: "isHost",
                value: function() {
                    var e = this.getSelfInfo();
                    return e ? 1 === parseInt(e.is_host) : (this.logger.error("MeetingUserController.isHost got self info for null!"), !1)
                }
            }, {
                key: "isMeetingAudioAllMuted",
                value: function() {
                    return this.muteAll
                }
            }, {
                key: "isMuteOnJoin",
                value: function() {
                    return this.muteOnJoin
                }
            }, {
                key: "isAllowUnmuteBySelf",
                value: function() {
                    return this.allowUnmuteBySelf
                }
            }, {
                key: "getIsAllowOpenVideo",
                value: function() {
                    return this.isAllowOpenVideo
                }
            }, {
                key: "setIsAllowOpenVideo",
                value: function(e) {
                    1 !== e && 2 !== e && this.logger.report(3, "setIsAllowOpenVideo", "[ASSERT] val must be either 1 or 2 for 'setIsAllowOpenVideo', but got: ".concat(e)), this.isAllowOpenVideo !== (1 === e) && (this.isAllowOpenVideo = 1 === e, this.logger.report(1, "setIsAllowOpenVideo", "isAllowOpenVideo changed to ".concat(this.isAllowOpenVideo ? "allow" : "disallow")))
                }
            }, {
                key: "isValidEnumOf",
                value: function(e, t) {
                    var n = !1;
                    for (var i in e) {
                        if (e[i] === t) {
                            n = !0;
                            break
                        }
                        e[i] == t && this.logger.report(2, "isValidEnumOf", "Although they are same after type conversion, but the type of given enum value '".concat(t, "'(type '").concat(h(t), "') is not as same as enum property '").concat(i, "' with value '").concat(e[i], "'(type '").concat(h(e[i]), "')."))
                    }
                    return n
                }
            }, {
                key: "getIsAllowRenaming",
                value: function() {
                    return this.isAllowRenaming
                }
            }, {
                key: "setIsAllowRenaming",
                value: function(e) {
                    this.isValidEnumOf(S.ERenaming, e) || this.logger.report(3, "setIsAllowRenaming", "[ASSERT] val is not valid: ".concat(e));
                    var t = e === S.ERenaming.Allow || e === S.ERenaming.DefaultAllow;
                    this.isAllowRenaming !== t && (this.isAllowRenaming = t, this.logger.report(1, "setIsAllowRenaming", "isAllowRenaming changed to ".concat(this.isAllowRenaming ? "allow" : "disallow")))
                }
            }, {
                key: "getIsWebinar",
                value: function() {
                    return this.is_webinar
                }
            }, {
                key: "setIsWebinar",
                value: function(e) {
                    this.is_webinar = e
                }
            }, {
                key: "getIsSpotlight",
                value: function() {
                    return this.isSpotlight
                }
            }, {
                key: "setIsSpotlight",
                value: function(e) {
                    1 !== e && 2 !== e && this.logger.report(3, "setIsSpotlight", "[ASSERT] val must be either 1 or 2 for 'setIsSpotlight', but got: ".concat(e)), this.isSpotlight !== (1 === e) && (this.isSpotlight = 1 === e, this.logger.report(1, "setIsSpotlight", "isSpotlight changed to ".concat(this.isSpotlight ? "becomes spotlight" : "spotlight cancelled")))
                }
            }, {
                key: "isEnableWatermark",
                value: function() {
                    return this.enableWatermark
                }
            }, {
                key: "isMultipleRowWatermark",
                value: function() {
                    return this.multipleRowWatermark
                }
            }, {
                key: "isMeetingLocked",
                value: function() {
                    return this.meetingLocked
                }
            }, {
                key: "isHideMeetingCodePassword",
                value: function() {
                    return this.hideMeetingCodePassword
                }
            }, {
                key: "isMeetingAbilityPstnOn",
                value: function() {
                    return this.meetingAbilityPstn
                }
            }, {
                key: "getCloudRecordingStatus",
                value: function() {
                    return this.cloud_recording_status
                }
            }, {
                key: "setCloudRecordingStatus",
                value: function(e) {
                    e === S.CloudRecordingStatus.STARTED && this.isCloudRecordingStarted() ? console.warn("unexpected cloud recording status: prev: start, curr: start") : e !== S.CloudRecordingStatus.PAUSED || this.isCloudRecordingStarted() || console.warn("unexpected cloud recording status: prev: ".concat(this.getCloudRecordingStatus(), ", curr: paused")), this.cloud_recording_status = e
                }
            }, {
                key: "getCloudRecordingCheckToken",
                value: function() {
                    return this.cloud_recording_check_token
                }
            }, {
                key: "setCloudRecordingCheckToken",
                value: function(e) {
                    this.cloud_recording_check_token = e
                }
            }, {
                key: "cloudRecordStateChange",
                value: function(e) {
                    var t = function(e) {
                        switch (e) {
                            case 0:
                                return "STOPPED";
                            case 1:
                                return "PREPARING";
                            case 2:
                                return "STARTED";
                            case 3:
                                return "PAUSED";
                            default:
                                return "UNKNOWN(".concat(e, ")")
                        }
                    };
                    console.info("cloud record state changed from ".concat(t(this.getCloudRecordingStatus()), " to: ").concat(t(e))), this.setCloudRecordingStatus(e)
                }
            }, {
                key: "isCloudRecordingStarted",
                value: function() {
                    return this.getCloudRecordingStatus() === S.CloudRecordingStatus.STARTED
                }
            }, {
                key: "isCloudRecordingPaused",
                value: function() {
                    return this.getCloudRecordingStatus() === S.CloudRecordingStatus.PAUSED
                }
            }, {
                key: "isCloudRecordingStopped",
                value: function() {
                    return this.getCloudRecordingStatus() === S.CloudRecordingStatus.STOPPED
                }
            }, {
                key: "reset",
                value: function() {
                    this.logger.report(1, "meeting_user_controller", "reset"), this.meeting_id = 0, this.selfId = null, this.muteAll = !1, this.muteOnJoin = !1, this.allowUnmuteBySelf = !1, this.enableWatermark = !1, this.multipleRowWatermark = !1, this.meetingLocked = !1, this.hideMeetingCodePassword = !1, this.userMap = new Map, this.associatorMap = new Map, this.inviteMap = new Map, this.isDoingSummary = !1, this.setRoomType(S.RoomType.OUTSIDE), this.turnVideoReason = S.SwitchReason.BYSELF, this.turnAudioReason = S.SwitchReason.BYSELF, this.setCloudRecordingStatus(S.CloudRecordingStatus.STOPPED), this.setCloudRecordingCheckToken(""), this.stopRecorder()
                }
            }, {
                key: "isInMeeting",
                value: function() {
                    return this.meeting_id > 0
                }
            }, {
                key: "getUserInfoList",
                value: function() {
                    var e, t = [],
                        n = o(this.userMap.values());
                    try {
                        for (n.s(); !(e = n.n()).done;) {
                            var i = e.value,
                                r = JSON.parse(JSON.stringify(i));
                            "boolean" != typeof r.isSelf && (r.isSelf = this.formKeyById(r.id) === this.selfKey), t.push(JSON.parse(JSON.stringify(r)))
                        }
                    } catch (e) {
                        n.e(e)
                    } finally {
                        n.f()
                    }
                    return t
                }
            }, {
                key: "getInviteInfoList",
                value: function() {
                    var e, t = [],
                        n = o(this.inviteMap.keys());
                    try {
                        for (n.s(); !(e = n.n()).done;) {
                            var i = e.value,
                                r = JSON.parse(JSON.stringify(this.inviteMap.get(i)));
                            r.invite_id = i, t.push(r)
                        }
                    } catch (e) {
                        n.e(e)
                    } finally {
                        n.f()
                    }
                    return t
                }
            }, {
                key: "formKeyById",
                value: function(e) {
                    return e && e.unique_id || this.logger.report(3, "error", "[ASSERT] property 'unique_id' is missing in 'id'. id: ".concat(JSON.stringify(e))), e.unique_id
                }
            }, {
                key: "getAVRoomUserId",
                value: function(e) {
                    return [e.instance_id, e.uid, e.app_id].join("_")
                }
            }, {
                key: "getUserById",
                value: function(e) {
                    var t = this.formKeyById(e),
                        n = null;
                    return this.userMap.has(t) && (n = this.userMap.get(t)), n
                }
            }, {
                key: "getUserListById",
                value: function(e) {
                    var t, n = [],
                        i = o(this.userMap.values());
                    try {
                        for (i.s(); !(t = i.n()).done;) {
                            var r = t.value;
                            r.id.app_id === e.app_id && r.id.uid === e.uid && r.id.user_type === e.user_type && n.push(r)
                        }
                    } catch (e) {
                        i.e(e)
                    } finally {
                        i.f()
                    }
                    return n
                }
            }, {
                key: "getSelfInfo",
                value: function() {
                    var e = this.getSelfId();
                    return e ? this.getUserById(e) : null
                }
            }, {
                key: "isSelf",
                value: function(e) {
                    var t, n = e.id.unique_id;
                    if (!n) return this.logger.report(3, "isSelf", "give user lack of 'unique_id'. user: ".concat(JSON.stringify(e))), !1;
                    var i = null === (t = this.getSelfId()) || void 0 === t ? void 0 : t.unique_id;
                    return i ? n === i : (this.logger.report(3, "isSelf", "selfInfo lack of 'unique_id'. mySelf: ".concat(JSON.stringify(this.getSelfId()))), !1)
                }
            }, {
                key: "filterMeetingIdNotMatch",
                value: function(e) {
                    var t = this;
                    return function(n, i) {
                        var r = i && (i.meeting_id || i.meetingId);
                        void 0 !== r && t.getMeetingId() !== r ? t.logger.report(2, "in_meeting", "data.meetingId(".concat(r, ") 与当前(").concat(t.getMeetingId(), ")不一致.\n          data: ").concat(JSON.stringify(i), ",\n         ")) : e(n, i)
                    }
                }
            }, {
                key: "listenEvent",
                value: function() {
                    var e = {
                        user_join: this.onUserJoinCallBack,
                        user_leave: this.onUserLeaveCallBack,
                        user_update: this.onUserUpdateCallBack,
                        user_kicked: this.onUserKickedCallBack,
                        user_offline: this.onUserOfflineCallBack,
                        hands_up: this.onHandsUpCompleteCallBack,
                        notify_hands_up_result: this.onNotifyHandsUpResult,
                        mute_audio: this.onMuteAudioCompleteCallBack,
                        mute_all_audio: this.onMuteAllAudioCompleteCallBack,
                        mute_video: this.onMuteVideoCompleteCallBack,
                        mute_all_video: this.onMuteAllVideoCompleteCallBack,
                        handle_hands_up: this.onHandleHandsUpCallBack,
                        user_status: this.onUpdateUserInfoCallBack,
                        host_status: this.onHostStatusPush,
                        waiting_user_status: this.onWaitingUserStatusPush,
                        switch_user_role: this.onSwitchUserRolePush,
                        change_host: this.onChangeHostCompleteCallBack,
                        leave_meeting: this.onLeaveMeetingCallBack,
                        notify_hands_up_push: this.onNotifyHandsupPushCallBack,
                        turn_audio: this.onTurnAudioCallBack,
                        turn_video: this.onTurnVideoCallBack,
                        change_host_push: this.onChangeHostPush,
                        change_co_host_push: this.onChangeCoHostPush,
                        modify_user_info: this.onModifyUserInfoCallBack,
                        kickout: this.onKickoutCallBack,
                        kicked_out: this.onKickedOutCallBack,
                        logout: this.onLogout,
                        summary_request: this.onSummaryRequestCallBack,
                        summary_audio_upload_push: this.onSummaryAudioUploadPush,
                        summary_message_push: this.onSummaryMessagePush,
                        on_invite_event_push: this.onInviteEventPush,
                        query_meeting_settings: this.onMeetingSettings,
                        breakout_room_started: this.onBreakoutRoomCallBack,
                        query_ui_config: this.onMeetingUiCfg,
                        notify_meeting_settings_update: this.onNotifyMeetingSettingsUpdate,
                        notify_switch_media_stream: this.onNotifySwitchMediaStream,
                        notify_join_audio_mix_user_info: this.onNotifyJoinAudioMixUserInfo,
                        meeting_will_limited: this.onMeetingWillLimited,
                        refresh_media_auth_info: this.onRefreshMediaAuthInfo,
                        query_local_permission: this.onQueryLocalPermission,
                        switch_local_permission: this.onSwitchLocalPermission,
                        cloud_record_state: this.onCloudRecordStatePush,
                        cloud_record_stop: this.onCloudRecordStopCallBack,
                        cloud_record_start: this.onCloudRecordStartCallBack,
                        cloud_record_pause: this.onCloudRecordPauseCallBack,
                        cloud_record_resume: this.onCloudRecordResumeCallBack,
                        query_record_storage: this.onQueryCloudRecordStorageCallBack,
                        query_cloud_record_state: this.onQueryCloudRecordStateCallBack,
                        report_media_stream_status: this.onReportMediaStreamStatusCallBack,
                        report_media_stream_status_push: this.onReportMediaStreamStatusPush,
                        member_raise_hand: this.memberRaiseHandComplete,
                        handle_apply_permission: this.handleApplyPermissionComplete,
                        put_handsdown_with_user: this.putHandsdownComplete,
                        notify_raise_hand_list_changed: this.onNotifyRaiseHandListChangedPush,
                        notify_user_be_put_handsdown: this.onNotifyUserBePutHandsdownPush,
                        put_handsdown_with_role_group: this.putHandsDownAgainstGivenRoleGroupComplete,
                        notify_role_group_be_put_handsdown: this.onNotifyRoleGroupBePutHandsdownPush,
                        get_webinar_participants_summary: this.onQueryParticipantsSummaryCallBack,
                        apply_permission: this.onApplyPermissionCallBack,
                        notify_permission_result: this.onNotifyPermissionResPush,
                        directed_push: this.onDirectedPush,
                        query_user_sig: this.onQueryUserSigCallBack,
                        meeting_notice: this.onMeetingNotice
                    };
                    for (var t in e) this.xmpp_service.registerEventHandler(t, this.filterMeetingIdNotMatch(e[t]));
                    this.rtc_service.registerEventHandler("rtc_web_socket_close", this.onRTCWebSocketClose), this.rtc_service.registerEventHandler("rtc_relay_timeout", this.onRTCRelayTimeout), this.rtc_service.registerEventHandler("rtc_kick_out", this.onRTCKickOut)
                }
            }, {
                key: "updateUserInfo",
                value: function(e, t) {
                    var n = {
                        meeting_id: this.meeting_id,
                        type: t
                    };
                    if (e.hasOwnProperty("video_on") && (n.video_on = e.video_on), e.hasOwnProperty("video_reason") && (n.video_reason = e.video_reason), e.hasOwnProperty("audio_on") && (n.audio_on = e.audio_on, "1" === n.audio_on ? this.saved_user_audio_switch = !0 : "0" === n.audio_on && (this.saved_user_audio_switch = !1)), e.hasOwnProperty("audio_reason") && (n.audio_reason = e.audio_reason), e.hasOwnProperty("share_on") && (n.share_on = e.share_on), e.hasOwnProperty("share_reason") && (n.share_reason = e.share_reason), e.hasOwnProperty("web_share_on") && (n.web_share_on = e.web_share_on), e.hasOwnProperty("web_share_reason") && (n.web_share_reason = e.web_share_reason), e.hasOwnProperty("nickname")) n.nickname = e.nickname;
                    else {
                        var i = this.getSelfInfo();
                        if (null === i) return void this.logger.error("MeetingUserController.updateUserInfo: failed to getSelfInfo()!");
                        n.nickname = i.nickname
                    }
                    e.hasOwnProperty("avatar_type") && (n.avatar_type = e.avatar_type), e.hasOwnProperty("user_action") && (n.user_action = e.user_action), e.hasOwnProperty("local_record_on") && (n.local_record_on = e.local_record_on), e.hasOwnProperty("access_type") && (n.access_type = e.access_type), e.hasOwnProperty("scenes_bits") && (n.scenes_bits = e.scenes_bits), 1 === t ? e.hasOwnProperty("customer_data") ? (n.customer_data = e.customer_data, this.customer_data = e.customer_data) : this.customer_data = "" : 2 !== t && 4 !== t || this.customer_data && (n.customer_data = this.customer_data, this.customer_data = ""), this.xmpp_service.userStatusRequest(n)
                }
            }, {
                key: "reportMediaStreamStatus",
                value: function(e) {
                    var t = (e || {}).network_level;
                    this.xmpp_service.reportMediaStreamStatus({
                        meeting_id: this.meeting_id,
                        network_level: t
                    })
                }
            }, {
                key: "handsUp",
                value: function(e, t) {
                    return this.isInMeeting() ? (this.logger.report(1, "meeting_user_controller", "raise hand, meeting_id=".concat(this.meeting_id, ", isUp=").concat(e, ", permissionList="), t), this.xmpp_service.handsUpRequest(this.meeting_id, e ? 1 : 0, t), !0) : (this.logger.error("handsUp failed: not in meeting"), !1)
                }
            }, {
                key: "turnAudio",
                value: function(e) {
                    var t = e.on,
                        n = e.succCallback,
                        i = void 0 === n ? null : n,
                        r = e.failCallback,
                        o = void 0 === r ? null : r,
                        s = e.needRefreshToken,
                        a = void 0 === s ? 0 : s,
                        u = e.reason,
                        c = void 0 === u ? S.SwitchReason.BYSELF : u,
                        l = e.requestUpStreamToken,
                        d = void 0 === l ? "" : l;
                    if (this.logger.report(1, "meeting_user_controller", "user turn audio ".concat(t ? "on" : "off", "(").concat(c == S.SwitchReason.BYSELF ? "BYSELF" : "BYHOST", ")")), this.setTurnAudioReason(c), t) this.xmpp_service.turnAudioRequest({
                        meeting_id: this.meeting_id,
                        succCallback: i,
                        failCallback: o,
                        needRefreshToken: a,
                        requestUpStreamToken: d
                    });
                    else if (this.saved_user_audio_switch = !1, this.mutedBySelf = !0, "function" == typeof i) i({
                        status: "off"
                    });
                    else {
                        this.getEventHandler("turn_audio")(!0, {
                            status: "off"
                        })
                    }
                }
            }, {
                key: "turnVideo",
                value: function(e) {
                    var t = e.on,
                        n = e.reason,
                        i = void 0 === n ? S.SwitchReason.BYSELF : n,
                        r = e.needRefreshToken,
                        o = void 0 === r ? 0 : r,
                        s = e.requestUpStreamToken,
                        a = void 0 === s ? "" : s;
                    if (this.logger.report(1, "meeting_user_controller", "user turn video ".concat(t ? "on" : "off", "(").concat(i == S.SwitchReason.BYSELF ? "BYSELF" : "BYHOST", ")")), this.setTurnVideoReason(i), t) {
                        if (!this.getIsAllowOpenVideo()) return this.logger.report(1, "cannot turn on video in this meeting."), void this.getEventHandler("turn_video")(!1, {
                            errmsg: this.getIsWebinar() ? "主持人不允许嘉宾开启视频" : "主持人不允许成员开启视频"
                        });
                        this.xmpp_service.turnVideoRequest({
                            meeting_id: this.meeting_id,
                            needRefreshToken: o,
                            requestUpStreamToken: a
                        })
                    } else {
                        this.saved_user_video_switch = !1, this.updateUserInfo({
                            video_on: "0",
                            video_reason: i
                        }, S.UserState.UPDATE), this.getEventHandler("turn_video")(!0, {
                            status: "off"
                        })
                    }
                }
            }, {
                key: "applyPermission",
                value: function(e) {
                    this.xmpp_service.applyPermission(r(r({}, e), {}, {
                        meeting_id: this.meeting_id
                    }))
                }
            }, {
                key: "handleApplyPermissionComplete",
                value: function(e, t) {
                    this.getEventHandler("handle_apply_permission")(e, t)
                }
            }, {
                key: "raiseHand",
                value: function(e) {
                    this.logger.report(1, "meeting_user_controller", "webinar user requests hands ".concat(e ? "up" : "down")), this.xmpp_service.raiseHand({
                        meeting_id: this.meeting_id,
                        raise_hand: e ? 1 : 0
                    })
                }
            }, {
                key: "memberRaiseHandComplete",
                value: function(e, t) {
                    this.getEventHandler("member_raise_hand")(e, t)
                }
            }, {
                key: "putHandsdown",
                value: function(e) {
                    this.logger.report(1, "meeting_user_controller", "webinar user requests hands ".concat(isUp ? "up" : "down")), this.xmpp_service.putHandsDown({
                        meeting_id: this.meeting_id,
                        user: e,
                        reason: {
                            code: 1,
                            detail: ""
                        }
                    })
                }
            }, {
                key: "putHandsdownComplete",
                value: function(e, t) {
                    this.getEventHandler("put_handsdown_with_user")(e, t)
                }
            }, {
                key: "putHandsdownFor",
                value: function(e) {
                    var t = this;
                    this.logger.report(1, "meeting_user_controller", "webinar host requests put the role group(".concat(function(e) {
                        var n = ["普通会议的角色群体", "webinar观众群体", "webinar嘉宾群体"];
                        7 < e && t.logger.report(3, "meeting_user_controller", "webinar host requests put the role group(".concat(e, ") handsdown. It must NOT be greater than 7."));
                        for (var i = (7 & e).toString(2).padStart(n.length, "0"), r = [], o = 0; o < n.length; o++) "1" === i[o] && r.push(n[o]);
                        return r.join(", ")
                    }(e), ") handsdown.")), this.xmpp_service.putHandsDownAgainstGivenRoleGroup({
                        meeting_id: this.meeting_id,
                        role_group_type: e
                    })
                }
            }, {
                key: "putHandsDownAgainstGivenRoleGroupComplete",
                value: function(e, t) {
                    this.getEventHandler("put_handsdown_with_role_group")(e, t)
                }
            }, {
                key: "onNotifyRoleGroupBePutHandsdownPush",
                value: function(e, t) {
                    this.getEventHandler("notify_role_group_be_put_handsdown")(e, t)
                }
            }, {
                key: "onNotifyPermissionResPush",
                value: function(e, t) {
                    this.getEventHandler("notify_permission_result")(e, t)
                }
            }, {
                key: "onDirectedPush",
                value: function(e, t) {
                    this.getEventHandler("directed_push")(e, t)
                }
            }, {
                key: "queryParticipantsSummary",
                value: function() {
                    this.xmpp_service.queryParticipantsSummary(this.meeting_id)
                }
            }, {
                key: "onQueryParticipantsSummaryCallBack",
                value: function(e, t) {
                    this.getEventHandler("get_webinar_participants_summary")(e, t)
                }
            }, {
                key: "onApplyPermissionCallBack",
                value: function(e, t) {
                    this.getEventHandler("apply_permission")(e, t)
                }
            }, {
                key: "applyPermissionWebinar",
                value: function(e) {
                    e.meeting_id = this.meeting_id, this.xmpp_service.applyPermissionWebinar(e)
                }
            }, {
                key: "queryCloudRecordState",
                value: function() {
                    this.xmpp_service.queryCloudRecordState(this.meeting_id)
                }
            }, {
                key: "onQueryCloudRecordStateCallBack",
                value: function(e, t) {
                    console.info("meeting_user_controller", "onQueryCloudRecordStateCallBack rep: ", e, t);
                    var n = this.getEventHandler("query_cloud_record_state");
                    e ? (this.cloudRecordStateChange(t.state), n(e, t)) : n(e, t)
                }
            }, {
                key: "onReportMediaStreamStatusCallBack",
                value: function(e, t) {
                    this.getEventHandler("report_media_stream_status")(e, t)
                }
            }, {
                key: "onReportMediaStreamStatusPush",
                value: function(e, t) {
                    this.getEventHandler("report_media_stream_status_push")(e, t)
                }
            }, {
                key: "onNotifyRaiseHandListChangedPush",
                value: function(e, t) {
                    this.getEventHandler("notify_raise_hand_list_changed")(e, t)
                }
            }, {
                key: "onNotifyUserBePutHandsdownPush",
                value: function(e, t) {
                    this.getEventHandler("notify_user_be_put_handsdown")(e, t)
                }
            }, {
                key: "queryRecordStorage",
                value: function() {
                    this.xmpp_service.queryRecordStorage(this.meeting_id)
                }
            }, {
                key: "onQueryCloudRecordStorageCallBack",
                value: function(e, t) {
                    console.info("meeting_user_controller", "onQueryCloudRecordStorageCallBack rep: ", e, t);
                    var n = this.getEventHandler("query_record_storage");
                    "function" != typeof n && (console.warn("did you miss to register 'query_record_storage' to meeting_user_controller?"), n = function() {}), n(!(!e || !t), t)
                }
            }, {
                key: "startCloudRecording",
                value: function() {
                    var e = this.getEventHandler("cloud_record_start");
                    if ("function" != typeof e && (console.warn("did you miss to register 'cloud_record_start' to meeting_user_controller?"), e = function() {}), !this.isCloudRecordingStopped()) return console.warn("start cloud record failed: status should be stopped(0) but is ".concat(this.getCloudRecordingStatus())), void e(!1, {
                        code: -1,
                        msg: "无法启动云录制，因为云录制当前状态不正确。"
                    });
                    this.operateCloudRecording(S.CloudRecordAction.START)
                }
            }, {
                key: "confirmStartCloudRecording",
                value: function() {
                    var e = this.getEventHandler("cloud_record_start");
                    if ("function" != typeof e && (console.warn("did you miss to register 'cloud_record_start' to meeting_user_controller?"), e = function() {}), !this.getCloudRecordingCheckToken()) return console.warn("you should call 'startCloudRecording' directly"), void e(!1, {
                        code: -2,
                        msg: "确认启动云录制失败，请直接启动云录制。"
                    });
                    this.operateCloudRecording(S.CloudRecordAction.CONFIRM_START)
                }
            }, {
                key: "pauseCloudRecording",
                value: function() {
                    var e = this.getEventHandler("cloud_record_pause");
                    if ("function" != typeof e && (console.warn("did you miss to register 'cloud_record_pause' to meeting_user_controller?"), e = function() {}), !this.isCloudRecordingStarted()) return console.warn("pause cloud record failed: status should be started(2) but is ".concat(this.getCloudRecordingStatus())), void e(!1, "无法暂停云录制，因为当前云录制并未在进行中。");
                    this.operateCloudRecording(S.CloudRecordAction.PAUSE)
                }
            }, {
                key: "resumeCloudRecording",
                value: function() {
                    var e = this.getEventHandler("cloud_record_resume");
                    if ("function" != typeof e && (console.warn("did you miss to register 'cloud_record_resume' to meeting_user_controller?"), e = function() {}), !this.isCloudRecordingPaused()) return console.warn("resume cloud record failed: status should be paused(3) but is ".concat(this.getCloudRecordingStatus())), void e(!1, "无法恢复云录制，因为当前云录制并未暂停。");
                    this.operateCloudRecording(S.CloudRecordAction.RESUME)
                }
            }, {
                key: "stopCloudRecording",
                value: function() {
                    var e = this.getEventHandler("cloud_record_stop");
                    "function" != typeof e && (console.warn("did you miss to register 'cloud_record_stop' to meeting_user_controller?"), e = function() {}), this.operateCloudRecording(S.CloudRecordAction.STOP)
                }
            }, {
                key: "operateCloudRecording",
                value: function(e) {
                    var t = {
                        meeting_id: this.meeting_id,
                        type: e
                    };
                    e === S.CloudRecordAction.CONFIRM_START && (t.check_token = this.getCloudRecordingCheckToken(), t.type = S.CloudRecordAction.START, this.setCloudRecordingCheckToken("")), this.xmpp_service.operateCloudRecording(t)
                }
            }, {
                key: "onCloudRecordStartCallBack",
                value: function(e, t) {
                    var n = (t || {}).token,
                        i = void 0 === n ? "" : n;
                    i && (this.setCloudRecordingCheckToken(i), delete t.token), this.onCloudRecordOperateCallBack(e, t, S.CloudRecordAction.START)
                }
            }, {
                key: "onCloudRecordStopCallBack",
                value: function(e, t) {
                    this.onCloudRecordOperateCallBack(e, t, S.CloudRecordAction.STOP)
                }
            }, {
                key: "onCloudRecordPauseCallBack",
                value: function(e, t) {
                    this.onCloudRecordOperateCallBack(e, t, S.CloudRecordAction.PAUSE)
                }
            }, {
                key: "onCloudRecordResumeCallBack",
                value: function(e, t) {
                    this.onCloudRecordOperateCallBack(e, t, S.CloudRecordAction.RESUME)
                }
            }, {
                key: "onCloudRecordOperateCallBack",
                value: function(e, t, n) {
                    var i = "cloud_record_".concat(this.getStrCloudRecordAction(n));
                    console.info("meeting_user_controller", "".concat(i, " rep: "), e, t);
                    var r = this.getEventHandler(i);
                    if ("function" != typeof r && (console.warn("did you miss to register ".concat(i, " to meeting_user_controller?")), r = function() {}), e && t) return t.meeting_id != this.meeting_id ? (console.info("MeetingUserController  DIFFERENT meeting_id! data.meeting_id:", t.meeting_id, "self.meeting_id:", this.meeting_id), void r(!1, t)) : void r(!0, t);
                    r(!1, t)
                }
            }, {
                key: "getStrCloudRecordAction",
                value: function(e) {
                    var t = "";
                    switch (e) {
                        case S.CloudRecordAction.START:
                            t = "start";
                            break;
                        case S.CloudRecordAction.STOP:
                            t = "stop";
                            break;
                        case S.CloudRecordAction.PAUSE:
                            t = "pause";
                            break;
                        case S.CloudRecordAction.RESUME:
                            t = "resume";
                            break;
                        default:
                            console.error("unexpected action passed into getStrCloudRecordAction: ".concat(e))
                    }
                    return t
                }
            }, {
                key: "leaveMediaRoom",
                value: function() {
                    var e = l(c.mark((function e() {
                        var t, n = arguments;
                        return c.wrap((function(e) {
                            for (;;) switch (e.prev = e.next) {
                                case 0:
                                    if (t = n.length > 0 && void 0 !== n[0] ? n[0] : {}, this.isInMediaRoom()) {
                                        e.next = 4;
                                        break
                                    }
                                    return this.logger.report(1, "MeetingUserController", "not in media room, ignore to send user_leave.\n        xmpp room type: ".concat(this.getReadableXmppRoomState(), "\n        media room state: ").concat(this.getReadableMediaRoomState(), ")\n      ")), e.abrupt("return");
                                case 4:
                                    return this.isInMeetingRoom() || this.logger.report(3, "MeetingUserController", "[ASSERT] only meeting room could have media room running. But current states are:\n        xmpp room type: ".concat(this.getReadableXmppRoomState(), "\n        media room state: ").concat(this.getReadableMediaRoomState(), ")\n      ")), this.getMeetingId() || this.logger.report(3, "MeetingUserController", "[ASSERT] cannot send user_leave since meeting_id is invalid"), e.prev = 6, this.setMediaRoomState(S.MediaRoomState.LEAVING), e.next = 10, this.getMediaController().leave();
                                case 10:
                                    e.next = 15;
                                    break;
                                case 12:
                                    e.prev = 12, e.t0 = e.catch(6), this.logger.report(2, "MeetingUserController", "Failed to leave media room: ".concat((null === e.t0 || void 0 === e.t0 ? void 0 : e.t0.message) || "unknown"));
                                case 15:
                                    return e.prev = 15, this.setMediaRoomState(S.MediaRoomState.OUT), this.setMediaController(null), e.finish(15);
                                case 19:
                                    if (this.isInMeeting()) {
                                        e.next = 22;
                                        break
                                    }
                                    return this.logger.report(3, "MeetingUserController", "[ASSERT] User isn't in meeting.\n        xmpp room type: ".concat(this.getReadableXmppRoomState(), "\n        media room state: ").concat(this.getReadableMediaRoomState(), ")\n      ")), e.abrupt("return");
                                case 22:
                                    this.xmpp_service.sendUserStatusLeave(r({
                                        meeting_id: this.meeting_id
                                    }, t)).catch((function() {}));
                                case 23:
                                case "end":
                                    return e.stop()
                            }
                        }), e, this, [
                            [6, 12, 15, 19]
                        ])
                    })));
                    return function() {
                        return e.apply(this, arguments)
                    }
                }()
            }, {
                key: "leaveMeeting",
                value: function(e) {
                    this.room_type !== S.RoomType.MEETING_ROOM && this.room_type !== S.RoomType.WAITING_ROOM && this.logger.error("leaveMeeting", "invalid state of 'room_type': ".concat(this.room_type));
                    var t = r(r({}, e), {}, {
                        meeting_id: this.meeting_id,
                        room_type: this.room_type
                    });
                    return this.xmpp_service.leaveMeetingRequest(t), !0
                }
            }, {
                key: "leaveMeetingFully",
                value: function() {
                    var e = l(c.mark((function e(t) {
                        return c.wrap((function(e) {
                            for (;;) switch (e.prev = e.next) {
                                case 0:
                                    return e.next = 2, this.leaveMediaRoom(t);
                                case 2:
                                    this.leaveXmppRoom(t);
                                case 3:
                                case "end":
                                    return e.stop()
                            }
                        }), e, this)
                    })));
                    return function(t) {
                        return e.apply(this, arguments)
                    }
                }()
            }, {
                key: "leaveXmppRoom",
                value: function() {
                    var e = l(c.mark((function e(t) {
                        return c.wrap((function(e) {
                            for (;;) switch (e.prev = e.next) {
                                case 0:
                                    if (this.isInMeeting()) {
                                        e.next = 3;
                                        break
                                    }
                                    return this.logger.report(3, "assert", "current is not in meeting, why did you call leaveXmppRoom?"), e.abrupt("return");
                                case 3:
                                    if (this.isInXmppRoom()) {
                                        e.next = 6;
                                        break
                                    }
                                    return this.logger.report(3, "assert", "meeting id is valid but meeting state is outside? Please file this bug.\n        meeting_id: ".concat(this.getMeetingId(), "\n        xmpp room state: ").concat(this.getReadableXmppRoomState(), "\n      ")), e.abrupt("return");
                                case 6:
                                    try {
                                        this.xmpp_service.sendLeave(r({
                                            meeting_id: this.meeting_id,
                                            room_type: this.room_type,
                                            reason: S.LeaveReason.SELF
                                        }, t))
                                    } catch (e) {
                                        this.logger.report(3, "assert", "send xmpp leave failed: ".concat(JSON.stringify(e)))
                                    }
                                    this.stopMeetingPing(), this.reset();
                                case 9:
                                case "end":
                                    return e.stop()
                            }
                        }), e, this)
                    })));
                    return function(t) {
                        return e.apply(this, arguments)
                    }
                }()
            }, {
                key: "backToWaitingRoom",
                value: function() {
                    this.logger.report(3, "assert", 'do not call "backToWaitingRoom" anymore.')
                }
            }, {
                key: "updateAccessType",
                value: function(e) {
                    0 !== e && 1 !== e && this.logger.warn("updateAccessType: 'accessType' should be either 0 or 1, but got: ".concat(e, ".")), this.logger.report(1, "in_meeting", "updateAccessType to ".concat(0 === e ? "DC" : "OC")), this.updateUserInfo({
                        access_type: e
                    }, S.UserState.UPDATE)
                }
            }, {
                key: "handleHandsUpRequest",
                value: function(e, t, n) {
                    return this.logger.report(1, "meeting_user_controller", "handle hands up request, account=", e, " req_type=".concat(t, ", is_grant=").concat(n)), this.xmpp_service.handleHandsUpRequest(this.meeting_id, e, t, n)
                }
            }, {
                key: "changeHost",
                value: function(e) {
                    return this.isInMeeting() ? this.isHost() ? (this.xmpp_service.changeHostRequest(this.meeting_id, e), !0) : (this.logger.error("only host can do changeHost"), !1) : (this.logger.error("MUC.changeHost: not in meeting"), !1)
                }
            }, {
                key: "spotlightVideo",
                value: function(e) {
                    return this.isInMeeting() ? this.isHost() ? (this.xmpp_service.setVideoLayoutRequest(), !0) : (this.logger.error("only host can do spotlightVideo"), !1) : (this.logger.error("not in meeting"), !1)
                }
            }, {
                key: "muteAudio",
                value: function(e, t) {
                    return this.isHost() ? void 0 !== this.getUserById(e) && (this.xmpp_service.switchMediaPermissionRequest(e, this.meeting_id, S.MediaType.AUDIO, t ? 0 : 1, 0), !0) : (this.logger.error("only host can do this operation"), !1)
                }
            }, {
                key: "muteAllAudio",
                value: function(e) {
                    if (!this.isInMeeting()) return this.logger.error("not in meeting"), !1;
                    if (!this.isHost()) return this.logger.error("only host can do this operation"), !1;
                    var t = this.getSelfInfo();
                    return this.xmpp_service.switchMediaPermissionRequest(t.id, this.meeting_id, S.MediaType.AUDIO, e ? 0 : 1, 1), this.muteAll = e, !0
                }
            }, {
                key: "muteVideo",
                value: function(e, t) {
                    return this.isInMeeting() ? this.isHost() ? void 0 !== this.getUserById(e) && (this.xmpp_service.switchMediaPermissionRequest(e, this.meeting_id, S.MediaType.VIDEO, t ? 0 : 1, 0), !0) : (this.logger.error("only host can do this operation"), !1) : (this.logger.error("not in meeting"), !1)
                }
            }, {
                key: "muteAllVideo",
                value: function(e) {
                    if (!this.isInMeeting()) return this.logger.error("not in meeting"), !1;
                    if (!this.isHost()) return this.logger.error("only host can do this operation"), !1;
                    var t = this.getSelfInfo();
                    return this.xmpp_service.switchMediaPermissionRequest(t.id, this.meeting_id, S.MediaType.VIDEO, e ? 0 : 1, 1), !0
                }
            }, {
                key: "updateVideoStatus",
                value: function(e) {
                    var t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : S.SwitchReason.BYSELF;
                    if ("boolean" != typeof e) throw new Error('parameter "on" must be boolean!');
                    this.setTurnVideoReason(t), this.updateUserInfo({
                        video_on: e ? "1" : "0",
                        video_reason: t
                    }, S.UserState.UPDATE)
                }
            }, {
                key: "updateAudioStatus",
                value: function(e) {
                    var t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : S.SwitchReason.BYSELF;
                    if ("boolean" != typeof e) throw new Error('parameter "on" must be boolean!');
                    this.setTurnAudioReason(t), this.updateUserInfo({
                        audio_on: e ? "1" : "0",
                        audio_reason: t
                    }, S.UserState.UPDATE)
                }
            }, {
                key: "modifyNickname",
                value: function(e, t) {
                    this.xmpp_service.modifyNicknameRequest(this.meeting_id, e, t, this.getFromType())
                }
            }, {
                key: "getFromType",
                value: function() {
                    return this.isInMeetingRoom() ? S.ModifyUserInfoScene.Meeting_Room : this.isInWaitingRoom() ? S.ModifyUserInfoScene.Waiting_Room : (this.logger.report(3, "getFromType", "invalid meeting state: ".concat(this.getReadableXmppRoomState())), S.ModifyUserInfoScene.Meeting_Room)
                }
            }, {
                key: "kickout",
                value: function(e) {
                    this.xmpp_service.kickoutRequest(this.meeting_id, [e], 1)
                }
            }, {
                key: "startSummary",
                value: function() {
                    this.isDoingSummary || (this.isDoingSummary = !0, this.xmpp_service.summaryRequest(this.meeting_id, "start"))
                }
            }, {
                key: "stopSummary",
                value: function() {
                    this.isDoingSummary && this.xmpp_service.summaryRequest(this.meeting_id, "stop")
                }
            }, {
                key: "invite",
                value: function(e, t) {
                    4 !== e.length && 5 !== e.length || (e = "0086075586013388-".concat(e)), 0 !== e.search("0086") && (e = "0086".concat(e)), this.xmpp_service.inviteRequest(this.meeting_id, t, {
                        user_type: "2",
                        app_uid: e,
                        phone_number: e
                    })
                }
            }, {
                key: "cancelInvite",
                value: function(e) {
                    var t = this.inviteMap.get(e);
                    console.log("cancelInvite inviteInfo:", t), this.xmpp_service.cancelInviteRequest(this.meeting_id, t.invitee.phone_number, e)
                }
            }, {
                key: "queryUserStatus",
                value: function(e) {
                    this.xmpp_service.queryUserStatus(e)
                }
            }, {
                key: "queryMeetingSettings",
                value: function() {
                    this.xmpp_service.queryMeetingSettingsRequest(this.meeting_id)
                }
            }, {
                key: "queryMeetingUiCfg",
                value: function() {
                    this.xmpp_service.queryUiCfgRequest()
                }
            }, {
                key: "startMeetingPing",
                value: function(e) {
                    if (!this.isInMeeting()) throw new Error("can't start meeting ping if not in meeting");
                    if (0 !== e && 1 !== e) throw new Error("pingType must be specified either 0 or 1");
                    this.xmpp_service.startMeetingPing(this.meeting_id, e)
                }
            }, {
                key: "stopMeetingPing",
                value: function() {
                    this.xmpp_service.stopMeetingPing()
                }
            }, {
                key: "refreshMediaAuthInfo",
                value: function() {
                    this.xmpp_service.refreshMediaAuthInfo(this.meeting_id)
                }
            }, {
                key: "onRefreshMediaAuthInfo",
                value: function(e, t) {
                    this.logger.report(1, "in_meeting", "refresh_media_auth_info:", e, t), this.getEventHandler("refresh_media_auth_info")(e, t)
                }
            }, {
                key: "onQueryLocalPermission",
                value: function(e, t) {
                    this.logger.report(1, "in_meeting", "query_local_permission:", e, t), this.getEventHandler("query_local_permission")(e, t)
                }
            }, {
                key: "onSwitchLocalPermission",
                value: function(e, t) {
                    this.logger.report(1, "in_meeting", "switch_local_permission:", e, t), this.getEventHandler("switch_local_permission")(e, t)
                }
            }, {
                key: "onQueryUserStatusResponse",
                value: function(e, t) {
                    if (e) {
                        if ("object" === h(t.sender_data.queryParams) && Array.isArray(t.sender_data.queryParams.participation_status_list)) {
                            var n = t.sender_data.queryParams.participation_status_list;
                            n.sort();
                            if (function(e, t) {
                                    if (Array.isArray(e) && Array.isArray(t) && e.length === t.length) {
                                        for (var n = 0; n < e.length; ++n)
                                            if (e[n] !== t[n]) return !1;
                                        return !0
                                    }
                                    return !1
                                }([1, 6], n)) {
                                var i, r = o(t.user_list);
                                try {
                                    for (r.s(); !(i = r.n()).done;) {
                                        var s = i.value;
                                        if (s.participation_status != S.ParticipationStatus.HUNGUP || s.hangup_reason == S.HangupReason.DISACCEPT || s.hangup_reason == S.HangupReason.SYSTEM_HANGUP) {
                                            var a, u = o(this.inviteMap.keys());
                                            try {
                                                for (u.s(); !(a = u.n()).done;) {
                                                    var c = a.value;
                                                    this.inviteMap.get(c).invitee.phone_number === s.id.phone_number && this.inviteMap.delete(c)
                                                }
                                            } catch (e) {
                                                u.e(e)
                                            } finally {
                                                u.f()
                                            }
                                            this.inviteMap.set(s.invite_id, {
                                                invitee: s.id,
                                                inviter: s.inviter,
                                                nickname: s.nickname,
                                                invite_status: S.participationStatusToInviteStatus(s.participation_status)
                                            })
                                        }
                                    }
                                } catch (e) {
                                    r.e(e)
                                } finally {
                                    r.f()
                                }
                                this.getEventHandler("on_invitee_list")(!0, t)
                            }
                        }
                    }
                }
            }, {
                key: "onUserJoinCallBack",
                value: function(e, t) {
                    var n = this.getEventHandler("user_join");
                    if (e) {
                        t.user_list.sort((function(e) {
                            return e.associate_type === S.AssociateType.ASSOC_AUDIO_PSTN ? 1 : -1
                        }));
                        for (var i = t.user_list.length, r = 0; r < i; r++) {
                            var o = t.user_list[r],
                                s = this.formKeyById(o.id),
                                a = -1,
                                u = this.getUserById(o.id);
                            if (u && (a = u.members_seq, isNaN(a) && (this.logger.report(2, "meeting_user_controller", "[user_join]user who already existed should have contained a valid property named 'members_seq'. we set previous members_seq to -1 to make the new user_join affected. user:", u), a = -1)), isNaN(o.members_seq) && this.logger.report(2, "meeting_user_controller", "[user_join]user who is coming with user_join should have contained a valid property named 'members_seq'. But knut said on 21 Dec,2019 that maybe only the current user himself would like to contain this property in user_join push, the others wont. user:", o), a < 0 || !isNaN(o.members_seq) && a < o.members_seq) {
                                if (o.associate_type === S.AssociateType.ASSOC_AUDIO_PSTN) {
                                    var c = o.associator_id,
                                        l = this.formKeyById(c),
                                        d = this.userMap.get(l);
                                    d && (d.audio_on = o.audio_on, d.handsup = o.handsup, d.raise_hand = o.raise_hand, d.sub_associator = o.id), this.associatorMap.set(o.id.uid, l), this.logger.report(1, "meeting_user_controller", "".concat(o.uid, " join as associate of ").concat(c.uid));
                                    continue
                                }
                                o.keyString = s, o.isSelf = s === this.selfKey, o.online = !0, this.userMap.set(s, o)
                            }
                        }
                        n(e, t)
                    } else n(e, t)
                }
            }, {
                key: "onUserLeaveCallBack",
                value: function(e, t) {
                    this.logger.debug("MUC onUserLeaveCallBack!!");
                    var n = this.getEventHandler("user_leave");
                    if (e) {
                        for (var i = 0; i < t.user_list.length; i++) {
                            var r = t.user_list[i],
                                o = this.formKeyById(r.id);
                            this.userMap.delete(o), this.deleteAssociator(r.id)
                        }
                        n(e, t)
                    } else n(e, t)
                }
            }, {
                key: "onUserUpdateCallBack",
                value: function(e, t) {
                    var n = this.getEventHandler("user_update");
                    if (e) {
                        var i = function(e, t) {
                            for (var n = 0, i = ["audio_on", "audio_reason", "audio_pause", "handsup", "is_creator", "raise_hand", "is_host", "nickname", "share_on", "share_reason", "share_pause", "share_start_time", "allow_speak", "role_type", "video_on", "video_reason", "video_pause", "members_seq", "avatar_type", "avatar_token", "web_share_on", "web_share_reason"]; n < i.length; n++) {
                                var r = i[n];
                                t[r] && "" !== t[r] && (e[r] = t[r])
                            }
                            "" !== t.id.av_uid && (e.id.av_uid = t.id.av_uid)
                        };
                        t.user_list.sort((function(e) {
                            return e.associate_type === S.AssociateType.ASSOC_AUDIO_PSTN ? 1 : -1
                        }));
                        for (var r = t.user_list.length, o = 0; o < r; o++) {
                            var s = t.user_list[o],
                                a = this.getUserById(s.id);
                            if (a) {
                                var u = a.members_seq;
                                isNaN(u) && (this.logger.report(2, "meeting_user_controller", "[user_update]user who already existed should have contained a valid property named 'members_seq'. Perhaps it is caused by the first time he come with invalid 'members_seq' for the push 'user_join'(knut said that the others wont take the members_seq to the response against our join-meeting request, but the following who join meeting would).  user:", a), u = -1), isNaN(s.members_seq) && this.logger.report(3, "meeting_user_controller", "[user_update]user who is coming with user_update MUST have contained a valid property named 'members_seq'. user:", s), isNaN(u) || !isNaN(s.members_seq) && u < s.members_seq ? i(a, s) : this.logger.report(2, "meeting_user_controller", "[user_update]ignored because we are difficult to determine which one is more fresher for the previous and current one. current members_seq:", s.members_seq, ", previous members_seq:", u)
                            } else {
                                var c = this.formKeyById(s.id);
                                if (s.associate_type === S.AssociateType.ASSOC_AUDIO_PSTN) {
                                    var l = s.associator_id,
                                        d = this.formKeyById(l),
                                        h = this.userMap.get(d);
                                    h && (h.audio_on = s.audio_on, h.handsup = s.handsup, h.raise_hand = s.raise_hand, h.sub_associator = s.id), this.associatorMap.set(s.id.uid, d);
                                    continue
                                }
                                s.keyString = c, s.isSelf = c === this.selfKey, s.online = !0, this.userMap.set(c, s)
                            }
                        }
                        n(e, t)
                    } else n(e, t)
                }
            }, {
                key: "deleteAssociator",
                value: function(e) {
                    var t = this.associatorMap.get(e.uid);
                    if (t) {
                        var n = this.userMap.get(t);
                        n && (n.audio_on = "0", n.handsup = "0", n.raise_hand = "0", delete n.sub_associator), this.associatorMap.delete(e.uid)
                    }
                }
            }, {
                key: "onUserKickedCallBack",
                value: function(e, t) {
                    t && this.logger.report(1, "in_meeting", "user_kicked:", t);
                    var n = this.getEventHandler("user_kicked");
                    if (e) {
                        for (var i = 0; i < t.user_list.length; i++) {
                            var r = t.user_list[i],
                                o = this.formKeyById(r.id);
                            this.userMap.delete(o), this.deleteAssociator(r.id)
                        }
                        n(e, t)
                    } else n(e, t)
                }
            }, {
                key: "onUserOfflineCallBack",
                value: function(e, t) {
                    this.logger.report(1, "in_meeting", "user_offline:", e, t);
                    for (var n = 0; n < t.user_list.length; n++) {
                        var i = t.user_list[n],
                            r = this.getUserById(i.id);
                        r && (r.online = !1);
                        var o = this.formKeyById(i.id);
                        this.userMap.delete(o), this.deleteAssociator(i.id)
                    }
                    this.getEventHandler("user_offline")(e, t)
                }
            }, {
                key: "onChangeHostPush",
                value: function(e, t) {
                    var n = this.getEventHandler("change_host_push");
                    if (e) {
                        this.logger.report(1, "meeting_user_controller", "on push change_host:", t);
                        var i, r = o(this.userMap.values());
                        try {
                            for (r.s(); !(i = r.n()).done;) {
                                var s = i.value;
                                s.is_host = "0", s.id.uid === t.host.uid && s.id.app_id === t.host.app_id && s.id.user_type === t.host.user_type && (s.is_host = "1")
                            }
                        } catch (e) {
                            r.e(e)
                        } finally {
                            r.f()
                        }
                        var a = this.getSelfId();
                        a ? (a.uid === t.host.uid && a.app_id === t.host.app_id && (this.updateUserInfo({
                            audio_on: this.saved_user_audio_switch ? "1" : "0",
                            audio_reason: S.SwitchReason.BYSELF,
                            video_on: this.saved_user_video_switch ? "1" : "0",
                            video_reason: S.SwitchReason.BYSELF
                        }, S.UserState.UPDATE), this.handsUp(!1, [S.MediaType.AUDIO, S.MediaType.VIDEO])), n(e, t)) : this.logger.error("MUC.onChangeHostPush failed to get self id!")
                    } else n(e, t)
                }
            }, {
                key: "onHostStatusPush",
                value: function(e, t) {
                    var n = this.getEventHandler("host_status");
                    e ? (this.logger.report(1, "meeting_user_controller", "on push host_status:", t), n(e, t)) : n(e, t)
                }
            }, {
                key: "isEnterMeetingRoom",
                value: function(e) {
                    return e === S.EnterRoomType.MEMBER_MOVED_BY_HOST_FROM_WAITING_ROOM_TO_MEETING_ROOM
                }
            }, {
                key: "isLeaveWaitingRoom",
                value: function(e) {
                    return e === S.EnterRoomType.MEMBER_MOVED_BY_HOST_FROM_WAITING_ROOM_TO_OUTSIDE
                }
            }, {
                key: "isLeaveMeetingRoomToWaitingRoom",
                value: function(e) {
                    return e === S.EnterRoomType.MEMBER_MOVED_BY_HOST_FROM_MEETING_ROOM_TO_WAITING_ROOM
                }
            }, {
                key: "isMemberJoinedInWaitingRoom",
                value: function(e) {
                    return e === S.EnterRoomType.MEMBER_JOINED_IN_WAITING_ROOM
                }
            }, {
                key: "onWaitingUserStatusPush",
                value: function() {
                    var e = l(c.mark((function e(t, n) {
                        var i, r, o, s, a, u, l, d;
                        return c.wrap((function(e) {
                            for (;;) switch (e.prev = e.next) {
                                case 0:
                                    if (i = "", t && null !== n) {
                                        e.next = 6;
                                        break
                                    }
                                    this.logger.report(3, "waiting_user_status", "timeout: ".concat(t, ", ").concat(JSON.stringify(n))), i = "waiting_user_status_timeout", e.next = 47;
                                    break;
                                case 6:
                                    if (!((n.list || []).length < 1)) {
                                        e.next = 11;
                                        break
                                    }
                                    this.logger.report(3, "waiting_user_status", "bad response: ".concat(t, ", ").concat(JSON.stringify(n))), i = "waiting_user_status_bad_response", e.next = 47;
                                    break;
                                case 11:
                                    if (r = n.list, o = r[0].enter_room_type, s = this.isEnterMeetingRoom(r[0].enter_room_type), a = this.isLeaveWaitingRoom(r[0].enter_room_type), u = this.isLeaveMeetingRoomToWaitingRoom(r[0].enter_room_type), l = this.isMemberJoinedInWaitingRoom(o), !s) {
                                        e.next = 22;
                                        break
                                    }
                                    this.logger.report(1, "waiting_user_status", "host invites me to join meeting room :)"), i = "waiting_user_status_join_from_waiting_room", e.next = 47;
                                    break;
                                case 22:
                                    if (!a) {
                                        e.next = 28;
                                        break
                                    }
                                    this.logger.report(1, "waiting_user_status", "host asks me to leave waiting room :("), i = "waiting_user_status_leave_from_waiting_room", this.leaveXmppRoom({
                                        reason: S.LeaveReason.KICKED_BY_HOST
                                    }), e.next = 47;
                                    break;
                                case 28:
                                    if (!u) {
                                        e.next = 37;
                                        break
                                    }
                                    return this.logger.report(1, "waiting_user_status", "host asks me to leave meeting room, back to waiting room :("), i = "waiting_user_status_leave_for_waiting_room", e.next = 33, this.leaveMediaRoom({
                                        user_action: 1
                                    });
                                case 33:
                                    this.room_type !== S.RoomType.MEETING_ROOM ? this.logger.report(3, "waiting_user_status", "it should be in meeting room, but current room type: ".concat(this.room_type)) : (this.setRoomType(S.RoomType.WAITING_ROOM), this.stopMeetingPing(), this.startMeetingPing(S.RoomType.WAITING_ROOM)), this.logger.report(1, "waiting_user_status", "user has been moved from meeting-room to waiting-room."), e.next = 47;
                                    break;
                                case 37:
                                    if (!l) {
                                        e.next = 46;
                                        break
                                    }
                                    if (d = n.list[0], this.isSelf(d)) {
                                        e.next = 41;
                                        break
                                    }
                                    return e.abrupt("return");
                                case 41:
                                    n = d, i = "waiting_user_status_i_am_in", this.logger.report(1, "waiting_user_status", "member received s2c to determine his nickname in waiting room."), e.next = 47;
                                    break;
                                case 46:
                                    o === S.EnterRoomType.USER_STATUS_CHANGED_BY_SELF ? (i = "waiting_user_status_changed_by_self", n = n.list[0]) : o === S.EnterRoomType.USER_STATUS_CHANGED_BY_HOST ? (n = n.list[0], i = "waiting_user_status_changed_by_host") : (this.logger.report(3, "waiting_user_status", "unexpected 'enter_room_type' got: ".concat(r[0].enter_room_type)), i = "waiting_user_status_bad_response");
                                case 47:
                                    this.getEventHandler(i)(t, n);
                                case 49:
                                case "end":
                                    return e.stop()
                            }
                        }), e, this)
                    })));
                    return function(t, n) {
                        return e.apply(this, arguments)
                    }
                }()
            }, {
                key: "onSwitchUserRolePush",
                value: function(e, t) {
                    var n = this.getEventHandler("switch_user_role");
                    e ? (this.logger.report(1, "switch_user_role", "on push switch_user_role:", t), n(e, t)) : n(e, t)
                }
            }, {
                key: "onChangeCoHostPush",
                value: function(e, t) {
                    var n = this.getEventHandler("change_co_host_push");
                    if (e) {
                        this.logger.report(1, "meeting_user_controller", "on push change_co_host:", t);
                        var i, r = o(this.userMap.values());
                        try {
                            for (r.s(); !(i = r.n()).done;) {
                                var s = i.value;
                                s.id.uid === t.host.uid && s.id.app_id === t.host.app_id && s.id.user_type === t.host.user_type && (s.role_type = "1" == t.host.assign ? "2" : "3")
                            }
                        } catch (e) {
                            r.e(e)
                        } finally {
                            r.f()
                        }
                        var a = this.getSelfId();
                        a ? (a.uid === t.host.uid && a.app_id === t.host.app_id && (this.updateUserInfo({
                            audio_on: this.saved_user_audio_switch ? "1" : "0",
                            audio_reason: S.SwitchReason.BYSELF,
                            video_on: this.saved_user_video_switch ? "1" : "0",
                            video_reason: S.SwitchReason.BYSELF
                        }, S.UserState.UPDATE), this.handsUp(!1, [S.MediaType.AUDIO, S.MediaType.VIDEO])), n(e, t)) : this.logger.error("MUC.onChangeCoHostPush failed to get self id!")
                    } else n(e, t)
                }
            }, {
                key: "onSpotLightVideoChangedCallBack",
                value: function(e, t) {
                    this.getEventHandler("spot_light_video_changed")(e, t)
                }
            }, {
                key: "onHandsUpCompleteCallBack",
                value: function(e, t) {
                    this.getEventHandler("hands_up_complete")(e, t)
                }
            }, {
                key: "onNotifyHandsUpResult",
                value: function(e, t) {
                    this.logger.report(1, "meeting_user_controller", "notify_hands_up_result:", t), this.getEventHandler("notify_hands_up_result")(e, t)
                }
            }, {
                key: "onChangeHostCompleteCallBack",
                value: function(e, t) {
                    this.getEventHandler("change_host")(e, t)
                }
            }, {
                key: "onBreakoutRoomCallBack",
                value: function(e, t) {
                    this.getEventHandler("breakout_room_started")(e, t)
                }
            }, {
                key: "onRemoveUserCompleteCallBack",
                value: function(e, t) {}
            }, {
                key: "onSpotlightVideoCompleteCallBack",
                value: function(e, t) {
                    this.getEventHandler("spot_light_video_changed")(e, t)
                }
            }, {
                key: "onMuteAudioCompleteCallBack",
                value: function(e, t) {
                    this.getEventHandler("mute_audio_complete")(e, t)
                }
            }, {
                key: "onMuteAllAudioCompleteCallBack",
                value: function(e, t) {
                    this.getEventHandler("mute_all_audio_complete")(e, t)
                }
            }, {
                key: "onHandleHandsUpCallBack",
                value: function(e, t) {
                    this.getEventHandler("handle_hands_up")(e, t)
                }
            }, {
                key: "onMuteVideoCompleteCallBack",
                value: function(e, t) {
                    this.getEventHandler("mute_video_complete")(e, t)
                }
            }, {
                key: "onMuteAllVideoCompleteCallBack",
                value: function(e, t) {
                    this.getEventHandler("mute_all_video_complete")(e, t)
                }
            }, {
                key: "onUpdateUserInfoCallBack",
                value: function(e, t) {
                    this.getEventHandler("user_status")(e, t)
                }
            }, {
                key: "onModifyUserInfoCallBack",
                value: function(e, t) {
                    this.getEventHandler("modify_user_info")(e, t)
                }
            }, {
                key: "onLeaveMeetingCallBack",
                value: function(e, t) {
                    var n = this.getEventHandler("leave_meeting");
                    this.reset(), n(e, t), S.INSTANCE_ID === S.InstanceType.INSTANCE_WEB && this.rtc_service.leaveRoom()
                }
            }, {
                key: "onBackToWaitingRoomCallBack",
                value: function(e, t) {
                    this.logger.report(3, "assert", "should not reach here anymore")
                }
            }, {
                key: "onKickoutCallBack",
                value: function(e, t) {
                    this.getEventHandler("kickout")(e, t)
                }
            }, {
                key: "onKickedOutCallBack",
                value: function() {
                    var e = l(c.mark((function e(t, n) {
                        var i, r, o, s;
                        return c.wrap((function(e) {
                            for (;;) switch (e.prev = e.next) {
                                case 0:
                                    if (n.meetingId == this.meeting_id) {
                                        e.next = 2;
                                        break
                                    }
                                    return e.abrupt("return");
                                case 2:
                                    return this.logger.report(1, "meeting_user_controller", "been kicked out! data:", n), i = n.reasonCode, r = n.room_type, o = void 0 === r ? S.RoomType.MEETING_ROOM : r, this.isInMeetingRoom() || this.isInWaitingRoom() || this.logger.report(3, "assert", "user has been kicked out, but neither in meeting nor waiting room: ".concat(this.getReadableXmppRoomState())), s = {
                                        type: 4,
                                        reason: i,
                                        room_type: o
                                    }, e.next = 8, this.leaveMeetingFully(s);
                                case 8:
                                    this.getEventHandler("kicked_out")(t, n);
                                case 10:
                                case "end":
                                    return e.stop()
                            }
                        }), e, this)
                    })));
                    return function(t, n) {
                        return e.apply(this, arguments)
                    }
                }()
            }, {
                key: "onNotifyHandsupPushCallBack",
                value: function(e, t) {
                    this.getEventHandler("notify_hands_up_push")(e, t)
                }
            }, {
                key: "onTurnAudioCallBack",
                value: function(e, t) {
                    if (!e || !t) return this.logger.warn("MeetingUserController onTurnAudioCallBack failed. flag=", e, ", data=", t), void this.getEventHandler("turn_audio")(!1, t);
                    if (t.meeting_id == this.meeting_id) {
                        var n = {};
                        t.media_platform && (n.media_platform = t.media_platform);
                        var i, r = o(t.permission_list);
                        try {
                            for (r.s(); !(i = r.n()).done;) {
                                var s = i.value;
                                if (s.type === S.MediaType.AUDIO) return void this.getEventHandler("turn_audio")(!0, Object.assign(n, {
                                    status: "on",
                                    info: s
                                }))
                            }
                        } catch (e) {
                            r.e(e)
                        } finally {
                            r.f()
                        }
                        cb(!1, Object.assign(n, {
                            status: "off"
                        }))
                    } else this.logger.log("MeetingUserController onTurnAudioCallBack DIFFERENT meeting_id! data.meeting_id:", t.meeting_id, "self.meeting_id:", this.meeting_id)
                }
            }, {
                key: "onTurnVideoCallBack",
                value: function(e, t) {
                    if (!e || !t) return this.logger.warn("MeetingUserController onTurnVideoCallBack failed. flag=", e, ", data=", t), void this.getEventHandler("turn_video")(!1, t);
                    if (t.meeting_id == this.meeting_id) {
                        e && (this.saved_user_video_switch = !0);
                        var n = {};
                        t.media_platform && (n.media_platform = t.media_platform);
                        var i, r = this.getEventHandler("turn_video"),
                            s = o(t.permission_list);
                        try {
                            for (s.s(); !(i = s.n()).done;) {
                                var a = i.value;
                                if (a.type === S.MediaType.VIDEO) return void r(!0, Object.assign(n, {
                                    status: "on",
                                    info: a
                                }))
                            }
                        } catch (e) {
                            s.e(e)
                        } finally {
                            s.f()
                        }
                        r(!1, Object.assign(n, {
                            status: "off"
                        }))
                    } else this.logger.log("MeetingUserController onTurnVideoCallBack DIFFERENT meeting_id! data.meeting_id:", t.meeting_id, "self.meeting_id:", this.meeting_id)
                }
            }, {
                key: "onLogout",
                value: function(e, t) {
                    console.log("meeting_user_controller logout"), S.INSTANCE_ID === S.InstanceType.INSTANCE_WEB && this.rtc_service.leaveRoom(), this.reset()
                }
            }, {
                key: "onSummaryRequestCallBack",
                value: function(e, t) {
                    "start" === t.operation ? !1 === e && (this.isDoingSummary = !1) : "stop" === t.operation && !0 === e && (this.isDoingSummary = !1), this.getEventHandler("summary_request")(e, t)
                }
            }, {
                key: "onSummaryAudioUploadPush",
                value: function(e, t) {
                    console.log("meeting_user_controller onSummaryAudioUploadPush:", t), !1 !== e ? "start" === t.upload ? (this.uploadAudioToken = t.token, this.startRecorder()) : "stop" === t.upload && this.stopRecorder() : console.log("meeting_user_controller onSummaryAudioUploadPush flag false")
                }
            }, {
                key: "onSummaryMessagePush",
                value: function(e, t) {
                    this.getEventHandler("on_summary")(e, t)
                }
            }, {
                key: "startRecorder",
                value: function() {
                    var e = this;
                    console.debug("start recorder"), this.stopRecorder();
                    try {
                        this.mediaRecorder = new MediaRecorder(this.meetingVideoController.localStream)
                    } catch (e) {
                        return void console.log(e)
                    }
                    this.chunks = [], this.mediaRecorder.ondataavailable = function(t) {
                        e.chunks.push(t.data), console.log("chunk pushing data type:", h(t.data), ", constructor:", t.data.constructor.name), console.log("on recorder data available, evt:", t), e.fireRecordedAudioData()
                    }, this.mediaRecorder.onstop = function(t) {
                        e.fireRecordedAudioData()
                    }, console.debug("starting MediaRecorder"), this.mediaRecorder.start(), this.recordTimer = setInterval((function() {
                        e.mediaRecorder.requestData()
                    }), 200)
                }
            }, {
                key: "stopRecorder",
                value: function() {
                    if (void 0 !== this.mediaRecorder && this.mediaRecorder) try {
                        clearInterval(this.recordTimer), this.mediaRecorder.requestData(), this.mediaRecorder.stop(), this.mediaRecorder = null
                    } catch (e) {
                        console.log(e)
                    }
                }
            }, {
                key: "fireRecordedAudioData",
                value: function() {
                    var e = this,
                        t = new Blob(this.chunks, {
                            type: "audio/webm; codecs=opus"
                        }),
                        n = new FileReader;
                    n.addEventListener("loadend", (function() {
                        var t = n.result;
                        console.log("blob data:", t);
                        var i = btoa(String.fromCharCode.apply(null, new Uint8Array(t)));
                        console.log("base64 string:", i), e.getEventHandler("upload_audio_ready")(i)
                    })), n.readAsArrayBuffer(t), this.chunks = []
                }
            }, {
                key: "onRTCWebSocketClose",
                value: function(e) {
                    this.logger.report(1, "webrtc", "rtc_web_socket_close, data:", e), this.getEventHandler("rtc_web_socket_close")(!0, e)
                }
            }, {
                key: "onRTCRelayTimeout",
                value: function(e) {
                    this.logger.report(1, "webrtc", "rtc_relay_timeout, data:", e), this.getEventHandler("rtc_relay_timeout")(!0, e)
                }
            }, {
                key: "onRTCKickOut",
                value: function(e) {
                    this.logger.report(1, "webrtc", "rtc_kick_out, data:", e), this.getEventHandler("rtc_kick_out")(!0, e)
                }
            }, {
                key: "onInviteResponse",
                value: function(e, t) {
                    console.log("onInviteResponse:", t)
                }
            }, {
                key: "onCancelInviteResponse",
                value: function(e, t) {
                    console.log("onCancelInviteResponse:", t), e && this.inviteMap.delete(t.sender_data.inviteId)
                }
            }, {
                key: "onInviteEventPush",
                value: function(e, t) {
                    console.log("onInviteEventPush data:", t);
                    var n = parseInt(t.event_id);
                    switch (n) {
                        case S.InviteEvent.BEGIN_INVITE:
                        case S.InviteEvent.USER_FAIL:
                            var i, r = o(this.inviteMap.keys());
                            try {
                                for (r.s(); !(i = r.n()).done;) {
                                    var s = i.value;
                                    this.inviteMap.get(s).invitee.phone_number === t.invitee.phone_number && this.inviteMap.delete(s)
                                }
                            } catch (e) {
                                r.e(e)
                            } finally {
                                r.f()
                            }
                            this.inviteMap.set(t.invite_id, {
                                inviter: t.inviter,
                                invitee: t.invitee,
                                nickname: t.nickname,
                                invite_status: S.inviteEventToStatus(n)
                            });
                            break;
                        case S.InviteEvent.SUCC_ENTER:
                        case S.InviteEvent.INMEETING_HANGUP:
                        case S.InviteEvent.INVITER_CANCEL:
                            this.inviteMap.delete(t.invite_id)
                    }
                    this.getEventHandler("on_invite_event_push")(!0, t)
                }
            }, {
                key: "onMeetingSettings",
                value: function(e, t) {
                    if (e) {
                        var n, i = o(t.mediaSettingsList);
                        try {
                            for (i.s(); !(n = i.n()).done;) {
                                var r = n.value;
                                r.type === S.MediaType.AUDIO ? (void 0 !== r.allowUnmuteBySelf && (this.allowUnmuteBySelf = r.allowUnmuteBySelf, this.logger.report(1, "in_meeting", "onMeetingSettings setting this.allowUnmuteBySelf to:", this.allowUnmuteBySelf)), this.muteAll = !!r.muteAll, this.muteOnJoin = !!r.muteOnJoin) : r.type === S.MediaType.SCREEN_SHARE && (this.enableWatermark = 1 === r.watermark, this.multipleRowWatermark = r.multipleRowWatermark)
                            }
                        } catch (e) {
                            i.e(e)
                        } finally {
                            i.f()
                        }
                        t.hasOwnProperty("meetingLockSettings") && (this.meetingLocked = 1 === t.meetingLockSettings.meeting_lock), t.hasOwnProperty("hideMeetingCodePassword") && (this.hideMeetingCodePassword = 1 === t.hideMeetingCodePassword), t.hasOwnProperty("allow_open_video") && this.setIsAllowOpenVideo(t.allow_open_video), t.hasOwnProperty("allow_renaming") && this.setIsAllowRenaming(t.allow_renaming)
                    }
                    this.getEventHandler("query_meeting_settings")(e, t)
                }
            }, {
                key: "onMeetingUiCfg",
                value: function(e, t) {
                    e && t && t.hasOwnProperty("meeting_ability_pstn") && (this.meetingAbilityPstn = !1 !== t.meeting_ability_pstn), this.getEventHandler("query_ui_config")(e, t)
                }
            }, {
                key: "onNotifyMeetingSettingsUpdate",
                value: function(e, t) {
                    var n = this;
                    if (t.meetingId == this.meeting_id) {
                        var i, r = o(t.mediaSettingsList);
                        try {
                            for (r.s(); !(i = r.n()).done;) {
                                var s = i.value;
                                s.type === S.MediaType.AUDIO ? (void 0 !== s.allowUnmuteBySelf && (this.allowUnmuteBySelf = s.allowUnmuteBySelf), void 0 !== s.muteAll && (this.muteAll = s.muteAll), void 0 !== s.muteOnJoin && (this.muteOnJoin = s.muteOnJoin), S.INSTANCE_ID === S.InstanceType.INSTANCE_WEB && (s.muteAll ? this.meetingAudioController.enableAudio(!1).then((function(e) {
                                    n.saved_user_audio_switch = !1;
                                    var t = n.getSelfInfo();
                                    console.log("selfInfo:", t), "1" === t.audio_on && (n.mutedBySelf = !1), n.updateAudioStatus(!1, S.SwitchReason.BYHOST)
                                })).catch((function(e) {})) : this.mutedBySelf || this.meetingAudioController.enableAudio(!0).then((function(e) {
                                    n.saved_user_audio_switch = !0, n.updateAudioStatus(!0, S.SwitchReason.BYHOST)
                                })).catch((function(e) {})))) : s.type === S.MediaType.SCREEN_SHARE && (this.enableWatermark = 1 === s.watermark, this.multipleRowWatermark = s.multipleRowWatermark)
                            }
                        } catch (e) {
                            r.e(e)
                        } finally {
                            r.f()
                        }
                        t.hasOwnProperty("meetingLockSettings") && (this.meetingLocked = 1 === t.meetingLockSettings.meeting_lock), t.hasOwnProperty("hideMeetingCodePassword") && (this.hideMeetingCodePassword = 1 === t.hideMeetingCodePassword), t.hasOwnProperty("allow_open_video") && this.setIsAllowOpenVideo(t.allow_open_video), t.hasOwnProperty("allow_renaming") && this.setIsAllowRenaming(t.allow_renaming), this.getEventHandler("notify_meeting_settings_update")(!0, t)
                    }
                }
            }, {
                key: "onNotifySwitchMediaStream",
                value: function(e, t) {
                    var n = this,
                        i = this.getEventHandler("notify_switch_media_stream");
                    if (t.meetingId != this.meeting_id) return this.logger.report(1, "meeting_user_controller", "meeting id must match in onNotifySwitchMediaStream: internal meeting id=".concat(this.meeting_id, ", got meeting id=").concat(t.meetingId, "."), "fired with:", e, t), void i(!1, t);
                    var r = t.type === S.MediaType.AUDIO && t.reason === S.SwitchStreamReason.OPERATED_BY_HOST,
                        s = t.type === S.MediaType.VIDEO && t.reason === S.SwitchStreamReason.OPERATED_BY_HOST;
                    if (!r && !s) return this.logger.report(1, "meeting_user_controller", "onNotifySwitchMediaStream invoked but neither audio nor video operated by host."), void i(!1, t);
                    if (S.INSTANCE_ID === S.InstanceType.INSTANCE_WEB) {
                        var a = 0 === t.upStreamOn;
                        r && (this.logger.report(1, "meeting_user_controller", "onNotifySwitchMediaStream invoked: ".concat(a ? "turn off audio" : "turn on audio")), a ? this.meetingAudioController.enableAudio(!1).then((function(e) {
                            n.saved_user_audio_switch = !1, n.mutedBySelf = !1, n.updateAudioStatus(!1, S.SwitchReason.BYHOST)
                        })).catch((function(e) {
                            n.logger.report(1, "meeting_user_controller", "onNotifySwitchMediaStream invoked, turn off audio failed", e)
                        })) : this.xmpp_service.turnAudioRequest({
                            meeting_id: this.meeting_id,
                            succCallBack: function(e) {
                                var t, i = o(e.permission_list);
                                try {
                                    for (i.s(); !(t = i.n()).done;) {
                                        var r = t.value;
                                        r.type === S.MediaType.AUDIO && (r.limitState === S.LimitState.NO_LIMIT ? n.meetingAudioController.enableAudio(!0).then((function(e) {
                                            n.saved_user_audio_switch = !0, n.updateAudioStatus(!0, S.SwitchReason.BYHOST)
                                        })).catch((function(e) {
                                            n.logger.report(1, "meeting_user_controller", "onNotifySwitchMediaStream invoked, turn on audio failed", e)
                                        })) : n.logger.report(1, "meeting_user_controller", "onNotifySwitchMediaStream invoked, turn on audio failed since limitState it not as expected: ", r.limitState))
                                    }
                                } catch (e) {
                                    i.e(e)
                                } finally {
                                    i.f()
                                }
                            },
                            failCallback: function(e) {
                                n.logger.report(1, "meeting_user_controller", "onNotifySwitchMediaStream invoked, turnAudioRequest failed", e)
                            }
                        })), s && (this.logger.report(1, "meeting_user_controller", "onNotifySwitchMediaStream invoked: ".concat(a ? "turn off video" : "turn on video")), a ? this.meetingVideoController.enableVideo(!1).then((function(e) {
                            n.saved_user_video_switch = !1, n.updateVideoStatus(!1, S.SwitchReason.BYHOST)
                        })).catch((function(e) {
                            n.logger.report(1, "meeting_user_controller", "onNotifySwitchMediaStream invoked, turn off video failed", e)
                        })) : this.logger.report(1, "meeting_user_controller", "onNotifySwitchMediaStream invoked, turn on video failed since NOT SUPPORTED YET", errData))
                    }
                    i(!0, t)
                }
            }, {
                key: "onNotifyJoinAudioMixUserInfo",
                value: function(e, t) {
                    var n = this;
                    if (t.meetingId != this.meeting_id) return !1;
                    var i = t.infoList;
                    i = i.forEach((function() {
                        var e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {},
                            t = e.user,
                            i = t.app_uid,
                            o = n.associatorMap.has(i) ? n.associatorMap.get(i) : void 0;
                        if (o) {
                            var s = n.userMap.get(o),
                                a = r({}, s.id);
                            a.app_uid = a.uid, delete a.uid, e.user = a
                        }
                    })), this.getEventHandler("notify_join_audio_mix_user_info")(!0, t)
                }
            }, {
                key: "onMeetingWillLimited",
                value: function(e, t) {
                    if (t.meeting_id != this.meeting_id) return console.error("onMeetingWillLimited callback returns false since meeting_id is not same as we saved, ours:", this.meeting_id, ", got_from_server:", t.meeting_id), !1;
                    this.getEventHandler("meeting_will_limited")(!0, t)
                }
            }, {
                key: "checkLocalPermission",
                value: function(e) {
                    return this.isInMeeting() ? (this.logger.report(1, "meeting_user_controller", "check local permission, meeting_id=".concat(this.meeting_id, ", permisson_type=").concat(e)), this.xmpp_service.queryLocalPermission(this.meeting_id, e), !0) : (this.logger.error("checkLocalPermission failed: not in meeting"), !1)
                }
            }, {
                key: "checkLocalPermissionOnRecord",
                value: function() {
                    this.checkLocalPermission(S.LocalPermissionType.LOCAL_RECORD)
                }
            }, {
                key: "onCloudRecordStatePush",
                value: function(e, t) {
                    var n = this.getEventHandler("cloud_record_state");
                    if ("function" != typeof n && (console.warn("did you miss to register 'cloud_record_state' to meeting_user_controller?"), n = function() {}), !e || !t) return console.error("onCloudRecordStatePush: ", e, t), void n(!1, t);
                    this.cloudRecordStateChange(t.state), n(!0, t)
                }
            }, {
                key: "queryUserSig",
                value: function() {
                    return this.xmpp_service.queryUserSig(), !0
                }
            }, {
                key: "onQueryUserSigCallBack",
                value: function(e, t) {
                    this.getEventHandler("query_user_sig")(e, t)
                }
            }, {
                key: "onMeetingNotice",
                value: function(e, t) {
                    this.getEventHandler("meeting_notice")(e, t)
                }
            }, {
                key: "queryMeetingNotice",
                value: function() {
                    return this.xmpp_service.queryMeetingNotice(this.meeting_id)
                }
            }, {
                key: "readMeetingNotice",
                value: function(e) {
                    return this.xmpp_service.readMeetingNotice(this.meeting_id, e)
                }
            }], [{
                key: "getInstance",
                value: function() {
                    return void 0 === t.prototype.instance && (t.prototype.instance = new t), t.prototype.instance
                }
            }]), t
        }(T);
        e.exports = N
    }, function(t, n, i) {
        var r = i(24)();
        t.exports = r;
        try {
            regeneratorRuntime = r
        } catch (t) {
            "object" == ("undefined" == typeof globalThis ? "undefined" : e(globalThis)) ? globalThis.regeneratorRuntime = r: Function("r", "regeneratorRuntime = r")(r)
        }
    }, function(e, t, n) {
        function i() {
            function t(e, t, n) {
                return Object.defineProperty(e, t, {
                    value: n,
                    enumerable: !0,
                    configurable: !0,
                    writable: !0
                }), e[t]
            }

            function n(e, t, n, i) {
                var r = t && t.prototype instanceof s ? t : s,
                    a = Object.create(r.prototype),
                    u = new p(i || []);
                return a._invoke = function(e, t, n) {
                    var i = "suspendedStart";
                    return function(r, s) {
                        if ("executing" === i) throw new Error("Generator is already running");
                        if ("completed" === i) {
                            if ("throw" === r) throw s;
                            return {
                                value: void 0,
                                done: !0
                            }
                        }
                        for (n.method = r, n.arg = s;;) {
                            var a = n.delegate;
                            if (a) {
                                var u = d(a, n);
                                if (u) {
                                    if (u === R) continue;
                                    return u
                                }
                            }
                            if ("next" === n.method) n.sent = n._sent = n.arg;
                            else if ("throw" === n.method) {
                                if ("suspendedStart" === i) throw i = "completed", n.arg;
                                n.dispatchException(n.arg)
                            } else "return" === n.method && n.abrupt("return", n.arg);
                            i = "executing";
                            var c = o(e, t, n);
                            if ("normal" === c.type) {
                                if (i = n.done ? "completed" : "suspendedYield", c.arg === R) continue;
                                return {
                                    value: c.arg,
                                    done: n.done
                                }
                            }
                            "throw" === c.type && (i = "completed", n.method = "throw", n.arg = c.arg)
                        }
                    }
                }(e, n, u), a
            }

            function o(e, t, n) {
                try {
                    return {
                        type: "normal",
                        arg: e.call(t, n)
                    }
                } catch (e) {
                    return {
                        type: "throw",
                        arg: e
                    }
                }
            }

            function s() {}

            function a() {}

            function u() {}

            function c(e) {
                ["next", "throw", "return"].forEach((function(n) {
                    t(e, n, (function(e) {
                        return this._invoke(n, e)
                    }))
                }))
            }

            function l(e, t) {
                function n(i, s, a, u) {
                    var c = o(e[i], e, s);
                    if ("throw" !== c.type) {
                        var l = c.arg,
                            d = l.value;
                        return d && "object" == r(d) && y.call(d, "__await") ? t.resolve(d.__await).then((function(e) {
                            n("next", e, a, u)
                        }), (function(e) {
                            n("throw", e, a, u)
                        })) : t.resolve(d).then((function(e) {
                            l.value = e, a(l)
                        }), (function(e) {
                            return n("throw", e, a, u)
                        }))
                    }
                    u(c.arg)
                }
                var i;
                this._invoke = function(e, r) {
                    function o() {
                        return new t((function(t, i) {
                            n(e, r, t, i)
                        }))
                    }
                    return i = i ? i.then(o, o) : o()
                }
            }

            function d(e, t) {
                var n = e.iterator[t.method];
                if (void 0 === n) {
                    if (t.delegate = null, "throw" === t.method) {
                        if (e.iterator.return && (t.method = "return", t.arg = void 0, d(e, t), "throw" === t.method)) return R;
                        t.method = "throw", t.arg = new TypeError("The iterator does not provide a 'throw' method")
                    }
                    return R
                }
                var i = o(n, e.iterator, t.arg);
                if ("throw" === i.type) return t.method = "throw", t.arg = i.arg, t.delegate = null, R;
                var r = i.arg;
                return r ? r.done ? (t[e.resultName] = r.value, t.next = e.nextLoc, "return" !== t.method && (t.method = "next", t.arg = void 0), t.delegate = null, R) : r : (t.method = "throw", t.arg = new TypeError("iterator result is not an object"), t.delegate = null, R)
            }

            function h(e) {
                var t = {
                    tryLoc: e[0]
                };
                1 in e && (t.catchLoc = e[1]), 2 in e && (t.finallyLoc = e[2], t.afterLoc = e[3]), this.tryEntries.push(t)
            }

            function _(e) {
                var t = e.completion || {};
                t.type = "normal", delete t.arg, e.completion = t
            }

            function p(e) {
                this.tryEntries = [{
                    tryLoc: "root"
                }], e.forEach(h, this), this.reset(!0)
            }

            function g(e) {
                if (e) {
                    var t = e[b];
                    if (t) return t.call(e);
                    if ("function" == typeof e.next) return e;
                    if (!isNaN(e.length)) {
                        var n = -1,
                            i = function t() {
                                for (; ++n < e.length;)
                                    if (y.call(e, n)) return t.value = e[n], t.done = !1, t;
                                return t.value = void 0, t.done = !0, t
                            };
                        return i.next = i
                    }
                }
                return {
                    next: m
                }
            }

            function m() {
                return {
                    value: void 0,
                    done: !0
                }
            }
            e.exports = i = function() {
                return f
            }, e.exports.__esModule = !0, e.exports.default = e.exports;
            var f = {},
                v = Object.prototype,
                y = v.hasOwnProperty,
                S = "function" == typeof Symbol ? Symbol : {},
                b = S.iterator || "@@iterator",
                E = S.asyncIterator || "@@asyncIterator",
                w = S.toStringTag || "@@toStringTag";
            try {
                t({}, "")
            } catch (e) {
                t = function(e, t, n) {
                    return e[t] = n
                }
            }
            f.wrap = n;
            var R = {},
                k = {};
            t(k, b, (function() {
                return this
            }));
            var T = Object.getPrototypeOf,
                N = T && T(T(g([])));
            N && N !== v && y.call(N, b) && (k = N);
            var I = u.prototype = s.prototype = Object.create(k);
            return a.prototype = u, t(I, "constructor", u), t(u, "constructor", a), a.displayName = t(u, w, "GeneratorFunction"), f.isGeneratorFunction = function(e) {
                var t = "function" == typeof e && e.constructor;
                return !!t && (t === a || "GeneratorFunction" === (t.displayName || t.name))
            }, f.mark = function(e) {
                return Object.setPrototypeOf ? Object.setPrototypeOf(e, u) : (e.__proto__ = u, t(e, w, "GeneratorFunction")), e.prototype = Object.create(I), e
            }, f.awrap = function(e) {
                return {
                    __await: e
                }
            }, c(l.prototype), t(l.prototype, E, (function() {
                return this
            })), f.AsyncIterator = l, f.async = function(e, t, i, r, o) {
                void 0 === o && (o = Promise);
                var s = new l(n(e, t, i, r), o);
                return f.isGeneratorFunction(t) ? s : s.next().then((function(e) {
                    return e.done ? e.value : s.next()
                }))
            }, c(I), t(I, w, "Generator"), t(I, b, (function() {
                return this
            })), t(I, "toString", (function() {
                return "[object Generator]"
            })), f.keys = function(e) {
                var t = [];
                for (var n in e) t.push(n);
                return t.reverse(),
                    function n() {
                        for (; t.length;) {
                            var i = t.pop();
                            if (i in e) return n.value = i, n.done = !1, n
                        }
                        return n.done = !0, n
                    }
            }, f.values = g, p.prototype = {
                constructor: p,
                reset: function(e) {
                    if (this.prev = 0, this.next = 0, this.sent = this._sent = void 0, this.done = !1, this.delegate = null, this.method = "next", this.arg = void 0, this.tryEntries.forEach(_), !e)
                        for (var t in this) "t" === t.charAt(0) && y.call(this, t) && !isNaN(+t.slice(1)) && (this[t] = void 0)
                },
                stop: function() {
                    this.done = !0;
                    var e = this.tryEntries[0].completion;
                    if ("throw" === e.type) throw e.arg;
                    return this.rval
                },
                dispatchException: function(e) {
                    function t(t, i) {
                        return o.type = "throw", o.arg = e, n.next = t, i && (n.method = "next", n.arg = void 0), !!i
                    }
                    if (this.done) throw e;
                    for (var n = this, i = this.tryEntries.length - 1; i >= 0; --i) {
                        var r = this.tryEntries[i],
                            o = r.completion;
                        if ("root" === r.tryLoc) return t("end");
                        if (r.tryLoc <= this.prev) {
                            var s = y.call(r, "catchLoc"),
                                a = y.call(r, "finallyLoc");
                            if (s && a) {
                                if (this.prev < r.catchLoc) return t(r.catchLoc, !0);
                                if (this.prev < r.finallyLoc) return t(r.finallyLoc)
                            } else if (s) {
                                if (this.prev < r.catchLoc) return t(r.catchLoc, !0)
                            } else {
                                if (!a) throw new Error("try statement without catch or finally");
                                if (this.prev < r.finallyLoc) return t(r.finallyLoc)
                            }
                        }
                    }
                },
                abrupt: function(e, t) {
                    for (var n = this.tryEntries.length - 1; n >= 0; --n) {
                        var i = this.tryEntries[n];
                        if (i.tryLoc <= this.prev && y.call(i, "finallyLoc") && this.prev < i.finallyLoc) {
                            var r = i;
                            break
                        }
                    }
                    r && ("break" === e || "continue" === e) && r.tryLoc <= t && t <= r.finallyLoc && (r = null);
                    var o = r ? r.completion : {};
                    return o.type = e, o.arg = t, r ? (this.method = "next", this.next = r.finallyLoc, R) : this.complete(o)
                },
                complete: function(e, t) {
                    if ("throw" === e.type) throw e.arg;
                    return "break" === e.type || "continue" === e.type ? this.next = e.arg : "return" === e.type ? (this.rval = this.arg = e.arg, this.method = "return", this.next = "end") : "normal" === e.type && t && (this.next = t), R
                },
                finish: function(e) {
                    for (var t = this.tryEntries.length - 1; t >= 0; --t) {
                        var n = this.tryEntries[t];
                        if (n.finallyLoc === e) return this.complete(n.completion, n.afterLoc), _(n), R
                    }
                },
                catch: function(e) {
                    for (var t = this.tryEntries.length - 1; t >= 0; --t) {
                        var n = this.tryEntries[t];
                        if (n.tryLoc === e) {
                            var i = n.completion;
                            if ("throw" === i.type) {
                                var r = i.arg;
                                _(n)
                            }
                            return r
                        }
                    }
                    throw new Error("illegal catch attempt")
                },
                delegateYield: function(e, t, n) {
                    return this.delegate = {
                        iterator: g(e),
                        resultName: t,
                        nextLoc: n
                    }, "next" === this.method && (this.arg = void 0), R
                }
            }, f
        }
        var r = n(9).default;
        e.exports = i, e.exports.__esModule = !0, e.exports.default = e.exports
    }, function(e, t) {
        function n(e, t, n, i, r, o, s) {
            try {
                var a = e[o](s),
                    u = a.value
            } catch (e) {
                return void n(e)
            }
            a.done ? t(u) : Promise.resolve(u).then(i, r)
        }
        e.exports = function(e) {
            return function() {
                var t = this,
                    i = arguments;
                return new Promise((function(r, o) {
                    function s(e) {
                        n(u, r, o, s, a, "next", e)
                    }

                    function a(e) {
                        n(u, r, o, s, a, "throw", e)
                    }
                    var u = e.apply(t, i);
                    s(void 0)
                }))
            }
        }, e.exports.__esModule = !0, e.exports.default = e.exports
    }, function(e, t, n) {
        var i = n(27),
            r = n(28),
            o = n(29),
            s = n(31);
        e.exports = function(e, t) {
            return i(e) || r(e, t) || o(e, t) || s()
        }, e.exports.__esModule = !0, e.exports.default = e.exports
    }, function(e, t) {
        e.exports = function(e) {
            if (Array.isArray(e)) return e
        }, e.exports.__esModule = !0, e.exports.default = e.exports
    }, function(e, t) {
        e.exports = function(e, t) {
            var n = null == e ? null : "undefined" != typeof Symbol && e[Symbol.iterator] || e["@@iterator"];
            if (null != n) {
                var i, r, o = [],
                    s = !0,
                    a = !1;
                try {
                    for (n = n.call(e); !(s = (i = n.next()).done) && (o.push(i.value), !t || o.length !== t); s = !0);
                } catch (e) {
                    a = !0, r = e
                } finally {
                    try {
                        s || null == n.return || n.return()
                    } finally {
                        if (a) throw r
                    }
                }
                return o
            }
        }, e.exports.__esModule = !0, e.exports.default = e.exports
    }, function(e, t, n) {
        var i = n(30);
        e.exports = function(e, t) {
            if (e) {
                if ("string" == typeof e) return i(e, t);
                var n = Object.prototype.toString.call(e).slice(8, -1);
                return "Object" === n && e.constructor && (n = e.constructor.name), "Map" === n || "Set" === n ? Array.from(e) : "Arguments" === n || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n) ? i(e, t) : void 0
            }
        }, e.exports.__esModule = !0, e.exports.default = e.exports
    }, function(e, t) {
        e.exports = function(e, t) {
            (null == t || t > e.length) && (t = e.length);
            for (var n = 0, i = new Array(t); n < t; n++) i[n] = e[n];
            return i
        }, e.exports.__esModule = !0, e.exports.default = e.exports
    }, function(e, t) {
        e.exports = function() {
            throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")
        }, e.exports.__esModule = !0, e.exports.default = e.exports
    }, function(e, t, n) {
        function i(e) {
            var t = function() {
                if ("undefined" == typeof Reflect || !Reflect.construct) return !1;
                if (Reflect.construct.sham) return !1;
                if ("function" == typeof Proxy) return !0;
                try {
                    return Date.prototype.toString.call(Reflect.construct(Date, [], (function() {}))), !0
                } catch (e) {
                    return !1
                }
            }();
            return function() {
                var n, i = c(e);
                if (t) {
                    var r = c(this).constructor;
                    n = Reflect.construct(i, arguments, r)
                } else n = i.apply(this, arguments);
                return u(this, n)
            }
        }
        var r = n(9),
            o = n(2),
            s = n(3),
            a = n(6),
            u = n(8),
            c = n(10),
            l = (n(11), n(12)),
            d = function(e) {
                function t() {
                    var e;
                    return o(this, t), (e = n.call(this)).logger = new l, e.RTC = null, e.eventListenersMap = new Map, e.savedAudioOn = !0, e.savedVideoOn = !0, e.muteAudioFlag = !1, e
                }
                a(t, e);
                var n = i(t);
                return s(t, [{
                    key: "canSupportRTC",
                    value: function() {
                        return WebRTCAPI.fn.detectRTC().support
                    }
                }, {
                    key: "initWebRtc",
                    value: function(e) {
                        var t = this;
                        if (void 0 === e) return this.logger.error("there is no init para info"), !1;
                        this.savedAudioOn = e.is_enable_audio, this.savedVideoOn = e.is_enable_video, this.RTC = new WebRTCAPI({
                            useCloud: 0,
                            userId: e.user_id,
                            sdkAppId: e.sdk_appid,
                            accountType: e.account_type,
                            userSig: e.user_sig,
                            audio: this.savedAudioOn,
                            video: this.savedVideoOn,
                            closeLocalMedia: !1
                        }, (function(e) {
                            t.logger.info("init WebRTC success"), t.getEventHandler("init")(!0, e)
                        }), (function(e) {
                            t.logger.info("init WebRTC failed"), t.getEventHandler("init")(!1, e)
                        })), this.RTC.on("onErrorNotify", (function(e) {
                            t.getEventHandler("on_rtc_error_notify")(e)
                        }))
                    }
                }, {
                    key: "enterRoom",
                    value: function(e) {
                        var t = this;
                        if (!this.RTC) return !1;
                        if (void 0 === e) return this.logger.error("there is no room para info"), !1;
                        console.log("webrtc_service calling this.RTC.enterRoom, with room_param:", e);
                        var n = {
                            roomid: Number(e.room_id),
                            privateMapKey: e.private_key,
                            role: e.role,
                            pstnBizType: 1e3
                        };
                        return this.logger.report(1, "webrtc", "enter room with option:", n), this.RTC.enterRoom(n, (function() {
                            t.listenRTCEvent(), t.getEventHandler("create_room")(!0), t.logger.info("enter room success")
                        }), (function(e) {
                            t.getEventHandler("create_room")(!1, e), t.logger.info("enter room failed")
                        })), !0
                    }
                }, {
                    key: "leaveRoom",
                    value: function() {
                        var e = this;
                        return !!this.RTC && (this.stopRTC(), this.RTC.quit((function() {
                            e.getEventHandler("leave_room")(!0, {
                                msg: "leave room success"
                            }), e.logger.info("leave room success")
                        }), (function() {
                            e.getEventHandler("leave_room")(!1, {
                                msg: "leave room fail"
                            }), e.logger.info("leave room fail")
                        })), !0)
                    }
                }, {
                    key: "listenRTCEvent",
                    value: function() {
                        var e = this;
                        this.RTC.on("onLocalStreamAdd", (function(t) {
                            e.muteAudioFlag && (e.muteAudioFlag = !1, e.closeAudio()), e.getEventHandler("local_stream_add")(t)
                        })), this.RTC.on("onRemoteStreamUpdate", (function(t) {
                            e.logger.report(1, "webrtc", "remote_stream_update:", t), e.getEventHandler("remote_stream_update")(t)
                        })), this.RTC.on("onRemoteStreamRemove", (function(t) {
                            e.logger.report(1, "webrtc", "remote_stream_remove:", t), e.getEventHandler("remote_stream_remove")(t)
                        })), this.RTC.on("onWebSocketClose", (function(t) {
                            e.getEventHandler("rtc_web_socket_close")(t)
                        })), this.RTC.on("onRelayTimeout", (function(t) {
                            e.getEventHandler("rtc_relay_timeout")(t)
                        })), this.RTC.on("onKickout", (function(t) {
                            e.getEventHandler("rtc_kick_out")(t)
                        }))
                    }
                }, {
                    key: "startRTC",
                    value: function() {
                        var e;
                        return this.RTC ? (e = this.RTC).startRTC.apply(e, arguments) : null
                    }
                }, {
                    key: "stopRTC",
                    value: function() {
                        var e;
                        return this.RTC ? (e = this.RTC).stopRTC.apply(e, arguments) : null
                    }
                }, {
                    key: "getLocalStream",
                    value: function() {
                        var e;
                        return (e = this.RTC).getLocalStream.apply(e, arguments)
                    }
                }, {
                    key: "restartRTC",
                    value: function(e, t, n) {
                        var i = this;
                        if ("object" !== r(e)) throw new Error("option should be an object");
                        if ("boolean" != typeof e.video) throw new Error("option.video should be a boolean");
                        if ("boolean" != typeof e.audio) throw new Error("option.audio should be a boolean");
                        this.stopRTC({}, (function() {
                            i.getLocalStream(e, (function(e) {
                                i.startRTC({
                                    role: "user",
                                    stream: e.stream
                                }), "function" == typeof t && t()
                            }), (function(e) {
                                "function" == typeof n && n(e)
                            }))
                        }), (function() {
                            console.log("stopRTC end, in restartRTC, option:", e), "function" == typeof n && n()
                        }))
                    }
                }, {
                    key: "closeAudio",
                    value: function() {
                        return this.RTC.closeAudio(), !0
                    }
                }, {
                    key: "openAudio",
                    value: function() {
                        return this.RTC.openAudio(), !0
                    }
                }, {
                    key: "closeVideo",
                    value: function() {
                        return this.RTC.closeVideo(), !0
                    }
                }, {
                    key: "openVideo",
                    value: function() {
                        return this.RTC.openVideo(), !0
                    }
                }, {
                    key: "getLocalMediaStatus",
                    value: function() {
                        return this.RTC.getLocalMediaStatus()
                    }
                }, {
                    key: "changeSpearRole",
                    value: function(e) {
                        return this.RTC.changeSpearRole(e), !0
                    }
                }, {
                    key: "getVideoDevices",
                    value: function() {
                        var e = this;
                        if (!this.RTC) throw new Error("RTC not initialized!");
                        return this.RTC.getVideoDevices((function(t) {
                            e.getEventHandler("get_video_device")(t)
                        })), !0
                    }
                }, {
                    key: "chooseVideoDevice",
                    value: function(e) {
                        if (!this.RTC) throw new Error("RTC not initialized!");
                        return this.RTC.chooseVideoDevice(e), !0
                    }
                }, {
                    key: "getAudioDevices",
                    value: function() {
                        var e = this;
                        if (!this.RTC) throw new Error("RTC not initialized!");
                        return this.RTC.getAudioDevices((function(t) {
                            e.getEventHandler("get_audio_device")(t)
                        })), !0
                    }
                }, {
                    key: "chooseAudioDevice",
                    value: function(e) {
                        return this.RTC.chooseAudioDevice(e), !0
                    }
                }, {
                    key: "soundMeter",
                    value: function(e) {
                        return WebRTCAPI.SoundMeter(e)
                    }
                }], [{
                    key: "getInstance",
                    value: function() {
                        return void 0 === t.prototype.instance && (t.prototype.instance = new t), t.prototype.instance
                    }
                }]), t
            }(n(20));
        e.exports = d
    }, function(e, t, n) {
        function i(e) {
            var t = function() {
                if ("undefined" == typeof Reflect || !Reflect.construct) return !1;
                if (Reflect.construct.sham) return !1;
                if ("function" == typeof Proxy) return !0;
                try {
                    return Date.prototype.toString.call(Reflect.construct(Date, [], (function() {}))), !0
                } catch (e) {
                    return !1
                }
            }();
            return function() {
                var n, i = c(e);
                if (t) {
                    var r = c(this).constructor;
                    n = Reflect.construct(i, arguments, r)
                } else n = i.apply(this, arguments);
                return u(this, n)
            }
        }
        var r = n(2),
            o = n(3),
            s = n(5),
            a = n(6),
            u = n(8),
            c = n(10),
            l = (n(11), n(12)),
            d = n(32),
            h = (n(34), n(14)),
            _ = function(e) {
                function t() {
                    var e;
                    r(this, t), (e = n.call(this)).logger = new l, e.xmpp_service = h.getInstance(), e.rtc_service = d.getInstance(), e.localStream = null, e.currentVideoDeviceIndex = 0, e.videoDevices = [], e.switchVideoDeviceTargetIndex = null, e.switchVideoDeviceRetryFlag = !1, e.onVideoComplete = e.onVideoComplete.bind(s(e)), e.onLocalStreamAdd = e.onLocalStreamAdd.bind(s(e)), e.onRemoteStreamAdd = e.onRemoteStreamAdd.bind(s(e)), e.onRemoteStreamRemove = e.onRemoteStreamRemove.bind(s(e));
                    var i = function(t) {
                        return e[t] = e[t].bind(s(e))
                    };
                    return i("enableVideo"), i("onGetVideoDevice"), i("onRTCErrorNotify"), e.listenEvent(), e
                }
                a(t, e);
                var n = i(t);
                return o(t, [{
                    key: "enableVideo",
                    value: function(e, t, n) {
                        var i = this;
                        return new Promise((function(r, o) {
                            e ? i.rtc_service.restartRTC({
                                video: !0,
                                audio: i.rtc_service.savedAudioOn
                            }, (function() {
                                i.rtc_service.savedVideoOn = !0, r(e), "function" == typeof t && t(!0)
                            }), (function(t) {
                                o({
                                    enable: e,
                                    error: t
                                }), "function" == typeof n && n(t)
                            })) : i.rtc_service.restartRTC({
                                video: !1,
                                audio: i.rtc_service.savedAudioOn
                            }, (function() {
                                i.rtc_service.savedVideoOn = !1, r(e), "function" == typeof t && t(!1)
                            }), (function(t) {
                                o({
                                    enable: e,
                                    error: t
                                }), "function" == typeof n && n(t)
                            }))
                        }))
                    }
                }, {
                    key: "start",
                    value: function() {
                        this.rtc_service.startRTC()
                    }
                }, {
                    key: "stop",
                    value: function() {
                        this.rtc_service.stopRTC({}, (function() {}))
                    }
                }, {
                    key: "getVideoDevices",
                    value: function() {
                        this.rtc_service.getVideoDevices()
                    }
                }, {
                    key: "switchVideoDevice",
                    value: function() {
                        0 !== this.videoDevices.length && (console.log("switchVideoDevice, currentVideoDeviceIndex:", this.currentVideoDeviceIndex), this.switchVideoDeviceTargetIndex = this.currentVideoDeviceIndex + 1, this.switchVideoDeviceTargetIndex >= this.videoDevices.length && (this.switchVideoDeviceTargetIndex = 0), console.log("use switchVideoDeviceTargetIndex:", this.switchVideoDeviceTargetIndex), console.log("setting device to be:", JSON.stringify(this.videoDevices[this.switchVideoDeviceTargetIndex])), this.rtc_service.chooseVideoDevice(this.videoDevices[this.switchVideoDeviceTargetIndex]))
                    }
                }, {
                    key: "onVideoComplete",
                    value: function(e, t) {
                        this.getEventHandler("video_complete")(e, t)
                    }
                }, {
                    key: "onLocalStreamAdd",
                    value: function(e) {
                        e.stream && !0 === e.stream.active && (this.getVideoDevices(), this.localStream = e.stream, this.getEventHandler("local_stream_add")(!0, e))
                    }
                }, {
                    key: "onRemoteStreamAdd",
                    value: function(e) {
                        e.stream && !0 === e.stream.active && this.getEventHandler("remote_stream_add")(!0, e)
                    }
                }, {
                    key: "onRemoteStreamRemove",
                    value: function(e) {
                        this.getEventHandler("remote_stream_remove")(!0, e)
                    }
                }, {
                    key: "onGetVideoDevice",
                    value: function(e) {
                        if (this.videoDevices = e, console.log("onGetVideoDevice:", JSON.stringify(this.videoDevices)), this.localStream && this.localStream.getVideoTracks) {
                            var t = this.localStream.getVideoTracks();
                            if (t.length > 0)
                                for (var n = 0; n < e.length; ++n)
                                    if (e[n].label === t[0].label) {
                                        console.log("setting currentVideoDeviceIndex to be:", n), this.currentVideoDeviceIndex !== n && (this.currentVideoDeviceIndex = n, this.switchVideoDeviceTargetIndex != n ? this.switchVideoDeviceRetryFlag ? this.switchVideoDeviceRetryFlag = !1 : (this.switchVideoDeviceRetryFlag = !0, this.switchVideoDevice()) : this.switchVideoDeviceRetryFlag = !1);
                                        break
                                    }
                        }
                        this.getEventHandler("get_video_device")(!0, e)
                    }
                }, {
                    key: "onRTCErrorNotify",
                    value: function(e) {
                        this.logger.report(1, "webrtc", "onRTCErrorNotify:", e), this.getEventHandler("on_rtc_error")(!0, e)
                    }
                }, {
                    key: "listenEvent",
                    value: function() {
                        this.xmpp_service.registerEventHandler("video_complete", this.onAudioComplete), this.rtc_service.registerEventHandler("get_video_device", this.onGetVideoDevice), this.rtc_service.registerEventHandler("local_stream_add", this.onLocalStreamAdd), this.rtc_service.registerEventHandler("remote_stream_update", this.onRemoteStreamAdd), this.rtc_service.registerEventHandler("remote_stream_remove", this.onRemoteStreamRemove), this.rtc_service.registerEventHandler("on_rtc_error_notify", this.onRTCErrorNotify)
                    }
                }], [{
                    key: "getInstance",
                    value: function() {
                        return void 0 === t.prototype.instance && (t.prototype.instance = new t), t.prototype.instance
                    }
                }]), t
            }(n(20));
        e.exports = _
    }, function(e, t, n) {
        function i(e) {
            var t = function() {
                if ("undefined" == typeof Reflect || !Reflect.construct) return !1;
                if (Reflect.construct.sham) return !1;
                if ("function" == typeof Proxy) return !0;
                try {
                    return Date.prototype.toString.call(Reflect.construct(Date, [], (function() {}))), !0
                } catch (e) {
                    return !1
                }
            }();
            return function() {
                var n, i = c(e);
                if (t) {
                    var r = c(this).constructor;
                    n = Reflect.construct(i, arguments, r)
                } else n = i.apply(this, arguments);
                return u(this, n)
            }
        }
        var r = n(2),
            o = n(3),
            s = n(5),
            a = n(6),
            u = n(8),
            c = n(10),
            l = (n(11), n(12)),
            d = n(32),
            h = n(14),
            _ = function(e) {
                function t() {
                    var e;
                    r(this, t), (e = n.call(this)).logger = new l, e.eventListenersMap = new Map, e.rtc_service = d.getInstance(), e.xmpp_service = h.getInstance(), e.currentAudioDeviceIndex = 0, e.audioDevices = [], e.switchAudioDevifceTargetIndex = null, e.switchAudioDeviceRetryFlag = !1, e.onAudioComplete = e.onAudioComplete.bind(s(e));
                    var i = function(t) {
                        return e[t] = e[t].bind(s(e))
                    };
                    return i("enableAudio"), i("onGetAudioDevice"), i("onLocalStreamAdd"), e.listenEvent(), e
                }
                a(t, e);
                var n = i(t);
                return o(t, [{
                    key: "enableAudio",
                    value: function(e) {
                        var t = this;
                        return new Promise((function(n, i) {
                            e ? t.rtc_service.savedAudioOn ? (t.rtc_service.openAudio(), n(e)) : t.rtc_service.restartRTC({
                                video: t.rtc_service.savedVideoOn,
                                audio: !0
                            }, (function() {
                                t.rtc_service.savedAudioOn = !0, t.rtc_service.openAudio(), n(e)
                            }), (function(t) {
                                i({
                                    enable: e,
                                    error: t
                                })
                            })) : (t.rtc_service.closeAudio(), n(e))
                        }))
                    }
                }, {
                    key: "onAudioComplete",
                    value: function(e, t) {
                        this.getEventHandler("audio_complete")(e, t)
                    }
                }, {
                    key: "enableSpeaker",
                    value: function(e, t) {}
                }, {
                    key: "getAudioDevices",
                    value: function() {
                        this.rtc_service.getAudioDevices()
                    }
                }, {
                    key: "switchAudioDevice",
                    value: function() {
                        0 !== this.audioDevices.length && (console.log("switchAudioDevice, currentAudioDeviceIndex:", this.currentAudioDeviceIndex), this.switchAudioDeviceTargetIndex = this.currentAudioDeviceIndex + 1, this.switchAudioDeviceTargetIndex >= this.audioDevices.length && (this.switchAudioDeviceTargetIndex = 0), console.log("use switchAudioDeviceTargetIndex:", this.switchAudioDeviceTargetIndex), console.log("setting device to be:", JSON.stringify(this.audioDevices[this.switchAudioDeviceTargetIndex])), this.rtc_service.chooseAudioDevice(this.audioDevices[this.switchAudioDeviceTargetIndex]))
                    }
                }, {
                    key: "onGetAudioDevice",
                    value: function(e) {
                        this.audioDevices = e, console.log("onGetAudioDevice:", this.audioDevices), console.log("onGetAudioDevice:", JSON.stringify(this.audioDevices)), this.getEventHandler("get_audio_device")(!0, e)
                    }
                }, {
                    key: "onLocalStreamAdd",
                    value: function(e) {
                        e.stream && !0 === e.stream.active && (this.getAudioDevices(), this.localStream = e.stream)
                    }
                }, {
                    key: "listenEvent",
                    value: function() {
                        this.xmpp_service.registerEventHandler("audio_complete", this.onAudioComplete), this.rtc_service.registerEventHandler("get_audio_device", this.onGetAudioDevice), this.rtc_service.registerEventHandler("local_stream_add", this.onLocalStreamAdd)
                    }
                }, {
                    key: "soundMeter",
                    value: function(e) {
                        return this.rtc_service.soundMeter(e)
                    }
                }], [{
                    key: "getInstance",
                    value: function() {
                        return void 0 === t.prototype.instance && (t.prototype.instance = new t), t.prototype.instance
                    }
                }]), t
            }(n(20));
        e.exports = _
    }, function(e, t, n) {
        function i(e) {
            var t = function() {
                if ("undefined" == typeof Reflect || !Reflect.construct) return !1;
                if (Reflect.construct.sham) return !1;
                if ("function" == typeof Proxy) return !0;
                try {
                    return Date.prototype.toString.call(Reflect.construct(Date, [], (function() {}))), !0
                } catch (e) {
                    return !1
                }
            }();
            return function() {
                var n, i = _(e);
                if (t) {
                    var r = _(this).constructor;
                    n = Reflect.construct(i, arguments, r)
                } else n = i.apply(this, arguments);
                return h(this, n)
            }
        }

        function r(e, t) {
            var n;
            if ("undefined" == typeof Symbol || null == e[Symbol.iterator]) {
                if (Array.isArray(e) || (n = o(e)) || t && e && "number" == typeof e.length) {
                    n && (e = n);
                    var i = 0,
                        r = function() {};
                    return {
                        s: r,
                        n: function() {
                            return i >= e.length ? {
                                done: !0
                            } : {
                                done: !1,
                                value: e[i++]
                            }
                        },
                        e: function(e) {
                            throw e
                        },
                        f: r
                    }
                }
                throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")
            }
            var s, a = !0,
                u = !1;
            return {
                s: function() {
                    n = e[Symbol.iterator]()
                },
                n: function() {
                    var e = n.next();
                    return a = e.done, e
                },
                e: function(e) {
                    u = !0, s = e
                },
                f: function() {
                    try {
                        a || null == n.return || n.return()
                    } finally {
                        if (u) throw s
                    }
                }
            }
        }

        function o(e, t) {
            if (e) {
                if ("string" == typeof e) return s(e, t);
                var n = Object.prototype.toString.call(e).slice(8, -1);
                return "Object" === n && e.constructor && (n = e.constructor.name), "Map" === n || "Set" === n ? Array.from(e) : "Arguments" === n || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n) ? s(e, t) : void 0
            }
        }

        function s(e, t) {
            (null == t || t > e.length) && (t = e.length);
            for (var n = 0, i = new Array(t); n < t; n++) i[n] = e[n];
            return i
        }
        var a = n(9),
            u = n(2),
            c = n(3),
            l = n(5),
            d = n(6),
            h = n(8),
            _ = n(10),
            p = n(11),
            g = n(12),
            m = n(32),
            f = n(14),
            v = n(22),
            y = n(20),
            S = n(11).MeetingInfoMaskFlagBit;
        void 0 === console.assert && (console.assert = function(e, t) {});
        var b = function(e, t) {
                if (t.hasOwnProperty("defaultMediaStateList")) {
                    var n, i = r(t.defaultMediaStateList);
                    try {
                        for (i.s(); !(n = i.n()).done;) {
                            var o = n.value;
                            o.hasOwnProperty("type") && (o.type == p.MediaType.AUDIO ? o.hasOwnProperty("state") && "0" === o.state && ("0" === e.savedAudioOn ? e.savedAudioReason = p.SwitchReason.BYSELF : (e.savedAudioReason = p.SwitchReason.BYHOST, e.meetingUserCtrl.mutedBySelf = !1), e.savedAudioOn = "0") : o.type == p.MediaType.VIDEO && o.hasOwnProperty("state") && o.state)
                        }
                    } catch (e) {
                        i.e(e)
                    } finally {
                        i.f()
                    }
                }
            },
            E = function(e) {
                function t() {
                    var e;
                    u(this, t), (e = n.call(this)).logger = new g, e.xmpp_service = f.getInstance(), e.rtc_service = m.getInstance(), e.mediaRoomParams = {}, e.meetingUserCtrl = v.getInstance(), e.savedNickName = "", e.savedVideoOn = "0", e.savedAudioOn = "0", e.savedAudioReason = p.SwitchReason.BYSELF, e.savedVideoReason = p.SwitchReason.BYSELF, e.savedUserAudioSwitch = !0, e.savedAutoRTC = !0, e.savedJoinMeetingData = null, e.accessType = 0, e.meetingInfoMaskFlag = 0, e.app_id = null;
                    var i = function(t) {
                        return e[t] = e[t].bind(l(e))
                    };
                    return ["joinMeeting", "dissolveMeeting", "onCreateMeetingCallBack", "onCancelMeetingCallBack", "onQueryMeetingItemListCallBack", "onUpdateMeetingCallBack", "onMeetingModifiedCallBack", "onJoinMeetingCallBack", "onDissolveMeetingCallBack", "onNotifySchedule", "onNotifyMeetingItemUpdate", "onMeetingInviteeNotify", "onEnterMediaRoomCallBack", "onInitRtcCallBack", "onLeaveMediaRoomCallBack", "onLocalStreamAdd", "onQueryMeetingPayInfo"].forEach((function(e) {
                        return i(e)
                    })), e.listenEvent(), e
                }
                d(t, e);
                var n = i(t);
                return c(t, [{
                    key: "listenEvent",
                    value: function() {
                        this.xmpp_service.registerEventHandler("create_meeting", this.onCreateMeetingCallBack), this.xmpp_service.registerEventHandler("cancel_meeting", this.onCancelMeetingCallBack), this.xmpp_service.registerEventHandler("query_meeting_item_list", this.onQueryMeetingItemListCallBack), this.xmpp_service.registerEventHandler("modify_meeting", this.onUpdateMeetingCallBack), this.xmpp_service.registerEventHandler("meeting_modified", this.onMeetingModifiedCallBack), this.xmpp_service.registerEventHandler("notify_schedule", this.onNotifySchedule), this.xmpp_service.registerEventHandler("notify_meeting_item_update", this.onNotifyMeetingItemUpdate), this.xmpp_service.registerEventHandler("meeting_invitee_notify", this.onMeetingInviteeNotify), this.xmpp_service.registerEventHandler("join_meeting", this.onJoinMeetingCallBack), this.xmpp_service.registerEventHandler("dissolve_meeting", this.onDissolveMeetingCallBack), this.xmpp_service.registerEventHandler("query_meeting_pay_info", this.onQueryMeetingPayInfo), this.rtc_service.registerEventHandler("init", this.onInitRtcCallBack), this.rtc_service.registerEventHandler("create_room", this.onEnterMediaRoomCallBack), this.rtc_service.registerEventHandler("leave_room", this.onLeaveMediaRoomCallBack), this.rtc_service.registerEventHandler("local_stream_add", this.onLocalStreamAdd)
                    }
                }, {
                    key: "setSavedAudioOn",
                    value: function(e) {
                        this.savedAudioOn = e
                    }
                }, {
                    key: "getSavedAudioOn",
                    value: function() {
                        return this.savedAudioOn
                    }
                }, {
                    key: "setSavedVideoOn",
                    value: function(e) {
                        this.savedVideoOn = e
                    }
                }, {
                    key: "getSavedVideoOn",
                    value: function() {
                        return this.savedVideoOn
                    }
                }, {
                    key: "createMeeting",
                    value: function(e) {
                        return console.assert(e.hasOwnProperty("subject"), "subject is necessary"), console.assert(e.hasOwnProperty("begin_time"), "begin_time is necessary"), console.assert(e.hasOwnProperty("end_time"), "end_time is necessary"), console.assert(e.hasOwnProperty("invite_list"), "invite_list is necessary"), console.assert(e.hasOwnProperty("media_set_type"), "media_set_type is necessary"), this._formatParams(e, e, "password", ""), this._formatParams(e, e, "custom_buffer", ""), this._formatParams(e, e, "media_set_type", p.MediaSetType.ExternalMeeting), this.xmpp_service.createMeetingRequest(e), !0
                    }
                }, {
                    key: "internalQueryMeetingItemList",
                    value: function(e) {
                        return this.xmpp_service.queryMeetingItemListRequest(e), !0
                    }
                }, {
                    key: "queryMeetingItemById",
                    value: function(e) {
                        this.internalQueryMeetingItemList({
                            meeting_id: e
                        })
                    }
                }, {
                    key: "queryMeetingPayInfo",
                    value: function(e) {
                        this.xmpp_service.queryMeetingPayInfoRequest(e)
                    }
                }, {
                    key: "queryMeetingItemByCode",
                    value: function(e) {
                        this.internalQueryMeetingItemList({
                            meeting_code: e
                        })
                    }
                }, {
                    key: "sendSecurityVerifyResult",
                    value: function() {
                        var e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : 0,
                            t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {};
                        return this.xmpp_service.sendSecurityVerifyResult({
                            security_verify_type: e,
                            data: t
                        })
                    }
                }, {
                    key: "queryMeetingBriefList",
                    value: function() {
                        var e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : 0;
                        console.log("queryMeetingBriefList called with time:", e), this.internalQueryMeetingItemList({
                            meeting_last_modify_time: e.toString(),
                            expect_meeting_count: 10
                        })
                    }
                }, {
                    key: "queryMeetingItem",
                    value: function(e) {
                        var t = {
                            begin_time: 0,
                            end_time: 0,
                            creator_uid: "",
                            is_creator: "",
                            is_invitee: "",
                            meeting_id: e
                        };
                        return this.xmpp_service.queryMeetingItemListRequest(t), !0
                    }
                }, {
                    key: "cancelMeeting",
                    value: function(e) {
                        var t = {
                            meeting_id: e,
                            reason: "",
                            code: ""
                        };
                        return this.xmpp_service.cancelMeetingRequest(t), !0
                    }
                }, {
                    key: "updateMeeting",
                    value: function(e) {
                        console.assert(e.hasOwnProperty("meeting_id") && e.meeting_id > 0, "meeting_id is necessary");
                        var t = {
                            meeting_id: e.meeting_id
                        };
                        return this._formatParams(t, e, "subject", null), this._formatParams(t, e, "begin_time", null), this._formatParams(t, e, "end_time", null), this._formatParams(t, e, "password", null), this._formatParams(t, e, "host", null), this._formatParams(t, e, "invite_list", null), this._formatParams(t, e, "location", null), this._formatParams(t, e, "media_set_type", null), this.xmpp_service.modifyMeetingItemRequest(t), !0
                    }
                }, {
                    key: "joinMeeting",
                    value: function(e) {
                        if ("object" !== a(e)) throw new Error("join_param must be an object");
                        if ("boolean" != typeof e.do_rtc || !e.do_rtc) {
                            if (!e.hasOwnProperty("meeting_id") && !e.hasOwnProperty("meeting_code")) throw new Error("meeting_id or meeting_code is necessary");
                            if (!e.hasOwnProperty("nickname")) throw new Error("nickname is necessary");
                            if (!("string" == typeof e.nickname && e.nickname.length > 0)) throw new Error("nickname should be a string and not empty");
                            ! function(t) {
                                var n, i = r(t);
                                try {
                                    for (i.s(); !(n = i.n()).done;) {
                                        var o = n.value;
                                        "boolean" != typeof e[o] && "number" != typeof e[o] || (e[o] = e[o] ? "1" : "0")
                                    }
                                } catch (e) {
                                    i.e(e)
                                } finally {
                                    i.f()
                                }
                            }(["video_on", "audio_on", "share_on"]);
                            var t = {};
                            return this._formatParams(t, e, "meeting_id", null), this._formatParams(t, e, "meeting_code", null), this._formatParams(t, e, "pmi_code", ""), this._formatParams(t, e, "nickname", "会议用户"), this._formatParams(t, e, "password", null), this._formatParams(t, e, "token", ""), this._formatParams(t, e, "phone", ""), this._formatParams(t, e, "im", null), this._formatParams(t, e, "media_set_type", null), this._formatParams(t, e, "meeting_appid", null), this._formatParams(t, e, "rs", ""), this._formatParams(t, e, "sign_type", null), this._formatParams(t, e, "join_from", 0), this._formatParams(t, e, "customer_data", null), t.default_auth_bits = this.getDefaultAuthBits(e), this.savedNickName = t.nickname, this.setSavedVideoOn(e.video_on), this.setSavedAudioOn(e.audio_on), this.savedUserAudioSwitch = e.audio_on, this.savedAutoRTC = !0, "boolean" == typeof e.auto_rtc && !1 === e.auto_rtc && (this.savedAutoRTC = !1), this.meetingUserCtrl.reset(), this.meetingUserCtrl.saved_user_audio_switch = 1 == e.audio_on, this.meetingUserCtrl.saved_user_video_switch = 1 == e.video_on, this.xmpp_service.joinMeetingRequest(t), !0
                        }
                        p.INSTANCE_ID === p.InstanceType.INSTANCE_WEB && (this.logger.report(1, "join_meeting", "(do_rtc) initWebRtc with param data:", JSON.stringify(this.mediaRoomParams)), this.rtc_service.initWebRtc(this.mediaRoomParams))
                    }
                }, {
                    key: "getDefaultAuthBits",
                    value: function(e) {
                        var t = 2,
                            n = 4,
                            i = 6,
                            r = 1 << 0 | 1 << 1 | 1 << 3 | 1 << 5 | 1 << 7;
                        return "1" === e.audio_on && (r |= 1 << t), "1" === e.video_on && (r |= 1 << n), "1" === e.share_on && (r |= 1 << i), console.log("default_auth_bits: ", r), r
                    }
                }, {
                    key: "getDefaultAudioStateReason",
                    value: function(e) {
                        var t = parseInt(e, 10);
                        if (isNaN(t)) return console.error(new Error("reasonBits cannot be converted to number: ".concat(e))), "";
                        var n = "",
                            i = p.DefaultMediaStateReasonBit.AudioReasonBit,
                            r = (t & i.MembersNumReachesN) === i.MembersNumReachesN,
                            o = (t & i.AudioOnNumReachesLimit) === i.AudioOnNumReachesLimit,
                            s = (t & i.AllMuted) === i.AllMuted,
                            a = (t & i.UnmuteNotAllowed) === i.UnmuteNotAllowed,
                            u = (t & i.MuteAfterJoin) === i.MuteAfterJoin;
                        return s ? (n = "主持人已将全体成员静音。", a && (n = "主持人已将全体成员静音，并不允许自我解除静音。")) : r ? n = "当前会议人数较多，已自动为您关闭麦克风。" : o ? n = "开麦人数超过上限。" : u ? (n = "主持人已将您静音。", a && (n = "主持人已将您静音，并不允许自我解除静音。")) : n = "主持人已将您静音!", n
                    }
                }, {
                    key: "getDefaultVideoStateReason",
                    value: function(e) {
                        return ""
                    }
                }, {
                    key: "getAccessType",
                    value: function() {
                        return this.accessType
                    }
                }, {
                    key: "setAccessType",
                    value: function(e) {
                        e = parseInt(e, 10), (isNaN(e) || 0 != e && 1 != e) && console.warn("ASSERT: setAccessType invalid val, ".concat(e)), this.accessType = e
                    }
                }, {
                    key: "getMeetingInfoMaskFlag",
                    value: function() {
                        return this.meetingInfoMaskFlag
                    }
                }, {
                    key: "setMeetingInfoMaskFlag",
                    value: function(e) {
                        this.logger.report(1, "pre_meeting", "set meetingInfoMaskFlag to ".concat(e, "\n            mask meeting code: ").concat(this.isMeetingCodeFullyVisible() ? "N" : "Y", "\n            hide meeting link: ").concat(this.isMeetingInviteLinkVisible() ? "N" : "Y", "\n        ")), this.meetingInfoMaskFlag = e
                    }
                }, {
                    key: "isMeetingCodeFullyVisible",
                    value: function() {
                        return 0 == (this.getMeetingInfoMaskFlag() & 1 << S.MeetingCode)
                    }
                }, {
                    key: "isMeetingInviteLinkVisible",
                    value: function() {
                        return 0 == (this.getMeetingInfoMaskFlag() & 1 << S.InviteLink)
                    }
                }, {
                    key: "dissolveMeeting",
                    value: function(e) {
                        console.assert(e > 0, "meeting_id is necessary");
                        var t = {
                            meeting_id: e,
                            reason: "1",
                            code: "0"
                        };
                        return this.xmpp_service.dissolveMeetingRequest(t), !0
                    }
                }, {
                    key: "onQueryMeetingItemListCallBack",
                    value: function(e, t) {
                        var n = this.getEventHandler("query_meeting_item_list");
                        if (e) {
                            var i = t.meeting_item_list || [];
                            if (i.length > 0) {
                                var r = i[0];
                                r.hasOwnProperty("meeting_info_mask_flag") && this.setMeetingInfoMaskFlag(r.meeting_info_mask_flag)
                            } else this.logger.report(3, "pre_meeting", "no meeting items")
                        }
                        n(e, t)
                    }
                }, {
                    key: "onCreateMeetingCallBack",
                    value: function(e, t) {
                        var n = this.getEventHandler("create_meeting");
                        this.logger.report(1, "pre_meeting", "schedule meeting rep flag:", e), "object" === a(t) && this.logger.report(1, "pre_meeting", "schedule meeting rep data:", t), n(e, t)
                    }
                }, {
                    key: "onUpdateMeetingCallBack",
                    value: function(e, t) {
                        this.getEventHandler("update_meeting")(e, t)
                    }
                }, {
                    key: "onMeetingModifiedCallBack",
                    value: function(e, t) {
                        this.getEventHandler("meeting_modified")(e, t)
                    }
                }, {
                    key: "onNotifySchedule",
                    value: function(e, t) {
                        this.getEventHandler("notify_schedule")(e, t)
                    }
                }, {
                    key: "onNotifyMeetingItemUpdate",
                    value: function(e, t) {
                        this.getEventHandler("notify_meeting_item_update")(e, t)
                    }
                }, {
                    key: "onMeetingInviteeNotify",
                    value: function(e, t) {
                        this.getEventHandler("meeting_invitee_notify")(e, t)
                    }
                }, {
                    key: "onQueryMeetingItemCallBack",
                    value: function(e, t) {
                        this.getEventHandler("query_meeting_item")(e, t)
                    }
                }, {
                    key: "onCancelMeetingCallBack",
                    value: function(e, t) {
                        this.getEventHandler("cancel_meeting")(e, t)
                    }
                }, {
                    key: "onJoinMeetingCallBack",
                    value: function(e, t) {
                        var n = this.getEventHandler("join_meeting");
                        if (e) {
                            b(this, t);
                            var i = !(!this.savedAudioOn || "0" === this.savedAudioOn),
                                r = !(!this.savedVideoOn || "0" === this.savedVideoOn),
                                o = function(e) {
                                    return e.split("/")[0]
                                }(this.xmpp_service.jid);
                            if (this.mediaRoomParams = {
                                    user_id: [p.INSTANCE_ID.toString(), o, this.app_id].join("_"),
                                    user_sig: t.qcloud_user_signature,
                                    sdk_appid: this.app_id,
                                    account_type: 31778,
                                    is_enable_audio: i,
                                    is_enable_video: r,
                                    room_id: t.av_room_id,
                                    private_key: t.qcloud_user_private_map_key,
                                    role: "user"
                                }, this.savedJoinMeetingData = t, this.savedJoinMeetingData.room_user_id = this.mediaRoomParams.user_id, this.logger.debug("Premeeting onJoinMeetingCallBack data:", t), p.INSTANCE_ID === p.InstanceType.INSTANCE_WEB) {
                                if (!1 === this.savedAutoRTC) return void n(!0, this.savedJoinMeetingData);
                                this.logger.report(1, "join_meeting", "initWebRtc with param data:", JSON.stringify(this.mediaRoomParams)), this.rtc_service.initWebRtc(this.mediaRoomParams)
                            } else {
                                this.meetingUserCtrl.setMeetingId(this.savedJoinMeetingData.meeting_id), this.meetingUserCtrl.setRoomType(this.savedJoinMeetingData.enter_room_type || p.RoomType.MEETING_ROOM), this.meetingUserCtrl.setSelfUserId({
                                    unique_id: this.savedJoinMeetingData.unique_id,
                                    uid: o
                                }), this.meetingUserCtrl.setSelfNickname(this.savedNickName), this.meetingUserCtrl.setMediaRoomState(p.MediaRoomState.OUT), this.meetingUserCtrl.setIsWebinar("1" === this.savedJoinMeetingData.meeting_type_flags), this.savedJoinMeetingData.enter_room_type === p.RoomType.WAITING_ROOM ? this.logger.debug("joined in waiting room") : (this.logger.debug("joined in meeting room"), this.meetingUserCtrl.saved_user_audio_switch = !(!this.savedUserAudioSwitch || "0" === this.savedUserAudioSwitch), this.meetingUserCtrl.queryUserStatus({
                                    meeting_id: this.savedJoinMeetingData.meeting_id,
                                    user_type: "2",
                                    is_callin: "0",
                                    participation_status_list: [1, 6]
                                }));
                                var s = this.savedJoinMeetingData.enter_room_type === p.RoomType.MEETING_ROOM ? 0 : 1;
                                this.meetingUserCtrl.startMeetingPing(s), n(!0, this.savedJoinMeetingData)
                            }
                        } else n(!1, t)
                    }
                }, {
                    key: "joinMediaRoom",
                    value: function() {
                        var e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {},
                            t = {
                                nickname: this.savedNickName,
                                video_on: this.savedVideoOn,
                                video_reason: this.savedVideoReason,
                                audio_on: this.savedAudioOn,
                                audio_reason: this.savedAudioReason,
                                share_on: "0",
                                share_reason: p.SwitchReason.BYSELF,
                                avatar_type: 1,
                                access_type: this.getAccessType()
                            };
                        Object.assign(t, e), this.meetingUserCtrl.updateUserInfo(t, p.UserState.JOIN)
                    }
                }, {
                    key: "onInitRtcCallBack",
                    value: function(e, t) {
                        (this.getEventHandler("init_webrtc")(e, t), e) ? this.rtc_service.enterRoom(this.mediaRoomParams): (this.savedJoinMeetingData.initRTCInfo = {}, this.savedJoinMeetingData.initRTCInfo.msg = "init rtc failed", this.savedJoinMeetingData.initRTCInfo.data = t, console.log("Premeeting onInitRtcCallBack calling back join_meeting, data:", this.savedJoinMeetingData), this.getEventHandler("join_meeting")(!1, this.savedJoinMeetingData))
                    }
                }, {
                    key: "onEnterMediaRoomCallBack",
                    value: function(e, t) {
                        this.getEventHandler("webrtc_enter_room")(e, t);
                        var n = this.getEventHandler("join_meeting");
                        if (this.savedJoinMeetingData.initRTCInfo = {}, this.savedJoinMeetingData.initRTCInfo.data = t, !e) return this.savedJoinMeetingData.initRTCInfo.msg = "enter media room failed", void n(!1, this.savedJoinMeetingData);
                        this.meetingUserCtrl.setMeetingId(this.savedJoinMeetingData.meeting_id), this.meetingUserCtrl.setRoomType(this.savedJoinMeetingData.enter_room_type || p.RoomType.MEETING_ROOM), this.meetingUserCtrl.setSelfUserId({
                            uid: function(e) {
                                return e.split("/")[0]
                            }(this.xmpp_service.jid)
                        }), this.meetingUserCtrl.setSelfNickname(this.savedNickName), this.meetingUserCtrl.updateUserInfo({
                            nickname: this.savedNickName,
                            video_on: "0",
                            video_reason: this.savedVideoReason,
                            audio_on: "0",
                            audio_reason: this.savedAudioReason,
                            share_on: "0",
                            share_reason: p.SwitchReason.BYSELF,
                            avatar_type: 1
                        }, p.UserState.JOIN), this.meetingUserCtrl.saved_user_audio_switch = !(!this.savedUserAudioSwitch || "0" === this.savedUserAudioSwitch), this.meetingUserCtrl.queryMeetingSettings(), this.meetingUserCtrl.queryUserStatus({
                            meeting_id: this.savedJoinMeetingData.meeting_id,
                            user_type: "2",
                            is_callin: "0",
                            participation_status_list: [1, 6]
                        });
                        var i = !(!this.savedAudioOn || "0" === this.savedAudioOn);
                        console.log("onEnterMediaRoomCallBack enableAudio:", i), i || (this.rtc_service.muteAudioFlag = !0);
                        var r = this.savedJoinMeetingData.enter_room_type === p.RoomType.MEETING_ROOM ? 0 : 1;
                        this.meetingUserCtrl.startMeetingPing(r), n(!0, this.savedJoinMeetingData)
                    }
                }, {
                    key: "onDissolveMeetingCallBack",
                    value: function(e, t) {
                        this.getEventHandler("dissolve_meeting")(e, t)
                    }
                }, {
                    key: "onLeaveMediaRoomCallBack",
                    value: function(e, t) {
                        this.getEventHandler("webrtc_leave_room")(e, t), e || console.error("rtc leave room fail"), this.getEventHandler("leave_room")(e, t)
                    }
                }, {
                    key: "onQueryMeetingPayInfo",
                    value: function(e, t) {
                        this.getEventHandler("query_meeting_pay_info")(e, t)
                    }
                }, {
                    key: "onLocalStreamAdd",
                    value: function(e) {
                        e ? "0" === this.savedAudioOn && "0" === this.savedVideoOn || this.meetingUserCtrl.updateUserInfo({
                            audio_on: this.savedAudioOn,
                            audio_reason: this.savedAudioReason,
                            video_on: this.savedVideoOn,
                            video_reason: this.savedVideoReason
                        }, p.UserState.UPDATE) : this.logger.report(1, "pre_meeting", "onLocalStreamAdd but !info")
                    }
                }, {
                    key: "_formatParams",
                    value: function(e, t, n, i) {
                        t.hasOwnProperty(n) ? e[n] = t[n] : null !== i && (e[n] = i)
                    }
                }], [{
                    key: "getInstance",
                    value: function() {
                        return void 0 === t.prototype.instance && (t.prototype.instance = new t), t.prototype.instance
                    }
                }]), t
            }(y);
        e.exports = E
    }, function(e, t, n) {
        var i = n(2),
            r = n(3),
            o = function() {
                function e() {
                    i(this, e)
                }
                return r(e, [{
                    key: "checkTBSVersion",
                    value: function() {
                        for (var e = navigator.userAgent.split(" "), t = !1, n = 0, i = 0; i < e.length; i++) {
                            var r = e[i];
                            if (-1 !== r.indexOf("TBS") || -1 !== r.indexOf("tbs")) {
                                t = !0;
                                var o = r.split("/")[1];
                                n = parseInt(o) || 0
                            }
                        }
                        return {
                            isTBS: t,
                            TBSversion: n,
                            isTBSValid: n >= 43600
                        }
                    }
                }, {
                    key: "isFF",
                    value: function() {
                        return -1 !== navigator.userAgent.toLowerCase().indexOf("firefox")
                    }
                }, {
                    key: "isChrome",
                    value: function() {
                        return /Chrome/.test(navigator.userAgent) && /Google Inc/.test(navigator.vendor)
                    }
                }, {
                    key: "isSafari",
                    value: function() {
                        var e, t = navigator.userAgent.toLowerCase(),
                            n = function(e) {
                                return -1 === t.indexOf(e)
                            },
                            i = (e = "safari/", t.indexOf(e) > -1),
                            r = n("chrome/"),
                            o = n("qq/") && n("mqqbrowser");
                        return i && r && o
                    }
                }, {
                    key: "foundChrome",
                    value: function() {
                        return navigator.userAgent.toLowerCase().indexOf("chrome/") > -1
                    }
                }, {
                    key: "isiOS",
                    value: function() {
                        return /iPhone|iPad|iPod/i.test(navigator.userAgent)
                    }
                }, {
                    key: "isAndroid",
                    value: function() {
                        return /Android/i.test(navigator.userAgent)
                    }
                }, {
                    key: "isWindows",
                    value: function() {
                        return /Windows/i.test(navigator.userAgent)
                    }
                }, {
                    key: "isQQ",
                    value: function() {
                        return /QQ|SQ/.test(navigator.userAgent)
                    }
                }, {
                    key: "isWX",
                    value: function() {
                        return /MicroMessenger/.test(navigator.userAgent)
                    }
                }, {
                    key: "isMQQBrowser",
                    value: function() {
                        return /MQQBrowser/.test(navigator.userAgent)
                    }
                }, {
                    key: "isEdge",
                    value: function() {
                        return /Edge/.test(navigator.userAgent)
                    }
                }, {
                    key: "isIE",
                    value: function() {
                        return /Trident/.test(navigator.userAgent)
                    }
                }, {
                    key: "getiOSVersion",
                    value: function() {
                        var e = navigator.userAgent.match(/OS (\d+)_(\d+)_?(\d+)?/);
                        return e && [parseInt(e[1]), parseInt(e[2]), parseInt(e[3] || 0)] || !1
                    }
                }, {
                    key: "getSafariVersion",
                    value: function() {
                        var e = navigator.userAgent.match(/Version\/(\d+)(?:\.(\d+))?(?:\.(\d+))?/);
                        return e && [parseInt(e[1]), parseInt(e[2] || 0), parseInt(e[3] || 0)] || !1
                    }
                }, {
                    key: "checkH264Support",
                    value: function(e) {
                        if ("RTCPeerConnection" in window) try {
                            var t = new RTCPeerConnection(null);
                            t.createOffer({
                                offerToReceiveAudio: 1,
                                offerToReceiveVideo: 1
                            }).then((function(n) {
                                -1 === n.sdp.toLowerCase().indexOf("h264") ? e(!1) : e(!0), t.close()
                            }), (function(t) {
                                e(!1)
                            }))
                        } catch (t) {
                            e(!1)
                        } else e(!1)
                    }
                }, {
                    key: "isSupportWebRTC",
                    value: function() {
                        var e = !1;
                        ["RTCPeerConnection", "webkitRTCPeerConnection", "RTCIceGatherer"].forEach((function(t) {
                            e || t in window && (e = !0)
                        }));
                        var t = this.checkTBSVersion();
                        if (t.isTBS) t.isTBSValid || (e = !1);
                        else if (this.isFF()) e = !1;
                        else if (this.isSafari()) {
                            var n = this.getiOSVersion(),
                                i = this.getSafariVersion();
                            n ? 11 === n[0] && n[1] >= 1 || n[0] > 11 || (e = !1) : i && (11 === i[0] && i[1] >= 1 || i[0] > 11) || (e = !1)
                        } else this.isQQ() && !this.isWindows() || this.isWX() || this.isMQQBrowser() || !this.foundChrome() ? e = !1 : this.isChrome() ? (this.isiOS() || this.isAndroid()) && (e = !1) : (this.isEdge() || this.isIE()) && (e = !1);
                        console.log("sdk result isWebRTCSupported:", e);
                        var r = {
                            support: e,
                            isTBS: t.isTBS,
                            isTBSValid: t.isTBSValid,
                            TBSversion: t.TBSversion,
                            isSafari: this.isSafari(),
                            iOSVersion: this.getiOSVersion(),
                            screenshare: !1,
                            isFF: this.isFF()
                        };
                        return this.checkH264Support((function(e) {
                            r.h264Support = e, e || (r.support = !1)
                        })), r.support
                    }
                }], [{
                    key: "getInstance",
                    value: function() {
                        return void 0 === e.prototype.instance && (e.prototype.instance = new e), e.prototype.instance
                    }
                }]), e
            }();
        e.exports = o
    }]);
});
define("stores/AppStore.js", function(require, module, exports, window, document, frames, self, location, navigator, localStorage, history, Caches, screen, alert, confirm, prompt, XMLHttpRequest, WebSocket, Reporter, webkit, WeixinJSCore) {
    "use strict";
    var e, t = require("../@babel/runtime/helpers/classCallCheck"),
        n = require("../@babel/runtime/helpers/createClass"),
        r = require("../@babel/runtime/helpers/possibleConstructorReturn"),
        s = require("../@babel/runtime/helpers/assertThisInitialized"),
        i = require("../@babel/runtime/helpers/inherits"),
        a = require("../@babel/runtime/helpers/createSuper"),
        o = (e = require("../Helpers/UpgradeManager")) && e.__esModule ? e : {
            default: e
        };
    console.log("AppStore.js loaded start");
    var u = require("../utils/EventEmitter"),
        c = require("../utils/Dispatcher"),
        h = require("../constants/AppType"),
        p = require("../configs/AppConfig"),
        l = require("../utils/util"),
        v = require("js-base64").Base64,
        d = require("../utils/logger"),
        g = new d({
            pageName: "AppStore",
            aegisLogEnable: !0,
            wxLogEnable: !0
        }),
        y = p.DEFAULT_ENV_KEY,
        m = p.MaxCustomerDataLength,
        f = function(e) {
            i(f, u);
            var c = a(f);

            function f(e) {
                var n;
                return t(this, f), f.prototype.instance ? r(n, f.prototype.instance) : (n = c.call(this, e), f.prototype.instance = s(n), n.init(), n.upgradeManager = new o.default(s(n)), n)
            }
            return n(f, [{
                key: "init",
                value: function() {
                    this.sysInfo = {}, this.isQYWX = !1, this.QYWXVersion = "", this.weChatVer = "", this.isSupportDevice = !1, this.canOpenApp = !1, this.isSupportSmoothVOIP = !1, this.isSupportMixAudio = !1, this._isOhOs = !1, this._isAndroid = !1, this._isIOS = !1, this._isIPhoneX = !1, this.statusBarHeight = 0, this.isForeground = null, this.customerDataCache = {
                        meetingID: "",
                        customerData: ""
                    }, this.enableEnvSwitch = p.ENV_SWITCH_ENABLE, this.isEnableNetStatus = !1, d.setIsDEV(this.enableEnvSwitch), this.envMap = p.ENV_LIST, this.currEnvKey = p.ENV_LIST[y].key, this.initCustomerDataCache()
                }
            }, {
                key: "getUpgradeManager",
                value: function() {
                    return this.upgradeManager
                }
            }, {
                key: "isProductionEnv",
                value: function() {
                    return this.getCurrEnvKey() === p.ENV_LIST.production.key
                }
            }, {
                key: "isTestEnv",
                value: function() {
                    return this.getCurrEnvKey() === p.ENV_LIST.meetingCicd199.key
                }
            }, {
                key: "isPrereleaseEnv",
                value: function() {
                    return this.getCurrEnvKey() === p.ENV_LIST.meetingCicd200.key || this.getCurrEnvKey() === p.ENV_LIST.meetingPreOpenProd.key
                }
            }, {
                key: "isCICDEnv",
                value: function() {
                    return /cicd\d+/i.test(this.getCurrEnvKey())
                }
            }, {
                key: "getCICDNum",
                value: function() {
                    return this.isCICDEnv() ? this.getCurrEnvKey().replace(/.*?cicd(\d+)$/i, "$1") : (g.assert("env is not CICD, do not call 'getCICDNum'.env: ".concat(this.getCurrEnvKey())), "")
                }
            }, {
                key: "getCurrentDomain",
                value: function() {
                    return this.isProductionEnv() ? "https://meeting.tencent.com" : this.isTestEnv() ? "https://test.txmeeting.tencent.com" : this.isPrereleaseEnv() ? "https://pre.txmeeting.tencent.com" : this.isCICDEnv() ? "https://test-".concat(this.getCICDNum(), ".cicd.tencentmeeting.com") : (g.assert("unknown env: ".concat(this.getCurrEnvKey(), ". default to production domain")), "https://meeting.tencent.com")
                }
            }, {
                key: "getWeMeetDomain",
                value: function() {
                    return "https://meeting.tencent.com"
                }
            }, {
                key: "getInstanceId",
                value: function() {
                    return 8
                }
            }, {
                key: "getWeixinMiniprogramAppId",
                value: function() {
                    return p.APPID
                }
            }, {
                key: "getVersion",
                value: function() {
                    return p.MP_WEMEET_VERSION
                }
            }, {
                key: "getSysInfo",
                value: function() {
                    return this.sysInfo
                }
            }, {
                key: "setSysInfo",
                value: function(e) {
                    if (e) {
                        var t = e.sysInfo,
                            n = e.isSupportDevice;
                        this.sysInfo = t, this.isQYWX = "wxwork" === t.environment, d.isQywx = this.isQYWX, this.weChatVer = t.version, this.isSupportDevice = n;
                        try {
                            this._isAndroid = t.platform.toLowerCase().indexOf("android") >= 0, this._isIOS = t.system.toLowerCase().indexOf("ios") > -1, this._isOhOs = t.platform.toLowerCase().indexOf("ohos") > -1, this._isIPhoneX = l.isBangsScreen(t)
                        } catch (e) {
                            g.error("sysInfo exception: ".concat(JSON.stringify(e)))
                        }
                        this.setIsSupportSmoothVOIP(l.isSupportSmoothVOIP(t)), this.setIsSupportMixAudio(l.isSupportTRTC(t)), this.statusBarHeight = t.statusBarHeight
                    }
                }
            }, {
                key: "setQYWXVersion",
                value: function() {
                    var e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : "";
                    this.QYWXVersion = e
                }
            }, {
                key: "getQYWXVersion",
                value: function() {
                    return this.QYWXVersion
                }
            }, {
                key: "getWeChatVersion",
                value: function() {
                    return this.weChatVer
                }
            }, {
                key: "isSupportQYWX",
                value: function() {
                    return l.isSupportQYWX(this.QYWXVersion)
                }
            }, {
                key: "getPlatform",
                value: function() {
                    return this.sysInfo && this.sysInfo.platform ? this.sysInfo.platform.toLowerCase() : "unknown"
                }
            }, {
                key: "getIsEnableNetStatus",
                value: function() {
                    return this.isEnableNetStatus
                }
            }, {
                key: "setIsEnableNetStatus",
                value: function(e) {
                    this.getEnvSwitchEnable() || (e = !1), this.isEnableNetStatus = e, g.info("isEnableNetStatus changed to ".concat(e))
                }
            }, {
                key: "getIsQYWX",
                value: function() {
                    return this.isQYWX
                }
            }, {
                key: "getIsSupportDevice",
                value: function() {
                    return this.isSupportDevice
                }
            }, {
                key: "isIOS",
                value: function() {
                    return this._isIOS
                }
            }, {
                key: "isAndroid",
                value: function() {
                    return this._isAndroid
                }
            }, {
                key: "isOhOs",
                value: function() {
                    return this._isOhOs
                }
            }, {
                key: "isIPhoneX",
                value: function() {
                    return this._isIPhoneX
                }
            }, {
                key: "isUseCompatMode",
                value: function() {
                    var e = this.isIOS(),
                        t = this.getWeChatVersion();
                    return e && 0 === l.compareVersion(t, "8.0.43")
                }
            }, {
                key: "isDevtools",
                value: function() {
                    var e = !1;
                    try {
                        e = "devtools" === this.sysInfo.platform.toLowerCase()
                    } catch (t) {
                        g.error("isDevTools exception: ".concat(JSON.stringify(t))), e = !1
                    }
                    return e
                }
            }, {
                key: "isDev",
                value: function() {
                    return this.getEnvSwitchEnable()
                }
            }, {
                key: "setCanOpenApp",
                value: function(e) {
                    this.canOpenApp = e
                }
            }, {
                key: "getCanOpenApp",
                value: function() {
                    return this.canOpenApp
                }
            }, {
                key: "setIsSupportSmoothVOIP",
                value: function(e) {
                    console.log("isSupportSmoothVOIP set to: ".concat(e ? "Y" : "N")), this.isSupportSmoothVOIP = e
                }
            }, {
                key: "getIsSupportSmoothVOIP",
                value: function() {
                    return this.isSupportSmoothVOIP
                }
            }, {
                key: "setIsSupportMixAudio",
                value: function(e) {
                    console.log("isSupportMixAudio set to: ".concat(e ? "Y" : "N")), this.isSupportMixAudio = e
                }
            }, {
                key: "getIsSupportMixAudio",
                value: function() {
                    return this.isSupportMixAudio
                }
            }, {
                key: "getIsAndroid8027Bug",
                value: function() {
                    return this.isAndroid() && l.compareVersion(this.getWeChatVersion(), "8.0.27") < 0
                }
            }, {
                key: "getStatusBarHeight",
                value: function() {
                    return this.statusBarHeight
                }
            }, {
                key: "getEnvSwitchEnable",
                value: function() {
                    return this.enableEnvSwitch
                }
            }, {
                key: "getCurrEnv",
                value: function() {
                    var e = this.envMap[this.currEnvKey];
                    return e || (g.warn("".concat(this.currEnvKey, "环境不存在，使用默认环境: ").concat(y)), e = p.ENV_LIST[y]), e
                }
            }, {
                key: "setCurrEnvKey",
                value: function() {
                    var e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : p.ENV_LIST[y].key;
                    if (!this.envMap[e]) return g.warn("".concat(e, "环境不存在，设置成默认环境: ").concat(y)), void(this.currEnvKey = this.envMap[y].key);
                    this.currEnvKey = e
                }
            }, {
                key: "getEnvMap",
                value: function() {
                    return this.envMap
                }
            }, {
                key: "getCurrEnvKey",
                value: function() {
                    return this.currEnvKey
                }
            }, {
                key: "getSignUrl",
                value: function() {
                    return this.getCurrEnv().signurl
                }
            }, {
                key: "getMicUrl",
                value: function() {
                    return this.getCurrEnv().micurl
                }
            }, {
                key: "getXMPPWSUrl",
                value: function() {
                    return this.getCurrEnv().srvurl
                }
            }, {
                key: "getHttpCgi",
                value: function() {
                    return this.getCurrEnv().httpCgi
                }
            }, {
                key: "getSdkAppId",
                value: function() {
                    return this.getCurrEnv().sdkappid
                }
            }, {
                key: "getEnvName",
                value: function() {
                    return this.getCurrEnv().name
                }
            }, {
                key: "isRunningForeground",
                value: function() {
                    return !0 === this.isForeground
                }
            }, {
                key: "isRunningBackground",
                value: function() {
                    return !1 === this.isForeground
                }
            }, {
                key: "setIsRunningForeground",
                value: function(e) {
                    var t = this.isRunningBackground() && !0 === e,
                        n = this.isRunningForeground() && !1 === e;
                    t || n ? (g.info("switched to ".concat(t ? "foreground" : "background")), g.reportCurrLog()) : g.info("may be this is the first time that App launched? prev = ".concat(this.isForeground, ", curr = ").concat(e)), this.isForeground = e, t ? this.emit(h.APP_SWITCH_TO_FOREGROUND, {}) : this.emit(h.APP_SWITCH_TO_BACKGROUND, {})
                }
            }, {
                key: "isCustomerDataValid",
                value: function(e) {
                    if (!e) return !1;
                    var t = null;
                    try {
                        var n = v.decode(e);
                        if (g.info("customerData decoded: ".concat(n)), /\r?\n?ÃÜ$/.test(n)) {
                            var r = n.replace(/\r?\n?ÃÜ$/, "");
                            g.warn("WARNING! The decoded data ends up with 'ÃÜ', we cut it off to: ".concat(r)), t = JSON.parse(r), g.reportEvent("customer_data_decoded_buggy")
                        } else t = JSON.parse(n)
                    } catch (t) {
                        return g.error("Base64 decode/JSON parse error on 3rd party 'customerData'.\n        errmsg = ".concat(t.message, "\n        customerData = ").concat(e, "\n      ")), g.reportEvent("customer_data_decoded_failed"), !1
                    }
                    return g.reportEvent("customer_data_decoded_succeed"), m < e.length ? (g.warn("3rd party passed 'customerData' too long: ".concat(e.length, "\n        Max length is ").concat(m, "\n        'customerData': ").concat(JSON.stringify(e), "\n      ")), !1) : Object.prototype.hasOwnProperty.call(t, "ver") ? l.isVersion(t.ver) ? Object.prototype.hasOwnProperty.call(t, "userData") ? (g.info("3rd party 'customerData' set succeed. 'customerData'(decoded) is: ".concat(JSON.stringify(t))), !0) : (g.warn("'userData' is expected to be a property of 'customerData'(decoded): ".concat(JSON.stringify(t))), !1) : (g.warn("'ver' is expected to be a version format string like(x.x), but got(decoded): ".concat(t.ver, ".\n        'customerData': ").concat(JSON.stringify(t))), !1) : (g.warn("'ver' is expected to be a property of 'customerData'(decoded): ".concat(JSON.stringify(t))), !1)
                }
            }, {
                key: "setCustomerData",
                value: function(e) {
                    e && !this.isCustomerDataValid(e) || (this.customerDataCache.customerData = e, this.customerDataCache.meetingID = "")
                }
            }, {
                key: "getCustomerDataFor",
                value: function(e) {
                    return this.hasCustomerData() ? this.hasCustomerDataFor(e) ? this.getCustomerData() : this.customerDataCache.meetingID ? "" : (this.setCustomerDataFor(e), this.getCustomerData()) : (g.info("没有customerData"), "")
                }
            }, {
                key: "getCustomerData",
                value: function() {
                    return this.customerDataCache.customerData
                }
            }, {
                key: "hasCustomerData",
                value: function() {
                    return !!this.customerDataCache.customerData
                }
            }, {
                key: "hasCustomerDataFor",
                value: function(e) {
                    var t = this.customerDataCache.meetingID,
                        n = this.customerDataCache.customerData;
                    return !(!t || !n) && (e === t || (g.info("we have customerData saved for meetingID '".concat(t, "', but not for '").concat(e, "'")), !1))
                }
            }, {
                key: "setCustomerDataFor",
                value: function(e) {
                    this.customerDataCache.customerData ? (this.customerDataCache.meetingID = e, g.info("meetingID(".concat(e, ") now has a associated customerData.")), l.setValueInLocalStorage("customer_data", this.customerDataCache)) : g.warn("It is supposed to have customerData set firstly before setting meetingID: ".concat(e))
                }
            }, {
                key: "initCustomerDataCache",
                value: function() {
                    var e = l.getValueFromLocalStorage("customer_data");
                    e && (this.customerDataCache = e, g.info("read 'customer_data' from localStorage succeed: ".concat(JSON.stringify(e))))
                }
            }, {
                key: "onAppOnShow",
                value: function(e) {
                    this.setIsRunningForeground(!0);
                    var t = e.scene,
                        n = this.getEventNameByScene(t);
                    if (g.info("app show with scene: ".concat(t, "(").concat(n, ").\n      res: ").concat(JSON.stringify(e), "\n    ")), this.updateAbilityToOpenApp(t), f.validScenesToReceiveCustomerData.includes(t)) {
                        var r = (e || {}).query,
                            s = void 0 === r ? {} : r;
                        this.setCustomerData(s.customerData || null)
                    }
                }
            }, {
                key: "onAppOnHide",
                value: function() {
                    this.setIsRunningForeground(!1)
                }
            }, {
                key: "getEventNameByScene",
                value: function(e) {
                    var t = "";
                    switch (e) {
                        case 1001:
                            t = "open_mp_by_main_port_of_discover";
                            break;
                        case 1005:
                            t = "open_mp_by_search";
                            break;
                        case 1089:
                            t = "open_mp_by_recently_used";
                            break;
                        case 1036:
                            t = "open_mp_by_share_card_from_app";
                            break;
                        case 1007:
                            t = "open_mp_by_share_card_from_mp";
                            break;
                        case 1037:
                            t = "open_mp_by_another_mp";
                            break;
                        case 1048:
                            t = "open_mp_by_longpress_on_mp_code";
                            break;
                        case 1131:
                            t = "open_mp_by_popup_window";
                            break;
                        case 1167:
                            t = "open_mp_by_h5";
                            break;
                        default:
                            t = ""
                    }
                    return t
                }
            }, {
                key: "getBeaconData",
                value: function(e) {
                    var t = {};
                    switch (e.scene) {
                        case 1037:
                            var n = e.query || {},
                                r = e.referrerInfo || {};
                            t = {
                                chn: n.chn || "",
                                appId: r.appId || ""
                            }
                    }
                    return t
                }
            }, {
                key: "updateAbilityToOpenApp",
                value: function(e) {
                    if (1069 === e || 1036 === e) {
                        this.setCanOpenApp(!0);
                        var t = this.getSysInfo();
                        1069 === e && !l.compareVersion(t.SDKVersion, "2.5.1") >= 0 && (this.setCanOpenApp(!1), console.warn("mp sdk is less than 2.5.1, 1069 wont be saved. so we just make it unabled to open App"))
                    } else 1089 === e || 1090 === e || 1038 === e ? this.getCanOpenApp() : this.setCanOpenApp(!1)
                }
            }, {
                key: "onceEventListener",
                value: function(e) {
                    var t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : null;
                    this.unsubscribe("CHANGE", e, t), this.subscribe("CHANGE", e, t)
                }
            }, {
                key: "addEventListener",
                value: function(e) {
                    this.subscribe("CHANGE", e)
                }
            }, {
                key: "removeEventListener",
                value: function(e) {
                    this.unsubscribe("CHANGE", e)
                }
            }, {
                key: "emit",
                value: function(e, t) {
                    this.publish("CHANGE", e, t)
                }
            }]), f
        }();
    f.validScenesToReceiveCustomerData = [1167, 1037];
    var C = new f;
    c.register((function() {
        var e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {},
            t = e.type,
            n = e.payload;
        if (t) switch (t) {
            case h.INIT_SYSTEM_INFO_SUCC:
                var r = n || {},
                    s = r.data,
                    i = void 0 === s ? {} : s;
                C.setSysInfo(i);
                break;
            case h.INIT_SYSTEM_INFO_FAIL:
                C.setSysInfo({});
                break;
            case h.QYWX_VERSION_CHANGE:
                var a = n.data;
                C.setQYWXVersion(a);
                break;
            case h.CURR_ENV_CHANGE:
                C.setCurrEnvKey(n), C.emit(t, n)
        }
    })), console.log("AppStore.js loaded end"), module.exports = C;
});
define("stores/AudioLayoutMembersStore.js", function(require, module, exports, window, document, frames, self, location, navigator, localStorage, history, Caches, screen, alert, confirm, prompt, XMLHttpRequest, WebSocket, Reporter, webkit, WeixinJSCore) {
    "use strict";
    var e = require("../@babel/runtime/helpers/objectSpread2"),
        t = require("../@babel/runtime/helpers/classCallCheck"),
        i = require("../@babel/runtime/helpers/createClass"),
        n = require("../@babel/runtime/helpers/possibleConstructorReturn"),
        s = require("../@babel/runtime/helpers/assertThisInitialized"),
        r = require("../@babel/runtime/helpers/inherits"),
        o = require("../@babel/runtime/helpers/createSuper"),
        a = require("../utils/EventEmitter"),
        c = require("../utils/logger"),
        u = require("../constants/AudioLayoutMembersType"),
        l = require("../constants/MembersType"),
        h = require("./MembersStore"),
        _ = require("./MeetingStore"),
        d = require("./UserStore"),
        v = require("../clients/WemeetClient"),
        f = require("../actions/MeetingAction"),
        k = require("../clients/RavenClient"),
        p = (require("../constants/MeetingType"), new c({
            pageName: "AudioLayoutMembersStore",
            aegisLogEnable: !0,
            wxLogEnable: !1
        })),
        g = function(c) {
            r(y, a);
            var g = o(y);

            function y(e) {
                var i;
                return t(this, y), y.prototype.instance ? n(i, y.prototype.instance) : (i = g.call(this, e), y.prototype.instance = s(i), i)
            }
            return i(y, [{
                key: "init",
                value: function() {
                    p.info("AudioLayoutStore inited"), this.list = [], this.audioMvsp = "", this.GREEN_HAT_LASTS = 10, this.timerGreenHasLasts = 0, this.blocks = [], this.liveBlocks = [
                        [],
                        [],
                        []
                    ], this.i = 0, this.slideState = 0, this._initMemberList(), this._addListener()
                }
            }, {
                key: "uninit",
                value: function() {
                    p.info("[".concat(new Date, "] AudioLayoutStore uninited")), this._removeEventListener()
                }
            }, {
                key: "setSlideState",
                value: function(e) {
                    this.slideState = e
                }
            }, {
                key: "getSlideState",
                value: function() {
                    return this.slideState
                }
            }, {
                key: "_addListener",
                value: function() {
                    h.onceEventListener(this.onMembersStoreChange, this)
                }
            }, {
                key: "_removeEventListener",
                value: function() {
                    h.removeEventListener(this.onMembersStoreChange)
                }
            }, {
                key: "_initMemberList",
                value: function() {
                    var e = this;
                    this.list = [], h.getMembers().forEach((function(t) {
                        e._binaryInsert(t)
                    })), this.updateBlocks(), this._updateMemberList()
                }
            }, {
                key: "_clearGreenHatLastsTimer",
                value: function() {
                    0 < this.timerGreenHasLasts && clearTimeout(this.timerGreenHasLasts)
                }
            }, {
                key: "_updateMemberList",
                value: function() {
                    this.updateLiveBlocks()
                }
            }, {
                key: "updateBlocks",
                value: function() {
                    var e = this.getMemberList(),
                        t = this.toBlocks(e);
                    this.setBlocks(t)
                }
            }, {
                key: "getBlocksLen",
                value: function() {
                    return this.getBlocks().length
                }
            }, {
                key: "getI",
                value: function() {
                    return this.i
                }
            }, {
                key: "setI",
                value: function(e) {
                    this.i = e
                }
            }, {
                key: "getWinBlockAt",
                value: function(e) {
                    return e < 0 || this.getBlocksLen() <= e ? [] : this.getBlocks()[e]
                }
            }, {
                key: "getWinBlocksAt",
                value: function(e) {
                    var t = this.getBlocksLen(),
                        i = [],
                        n = this.getBlocks();
                    if (e < 0 || t <= e) throw new Error("get win blocks at ".concat(e, " failed since the range is [0, ").concat(t, ")"));
                    return i.push(1 <= e ? n[e - 1] : []), i.push(n[e]), i.push(e + 1 < t ? n[e + 1] : []), i
                }
            }, {
                key: "updateLiveBlocks",
                value: function() {
                    if (this.getBlocksLen() - 1 < this.getI()) {
                        p.warn("updateLiveBlocks warning: middel window index is out of range [0, ".concat(this.getBlocksLen(), "). it is\n        supposed to be caused by member leave. we set it at ").concat(this.getBlocksLen() - 1, ". oldWinIndex = ").concat(this.getI()));
                        var e = 1;
                        1 === this.getSlideState() ? e = 2 : 2 === this.getSlideState() && (e = 0), this.updateLiveBlockAt(e, []), this.emit(u.SLIDE_BLOCK_UPDATE, {
                            data: {
                                indexOfNextBlock: e,
                                nextBlock: []
                            }
                        }), this.slideRight()
                    } else {
                        var t = this.getWinBlocksAt(this.getI());
                        this.setLiveBlocks(t)
                    }
                }
            }, {
                key: "slideRight",
                value: function() {
                    this.emit(u.SLIDE_RIGHT, {})
                }
            }, {
                key: "getLiveBlocks",
                value: function() {
                    return this.liveBlocks
                }
            }, {
                key: "setLiveBlocks",
                value: function(e) {
                    if (1 === this.getSlideState()) {
                        var t = e.splice(2, 1)[0];
                        e.unshift(t), 1, 2, 0
                    } else if (2 === this.getSlideState()) {
                        var i = e.shift();
                        e.push(i), 2, 0, 1
                    }
                    Array.isArray(e) && 3 === e.length || (p.error("set liveBlocks error: cannot set ".concat(Array.isArray(e) ? JSON.stringify(e) : e, " to it.\n        stack = ").concat(new Error("stack").stack, "\n      ")), k.captureException("InvalidSetToLiveBlocks", {
                        level: "error"
                    })), this.liveBlocks = e, this.emit(u.MEMBERS_LIST_UPDATE, {
                        data: this.getLiveBlocks()
                    })
                }
            }, {
                key: "updateLiveBlockAt",
                value: function(e, t) {
                    this.getLiveBlocks()[e] = t
                }
            }, {
                key: "getBlocks",
                value: function() {
                    return this.blocks
                }
            }, {
                key: "setBlocks",
                value: function(e) {
                    this.blocks = e
                }
            }, {
                key: "toBlocks",
                value: function(e) {
                    for (var t = (new Date).getTime(), i = [], n = 0, s = e.length; n < s;) {
                        for (var r = [], o = 0; o < y.MEMBERS_COUNT_EACH_PACH && n < s; o++) r.push(e[n++]);
                        i.push(r)
                    }(new Date).getTime();
                    return i
                }
            }, {
                key: "slideDone",
                value: function(e) {
                    var t = e.isSlideTowardsLeft,
                        i = e.slideState,
                        n = this.getI() + (t ? 1 : -1);
                    if (n < 0 || this.getBlocksLen <= n) p.error("slideDone error: new window i should be at range of [0, ".concat(this.getBlocksLen(), "), but got ").concat(n));
                    else {
                        console.info("slide window from [".concat(this.getI(), "] to [").concat(n, "]")), this.setI(n), this.setSlideState(i);
                        var s = this.getWinBlockAt(n + (t ? 1 : -1)),
                            r = -1;
                        if (t) switch (i) {
                            case 0:
                                r = 2;
                                break;
                            case 1:
                                r = 0;
                                break;
                            case 2:
                                r = 1;
                                break;
                            default:
                                throw "invalid slideState ".concat(i, " found in slideDone-left")
                        } else switch (i) {
                            case 0:
                                r = 0;
                                break;
                            case 1:
                                r = 1;
                                break;
                            case 2:
                                r = 2;
                                break;
                            default:
                                throw "invalid slideState ".concat(i, " found in slideDone-right")
                        }
                        this.updateLiveBlockAt(r, s), this.emit(u.SLIDE_BLOCK_UPDATE, {
                            data: {
                                indexOfNextBlock: r,
                                nextBlock: s
                            }
                        })
                    }
                }
            }, {
                key: "isPosOutOfLiveBlocksRange",
                value: function(e) {
                    return (this.getI() + 2) * y.MEMBERS_COUNT_EACH_PACH <= e
                }
            }, {
                key: "isPosWithinLiveBlocksRange",
                value: function(e) {
                    var t = (this.getI() - 1) * y.MEMBERS_COUNT_EACH_PACH,
                        i = (this.getI() + 2) * y.MEMBERS_COUNT_EACH_PACH;
                    return t <= e && e < i
                }
            }, {
                key: "isPosRightAtVisibleArea",
                value: function(e) {
                    var t = this.getI() * y.MEMBERS_COUNT_EACH_PACH,
                        i = (this.getI() + 1) * y.MEMBERS_COUNT_EACH_PACH;
                    return t <= e && e < i
                }
            }, {
                key: "onUserJoin",
                value: function(e) {
                    var t = this,
                        i = !1;
                    e.filter((function(e) {
                        return "7" === e.role_type && 1 === e.allow_speak || "7" !== e.role_type
                    })).forEach((function(e) {
                        var n = t._binaryInsert(e);
                        i || t.isPosOutOfLiveBlocksRange(n) || (i = !0)
                    })), this.updateBlocks(), i && this._updateMemberList()
                }
            }, {
                key: "onUserUpdate",
                value: function(t) {
                    if (_.isWebinarMeeting()) {
                        var i = "7" === t.role_type,
                            n = -1 < this._dummyFind(this.getMemberList(), t);
                        if (i) {
                            var s = 1 === t.allow_speak;
                            if (!n) return void(s && (p.info("成员(".concat(t.nickname, ")现在可以发言了")), this.onUserJoin([t])));
                            if (!s) return p.info("成员(".concat(t.nickname, ")现在被禁止发言，即将移除")), void this.onUserLeave(t)
                        }
                        if (!n && !i) return p.info("成员(".concat(t.nickname, ")现在升级为了嘉宾，可以发言了")), void this.onUserJoin([t])
                    }
                    var r = !1,
                        o = this._binaryUpdate(t);
                    if (this.isPosWithinLiveBlocksRange(o) && (r = !0), t.id.uid === d.getOpenID()) {
                        var a = _.getJoinParam(),
                            c = e(e({}, a), {}, {
                                nickname: t.nickname
                            });
                        f.setJoinParam(c)
                    }
                    r && this._updateMemberList()
                }
            }, {
                key: "onUserLeave",
                value: function(e) {
                    var t = !1,
                        i = this._binaryRemove(e);
                    this.isPosOutOfLiveBlocksRange(i) || (t = !0), this.updateBlocks(), t && this._updateMemberList()
                }
            }, {
                key: "onNotifyJoinAudioMixUserInfo",
                value: function(e) {
                    var t = this;
                    if (!Array.isArray(e) || e.length < 1) p.error("changedUsers is expected to be an Array, but got: ".concat(JSON.stringify(e)));
                    else {
                        var i = [];
                        e.forEach((function(e) {
                            for (var n = v.getKeyById(e.id), s = 0, r = t.getLiveBlocks()[1].length; s < r; s++) t.getLiveBlocks()[1][s].keyString === n && i.push({
                                index: s,
                                audio_grids: t.getLiveBlocks()[1][s].audio_grids
                            })
                        })), i.length < 1 || this.emit(u.NOTIFY_JOIN_AUDIO_MIX_USER_INFO, {
                            data: i
                        })
                    }
                }
            }, {
                key: "onMediaStreamStatusChange",
                value: function(e) {
                    var t = this,
                        i = [];
                    e.forEach((function(e) {
                        for (var n = 0, s = t.getLiveBlocks()[1].length; n < s; n++) t.getLiveBlocks()[1][n].keyString === e && i.push({
                            index: n,
                            network_level: t.getLiveBlocks()[1][n].network_level
                        })
                    })), i.length < 1 ? p.warn("media stream status update ignored since current live block [".concat(this.getI(), "] has no\n        status change push")) : this.emit(u.MEDIA_STREAM_STATUS_CHANGE, {
                        data: i
                    })
                }
            }, {
                key: "onMemberRetireHost",
                value: function(e) {
                    this.onUserUpdate(e)
                }
            }, {
                key: "onMemberBecomeHost",
                value: function(e) {
                    this.onUserUpdate(e)
                }
            }, {
                key: "onMemberRetireCoHost",
                value: function(e) {
                    this.onUserUpdate(e)
                }
            }, {
                key: "onMemberBecomeCoHost",
                value: function(e) {
                    this.onUserUpdate(e)
                }
            }, {
                key: "onAssociatorDeviceChange",
                value: function(e, t) {
                    this._initMemberList()
                }
            }, {
                key: "onMembersStoreChange",
                value: function(e) {
                    var t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {},
                        i = t.data;
                    switch (e) {
                        case l.NOTIFY_CURRENT_MVSP:
                            this.onGreenHatPersonChange(i);
                            break;
                        case l.NOTIFY_JOIN_AUDIO_MIX_USER_INFO:
                            this.onNotifyJoinAudioMixUserInfo(i);
                            break;
                        case l.MEDIA_STREAM_STATUS_CHANGE:
                            this.onMediaStreamStatusChange(i);
                            break;
                        case l.MEMBER_COUNT_CHANGE:
                            this.emit(u.MEMBER_COUNT_CHANGE, {
                                data: i
                            });
                            break;
                        case l.USER_JOIN:
                            this.onUserJoin(i);
                            break;
                        case l.USER_UPDATE:
                            this.onUserUpdate(i);
                            break;
                        case l.USER_LEAVE:
                            this.onUserLeave(i);
                            break;
                        case l.MEMBER_RETIRE_HOST:
                            this.onMemberRetireHost(i);
                            break;
                        case l.MEMBER_BECOME_HOST:
                            this.onMemberBecomeHost(i);
                            break;
                        case l.MEMBER_RETIRE_COHOST:
                            this.onMemberRetireCoHost(i);
                            break;
                        case l.MEMBER_BECOME_COHOST:
                            this.onMemberBecomeCoHost(i);
                            break;
                        case l.ASSOCIATOR_DEVICE_REMOVE:
                        case l.ASSOCIATOR_DEVICE_ADD:
                        case l.ASSOCIATOR_DEVICE_UPDATE:
                            this.onAssociatorDeviceChange(e, i)
                    }
                }
            }, {
                key: "getMemberList",
                value: function() {
                    return this.list
                }
            }, {
                key: "_binaryInsert",
                value: function(e) {
                    if (!e) throw "_binaryInsert failed: user should not be null";
                    if ("7" == e.role_type && "1" != e.allow_speak) return p.reportEvent("webinar_cannot_insert_unspeakable_member_into_audiostore", e.keyString), -1;
                    var t = this.getMemberList();
                    if (null === t) throw "_binaryInsert failed at inserting user ".concat(e.nickname, ": list should not be empty");
                    var i = t.length;
                    if (i < 1) return this.list.push(e), 0;
                    var n = this._binarySearch(t, e);
                    if (n < 0) throw "cannot find pos for ".concat(e.nickname, ". _binarySearch returns pos: ").concat(n);
                    return i - 1 < n ? (this.list.push(e), i) : (this.list.splice(n, 0, e), n)
                }
            }, {
                key: "_binaryUpdate",
                value: function(e) {
                    if (!e) throw "_binaryUpdate failed: user should not be null";
                    var t = this.getMemberList();
                    if (null === t || t.length < 1) throw "_binaryUpdate failed at updating user ".concat(e.nickname, ": list should not be empty");
                    var i = t.length,
                        n = this._dummyFind(t, e);
                    if (n < 0) throw "_binaryUpdate failed at searching pos of user ".concat(e.nickname, ".\n      pos returned = ").concat(n, ", list: ").concat(JSON.stringify(t), ", user: ").concat(JSON.stringify(e));
                    var s = 0 < n && this._compareFunc(e, t[n - 1]) < 0,
                        r = n < i - 1 && this._compareFunc(t[n + 1], e) < 0;
                    if (s) {
                        for (var o = n - 1; 0 <= --o && this._compareFunc(e, t[o]) < 0;);
                        o < 0 ? this.list.unshift(this.list.splice(n, 1)[0]) : this.list.splice(o + 1, 0, this.list.splice(n, 1)[0])
                    } else if (r) {
                        for (var a = n + 1; ++a < i && this._compareFunc(t[a], e) < 0;);
                        i <= a && (a = i), this.list.splice(a, 0, e), this.list.splice(n, 1)
                    }
                    return n
                }
            }, {
                key: "_binaryRemove",
                value: function(e) {
                    if (!e) throw "_binaryRemove failed: user should not be null";
                    var t = this.getMemberList();
                    if (null === t || t.length < 1) throw "_binaryRemove failed at removing user ".concat(e.nickname, ": list should not be empty");
                    var i = this._binarySearch(t, e);
                    if (i < 0 || t.length <= i) throw "_binaryRemove failed at removing user ".concat(e.nickname, ": invalid pos found: ").concat(i);
                    return this.list.splice(i, 1), i
                }
            }, {
                key: "_binarySearch",
                value: function(e, t) {
                    if (!t) return p.error("_binarySearch error: target user must be given."), -1;
                    if (!e || e.length < 1) return p.error("_binarySearch error: list must not be empty"), -1;
                    for (var i = 0, n = e.length - 1, s = v.getKeyById(t.id); i < n;) {
                        var r = Math.ceil((i + n) / 2),
                            o = e[r];
                        if (s === v.getKeyById(o.id)) return r;
                        this._compareFunc(t, o) < 0 ? n = r - 1 : i = r
                    }
                    return i !== n ? (p.error("[ASSERT] i is expected to be equal to j: i = ".concat(i, ", j = ").concat(n, ".\n      list = ").concat(JSON.stringify(e), ", user = ").concat(JSON.stringify(t))), -1) : v.getKeyById(e[i].id) === s || this._compareFunc(t, e[i]) < 0 ? i : i + 1
                }
            }, {
                key: "_dummyFind",
                value: function(e, t) {
                    for (var i = v.getKeyById(t.id), n = -1, s = 0, r = e.length; s < r; s++)
                        if (i === e[s].keyString) {
                            n = s;
                            break
                        }
                    return n
                }
            }, {
                key: "_compareFunc",
                value: function(e, t) {
                    if (e.isSelf) return -1;
                    if (t.isSelf) return 1;
                    if ("1" === e.is_host) return -1;
                    if ("1" === t.is_host) return 1;
                    var i = this._joinTimeCompare(e, t);
                    return "2" === e.role_type && "2" !== t.role_type ? -1 : "2" === t.role_type && "2" !== e.role_type ? 1 : "2" === e.role_type && "2" === t.role_type && 0 !== i ? i : "1" === e.share_on ? -1 : "1" === t.share_on ? 1 : "2" === e.local_record_on && "2" !== t.local_record_on ? -1 : "2" === t.local_record_on && "2" !== e.local_record_on ? 1 : "2" === e.local_record_on && "2" === t.local_record_on && 0 !== i ? i : "1" === e.video_on && "1" !== t.video_on ? -1 : "1" === t.video_on && "1" !== e.video_on ? 1 : "1" === e.video_on && "1" === t.video_on && 0 !== i ? i : e.is_pstn && !t.is_pstn ? -1 : !e.is_pstn && t.is_pstn ? 1 : e.is_pstn && t.is_pstn && 0 !== i ? i : "1" === e.audio_on && "1" !== t.audio_on ? -1 : "1" === t.audio_on && "1" !== e.audio_on ? 1 : ("1" === e.audio_on && t.audio_on, i)
                }
            }, {
                key: "_joinTimeCompare",
                value: function(e, t) {
                    return e.participation_status_stamp < t.participation_status_stamp ? -1 : t.participation_status_stamp < e.participation_status_stamp ? 1 : 0
                }
            }, {
                key: "getAudioMvsp",
                value: function() {
                    return this.audioMvsp
                }
            }, {
                key: "onGreenHatPersonChange",
                value: function(e) {
                    if (!f.isAudioExcitedStrategyEnabled()) return this.audioMvsp = "", void this.emit(u.GREEN_HAT_PERSON_CHANGE, {
                        data: {
                            mvpUid: this.audioMvsp,
                            user: {}
                        }
                    });
                    var t = e.mvsp,
                        i = e.user,
                        n = void 0 === i ? {} : i;
                    this.audioMvsp !== t && (this._clearGreenHatLastsTimer(), t && (this.timerGreenHasLasts = setTimeout((function() {
                        h.clearMvsp()
                    }), 1e3 * this.GREEN_HAT_LASTS))), this.audioMvsp = t, this.emit(u.GREEN_HAT_PERSON_CHANGE, {
                        data: {
                            mvpUid: t,
                            user: n
                        }
                    })
                }
            }, {
                key: "addEventListener",
                value: function(e) {
                    this.subscribe("CHANGE", e)
                }
            }, {
                key: "removeEventListener",
                value: function(e) {
                    this.unsubscribe("CHANGE", e)
                }
            }, {
                key: "onceEventListener",
                value: function(e) {
                    this.unsubscribe("CHANGE", e), this.subscribe("CHANGE", e)
                }
            }, {
                key: "emit",
                value: function(e, t) {
                    this.publish("CHANGE", e, t)
                }
            }]), y
        }();
    g.MEMBERS_COUNT_EACH_PACH = 8;
    var y = new g;
    module.exports = y;
});
define("stores/FloatLayoutMembersStore.js", function(require, module, exports, window, document, frames, self, location, navigator, localStorage, history, Caches, screen, alert, confirm, prompt, XMLHttpRequest, WebSocket, Reporter, webkit, WeixinJSCore) {
    "use strict";
    var e = require("../@babel/runtime/helpers/regeneratorRuntime"),
        t = require("../@babel/runtime/helpers/asyncToGenerator"),
        r = require("../@babel/runtime/helpers/slicedToArray"),
        n = require("../@babel/runtime/helpers/objectSpread2"),
        i = require("../@babel/runtime/helpers/toConsumableArray"),
        a = require("../@babel/runtime/helpers/classCallCheck"),
        s = require("../@babel/runtime/helpers/createClass"),
        o = require("../@babel/runtime/helpers/possibleConstructorReturn"),
        c = require("../@babel/runtime/helpers/assertThisInitialized"),
        u = require("../@babel/runtime/helpers/inherits"),
        l = require("../@babel/runtime/helpers/createSuper");
    console.log("FloatLayoutMembersStore.js loaded start");
    var m = require("../utils/EventEmitter"),
        h = require("../utils/logger"),
        d = require("../utils/Dispatcher"),
        b = require("../constants/FloatLayoutMembersType"),
        _ = require("../constants/MembersType"),
        y = require("../constants/MeetingType"),
        p = require("../constants/LoadingStatus"),
        g = p.LoadingStatus,
        f = p.getReadableLoadingStatus,
        S = require("./MembersStore"),
        v = require("./MeetingStore"),
        M = require("./UserStore"),
        k = require("../clients/WemeetClient"),
        E = require("../utils/util").clog,
        L = require("../actions/MeetingAction"),
        I = require("../utils/plugins/Member"),
        U = require("../configs/AppConfig"),
        A = require("../constants/AppType"),
        R = require("../utils/plugins/PlayerVideoMetric").default,
        T = new h({
            pageName: "FloatLayoutMembersStore",
            aegisLogEnable: !0,
            wxLogEnable: !1
        }),
        O = new(function(h) {
            u(x, m);
            var d, p, O = l(x);

            function x(e) {
                var t;
                return a(this, x), x.prototype.instance ? o(t, x.prototype.instance) : (t = O.call(this, e), x.prototype.instance = c(t), t.init(), t)
            }
            return s(x, [{
                key: "init",
                value: function() {
                    T.info("FloatLayoutMembersStore inited"), this.members = [], this.videoLayoutCompInstance = null, this.SMALL_INDICATOR = "_SmAlL", this.SMALL_REPLACEE = /_SmAlL$/, this.SMALL_REG = new RegExp("".concat(this.SMALL_INDICATOR, "$"), ""), this._addListener()
                }
            }, {
                key: "_addListener",
                value: function() {
                    S.onceEventListener(this.onMembersStoreChange, this), v.onceEventListener(this.onMeetingStoreChange, this)
                }
            }, {
                key: "_removeListener",
                value: function() {
                    S.removeEventListener(this.onMembersStoreChange, this), v.removeEventListener(this.onMeetingStoreChange, this), require("./AppStore").removeEventListener(this.onAppStoreChange, this)
                }
            }, {
                key: "setVideoLayoutCompInstance",
                value: function(e) {
                    this.videoLayoutCompInstance = e
                }
            }, {
                key: "getVideoLayoutCompInstance",
                value: function() {
                    return this.videoLayoutCompInstance
                }
            }, {
                key: "getMe",
                value: function() {
                    if (this.getMembers().length < 1) return null;
                    var e = this.getMembers()[0];
                    return e ? e.isSelf ? e : null : (T.error("members[0] in floatLayoutMembers is supposed to be an Member instance, but got: ".concat(e, ".\n        members = ").concat(JSON.stringify(this.getMembers()), "\n      ")), null)
                }
            }, {
                key: "getMembers",
                value: function() {
                    return this.members
                }
            }, {
                key: "getMainVideoMemberKey",
                value: function() {
                    return (this.getMemberByIndex(1) || {}).keyString || ""
                }
            }, {
                key: "getMainVideoMember",
                value: function() {
                    return this.getMemberByIndex(1)
                }
            }, {
                key: "getMemberByIndex",
                value: function(e) {
                    return e < 0 || this.members.length <= e ? (T.error("cannot find member at index ".concat(e, ". members = ").concat(JSON.stringify(this.getMembers()))), null) : this.members[e] ? this.members[e] : (T.error("member at [".concat(e, "] is supposed to be non-empty, why?\n        members(len = ").concat(this.getMembers().length, "):\n        ").concat(JSON.stringify(this.getMembers()), "\n      ")), null)
                }
            }, {
                key: "getMemberByKey",
                value: function(e) {
                    var t = this.getUserIndexByKey(e);
                    return this.getMemberByIndex(t)
                }
            }, {
                key: "onMembersStoreChange",
                value: function(e) {
                    var t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {},
                        r = t.data;
                    switch (e) {
                        case _.MEETING_HAS_VIDEO_ON:
                            this.emit(b.MEETING_HAS_VIDEO_ON, {});
                            break;
                        case _.MEETING_HAS_NO_VIDEO:
                            this.emit(b.MEETING_HAS_NO_VIDEO, {});
                            break;
                        case _.ASSOCIATOR_DEVICE_REMOVE:
                        case _.ASSOCIATOR_DEVICE_ADD:
                        case _.ASSOCIATOR_DEVICE_UPDATE:
                            this.onAssociatorDeviceChange(e, r);
                            break;
                        case _.TURN_OFF_USER_LIVE_PLAYER:
                            this.onUserTurnsOffVideo(r);
                            break;
                        case _.TURN_ON_USER_LIVE_PLAYER:
                            this.onUserTurnsOnVideo(r);
                            break;
                        case _.SCREEN_SHARE_END:
                            this.onScreenShareEnd(r);
                            break;
                        case _.SCREEN_SHARE_START:
                            this.onScreenShareStart(r);
                            break;
                        case _.MEMBER_COUNT_CHANGE:
                            this.onMemberCountChange(r);
                            break;
                        case _.USER_JOIN:
                            this.onUserJoin(r);
                            break;
                        case _.SCREEN_SHARE_PAUSE:
                            this.onScreenSharePause(r);
                            break;
                        case _.SCREEN_SHARE_RESUME:
                            this.onScreenShareResume(r);
                            break;
                        case _.USER_UPDATE:
                            this.onUserUpdate(r);
                            break;
                        case _.USER_LEAVE:
                            this.onUserLeave(r);
                            break;
                        case _.NOTIFY_CURRENT_MVSP:
                            this.onNotifyCurrentMvsp(r);
                            break;
                        case _.NOTIFY_JOIN_AUDIO_MIX_USER_INFO:
                            this.onNotifyJoinAudioMixUserInfo(r);
                            break;
                        case _.MEDIA_STREAM_STATUS_CHANGE:
                            this.onMediaStreamStatusChange(r);
                            break;
                        case _.MEMBER_LOCK_DONE:
                            this.onMemberLockDone(r);
                            break;
                        case _.MEMBER_UNLOCK_DONE:
                            this.onMemberUnlockDone(r);
                            break;
                        case _.MEMBER_RETIRE_HOST:
                            this.onMemberRetireHost(r);
                            break;
                        case _.MEMBER_BECOME_HOST:
                            this.onMemberBecomeHost(r);
                            break;
                        case _.MEMBER_RETIRE_COHOST:
                            this.onMemberRetireCoHost(r);
                            break;
                        case _.MEMBER_BECOME_COHOST:
                            this.onMemberBecomeCoHost(r)
                    }
                }
            }, {
                key: "onMeetingStoreChange",
                value: function(e) {
                    var t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {},
                        r = t.data;
                    switch (e) {
                        case y.REMOTE_VIDEO_REMOVE:
                            this.clearRemoteStreamURL(r);
                            break;
                        case y.LEAVE_MEETING_SUCC:
                        case y.LEAVE_MEETING_FAIL:
                            this.clear();
                            break;
                        case y.STOP_ALL_PLAYERS:
                            this.emit(b.STOP_ALL_PLAYERS, {})
                    }
                }
            }, {
                key: "onNotifyCurrentMvsp",
                value: function(e) {
                    var t = e.mvsp;
                    this.emit(b.MOST_VOICED_PERSON_CHANGE, {
                        data: t
                    }), L.isAudioExcitedStrategyEnabled() && this.takeHimToTop(t) && this.updateFloatLayoutMembers(!1)
                }
            }, {
                key: "takeHimToTop",
                value: function(e) {
                    if (!e) return !1;
                    for (var t = this.members, r = -1, n = 0, i = t.length; n < i; n++)
                        if (t[n].keyString === e && !t[n].is_screen_share) {
                            r = n;
                            break
                        }
                    if (r < 0) return !1;
                    var a = t[r];
                    if (t[r].isSelf) return !1;
                    if (t[r].is_video_lock) return t[r].is_audio_excited = !0, this.isMemberVisible(t[r]) || (T.warn("".concat(a.nickname, " cannot be taken to top since he has been locked at ").concat(r, ".")), t[r].is_video_lock = !1, t[r].is_audio_excited = !1), !1;
                    var s = [],
                        o = [];
                    t.forEach((function(e, t) {
                        e.isSelf || e.is_video_lock || (s.push(e), o.push(t))
                    }));
                    var c = -1,
                        u = this.getMaxVisibleMemberIndex();
                    return 1 < s.length ? (c = o[0]) < 1 ? (T.error("new mvp index cannot be less than 1: ".concat(c)), !1) : !(u < c) && (t[r].is_audio_excited = !0, t[r].isMvp = !0, s.sort((function(e, t) {
                        return e.isMvp && !t.isMvp ? -1 : !e.isMvp && t.isMvp ? 1 : 0
                    })), s.forEach((function(e, r) {
                        t[o[r]] = e, Object.prototype.hasOwnProperty.call(e, "isMvp") && delete e.isMvp
                    })), u + 1 < t.length && (t[u + 1].is_audio_excited, t[u + 1].is_audio_excited = !1), r !== c) : (this.isMemberVisible(a) && (t[r].is_audio_excited = !0), !1)
                }
            }, {
                key: "onUserJoin",
                value: function(e) {
                    var t;
                    (t = this.members).push.apply(t, i(e)), this.updateFloatLayoutMembers()
                }
            }, {
                key: "onUserUpdate",
                value: function(e) {
                    if ("7" !== e.role_type || e.isSelf) {
                        if ("7" !== e.role_type && !e.isSelf && this.getUserIndex(e) < 0) return T.info("".concat(e.nickname, "观众成为嘉宾，video视图增加")), void this.onUserJoin([e])
                    } else if (0 === e.allow_speak) {
                        if (this.getUserIndex(e) > -1) return T.info("".concat(e.nickname, "成为禁止发言的观众，video视图取消")), void this.onUserLeave(e);
                        T.assert("用户禁止发言了，但是不在floatStore里!!")
                    } else if (this.getUserIndex(e) < 0) return T.info("".concat(e.nickname, "观众被允许发言，video视图增加")), void this.onUserJoin([e]);
                    if (e.id.uid === M.getOpenID()) {
                        var t = v.getJoinParam(),
                            r = n(n({}, t), {}, {
                                nickname: e.nickname
                            });
                        L.setJoinParam(r)
                    }
                    if ("1" === e.share_on) {
                        var i = this.getAuxUserIndex(e);
                        if (i < 0) return void T.error("invalid index when updating screen share member: ".concat(e.nickname, ", i = ").concat(i));
                        var a = this.members[i];
                        Object.keys(a).forEach((function(t) {
                            "audio_on" !== t && "video_on" !== t && "handsup" !== t && "raise_hand" !== t && "role_type" !== t && "nickname" !== t && "sub_associator" !== t && "members_seq" !== t && "local_record_on" !== t && "share_pause" !== t || (a[t] = e[t])
                        }))
                    }
                    "1" === e.web_share_on && this.emit(b.WEB_SCREEN_SHARE_START, {
                        data: e
                    }), this.updateFloatLayoutMembers(!0)
                }
            }, {
                key: "onUserLeave",
                value: function(e) {
                    var t = this.getUserIndex(e);
                    t < 0 ? T.error("can't find ".concat(e.nickname, ". l = ").concat(this.members.length, ", m = ").concat(JSON.stringify(this.members))) : this.members.splice(t, 1), this.updateFloatLayoutMembers(!0)
                }
            }, {
                key: "onScreenShareStart",
                value: function(e) {
                    var t = new I(JSON.parse(JSON.stringify(e)));
                    t.playURL = "", t.share_on = "1", t.is_video_lock = !0, t.is_screen_share = !0, t.keyString = "".concat(k.getKeyById(t.id), "_aux"), t.created_times = S.getCreatedTimesOf(t.keyString), T.info("".concat(t.nickname, "的aux已创建 ").concat(t.created_times, " 次")), "1" !== t.share_pause ? (t.is_loading = !0, t.loading_status = g.Loading, T.info("开启aux，设置loading"), this.changeScreenShareMemberToMain(e)) : (t.is_loading = !1, t.loading_status = g.Closed, T.info("开启aux，但暂停了")), this.members.splice(1, 0, t), this.updateFloatLayoutMembers(!1)
                }
            }, {
                key: "isVideoOn",
                value: function(e) {
                    return "1" === e.video_on
                }
            }, {
                key: "changeScreenShareMemberToSmall",
                value: function(e) {
                    this.isVideoOn(e) && this.isMemberVisible(e) && this.updateUserMediaStreamPlayURL(e)
                }
            }, {
                key: "changeScreenShareMemberToMain",
                value: function(e) {
                    this.isVideoOn(e) && this.isMemberVisible(e) && this.updateUserMediaStreamPlayURL(e)
                }
            }, {
                key: "getAuxMember",
                value: function(e) {
                    var t = this.getAuxUserIndex(e);
                    return t < 0 ? (T.error("invalid index when getting screen share member of ".concat(e.nickname)), null) : this.members[t]
                }
            }, {
                key: "onScreenSharePause",
                value: function(e) {
                    var t = this.getAuxMember(e);
                    t.share_pause = "1", this.clearUserStreamState(t)
                }
            }, {
                key: "onScreenShareResume",
                value: function(e) {
                    var t = this.getAuxMember(e);
                    t.share_pause = "0", this.changeScreenShareMemberToMain(e), this.updateUserMediaStreamPlayURL(t)
                }
            }, {
                key: "onScreenShareEnd",
                value: function(e) {
                    var t = this.getAuxUserIndex(e);
                    t < 0 ? T.error("invalid index when removing screen share member: ".concat(t)) : (this.members.splice(t, 1), this.updateFloatLayoutMembers(!0), this.emit(b.SCREEN_SHARE_END, {
                        data: e
                    }))
                }
            }, {
                key: "getAuxUserIndex",
                value: function(e) {
                    for (var t = -1, r = "".concat(k.getKeyById(e.id), "_aux"), n = 0, i = this.members.length; n < i; n++)
                        if (this.members[n].keyString === r) {
                            t = n;
                            break
                        }
                    return t < 0 ? T.error("".concat(new Error("[ASSERT] cannot find screen share member whos keyString = ".concat(r, ",\n      in member list of len ").concat(this.members.length, ": ").concat(JSON.stringify(this.members))).stack)) : 1 !== t && T.error("".concat(new Error("[ASSERT] how could screen member ".concat(this.members[t].nickname, "\n        positioned at index ").concat(t, " but not 1?")).stack)), t
                }
            }, {
                key: "validateMemberIndex",
                value: function(e) {
                    return !(e < 0 || this.members.length <= e) || (T.error("".concat(new Error("[ASSERT] bad index(".concat(e, ") because members's length = ").concat(this.members.length)).stack)), !1)
                }
            }, {
                key: "getUserIndex",
                value: function(e) {
                    var t = e.keyString ? e.keyString : k.getKeyById(e.id);
                    return t || T.error("[ASSERT] prop 'keyString' is invalid on user '".concat(e.nickname, "': ").concat(JSON.stringify(e))), this.getUserIndexByKey(t)
                }
            }, {
                key: "getUserIndexByKey",
                value: function(e) {
                    var t = -1;
                    if (!e) return T.error("[ASSERT] keyString is invalid at getUserIndexByKey"), t;
                    for (var r = 0, n = this.members.length; r < n; r++)
                        if (this.members[r].keyString === e) {
                            t = r;
                            break
                        }
                    return t
                }
            }, {
                key: "isStreamTypeValid",
                value: function(e) {
                    var t = U.streamType;
                    return e === t.main || e === t.small || e === t.aux || (T.assert("streamType must be either '".concat(t.main, "' / '").concat(t.small, "' / '").concat(t.aux, "', but got: ").concat(e)), !1)
                }
            }, {
                key: "getUserByPlayerInfo",
                value: function(e, t) {
                    if (!e) return T.assert("userID is invalid"), null;
                    if (!this.isStreamTypeValid(t)) return null;
                    for (var r = 0, n = this.members.length; r < n; r++) {
                        var i = this.members[r].is_screen_share,
                            a = this.members[r].id.unique_id;
                        if (a || (T.assert("'id.unique_id' must not be empty"), T.error("bad format user: ".concat(JSON.stringify(this.members[r])))), (t !== U.streamType.aux || i) && (t !== U.streamType.main && t !== U.streamType.small || !i) && a === e) return [r, this.members[r]]
                    }
                    var s = this.members.length,
                        o = this.getMaxVisibleMemberIndex();
                    return T.warn("cannot find member whose userID = ".concat(e, ", streamType = ").concat(t, " in member list of len ").concat(s, ".\n      (print up to ").concat(o, "): ").concat(JSON.stringify(this.members.slice(0, Math.min(o, s))))), null
                }
            }, {
                key: "onAssociatorDeviceChange",
                value: function() {
                    this.updateFloatLayoutMembers(!0)
                }
            }, {
                key: "isMemberVisible",
                value: function(e) {
                    var t = this.getUserIndexByKey(e.keyString);
                    return -1 !== t && !(this.getMaxVisibleMemberIndex() < t)
                }
            }, {
                key: "getMaxVisibleMemberIndex",
                value: function() {
                    return this.isWebinarAndNotAllowedToSpeak() ? 4 : 3
                }
            }, {
                key: "getVisibleMemberCount",
                value: function() {
                    return this.isWebinarAndNotAllowedToSpeak() ? Math.min(4, this.getMembers().length - 1) : Math.min(4, this.getMembers().length)
                }
            }, {
                key: "onUserTurnsOnVideo",
                value: function(e) {
                    this.isMemberVisible(e) && this.updateUserMediaStreamPlayURL(e)
                }
            }, {
                key: "resetUserStreamState",
                value: function(e) {
                    e ? (e.playURL = "", e.streamID = "", e.loading_status = g.Closed, e.is_loading = !1) : T.assert("cannot reset user's stream state, it is null")
                }
            }, {
                key: "onUserTurnsOffVideo",
                value: function(e) {
                    this.isMemberVisible(e) ? (R.stopPlaying(this.getStreamID(e)), this.clearUserStreamState(e)) : this.resetUserStreamState(e)
                }
            }, {
                key: "getStreamID",
                value: function(e) {
                    var t;
                    if (!e) return T.assert("to get streamID, the member passed in must not be null"), "";
                    var r, n = null === (t = e.id) || void 0 === t ? void 0 : t.unique_id;
                    if (!n && (T.assert("'unique_id' is missing in 'id'. user: ".concat(JSON.stringify(e))), !(n = null === (r = e.id) || void 0 === r ? void 0 : r.av_uid))) return T.assert("'av_uid' also is missing in 'id'. forget it."), "";
                    var i = this.getStreamTypeToPull(e);
                    return "".concat(n, "_").concat(i)
                }
            }, {
                key: "clearUserStreamState",
                value: function(e) {
                    var t = e,
                        r = this.isMemberVideoHasBeenClosed(t),
                        n = t.is_screen_share,
                        i = this.getUserUniqueID(t),
                        a = "".concat(t.nickname, "(").concat(i, ")").concat(n ? "[screen share]" : "[video]");
                    if (r) {
                        if (!t.streamID) return;
                        T.info("".concat(a, " has been firstly closed by xmpp. We shall stop pulling stream")), this.emit(b.TURN_OFF_USER_LIVE_PLAYER, {
                            data: e
                        })
                    } else T.info("".concat(a, " has been firstly removed from trtc. We shall stop pulling stream")), this.emit(b.TURN_OFF_USER_LIVE_PLAYER, {
                        data: e
                    });
                    t.playURL = "", t.loading_status = g.Closed, t.streamID = "", t.is_loading = !1, this.emit(b.PLAYURL_CLEARED, {
                        data: t
                    })
                }
            }, {
                key: "onNotifyJoinAudioMixUserInfo",
                value: function(e) {
                    if (S.getHasScreenShareInMeeting()) {
                        var t = 1 < this.members.length && this.members[1];
                        if (t) {
                            for (var r = 0, n = e.length; r < n; r++)
                                if ("".concat(e[r].keyString, "_aux") === t.keyString) {
                                    this.members[1].audio_grids = e[r].audio_grids;
                                    break
                                }
                        } else E.error("[ASSERT] meeting has screen share but cannot find it at [1].\n        len = ".concat(this.members.length, ", members = ").concat(JSON.stringify(this.members)))
                    }
                    this.emit(b.NOTIFY_JOIN_AUDIO_MIX_USER_INFO, {})
                }
            }, {
                key: "onMediaStreamStatusChange",
                value: function(e) {
                    var t = this,
                        r = [];
                    e.forEach((function(e) {
                        for (var n = 0, i = t.members.length; n < i; n++) t.members[n].keyString === e && r.push({
                            index: n,
                            network_level: t.members[n].network_level
                        })
                    })), r.length < 1 ? T.warn("media stream status update ignored since no change for the 4 members in floatLayout") : this.emit(b.MEDIA_STREAM_STATUS_CHANGE, {
                        data: r
                    })
                }
            }, {
                key: "onMemberLockDone",
                value: function(e) {
                    this.emit(b.MEMBER_LOCK_DONE, {
                        data: e.keyString
                    })
                }
            }, {
                key: "onMemberUnlockDone",
                value: function(e) {
                    this.emit(b.MEMBER_UNLOCK_DONE, {
                        data: e.keyString
                    })
                }
            }, {
                key: "onMemberRetireHost",
                value: function(e) {
                    if ("1" === e.share_on)
                        for (var t = "".concat(k.getKeyById(e.id), "_aux"), r = 0, n = this.members.length; r < n; r++)
                            if (this.members[r].keyString === t) {
                                this.members[r].is_host = "0", this.members[r].role_type = "3", E.info("".concat(e.nickname, " 不再是主持人，他的屏幕共享主持人角色也已被取消"));
                                break
                            }
                    this.updateFloatLayoutMembers(!0)
                }
            }, {
                key: "onMemberBecomeHost",
                value: function(e) {
                    if (e) {
                        if ("1" === e.share_on)
                            for (var t = "".concat(k.getKeyById(e.id), "_aux"), r = 0, n = this.members.length; r < n; r++)
                                if (this.members[r].keyString === t) {
                                    this.members[r].is_host = "1", this.members[r].role_type = "1", E.info("".concat(e.nickname, " 成为主持人，他的屏幕共享也被设置为主持人角色"));
                                    break
                                }
                        this.updateFloatLayoutMembers(!0)
                    } else T.warn("newHost is empty at onMemberBecomeHost::onMemberBecomeHost")
                }
            }, {
                key: "onMemberBecomeCoHost",
                value: function(e) {
                    if ("1" === e.share_on)
                        for (var t = "".concat(k.getKeyById(e.id), "_aux"), r = 0, n = this.members.length; r < n; r++)
                            if (this.members[r].keyString === t) {
                                this.members[r].role_type = "2", E.info("".concat(e.nickname, " 成为联席主持人，他的屏幕共享也被设置为联席角色"));
                                break
                            }
                    this.updateFloatLayoutMembers(!0)
                }
            }, {
                key: "onMemberRetireCoHost",
                value: function(e) {
                    if ("1" === e.share_on)
                        for (var t = "".concat(k.getKeyById(e.id), "_aux"), r = 0, n = this.members.length; r < n; r++)
                            if (this.members[r].keyString === t) {
                                this.members[r].role_type = "3", E.info("".concat(e.nickname, " 不再是联席主持人，他的屏幕共享联席角色也已被取消"));
                                break
                            }
                    this.updateFloatLayoutMembers(!0)
                }
            }, {
                key: "onMemberCountChange",
                value: function(e) {
                    this.emit(b.MEMBER_COUNT_CHANGE, {
                        data: e
                    })
                }
            }, {
                key: "findUserByPlayer",
                value: function(e) {
                    var t = e || {},
                        n = t.userID,
                        i = void 0 === n ? "" : n,
                        a = t.streamType,
                        s = void 0 === a ? "" : a;
                    if (!i) return T.assert("userID is invalid"), null;
                    if (!s) return T.assert("invalid streamType"), null;
                    var o = this.getUserByPlayerInfo(i, s) || [],
                        c = r(o, 2),
                        u = c[0],
                        l = c[1];
                    return l ? [u, l] : null
                }
            }, {
                key: "isMemberVideoHasBeenClosed",
                value: function(e) {
                    return e.is_screen_share ? ("0" === e.share_on && T.assert("how could this happen? screen share member is closed but still exists in members?\n        screen share member: ".concat(JSON.stringify(e))), "1" === e.share_pause) : "0" === e.video_on
                }
            }, {
                key: "clearRemoteStreamURL",
                value: function(e) {
                    var t = this.findUserByPlayer(e) || [],
                        n = r(t, 2)[1];
                    n && this.clearUserStreamState(n)
                }
            }, {
                key: "clear",
                value: function() {
                    T.info("FloatLayoutMembersStore cleared"), this.members = [], this.setVideoLayoutCompInstance(null), this._removeListener()
                }
            }, {
                key: "updateRemoteStreamURL",
                value: function(e) {
                    var t = e || {},
                        n = t.src,
                        i = void 0 === n ? "" : n,
                        a = t.userID;
                    t.streamType, t.streamID, t.id;
                    if (i) {
                        if (a !== U.MixAudioStreamID) {
                            var s = this.findUserByPlayer(e) || [],
                                o = r(s, 2),
                                c = (o[0], o[1]);
                            c && (this.isMemberVideoHasBeenClosed(c) ? T.info("trtc media pushes src, but ".concat(c.nickname, "'s video hasn't been enabled, ignored.")) : this.isMemberVisible(c) ? this.updateUserStreamState(c, e) : T.info("".concat(c.nickname, " is outside screen, wont init his playURL")))
                        }
                    } else T.assert("no src for player: ".concat(a, ".\n        player: ").concat(JSON.stringify(e), "\n      "))
                }
            }, {
                key: "getStreamUrlObj",
                value: function(e, t) {
                    if (!t) return null;
                    if (e[t]) return e[t];
                    if (!/^\d+_.+_\d+$/.test(t)) return null;
                    for (var r in e) {
                        var n = r.replace(t, "");
                        if (/^-\d+$/.test(n)) return e[r]
                    }
                    return null
                }
            }, {
                key: "isUserIdConsideredEqual",
                value: function(e, t) {
                    if (e === t) return !0;
                    if (!/^\d+_.+_\d+$/.test(e)) return !1;
                    var r = t.replace(e, "");
                    return !!/^-\d+$/.test(r)
                }
            }, {
                key: "getUserStreams",
                value: function(e) {
                    var t = this,
                        r = {};
                    return e.forEach((function(n) {
                        var i = n.userid;
                        if (n.playurl) {
                            var a = !1;
                            t.SMALL_REG.test(i) && (i = i.replace(t.SMALL_REPLACEE, ""), a = !0);
                            var s = r[i];
                            s || (r[i] = {
                                mainUrl: "",
                                smallUrl: ""
                            }, s = r[i]), a ? (s.smallUrl && T.error("".concat(i, " already has a SMALL stream, why got another SMALL stream?\n          exist: ").concat(s.smallUrl, ", new: ").concat(n.playurl)), s.smallUrl = n.playurl) : (s.mainUrl && T.error("".concat(i, " already has a MAIN stream, why got another MAIN stream?\n          exist: ").concat(s.mainUrl, ", new: ").concat(n.playurl)), s.mainUrl = n.playurl)
                        } else T.error("".concat(i, "'s playurl got from 1020 is invalid, users in 1020: ").concat(JSON.stringify(e)))
                    })), r
                }
            }, {
                key: "isWebinarAndNotAllowedToSpeak",
                value: function() {
                    var e = this.members[0];
                    return !(!e || !e.isSelf) && (v.isWebinarMeeting() && 1 !== e.allow_speak)
                }
            }, {
                key: "updateFloatLayoutMembers",
                value: function() {
                    var e, t = !(arguments.length > 0 && void 0 !== arguments[0]) || arguments[0];
                    t && this.sortMembers();
                    var r = this.members.slice(0, this.getMaxVisibleMemberIndex() + 1),
                        n = v.getIsSmallVideoCollapsed(),
                        i = !(!v.isWebinarMeeting() || 1 === (null === (e = r[0]) || void 0 === e ? void 0 : e.allow_speak) || 2 !== r.length) || n;
                    v.setIsSmallVideoCollapsed(i);
                    var a = 1 === this.getVisibleMemberCount();
                    this.emit(b.UPDATE_MEMBERS, {
                        data: {
                            members: r,
                            shouldHideArrow: a
                        }
                    })
                }
            }, {
                key: "updateUserMediaStreamPlayURL",
                value: function(e) {
                    if (!e.isSelf) {
                        var t = "1" === e.share_on && e.is_screen_share,
                            r = "1" === e.video_on;
                        if (t || r) {
                            var n = e.is_screen_share ? U.streamType.aux : U.streamType.main;
                            e.is_screen_share && !/_aux$/.test(e.keyString) && T.assert("screen share member's keyString must be postfixed with '_aux', but got: ".concat(e.keyString, "\n        member: ").concat(JSON.stringify(e), "\n      "));
                            var i = this.getUserUniqueID(e);
                            if (v.getTRTCInstance()) {
                                var a = v.getTRTCInstance().findPlayerAccordingTo(i, n);
                                if (a) this.updateUserStreamState(e, a);
                                else e.is_loading = !0, require("./AppStore").isRunningForeground() ? (e.loading_status = g.Loading, R.startLoading(this.getStreamID(e))) : e.loading_status = g.Pending, T.info("(2)未能从trtc媒体播放列表找到 '".concat(e.nickname, "(").concat(i, ")' 的 '").concat(n, "' player，等媒体下发")), this.emit(b.TURN_ON_USER_LIVE_PLAYER, {
                                    data: e
                                })
                            } else T.info("trtc has been destroyed, ignore to update member(".concat(i, "_").concat(n, ")'s url."))
                        }
                    }
                }
            }, {
                key: "getUserUniqueID",
                value: function(e) {
                    if (!e) return T.assert("to get user unique_id, user must not be null"), "";
                    var t = e.id.unique_id;
                    return t || (T.warn("".concat(e.nickname, "'s 'id' property lacks of 'unique_id' as its child property.")), e.id.av_uid ? t = e.id.av_uid : (t = "", T.assert('also lacks of "av_uid" under "id"'))), t
                }
            }, {
                key: "getStreamTypeToPull",
                value: function(e) {
                    var t = "1" === e.share_on;
                    return e.is_screen_share ? U.streamType.aux : t || this.getMainVideoMemberKey() === e.keyString ? U.streamType.main : U.streamType.small
                }
            }, {
                key: "waitForLivePlayerToStop",
                value: (p = t(e().mark((function r(n) {
                    var i = this;
                    return e().wrap((function(r) {
                        for (;;) switch (r.prev = r.next) {
                            case 0:
                                return r.abrupt("return", new Promise(function() {
                                    var r = t(e().mark((function t(r) {
                                        var a, s;
                                        return e().wrap((function(e) {
                                            for (;;) switch (e.prev = e.next) {
                                                case 0:
                                                    return a = setTimeout((function() {
                                                        r(!1)
                                                    }), 3e3), s = require("../actions/FloatLayoutMembersAction.js"), R.stopPlaying(i.getStreamID(n)), e.next = 5, s.stopLivePlayer(n);
                                                case 5:
                                                    clearTimeout(a), r(!0);
                                                case 7:
                                                case "end":
                                                    return e.stop()
                                            }
                                        }), t)
                                    })));
                                    return function(e) {
                                        return r.apply(this, arguments)
                                    }
                                }()));
                            case 1:
                            case "end":
                                return r.stop()
                        }
                    }), r)
                }))), function(e) {
                    return p.apply(this, arguments)
                })
            }, {
                key: "updateUserStreamState",
                value: (d = t(e().mark((function t(r, n) {
                    var i, a, s, o, c, u, l, m, h, d, _, y, p, v;
                    return e().wrap((function(e) {
                        for (;;) switch (e.prev = e.next) {
                            case 0:
                                if ((i = r) && n) {
                                    e.next = 4;
                                    break
                                }
                                return T.error("to update user stream state, user/player must not both be null.\n        user: ".concat(JSON.stringify(i), "\n        player: ").concat(JSON.stringify(n), "\n      ")), e.abrupt("return");
                            case 4:
                                if (a = n.src, s = void 0 === a ? "" : a, o = n.streamType, c = n.streamID, u = this.getUserUniqueID(i), l = i.is_screen_share, m = "".concat(i.nickname, "(").concat(u, ")").concat(l ? "[screen share]" : ""), !l || "aux" === o) {
                                    e.next = 11;
                                    break
                                }
                                return T.assert("".concat(m, " is a screen share member, expected to got stream type with 'aux'.\n        but got: ").concat(o, "\n        player: ").concat(JSON.stringify(n), "\n      ")), e.abrupt("return");
                            case 11:
                                if (l || "main" === o) {
                                    e.next = 14;
                                    break
                                }
                                return T.assert("".concat(m, " is not a screen share member, expected to got stream type with 'main'.\n        but got: ").concat(o, "\n        player: ").concat(JSON.stringify(n), "\n      ")), e.abrupt("return");
                            case 14:
                                if (c) {
                                    e.next = 17;
                                    break
                                }
                                return T.assert("player of ".concat(m, "'s streamID is invalid.\n        player: ").concat(JSON.stringify(n), "\n      ")), e.abrupt("return");
                            case 17:
                                if (this.getStreamTypeToPull(i) === U.streamType.small && (s = s.replace(/main$/, U.streamType.small)), !(h = i.playURL === s)) {
                                    e.next = 26;
                                    break
                                }
                                if (i.loading_status !== g.Playing) {
                                    e.next = 25;
                                    break
                                }
                                return T.warn("IGNORED! ".concat(m, "'s playURL doesn't change but already playing. ").concat(s)), e.abrupt("return");
                            case 25:
                                T.info("".concat(m, "'s playURL doesn't change, but it is not playing. \n        current: ").concat(f(i.loading_status), "\n        m: ").concat(JSON.stringify(i), "\n      "));
                            case 26:
                                if (d = !i.playURL, _ = !d && !h, i.is_loading = !0, require("./AppStore").isRunningForeground() ? (i.loading_status = g.Loading, R.startLoading(this.getStreamID(i))) : (_ && i.loading_status !== g.Paused && T.assert("why? playURL updated at background but its previous loading status is not paused, but got: ".concat(i.loading_status)), i.loading_status = i.loading_status === g.Paused ? g.PausedPending : g.Pending), !_) {
                                    e.next = 38;
                                    break
                                }
                                return T.info("".concat(m, "'s playURL changes, we shall stop it before playing it.\n        About to be stopped: ").concat(i.playURL, "\n      ")), e.next = 35, this.waitForLivePlayerToStop(i);
                            case 35:
                                y = e.sent, R.startLoading(this.getStreamID(i)), y ? T.info("stop ".concat(m, "'s <live-player> succeed, we shall update its src now")) : (T.assert("couldn't stop ".concat(m, "'s <live-player> before updating to newer one.")), T.reportEvent("assert_stop_before_update_playurl", m), i.streamID = "", this.emit(b.STOP_LIVE_PLAYER, {
                                    data: {
                                        user: i
                                    }
                                }), S.increaseCreatedTimesOf(i));
                            case 38:
                                p = d ? "(3)initialized to ".concat(s) : _ ? "(4)changed from ".concat(i.playURL, " to ").concat(s) : "(5)doesn't changed", d && S.increaseCreatedTimesOf(i), T.info("".concat(m, "'s playURL ").concat(p), "No.".concat(i.created_times)), i.playURL = s, i.streamID = c, v = l ? b.AUX_VIDEO_PLAYURL_CHANGE : b.MAIN_VIDEO_PLAYURL_CHANGE, this.emit(v, {
                                    data: {
                                        user: i,
                                        player: n,
                                        needToPlayManually: !0
                                    }
                                });
                            case 45:
                            case "end":
                                return e.stop()
                        }
                    }), t, this)
                }))), function(e, t) {
                    return d.apply(this, arguments)
                })
            }, {
                key: "getStreamTag",
                value: function(e) {
                    if (!e.playURL) return T.warn("playURL is invalid when calling getStreamTag. m: ".concat(JSON.stringify(e))), "";
                    var t = e.playURL.replace(/.*?streamtype\=(.*)$/, "$1");
                    return t === U.streamType.main ? "M" : t === U.streamType.small ? "S" : t === U.streamType.aux ? "A" : (T.assert("streamtype(".concat(t, ") for playURL(").concat(e.playURL, ") hasn't been supported")), "")
                }
            }, {
                key: "sortMembers",
                value: function() {
                    var e = this,
                        t = [],
                        r = [],
                        n = this.getMaxVisibleMemberIndex() + 1;
                    if (this.members.forEach((function(i, a) {
                            i ? a < n && (i.is_video_lock || i.is_audio_excited) || (i.is_video_lock = !1, i.is_audio_excited = !1, t.push(i), r.push(a)) : console.error("ASSERT: ", e.members)
                        })), t.length <= 0) console.warn("没有需要排序的未锁定视频，所有都是锁定的，忽略即可");
                    else {
                        t.sort(this._compare.bind(this));
                        for (var i = 0, a = t.length; i < a; i++) this.members[r[i]] = t[i]
                    }
                }
            }, {
                key: "_compare",
                value: function(e, t) {
                    if (e.isSelf) return -1;
                    if (t.isSelf) return 1;
                    if (!0 === e.is_screen_share) return -1;
                    if (!0 === t.is_screen_share) return 1;
                    if ("1" === e.share_on) return -1;
                    if ("1" === t.share_on) return 1;
                    if ("1" === e.is_host) return -1;
                    if ("1" === t.is_host) return 1;
                    var r = this._joinTimeCompare(e, t);
                    return "2" === e.role_type && "2" !== t.role_type ? -1 : "2" === t.role_type && "2" !== e.role_type ? 1 : "2" === e.role_type && "2" === t.role_type && 0 !== r ? r : "1" === e.video_on && "1" !== t.video_on ? -1 : "1" === t.video_on && "1" !== e.video_on ? 1 : "1" === e.video_on && "1" === t.video_on && 0 !== r ? r : e.is_pstn && !t.is_pstn ? -1 : !e.is_pstn && t.is_pstn ? 1 : e.is_pstn && t.is_pstn && 0 !== r ? r : "1" === e.audio_on && "1" !== t.audio_on ? -1 : "1" === t.audio_on && "1" !== e.audio_on ? 1 : ("1" === e.audio_on && t.audio_on, r)
                }
            }, {
                key: "_joinTimeCompare",
                value: function(e, t) {
                    return e.participation_status_stamp < t.participation_status_stamp ? -1 : t.participation_status_stamp < e.participation_status_stamp ? 1 : 0
                }
            }, {
                key: "addEventListener",
                value: function(e) {
                    this.subscribe("CHANGE", e)
                }
            }, {
                key: "removeEventListener",
                value: function(e) {
                    this.unsubscribe("CHANGE", e)
                }
            }, {
                key: "onceEventListener",
                value: function(e) {
                    this.unsubscribe("CHANGE", e), this.subscribe("CHANGE", e)
                }
            }, {
                key: "emit",
                value: function(e, t) {
                    this.publish("CHANGE", e, t)
                }
            }, {
                key: "onJoinMeetingSucc",
                value: function() {
                    var e = require("./AppStore");
                    e && e.onceEventListener ? e.onceEventListener(this.onAppStoreChange, this) : T.assert("appstore is null"), this.init()
                }
            }, {
                key: "onUpdateFloatLayoutMembers",
                value: function() {
                    this.updateFloatLayoutMembers(!1)
                }
            }, {
                key: "onFixMemberOntoMainPos",
                value: function(e) {
                    var t;
                    if (e)
                        if (this.members.length < 3) T.warn("To fix at main pos, it should be at least 3 members in meeting. But got: ".concat(this.members.length));
                        else {
                            var r = this.getUserIndex(e);
                            if (r < 0) T.error("onFixMemberOntoMainPos: cannot find ".concat(e.nickname, " in member list\n      of len ").concat(this.members.length, ": ").concat(JSON.stringify(this.members)));
                            else {
                                if (1 === r) return T.info("onFixMemberOntoMainPos: ".concat(e.nickname, " is already on main position")), this.members[r].is_video_lock = !0, this.updateFloatLayoutMembers(!1), void this.emit(b.FIX_MEMBER_ONTO_MAIN_POS_DONE, {
                                    data: e
                                });
                                (t = this.members).splice.apply(t, [1, 0].concat(i(this.members.splice(r, 1))));
                                for (var n = this.members[2], a = 2, s = 3, o = this.members.length; s < o; s++)
                                    if (!this.members[s].is_video_lock && !this.members[s].is_audio_excited) {
                                        a = s;
                                        break
                                    }
                                2 !== a && (this.members.splice(a, 0, n), this.members.splice(2, 1)), E.info("共".concat(this.members.length, "人，置顶").concat(e.nickname, "后，").concat(n.nickname, "被挤到[").concat(a, "]位置。")), this.members[1].is_video_lock = !0, this.members[a].is_video_lock = !1, this.updateFloatLayoutMembers(!1), this.emit(b.FIX_MEMBER_ONTO_MAIN_POS_DONE, {
                                    data: e
                                })
                            }
                        } else T.error("onFixMemberOntoMainPos: member is null")
                }
            }, {
                key: "resetPlayer",
                value: function(e) {
                    this.resetUserStreamState(e), this.updateFloatLayoutMembers(!1, !0)
                }
            }, {
                key: "setPlayerIsLoading",
                value: function(e, t) {
                    e.loading_status = t ? g.Loading : g.Playing, e.is_loading = t, this.updateFloatLayoutMembers(!1)
                }
            }, {
                key: "onAppStoreChange",
                value: function(e) {
                    switch (e) {
                        case A.APP_SWITCH_TO_BACKGROUND:
                            this.onAppSwitchToBackground();
                            break;
                        case A.APP_SWITCH_TO_FOREGROUND:
                            this.onAppSwitchToForeground()
                    }
                }
            }, {
                key: "onAppSwitchToBackground",
                value: function() {
                    require("./AppStore").isIOS() && v.getIsSpBackend() ? T.info("caused by opening share menu on iOS, ignore to pause videos.") : this.emit(b.PAUSE_ALL_VIDEOS)
                }
            }, {
                key: "onAppSwitchToForeground",
                value: function() {
                    this.emit(b.RESUME_ALL_VIDEOS)
                }
            }]), x
        }());
    E.info("[Register to Dispatcher] FloatLayoutMembersStore"), d.register((function() {
        var e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {},
            t = e.type,
            r = e.payload,
            n = void 0 === r ? {} : r,
            i = n.data;
        if (t) switch (t) {
            case b.MEDIA_USER_LIST_CHANGE:
                T.assert("should not reach here FloatLayoutMembersType.MEDIA_USER_LIST_CHANGE");
                break;
            case y.REMOTE_VIDEO_ADD:
                O.updateRemoteStreamURL(n);
                break;
            case y.JOIN_MEETING_SUCC:
                O.onJoinMeetingSucc(i);
                break;
            case b.UPDATE_FLOATLAYOUT_MEMBERS:
                O.onUpdateFloatLayoutMembers(!1);
                break;
            case y.FIX_MEMBER_ONTO_MAIN_POS:
                O.onFixMemberOntoMainPos(i)
        }
    })), module.exports = O, console.log("FloatLayoutMembersStore.js loaded end");
});
define("stores/MediaStateManager.js", function(require, module, exports, window, document, frames, self, location, navigator, localStorage, history, Caches, screen, alert, confirm, prompt, XMLHttpRequest, WebSocket, Reporter, webkit, WeixinJSCore) {
    "use strict";
    var e = require("../@babel/runtime/helpers/classCallCheck"),
        n = require("../@babel/runtime/helpers/createClass"),
        t = require("../@babel/runtime/helpers/inherits"),
        i = require("../@babel/runtime/helpers/createSuper");
    console.log("MeetingStore.js loaded start");
    var r = require("../utils/EventEmitter"),
        a = require("../utils/logger"),
        u = require("../constants/MeetingType"),
        s = (require("../constants/MediaStateManagerType"), require("./MeetingStore")),
        l = (require("../clients/BeaconClient"), require("../constants/MultMediaState"), new a({
            pageName: "MediaStateManager",
            aegisLogEnable: !0,
            wxLogEnable: !1
        })),
        o = function(a) {
            t(c, r);
            var o = i(c);

            function c() {
                var n;
                return e(this, c), (n = o.call(this)).pusherCtx = null, n.pusherURL = "", n.addListener(), n
            }
            return n(c, [{
                key: "addListener",
                value: function() {
                    s.onceEventListener(this.onMeetingStoreChange, this)
                }
            }, {
                key: "initPusherCtx",
                value: function() {
                    l.warn("dont call me")
                }
            }, {
                key: "getPusherCtx",
                value: function() {
                    return l.warn("dont call me"), null
                }
            }, {
                key: "setPusherURL",
                value: function(e) {
                    l.assert("别再调用我了")
                }
            }, {
                key: "getPusherURL",
                value: function() {
                    return this.pusherURL
                }
            }, {
                key: "clear",
                value: function() {
                    l.info("pusher context is cleared"), this.pusherURL = "", this.pusherCtx = null
                }
            }, {
                key: "onJoinMeetingSucc",
                value: function() {
                    l.warn("dont call me")
                }
            }, {
                key: "onJoinMeetingFail",
                value: function() {}
            }, {
                key: "onXMPPLogout",
                value: function() {
                    l.warn("dont call me")
                }
            }, {
                key: "onMediaRoomLeft",
                value: function() {
                    l.warn("dont call me")
                }
            }, {
                key: "onMeetingStoreChange",
                value: function(e) {
                    var n = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {};
                    n.data;
                    switch (e) {
                        case u.CLOUD_RECORD_STATE_STOPPED:
                            break;
                        case u.JOIN_MEETING_SUCC:
                            this.onJoinMeetingSucc();
                            break;
                        case u.JOIN_MEETING_FAIL:
                            this.onJoinMeetingFail();
                            break;
                        case u.ON_XMPP_LOGOUT:
                            this.onXMPPLogout();
                            break;
                        case u.LEAVE_MEDIA_ROOM_DONE:
                            this.onMediaRoomLeft()
                    }
                }
            }, {
                key: "onceEventListener",
                value: function(e) {
                    var n = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : null;
                    this.unsubscribe("CHANGE", e, n), this.subscribe("CHANGE", e, n)
                }
            }, {
                key: "addEventListener",
                value: function(e) {
                    this.subscribe("CHANGE", e)
                }
            }, {
                key: "removeEventListener",
                value: function(e) {
                    this.unsubscribe("CHANGE", e)
                }
            }, {
                key: "emit",
                value: function(e, n) {
                    this.publish("CHANGE", e, n)
                }
            }], [{
                key: "getInstance",
                value: function() {
                    return c.instance || (c.instance = new c), c.instance
                }
            }]), c
        }();
    o.instance = null, module.exports = o.getInstance();
});
define("stores/MeetingStore.js", function(require, module, exports, window, document, frames, self, location, navigator, localStorage, history, Caches, screen, alert, confirm, prompt, XMLHttpRequest, WebSocket, Reporter, webkit, WeixinJSCore) {
    "use strict";
    var e = require("../@babel/runtime/helpers/classCallCheck"),
        t = require("../@babel/runtime/helpers/createClass"),
        i = require("../@babel/runtime/helpers/possibleConstructorReturn"),
        n = require("../@babel/runtime/helpers/assertThisInitialized"),
        a = require("../@babel/runtime/helpers/inherits"),
        o = require("../@babel/runtime/helpers/createSuper");
    console.log("MeetingStore.js loaded start");
    var s = require("../utils/EventEmitter"),
        r = require("../utils/logger"),
        u = require("../utils/Dispatcher"),
        c = require("../constants/MeetingType"),
        l = require("../utils/plugins/MeetingInfo"),
        d = require("../constants/MultMediaState"),
        m = require("./MembersStore"),
        h = require("../constants/MembersType"),
        g = require("../utils/util").clog,
        y = require("../clients/RavenClient"),
        S = require("../constants/LayoutMode").LayoutMode,
        _ = require("../constants/MediaMachineType"),
        f = require("../stores/UserStore"),
        M = require("../constants/UserType"),
        R = require("../clients/WemeetClient"),
        v = new r({
            pageName: "MeetingStore",
            aegisLogEnable: !0,
            wxLogEnable: !1
        }),
        I = R.constants.RoomType,
        E = R.constants,
        k = new(function(r) {
            a(T, s);
            var u = o(T);

            function T(t) {
                var a;
                return e(this, T), T.prototype.instance ? i(a, T.prototype.instance) : ((a = u.call(this, t)).xmppRoomState = I.OUTSIDE, a.mediaRoomState = d.MediaRoomState.OUT, a.mediaRoomStateTs = 0, a.lastQueryedMeetingInfo = {}, a.lastLeaveRoomReason = "", a.meetingInfo = {}, a.mutedByMySelf = !0, a.mixAudioStreamInfo = {
                    id: "mixAudioStream",
                    playURL: ""
                }, a.trtc = null, a.audioEnable = !1, a.camera = {
                    cameraEnable: !1,
                    isFrontCamera: !0,
                    switchToFrontSuccText: "已切换为前置摄像头",
                    switchToBackSuccText: "已切换为后置摄像头",
                    switchFailText: "切换摄像头失败!"
                }, a.sigUrl = {}, a.roomInfo = {}, a.meetingMetaData = {}, a.meetingSetting = {}, a.joinParam = {}, a.meetingMetaSetting = {
                    sigUrl: "",
                    roomInfo: {},
                    settings: {},
                    metaData: {}
                }, a.isJoiningFromWaitingRoom = !1, a.isLeavingFromWaitingRoom = !1, a.isLeavingForWaitingRoom = !1, a.isAudioExcitedStrategyEnabled = !0, a.cloudRecordStatus = 0, a.joinRespMeta = null, a.myAudioGrids = 0, a.myKeyString = "", a.enableAudioWave = !0, a.isSpBackend = !1, a.payInfoMeetingExpireTime = 0, a.payInfoCountdownThreshhold = 0, a.payInfoCountdownTimer = 0, a.tsJoinMeetingSucc = 0, a.layoutMode = S.defaultLayout, a.soundAroundEnable = !0, a.scale = 1, a.isSmallVideoCollapsed = !1, a.smallVideoW = 0, a.smallVideoH = 0, a.largeVideoW = 0, a.largeVideoH = 0, a.navbarH = 48, a.isPusherHangup = !1, a.bigRoom = {
                    safeTime: 120,
                    currentMediaMachineType: _.InterfaceMachine,
                    resolveSignRefresh: null,
                    rejectSignRefresh: null,
                    request_up_stream_token: ""
                }, a.isHandsUp = !1, a.isTurningAudio = !1, a.isTurningVideo = !1, a.uploadStreamController = null, a.isSoundAround = !0, a.enableWatermark = !1, a.isMultipleRowWatermark = !1, a.allowTurnOnBySelf = !1, a.isHideMeetingCodeAndPassword = !1, a.isMeetingLocked = !1, a.isApplyMicIng = !1, a.rtmpProxy = null, a.timerFor5001CausedByPhoneCall = 0, a.networkLevel = E.MediaNetworkLevel.Excellent, a.isWebinar = !1, a.webinarInfo = {
                    warmup_type: 0
                }, a.isSupportIm = !0, a.unreadMsgCount = 0, a.imMessageList = [], T.prototype.instance = n(a), a)
            }
            return t(T, [{
                key: "init",
                value: function(e) {
                    v.info("MeetingStore inited"), this.setMeetingInfo(e), this.setTsJoinMeetingSucc((new Date).getTime()), m.onceEventListener(this.onMembersStoreChange, this), f.onceEventListener(this.onUserStoreChange, this)
                }
            }, {
                key: "clear",
                value: function() {
                    v.info("MeetingStore cleared"), this.networkLevel = E.MediaNetworkLevel.Excellent, this.xmppRoomState = I.OUTSIDE, this.lastQueryedMeetingInfo = {}, this.lastLeaveRoomReason = "", this.meetingInfo = {}, this.mutedByMySelf = !0, this.mixAudioStreamInfo = {
                        id: "mixAudioStream",
                        playURL: ""
                    }, this.audioEnable = !1, this.camera = {
                        cameraEnable: !1,
                        isFrontCamera: !0,
                        switchToFrontSuccText: "已切换为前置摄像头",
                        switchToBackSuccText: "已切换为后置摄像头",
                        switchFailText: "切换摄像头失败!"
                    }, this.sigUrl = {}, this.roomInfo = {}, this.meetingMetaData = {}, this.meetingSetting = {}, this.joinParam = {}, this.meetingMetaSetting = {
                        sigUrl: "",
                        roomInfo: {},
                        settings: {},
                        metaData: {}
                    }, this.isJoiningFromWaitingRoom = !1, this.isLeavingFromWaitingRoom = !1, this.isLeavingForWaitingRoom = !1, this.mediaRoomState = d.MediaRoomState.OUT, this.isAudioExcitedStrategyEnabled = !0, this.cloudRecordStatus = 0, this.joinRespMeta = null, this.myAudioGrids = 0, this.myKeyString = "", this.enableAudioWave = !0, this.isSpBackend = !1, this.payInfoCountdownTimer && (v.info("timer of meeting time countdown has not been cleared, cleared in MeetingStore::clear"), clearInterval(this.payInfoCountdownTimer)), this.payInfoMeetingExpireTime = 0, this.payInfoCountdownThreshhold = 0, this.payInfoCountdownTimer = 0, this.tsJoinMeetingSucc = 0, this.layoutMode = S.defaultLayout, this.soundAroundEnable = !0, this.scale = 1, this.isSmallVideoCollapsed = !1, this.smallVideoW = 0, this.smallVideoH = 0, this.largeVideoW = 0, this.largeVideoH = 0, this.navbarH = 48, this.isPusherHangup = !1, this.bigRoom = {
                        safeTime: 120,
                        currentMediaMachineType: _.InterfaceMachine,
                        resolveSignRefresh: null,
                        rejectSignRefresh: null,
                        request_up_stream_token: ""
                    }, this.isHandsUp = !1, this.isTurningAudio = !1, this.isTurningVideo = !1, this.uploadStreamController = null, this.isSoundAround = !0, this.enableWatermark = !1, this.isMultipleRowWatermark = !1, this.uiCfg = null, this.allowTurnOnBySelf = !1, this.isHideMeetingCodeAndPassword = !1, this.isMeetingLocked = !1, this.rtmpProxy = null, this.timerFor5001CausedByPhoneCall = 0, m.removeEventListener(this.onMembersStoreChange), f.removeEventListener(this.onUserStoreChange)
                }
            }, {
                key: "setTRTCInstance",
                value: function(e) {
                    e ? v.info("trtc inited") : v.info("trtc destroyed"), this.trtc = e
                }
            }, {
                key: "getTRTCInstance",
                value: function() {
                    return this.trtc
                }
            }, {
                key: "getPusherURL",
                value: function() {
                    var e, t;
                    return (null === (e = this.getTRTCInstance()) || void 0 === e || null === (t = e.getPusherAttrs()) || void 0 === t ? void 0 : t.url) || ""
                }
            }, {
                key: "setEnableAudioWave",
                value: function(e) {
                    this.enableAudioWave = e, g.info("set enableAudioWave to ".concat(e))
                }
            }, {
                key: "getEnableAudioWave",
                value: function() {
                    return this.enableAudioWave
                }
            }, {
                key: "setApplyMicIng",
                value: function(e) {
                    this.isApplyMicIng = e
                }
            }, {
                key: "getApplyMicIng",
                value: function() {
                    return this.isApplyMicIng
                }
            }, {
                key: "getNetworkLevel",
                value: function() {
                    return this.networkLevel
                }
            }, {
                key: "setNetworkLevel",
                value: function(e) {
                    this.networkLevel = e, g.info("set networkLevel to ".concat(e))
                }
            }, {
                key: "setMyKeyString",
                value: function(e) {
                    this.myKeyString = e, g.info("set myKeyString to ".concat(e))
                }
            }, {
                key: "getMyKeyString",
                value: function() {
                    return this.myKeyString
                }
            }, {
                key: "getIsAudioExcitedStrategyEnabled",
                value: function() {
                    return this.isAudioExcitedStrategyEnabled
                }
            }, {
                key: "onDisableAudioExitedStrategy",
                value: function() {
                    v.info("禁用语音激励"), g.info("禁用语音激励"), this.isAudioExcitedStrategyEnabled = !1
                }
            }, {
                key: "onEnableAudioExitedStrategy",
                value: function() {
                    v.info("启用语音激励"), g.info("启用语音激励"), this.isAudioExcitedStrategyEnabled = !0
                }
            }, {
                key: "onLocalRecordOn",
                value: function() {
                    this.emit(c.LOCAL_RECORD_ON)
                }
            }, {
                key: "onLocalRecordOff",
                value: function() {
                    this.emit(c.LOCAL_RECORD_OFF)
                }
            }, {
                key: "setNickname",
                value: function(e) {
                    this.emit(c.SET_NICKNAME, {
                        data: e
                    })
                }
            }, {
                key: "setJoinMeetingRespMeta",
                value: function(e) {
                    this.joinRespMeta = e
                }
            }, {
                key: "getJoinRespMeta",
                value: function() {
                    return this.joinRespMeta
                }
            }, {
                key: "getRoomInfo",
                value: function() {
                    var e = (this.getJoinRespMeta() || {}).roomInfo;
                    return void 0 === e ? {} : e
                }
            }, {
                key: "getMeetingID",
                value: function() {
                    var e = (this.getMeetingInfo() || {}).meeting_id,
                        t = void 0 === e ? "" : e;
                    return this.isOutsideXMPPRoom() || t || v.error("we are in xmpp room, but no meetingID??"), t
                }
            }, {
                key: "getAvRoomID",
                value: function() {
                    var e = this.getRoomInfo().av_room_id;
                    return void 0 === e ? "" : e
                }
            }, {
                key: "getJoinMeetingSettings",
                value: function() {
                    return this.joinRespMeta.settings
                }
            }, {
                key: "getMyID",
                value: function() {
                    var e = (m.getCommonUser(this.getMyKeyString()) || {}).id,
                        t = void 0 === e ? null : e;
                    return t || v.error("getMyID in MeetingStore failed: id is null. keyString = ".concat(this.getMyKeyString())), t
                }
            }, {
                key: "setMutedBySelf",
                value: function() {
                    var e = arguments.length > 0 && void 0 !== arguments[0] && arguments[0];
                    this.mutedByMySelf = e
                }
            }, {
                key: "getMutedBySelf",
                value: function() {
                    return this.mutedByMySelf
                }
            }, {
                key: "getAudioEnable",
                value: function() {
                    return this.audioEnable
                }
            }, {
                key: "setAudioEnable",
                value: function(e) {
                    v.info("麦克风已".concat(e ? "打开" : "关闭")), this.audioEnable = !!e, this.emit(c.AUDIO_ENABLE_CHANGE, {
                        data: e
                    })
                }
            }, {
                key: "getCameraEnable",
                value: function() {
                    return this.camera.cameraEnable
                }
            }, {
                key: "setCameraEnable",
                value: function(e) {
                    v.info("摄像头已".concat(e ? "打开" : "关闭")), this.camera.cameraEnable = e, this.emit(c.CAMERA_ENABLE_CHANGE, {
                        data: e
                    })
                }
            }, {
                key: "getIsFrontCamera",
                value: function() {
                    return this.camera.isFrontCamera
                }
            }, {
                key: "setIsFrontCamera",
                value: function(e) {
                    v.info("切换至".concat(e ? "前置摄像头" : "后置摄像头")), this.camera.isFrontCamera = e
                }
            }, {
                key: "getCameraSwitchFailText",
                value: function() {
                    return this.camera.switchFailText
                }
            }, {
                key: "getCameraSwitchToFrontSuccessText",
                value: function() {
                    return this.camera.switchToFrontSuccText
                }
            }, {
                key: "getCameraSwitchToBackSuccessText",
                value: function() {
                    return this.camera.switchToBackSuccText
                }
            }, {
                key: "setXMPPRoomState",
                value: function(e) {
                    var t = this.getReadableXMPPRoomState(this.xmppRoomState),
                        i = this.getReadableXMPPRoomState(e);
                    v.info("xmpp room state changes from ".concat(this.xmppRoomState, "(").concat(t, ") to ").concat(e, "(").concat(i, ")")), this.xmppRoomState = e
                }
            }, {
                key: "getReadableXMPPRoomState",
                value: function(e) {
                    switch (void 0 === e && (e = this.xmppRoomState), e) {
                        case R.constants.RoomType.OUTSIDE:
                            return "不在业务房间中";
                        case R.constants.RoomType.MEETING_ROOM:
                            return "会议中";
                        case R.constants.RoomType.WAITING_ROOM:
                            return "等候室";
                        default:
                            return "Unknown xmpp room state: ".concat(e)
                    }
                }
            }, {
                key: "isInMeeting",
                value: function() {
                    return this.xmppRoomState !== I.OUTSIDE
                }
            }, {
                key: "isInMeetingRoom",
                value: function() {
                    return this.xmppRoomState === I.MEETING_ROOM
                }
            }, {
                key: "isInWaitingRoom",
                value: function() {
                    return this.xmppRoomState === I.WAITING_ROOM
                }
            }, {
                key: "isOutsideXMPPRoom",
                value: function() {
                    return this.xmppRoomState === I.OUTSIDE
                }
            }, {
                key: "getLastQueryMeetingInfo",
                value: function() {
                    return this.lastQueryedMeetingInfo
                }
            }, {
                key: "setLastQueryMeetingInfo",
                value: function() {
                    var e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {},
                        t = e.meeting_item_list || [];
                    if (t.length > 0) {
                        var i = this.buildMeetingInfo(t[0]),
                            n = k.getLastQueryMeetingInfo();
                        n.url && i.url !== n.url && console.warn("invite url changed from ".concat(n.url, " to ").concat(i.url)), this.lastQueryedMeetingInfo = i
                    } else v.info("empty 未查到此会议号信息", "query-meeting"), this.lastQueryedMeetingInfo = {}
                }
            }, {
                key: "setMeetingInfo",
                value: function() {
                    var e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {},
                        t = (e.meeting_code, e.meeting_id, e.role);
                    this.isWebinar = "1" === e.meeting_type_flags, this.meetingInfo = e;
                    var i = e || {},
                        n = i.enter_room_type,
                        a = void 0 === n ? -1 : n;
                    0 !== a && 1 !== a && v.error("enter_room_type is invalid, got from 'data.enter_room_type'.\n        data = ".concat(JSON.stringify(e), "\n      ")), this.setXMPPRoomState(a), this.setCurrentMediaMachineType(t)
                }
            }, {
                key: "getMeetingInfo",
                value: function() {
                    return this.meetingInfo
                }
            }, {
                key: "isAnonymousMeeting",
                value: function() {
                    var e;
                    return 1 === (null === (e = this.getLastQueryMeetingInfo()) || void 0 === e ? void 0 : e.isAnonymous)
                }
            }, {
                key: "isWebinarMeeting",
                value: function() {
                    return this.isWebinar
                }
            }, {
                key: "getJoinParam",
                value: function() {
                    return this.joinParam
                }
            }, {
                key: "setJoinParam",
                value: function(e) {
                    e ? (this.joinParam = e, f.setDefaultNickName(this.joinParam.nickname)) : v.assert("join param is invalid")
                }
            }, {
                key: "getLastLeaveReason",
                value: function() {
                    return this.lastLeaveRoomReason
                }
            }, {
                key: "setLastLeaveReason",
                value: function() {
                    var e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : "";
                    this.lastLeaveRoomReason = e
                }
            }, {
                key: "getMixAudioStream",
                value: function() {
                    return this.mixAudioStreamInfo
                }
            }, {
                key: "setMixAudioStream",
                value: function() {
                    var e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {};
                    if (this.isInMeeting()) {
                        var t = !e.playURL,
                            i = !this.mixAudioStreamInfo.playURL && e.playURL,
                            n = this.mixAudioStreamInfo.playURL && e.playURL && this.mixAudioStreamInfo.playURL !== e.playURL;
                        t ? v.info("混音流地址被清空") : i ? v.info("混音流地址初始化为: ".concat(e.playURL)) : n ? v.info("混音流地址 changes from\n        ".concat(this.mixAudioStreamInfo.playURL, "\n        to\n        ").concat(e.playURL, "\n      ")) : v.warn("[ASSERT] 混音流地址没有变化，来这儿干啥? url = ".concat(e.playURL)), Object.assign(this.mixAudioStreamInfo, e)
                    } else v.warn("set mix audio ignored since i am not in meeting")
                }
            }, {
                key: "buildMeetingInfo",
                value: function(e) {
                    return new l({
                        meetingID: e.meeting_id,
                        meetingCode: e.meeting_code,
                        pmiCode: e.pmi_code,
                        name: e.subject,
                        startTime: 1e3 * e.begin_time,
                        endTime: 1e3 * e.end_time,
                        location: e.location,
                        password: e.password,
                        hasPwd: "1" === e.need_auth,
                        pstnPhone: e.pstn_phone,
                        pstnCode: e.pstn_code,
                        pstnPassword: e.pstn_password,
                        url: e.url || "",
                        hostUID: e.host.app_uid,
                        hostAppid: e.host.app_id,
                        isQuickMeeting: e.is_quick_meeting,
                        meetingState: e.meeting_state,
                        creatorAppID: e.creator.appId,
                        meetingLockSettings: e.meeting_lock_settings,
                        loginUsersOnly: e.login_users_only,
                        creatorNickname: e.creator_nickname,
                        needEnroll: e.need_enroll,
                        isAnonymous: e.is_anonymous,
                        meetingInfoMaskFlag: e.meeting_info_mask_flag,
                        securityVerifyType: e.security_verify_type
                    })
                }
            }, {
                key: "setIsJoiningFromWaitingRoom",
                value: function(e) {
                    this.isJoiningFromWaitingRoom = e, this.emit(c.IS_JOINING_FROM_WAITING_ROOM_CHANGE, {
                        data: e
                    })
                }
            }, {
                key: "getIsJoiningFromWaitingRoom",
                value: function() {
                    return this.isJoiningFromWaitingRoom
                }
            }, {
                key: "setIsLeavingFromWaitingRoom",
                value: function(e) {
                    this.isLeavingFromWaitingRoom = e, this.emit(c.IS_LEAVING_FROM_WAITING_ROOM_CHANGE, {
                        data: e
                    })
                }
            }, {
                key: "getIsLeavingFromWaitingRoom",
                value: function() {
                    return this.isLeavingFromWaitingRoom
                }
            }, {
                key: "setIsLeavingForWaitingRoom",
                value: function(e) {
                    this.isLeavingForWaitingRoom = e, this.emit(c.IS_LEAVING_FOR_WAITING_ROOM_CHANGE, {
                        data: e
                    })
                }
            }, {
                key: "getIsLeavingForWaitingRoom",
                value: function() {
                    return this.isLeavingForWaitingRoom
                }
            }, {
                key: "isInMediaRoom",
                value: function() {
                    return this.mediaRoomState === d.MediaRoomState.IN
                }
            }, {
                key: "isOutsideMediaRoom",
                value: function() {
                    return this.mediaRoomState === d.MediaRoomState.OUT
                }
            }, {
                key: "setMediaRoomState",
                value: function(e) {
                    var t = require("../clients/BeaconClient"),
                        i = d.MediaRoomState.getReadableState(this.mediaRoomState),
                        n = d.MediaRoomState.getReadableState(e);
                    v.info("media room state changed from ".concat(this.mediaRoomState, "(").concat(i, ") to ").concat(e, "(").concat(n, ")"));
                    var a = +new Date;
                    if (e === d.MediaRoomState.IN) {
                        var o = a - this.mediaRoomStateTs;
                        o <= 0 && v.assert("time cost on media room state change is weird: ".concat(o)), t.report("mp_live_pusher_status_in_1018", {
                            prevState: this.mediaRoomState,
                            timeCost: o
                        }), v.reportEvent("mp_live_pusher_status_in_1018", this.mediaRoomState, o)
                    }(this.mediaRoomState === d.MediaRoomState.JOINING || this.mediaRoomState === d.MediaRoomState.REDIRECTING) && e !== d.MediaRoomState.IN && (t.report("mp_live_pusher_status_not_in", {
                        prevState: this.mediaRoomState,
                        currentState: e
                    }), v.reportEvent("mp_live_pusher_status_not_in")), this.mediaRoomState = e, this.mediaRoomStateTs = a, R.meetingUserCtrl.setMediaRoomState(this.mediaRoomState)
                }
            }, {
                key: "getMediaRoomState",
                value: function() {
                    return this.mediaRoomState
                }
            }, {
                key: "getReadableMediaRoomState",
                value: function() {
                    return d.MediaRoomState.getReadableState(this.getMediaRoomState())
                }
            }, {
                key: "joinMediaRoomSucc",
                value: function() {
                    var e = this.getMediaRoomState(),
                        t = e === d.MediaRoomState.RESTARTING,
                        i = e === d.MediaRoomState.INTERRUPTED,
                        n = e === d.MediaRoomState.REDIRECTING,
                        a = t || i;
                    this.setMediaRoomState(d.MediaRoomState.IN), a ? (v.info("live-pusher fires 1018, and it is recovered from ".concat(i ? "5001" : "-1307")), this.emit(c.LIVE_PUSHER_MEDIA_ROOM_RECOVERD, {})) : n ? v.info("live-pusher fires 1018 since redirecting has been finished.") : (v.info("live-pusher fires 1018"), this.emit(c.LIVE_PUSHER_JOIN_MEDIA_ROOM_SUCC, {}))
                }
            }, {
                key: "needLeaveMediaRoom",
                value: function() {
                    this.setMediaRoomState(d.MediaRoomState.OUT)
                }
            }, {
                key: "reconnectMediaRoom",
                value: function() {
                    this.setMediaRoomState(d.MediaRoomState.RECONNECTING)
                }
            }, {
                key: "restartMediaRoom",
                value: function() {
                    this.setMediaRoomState(d.MediaRoomState.RESTARTING)
                }
            }, {
                key: "mediaRoomInterrupted",
                value: function() {
                    this.setMediaRoomState(d.MediaRoomState.INTERRUPTED)
                }
            }, {
                key: "setMediaRoomStateToOut",
                value: function() {
                    this.setMediaRoomState(d.MediaRoomState.OUT)
                }
            }, {
                key: "cloudRecordStateChange",
                value: function(e) {
                    v.info("cloud record state changed to: ".concat(function(e) {
                        switch (e) {
                            case 0:
                                return "STOPPED";
                            case 1:
                                return "PREPARING";
                            case 2:
                                return "STARTED";
                            case 3:
                                return "PAUSED";
                            default:
                                return "UNKNOWN(".concat(e, ")")
                        }
                    }(e))), this.cloudRecordStatus = e
                }
            }, {
                key: "isCloudRecording",
                value: function() {
                    return 0 !== this.cloudRecordStatus
                }
            }, {
                key: "getCloudRecordStatus",
                value: function() {
                    return this.cloudRecordStatus
                }
            }, {
                key: "getMembersCount",
                value: function() {
                    return m.getMemberCount()
                }
            }, {
                key: "setMyAudioGrids",
                value: function(e) {
                    this.myAudioGrids = e
                }
            }, {
                key: "getMyAudioGrids",
                value: function() {
                    return this.myAudioGrids
                }
            }, {
                key: "getHasVideoInMeeting",
                value: function() {
                    return m.getHasVideoInMeeting()
                }
            }, {
                key: "getHasScreenShareInMeeting",
                value: function() {
                    return m.getHasScreenShareInMeeting()
                }
            }, {
                key: "getHasWebScreenShareInMeeting",
                value: function() {
                    return m.getHasWebScreenShareInMeeting()
                }
            }, {
                key: "isScreenSharePaused",
                value: function() {
                    return m.isScreenSharePaused()
                }
            }, {
                key: "getScreenShareMember",
                value: function() {
                    return m.getScreenShareMember()
                }
            }, {
                key: "setIsSpBackend",
                value: function(e) {
                    this.isSpBackend = e
                }
            }, {
                key: "getIsSpBackend",
                value: function() {
                    return this.isSpBackend
                }
            }, {
                key: "setPayInfoMeetingExpireTime",
                value: function(e) {
                    this.payInfoMeetingExpireTime = e
                }
            }, {
                key: "getPayInfoMeetingExpireTime",
                value: function() {
                    return this.payInfoMeetingExpireTime
                }
            }, {
                key: "setPayInfoCountdownThreshhold",
                value: function(e) {
                    this.payInfoCountdownThreshhold = e
                }
            }, {
                key: "getPayInfoCountdownThreshhold",
                value: function() {
                    return this.payInfoCountdownThreshhold
                }
            }, {
                key: "setPayInfoCountdownTimer",
                value: function(e) {
                    this.payInfoCountdownTimer = e
                }
            }, {
                key: "getPayInfoCountdownTimer",
                value: function() {
                    return this.payInfoCountdownTimer
                }
            }, {
                key: "freeMeetingIsEnd",
                value: function() {
                    try {
                        v.warn("stack = ".concat(new Error("free meeting end is invoked! ").stack)), y.captureMessage("free meeting end is invoked", {
                            level: "warn",
                            detail: new Error("free meeting end is invoked! ").stack
                        })
                    } catch (e) {
                        v.error("print stack of free meeting is end exception: ".concat(JSON.stringify(e)))
                    }
                    this.emit(c.FREE_MEETING_IS_END, {})
                }
            }, {
                key: "updateMeetingTimeCountdown",
                value: function(e) {
                    this.emit(c.UPDATE_MEETING_TIME_COUNTDOWN, {
                        data: e
                    })
                }
            }, {
                key: "handleMeetingWillLimited",
                value: function(e, t) {
                    this.emit(e, {
                        data: t
                    })
                }
            }, {
                key: "setTsJoinMeetingSucc",
                value: function(e) {
                    this.tsJoinMeetingSucc = e
                }
            }, {
                key: "getTsJoinMeetingSucc",
                value: function() {
                    return this.tsJoinMeetingSucc
                }
            }, {
                key: "setLayoutMode",
                value: function(e) {
                    e !== this.layoutMode && (v.info("layout mode changed from ".concat(this.layoutMode, " to ").concat(e)), this.layoutMode = e, this.emit(c.MEETING_LAYOUT_CHANGE, {
                        data: e
                    }))
                }
            }, {
                key: "getLayoutMode",
                value: function() {
                    return this.layoutMode
                }
            }, {
                key: "isAudioLayout",
                value: function() {
                    return this.layoutMode === S.audioLayout
                }
            }, {
                key: "isFloatLayout",
                value: function() {
                    return this.layoutMode === S.floatLayout
                }
            }, {
                key: "isPusherLayout",
                value: function() {
                    return this.layoutMode === S.pusherLayout
                }
            }, {
                key: "getScale",
                value: function() {
                    return this.scale
                }
            }, {
                key: "setScale",
                value: function(e) {
                    this.scale = e
                }
            }, {
                key: "isScaling",
                value: function() {
                    return 1 !== this.scale
                }
            }, {
                key: "getIsSmallVideoCollapsed",
                value: function() {
                    return this.isSmallVideoCollapsed
                }
            }, {
                key: "setIsSmallVideoCollapsed",
                value: function(e) {
                    this.isSmallVideoCollapsed = e, this.emit(e ? c.COLLAPSE_SMALL_VIDEOS : c.EXPAND_SMALL_VIDEOS)
                }
            }, {
                key: "onceEventListener",
                value: function(e) {
                    var t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : null;
                    this.unsubscribe("CHANGE", e, t), this.subscribe("CHANGE", e, t)
                }
            }, {
                key: "addEventListener",
                value: function(e) {
                    this.subscribe("CHANGE", e)
                }
            }, {
                key: "removeEventListener",
                value: function(e) {
                    this.unsubscribe("CHANGE", e)
                }
            }, {
                key: "emit",
                value: function(e, t) {
                    this.publish("CHANGE", e, t)
                }
            }, {
                key: "onMembersStoreChange",
                value: function(e) {
                    var t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {},
                        i = t.data;
                    switch (e) {
                        case h.MEMBER_COUNT_CHANGE:
                            this.onMemberCountChange(i);
                            break;
                        case h.MEETING_HAS_VIDEO_ON:
                            this.onMeetingHasVideoOn();
                            break;
                        case h.MEETING_HAS_NO_VIDEO:
                            this.onMeetingHasNoVideo();
                            break;
                        case h.MEETING_HOST_INIT:
                        case h.MEMBER_BECOME_HOST:
                            this.onMeetingHostChanged(i)
                    }
                }
            }, {
                key: "onUserStoreChange",
                value: function(e) {
                    var t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {},
                        i = t.data;
                    switch (e) {
                        case M.XMPP_LOGOUT_ON_POSITIVELY:
                        case M.XMPP_LOGOUT_ON_ABNORMAL_NETWORK:
                        case M.XMPP_LOGOUT_ON_KICKED_BY_SAME_ACCOUNT:
                        case M.XMPP_LOGOUT_ON_ABNORMAL_ACCOUNT:
                        case M.XMPP_LOGOUT_ON_OTHERS_SITUATION:
                            this.onXmppLogout(i)
                    }
                }
            }, {
                key: "onXmppLogout",
                value: function(e) {
                    var t = e.ecode,
                        i = e.reason;
                    v.warn("xmpp logout found at MeetingStore:\n      ecode: ".concat(t, ",\n      reason: ").concat(i, ",\n    ")), this.setXMPPRoomState(R.constants.RoomType.OUTSIDE), this.emit(c.ON_XMPP_LOGOUT, {
                        data: e
                    }), this.clear()
                }
            }, {
                key: "onMemberCountChange",
                value: function(e) {
                    this.getHasVideoInMeeting() ? 1 === e ? this.switchToPusherLayout() : this.switchToFloatLayout() : this.switchToAudioLayout()
                }
            }, {
                key: "onMeetingHasVideoOn",
                value: function() {
                    1 < k.getMembersCount() ? (g.info("会议中有人开启了视频，进入float布局模式"), this.switchToFloatLayout()) : (g.info("会议中只有1人且开了视频，进入pusher布局模式"), this.switchToPusherLayout())
                }
            }, {
                key: "onMeetingHasNoVideo",
                value: function() {
                    g.info("会议中不再有视频，进入纯语音布局模式"), this.switchToAudioLayout()
                }
            }, {
                key: "onMeetingHostChanged",
                value: function(e) {
                    this.emit(c.CURRENT_MEETING_HOST_CHANGE, {
                        data: e
                    })
                }
            }, {
                key: "getMeetingHost",
                value: function() {
                    return m.getCurrentHost()
                }
            }, {
                key: "switchToFloatLayout",
                value: function() {
                    this.getMembersCount() < 2 && v.error("[ASSERT] switchToFloatLayout failed since member count is ".concat(this.getMembersCount())), this.setLayoutMode(S.floatLayout)
                }
            }, {
                key: "switchToPusherLayout",
                value: function() {
                    1 !== this.getMembersCount() && v.error("[ASSERT] switchToPusherLayout failed since members count not 1, but is ".concat(this.getMembersCount())), this.setLayoutMode(S.pusherLayout)
                }
            }, {
                key: "switchToAudioLayout",
                value: function() {
                    this.setLayoutMode(S.audioLayout)
                }
            }, {
                key: "getSmallVideoW",
                value: function() {
                    return this.smallVideoW
                }
            }, {
                key: "setSmallVideoW",
                value: function(e) {
                    this.smallVideoW = e
                }
            }, {
                key: "getSmallVideoH",
                value: function() {
                    return this.smallVideoH
                }
            }, {
                key: "setSmallVideoH",
                value: function(e) {
                    this.smallVideoH = e
                }
            }, {
                key: "getLargeVideoW",
                value: function() {
                    return this.largeVideoW
                }
            }, {
                key: "setLargeVideoW",
                value: function(e) {
                    this.largeVideoW = e
                }
            }, {
                key: "getLargeVideoH",
                value: function() {
                    return this.largeVideoH
                }
            }, {
                key: "setLargeVideoH",
                value: function(e) {
                    this.largeVideoH = e
                }
            }, {
                key: "getNavbarH",
                value: function() {
                    return this.navbarH
                }
            }, {
                key: "setNavbarH",
                value: function(e) {
                    this.navbarH = e
                }
            }, {
                key: "getIsPusherHangup",
                value: function() {
                    return this.isPusherHangup
                }
            }, {
                key: "setIsPusherHangup",
                value: function(e) {
                    this.isPusherHangup = e
                }
            }, {
                key: "setCurrentMediaMachineType",
                value: function(e) {
                    this.bigRoom.currentMediaMachineType !== e && (e === _.InterfaceMachine || e === _.ProxyMachine ? (v.info("currentMediaMachineType set to: ".concat(e === _.InterfaceMachine ? "接口机" : "代理机")), this.bigRoom.currentMediaMachineType = e, R.preMeetingService.setAccessType(e), this.emit(c.MEDIA_MECHINE_TYPE_CHANGE, {
                        data: e
                    })) : v.warn("ignore to set currentMediaMachineType. val: ".concat(e === _.Unset ? "Unset" : "Unknown")))
                }
            }, {
                key: "isOnDC",
                value: function() {
                    return this.bigRoom.currentMediaMachineType === _.InterfaceMachine
                }
            }, {
                key: "isOnOC",
                value: function() {
                    return this.bigRoom.currentMediaMachineType === _.ProxyMachine
                }
            }, {
                key: "getRequestUpStreamToken",
                value: function() {
                    return this.bigRoom.request_up_stream_token
                }
            }, {
                key: "setRequestUpStreamToken",
                value: function(e) {
                    this.bigRoom.request_up_stream_token = e
                }
            }, {
                key: "getIsHandsUp",
                value: function() {
                    return this.isHandsUp
                }
            }, {
                key: "setIsHandsUp",
                value: function(e) {
                    v.info("".concat(e ? "举手" : "手放下")), this.isHandsUp = e, this.emit(c.HANDS_UP_CHANGE, {
                        data: e
                    })
                }
            }, {
                key: "getAllowSpeak",
                value: function() {
                    return this.allowSpeak
                }
            }, {
                key: "setAllowSpeak",
                value: function(e) {
                    this.allowSpeak = e, this.emit(c.ALLOW_SPEAK_CHANGE, {
                        data: e
                    })
                }
            }, {
                key: "setPermissionUserInfo",
                value: function(e) {
                    this.permissionUserInfo = e
                }
            }, {
                key: "getPermissionUserInfo",
                value: function() {
                    return this.permissionUserInfo
                }
            }, {
                key: "setIsTurningAudio",
                value: function(e) {
                    v.info("".concat(e ? "麦克风开始操作..." : "麦克风操作已释放")), this.isTurningAudio = e, this.emit(c.IS_TURNING_AUDIO, {
                        data: e
                    })
                }
            }, {
                key: "getIsTurningAudio",
                value: function() {
                    return this.isTurningAudio
                }
            }, {
                key: "setIsTurningVideo",
                value: function(e) {
                    v.info("".concat(e ? "摄像头开始操作..." : "摄像头操作已释放")), this.isTurningVideo = e, this.emit(c.IS_TURNING_VIDEO, {
                        data: e
                    })
                }
            }, {
                key: "getIsTurningVideo",
                value: function() {
                    return this.isTurningVideo
                }
            }, {
                key: "setUploadStreamController",
                value: function(e) {
                    this.uploadStreamController = e
                }
            }, {
                key: "getUploadStreamController",
                value: function() {
                    return this.uploadStreamController
                }
            }, {
                key: "setIsSoundAround",
                value: function(e) {
                    if ("boolean" != typeof e) throw "InvalidArgument";
                    this.isSoundAround = e, v.info("isSoundAround set to ".concat(e ? "扬声器" : "听筒")), this.emit(c.SOUND_AROUND_CHANGE, {
                        data: e
                    })
                }
            }, {
                key: "getIsSoundAround",
                value: function() {
                    return this.isSoundAround
                }
            }, {
                key: "recoverLivePusher",
                value: function(e) {
                    this.setMediaRoomState(d.MediaRoomState.RESTARTING), this.emit(c.LIVE_PUSHER_MEDIA_ROOM_RESTARTING, {
                        data: e
                    })
                }
            }, {
                key: "onHandsUpSucc",
                value: function() {
                    this.emit(c.HANDS_UP_SUCC, {
                        data: this.getIsHandsUp()
                    })
                }
            }, {
                key: "onHandsDownSucc",
                value: function() {
                    this.emit(c.HANDS_UP_SUCC, {
                        data: !1
                    })
                }
            }, {
                key: "onHandsUpFail",
                value: function(e) {
                    var t = !this.getIsHandsUp();
                    v.warn("".concat(t ? "放手" : "举手", "操作失败，恢复到之前的状态")), this.setIsHandsUp(t), this.emit(c.HANDS_UP_FAIL, {
                        data: e
                    })
                }
            }, {
                key: "setEnableWatermark",
                value: function(e) {
                    this.enableWatermark = e, this.emit(c.ENABLE_WATERMARK_CHANGE, {
                        data: e
                    })
                }
            }, {
                key: "getEnableWatermark",
                value: function() {
                    return this.enableWatermark
                }
            }, {
                key: "setMultipleRowWatermark",
                value: function(e) {
                    this.isMultipleRowWatermark = e, this.emit(c.ENABLE_WATERMARKROW_CHANGE, {
                        data: e
                    })
                }
            }, {
                key: "getMultipleRowWatermark",
                value: function() {
                    return this.isMultipleRowWatermark
                }
            }, {
                key: "setUiPstnCfg",
                value: function(e) {
                    this.uiPstnCfg = e, this.emit(c.UI_CFG_CHANGE, {
                        data: e
                    })
                }
            }, {
                key: "getUiPstnCfg",
                value: function() {
                    return this.uiPstnCfg
                }
            }, {
                key: "setAllowTurnOnBySelf",
                value: function(e) {
                    this.allowTurnOnBySelf = e, this.emit(c.ALLOW_TURN_ON_BY_SELF_CHANGE, {
                        data: e
                    })
                }
            }, {
                key: "getAllowTurnOnBySelf",
                value: function() {
                    return this.allowTurnOnBySelf
                }
            }, {
                key: "setAllowHandsUp",
                value: function(e) {
                    this.allowHandsUp = e
                }
            }, {
                key: "setAllowLookAudienceCount",
                value: function(e) {
                    this.allowLookAudienceCount = e
                }
            }, {
                key: "getAllowHandsUp",
                value: function() {
                    return this.allowHandsUp
                }
            }, {
                key: "getAllowLookAudienceCount",
                value: function() {
                    return this.allowLookAudienceCount
                }
            }, {
                key: "setIsHideMeetingCodeAndPassword",
                value: function(e) {
                    this.isHideMeetingCodeAndPassword = e, this.emit(c.IS_HIDE_MEETING_CODE_AND_PASSWORD_CHANGE, {
                        data: e
                    })
                }
            }, {
                key: "getIsHideMeetingCodeAndPassword",
                value: function() {
                    return this.isHideMeetingCodeAndPassword
                }
            }, {
                key: "setIsMeetingLocked",
                value: function(e) {
                    this.isMeetingLocked = e, this.emit(c.IS_MEETING_LOCKED_CHANGE, {
                        data: e
                    })
                }
            }, {
                key: "getIsMeetingLocked",
                value: function() {
                    return this.isMeetingLocked
                }
            }, {
                key: "setRtmpProxy",
                value: function(e) {
                    this.rtmpProxy = e
                }
            }, {
                key: "getRtmpProxy",
                value: function() {
                    return this.rtmpProxy
                }
            }, {
                key: "setTimerFor5001CausedByPhoneCall",
                value: function(e) {
                    this.timerFor5001CausedByPhoneCall = e
                }
            }, {
                key: "getTimerFor5001CausedByPhoneCall",
                value: function() {
                    return this.timerFor5001CausedByPhoneCall
                }
            }, {
                key: "setIsUseMoreWidth",
                value: function(e) {
                    this.isUseMoreWidth = e
                }
            }, {
                key: "getIsUseMoreWidth",
                value: function() {
                    return this.isUseMoreWidth
                }
            }, {
                key: "setVerifyResult",
                value: function(e) {
                    this.verifyResult = e
                }
            }, {
                key: "getVerifyResult",
                value: function() {
                    return this.verifyResult
                }
            }, {
                key: "setIsSupportIm",
                value: function(e) {
                    this.isSupportIm = e
                }
            }, {
                key: "getIsSupportIm",
                value: function() {
                    return this.isSupportIm
                }
            }, {
                key: "getUnreadMsgCount",
                value: function() {
                    return this.unreadMsgCount
                }
            }, {
                key: "setUnreadMsgCount",
                value: function(e) {
                    this.unreadMsgCount = e
                }
            }, {
                key: "clearUnreadMsgCount",
                value: function() {
                    this.unreadMsgCount = 0
                }
            }, {
                key: "getImMessageList",
                value: function() {
                    return this.imMessageList
                }
            }, {
                key: "setImMessageList",
                value: function(e) {
                    this.imMessageList = e
                }
            }, {
                key: "clearImMessageList",
                value: function() {
                    this.imMessageList = []
                }
            }, {
                key: "onMessageReceived",
                value: function(e) {
                    this.imMessageList = this.imMessageList.concat(e).slice(-15), this.emit(c.IM_MESSAGE_LIST_UPDATE, {
                        data: {
                            imMessageList: this.imMessageList,
                            newMsgLen: null == e ? void 0 : e.length
                        }
                    });
                    var t = e.filter((function(e) {
                        return !0 !== e.fromSelf
                    })).length;
                    if (t > 0) {
                        var i = this.unreadMsgCount + t;
                        this.setUnreadMsgCount(i), this.emit(c.UNREAD_COUNT_CHANGE, {
                            data: i
                        })
                    }
                }
            }, {
                key: "onMessageRevoked",
                value: function(e) {
                    var t = this;
                    (null != e ? e : []).forEach((function(e) {
                        var i = t.imMessageList.findIndex((function(t) {
                            return t.id === e.id
                        })); - 1 !== i && t.imMessageList.splice(i, 1, e)
                    })), this.emit(c.IM_MESSAGE_LIST_UPDATE, {
                        data: {
                            imMessageList: this.imMessageList
                        }
                    })
                }
            }, {
                key: "getNoticeVersion",
                value: function() {
                    return this.noticeVersion
                }
            }, {
                key: "setNoticeVersion",
                value: function(e) {
                    this.noticeVersion = e
                }
            }]), T
        }());
    g.info("[Register to Dispatcher] MeetingStore"), u.register((function() {
        var e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {},
            t = e.type,
            i = e.payload;
        if (t) switch (t) {
            case c.NOTIFY_MY_AUDIO_GRIDS_CHANGE:
                k.setMyAudioGrids(i.data), k.emit(t, {
                    data: k.getMyAudioGrids()
                });
                break;
            case c.JOIN_MEETING_SUCC:
                var n = i || {},
                    a = n.data;
                k.init(a), f.setLeaveReason(""), k.emit(t, i);
                break;
            case c.JOIN_MEETING_FAIL:
            case c.BREAKOUT_ROOM_SUCC:
                k.emit(t, i);
                break;
            case c.QUERY_WEBINAR_SUMMARY_FAIL:
            case c.QUERY_WEBINAR_SUMMARY_SUCC:
            case c.APPLY_PERMISSION_SUCC:
                k.emit(t, i);
                break;
            case c.QUERY_MEETING_ITEM_LIST_SUCC:
                var o = i || {},
                    s = o.data;
                k.setLastQueryMeetingInfo(s), k.emit(t, i);
                break;
            case c.QUERY_MEETING_ITEM_LIST_FAIL:
            case c.QUERY_MEETING_PAY_INFO_FAIL:
                k.emit(t, i);
                break;
            case c.USER_STATUS_SUCC:
            case c.USER_STATUS_FAIL:
                k.emit(t, i);
                break;
            case c.HOST_STATUS_SUCC:
            case c.HOST_STATUS_FAIL:
                k.emit(t, i);
                break;
            case c.KICKED_OUT_SUCC:
            case c.KICKED_OUT_FAIL:
                f.setLeaveReason(i.data), k.clear(), k.emit(t, i);
                break;
            case c.NOTIFY_SWITCH_MEDIA_STREAM:
                k.emit(t, i);
                break;
            case c.MODIFY_USER_INFO_SUCC:
                f.addToHistoryNicknames(i.data.nickname);
            case c.MODIFY_USER_INFO_FAIL:
                k.emit(t, i);
                break;
            case c.REFRESH_MEDIA_AUTH_INFO_SUCC:
            case c.REFRESH_MEDIA_AUTH_INFO_FAIL:
                k.emit(t, i);
                break;
            case c.WAITING_USER_STATUS_TIMEOUT:
            case c.WAITING_USER_STATUS_BAD_RESPONSE:
                k.emit(t, i);
                break;
            case c.WAITING_USER_STATUS_JOIN_FROM_WAITING_ROOM:
                k.getIsJoiningFromWaitingRoom() ? v.warn("duplicated WAITING_USER_STATUS_JOIN_FROM_WAITING_ROOM") : k.emit(t, i);
                break;
            case c.WAITING_USER_STATUS_LEAVE_FROM_WAITING_ROOM:
                k.clear(), k.emit(t, i);
                break;
            case c.WAITING_USER_STATUS_LEAVE_FOR_WAITING_ROOM:
                k.getIsLeavingForWaitingRoom() ? v.warn("duplicated WAITING_USER_STATUS_LEAVE_FOR_WAITING_ROOM") : k.emit(t, i);
                break;
            case c.BACK_TO_WAITING_ROOM:
            case c.WAITING_USER_STATUS_I_AM_IN:
                k.setXMPPRoomState(R.constants.RoomType.WAITING_ROOM), k.emit(t, i);
                break;
            case c.MIX_AUDIO_STREAM_CHANGE:
                k.setMixAudioStream(i.data), k.emit(t, i);
                break;
            case c.JOIN_PARAM_UPDATE:
                k.setJoinParam(i);
                break;
            case c.SWITCH_USER_ROLE_TO_DC:
            case c.SWITCH_USER_ROLE_TO_OC:
            case c.SWITCH_USER_ROLE_FAIL:
                k.emit(t, i);
                break;
            case c.LIVE_PUSHER_JOIN_MEDIA_ROOM_SUCC:
                k.joinMediaRoomSucc();
                break;
            case c.LIVE_PUSHER_NEED_LEAVE_MEDIA_ROOM:
                k.needLeaveMediaRoom(), k.emit(t, i);
                break;
            case c.LIVE_PUSHER_MEDIA_ROOM_RECONNECTING:
                k.reconnectMediaRoom(), k.emit(t, i);
                break;
            case c.LIVE_PUSHER_MEDIA_ROOM_RESTARTING:
                k.restartMediaRoom(), k.emit(t, i);
                break;
            case c.LIVE_PUSHER_MEDIA_ROOM_INTERRUPTED:
                k.mediaRoomInterrupted(), k.emit(t, i);
                break;
            case c.CLOUD_RECORD_STATE_STOPPED:
            case c.CLOUD_RECORD_STATE_PREPARING:
            case c.CLOUD_RECORD_STATE_STARTED:
            case c.CLOUD_RECORD_STATE_PAUSED:
                k.cloudRecordStateChange(i.data), k.emit(t, i);
                break;
            case c.RECEIVE_USER_JOIN_OF_ME:
                var r = i || {},
                    u = r.data;
                k.setMyKeyString(u.keyString), k.setAudioEnable("1" === u.audio_on), k.setCameraEnable("1" === u.video_on), k.emit(t, u);
                break;
            case c.DISABLE_AUDIO_EXCITED_STRATEGY:
                k.onDisableAudioExitedStrategy(), k.emit(t, i);
                break;
            case c.ENABLE_AUDIO_EXCITED_STRATEGY:
                k.onEnableAudioExitedStrategy(), k.emit(t, i);
                break;
            case c.LOCAL_RECORD_ON:
                k.onLocalRecordOn();
                break;
            case c.LOCAL_RECORD_OFF:
                k.onLocalRecordOff();
                break;
            case c.MESSAGE_RECEIVED:
                k.onMessageReceived(i);
                break;
            case c.MESSAGE_REVOKED:
                k.onMessageRevoked(i)
        }
    })), module.exports = k, console.log("MeetingStore.js loaded end");
});
define("stores/MembersStore.js", function(require, module, exports, window, document, frames, self, location, navigator, localStorage, history, Caches, screen, alert, confirm, prompt, XMLHttpRequest, WebSocket, Reporter, webkit, WeixinJSCore) {
    "use strict";
    var e = require("../@babel/runtime/helpers/objectSpread2"),
        t = require("../@babel/runtime/helpers/createForOfIteratorHelper"),
        i = require("../@babel/runtime/helpers/classCallCheck"),
        a = require("../@babel/runtime/helpers/createClass"),
        r = require("../@babel/runtime/helpers/possibleConstructorReturn"),
        n = require("../@babel/runtime/helpers/assertThisInitialized"),
        s = require("../@babel/runtime/helpers/inherits"),
        o = require("../@babel/runtime/helpers/createSuper");
    console.log("MembersStore.js loaded start");
    var c = require("../utils/logger"),
        u = require("../utils/EventEmitter"),
        h = require("../utils/Dispatcher"),
        d = require("../clients/WemeetClient"),
        l = function(e) {
            var t = e || {},
                i = t.pageName,
                a = t.errcod,
                r = t.errmsg,
                n = void 0 === r ? "" : r;
            i || a ? n && C.error("[ASSERT][".concat(i, "][").concat(a, "] ").concat(n)) : console.warn("[assertReport] pageName and errcod is required, but got ".concat(i, ", ").concat(a))
        },
        m = require("../utils/plugins/Member"),
        S = require("../constants/MembersType"),
        f = require("../constants/MeetingType"),
        _ = require("../constants/FloatLayoutMembersType"),
        g = require("../constants/WaveAudio"),
        v = require("../constants/LoadingStatus"),
        y = v.LoadingStatus,
        b = v.getReadableLoadingStatus,
        p = require("../utils/plugins/AudioExcitedCalculator"),
        M = require("../utils/util"),
        E = require("./UserStore"),
        C = new c({
            pageName: "MembersStore",
            aegisLogEnable: !0,
            wxLogEnable: !1
        }),
        k = function(e) {
            return l(Object.assign({
                pageName: "MembersStore"
            }, e))
        },
        I = d.constants,
        A = I.AssociateType,
        R = I.InMeetingUserVisibility,
        O = new(function(c) {
            s(_, u);
            var l = o(_);

            function _(e) {
                var t;
                return i(this, _), _.prototype.instance ? (console.log("already has MembersStore"), r(t, _.prototype.instance)) : (t = l.call(this, e), _.prototype.instance = n(t), t.init(), t)
            }
            return a(_, [{
                key: "init",
                value: function() {
                    C.info("MembersStore inited(should be called right after join succeed)"), this.membersMap = new Map, this.screenShareMembers = new Set, this.associatorMap = new Map, this.hasLocalRecorder = !1, this.audioExcitedCalculator = new p, this.hasVideoInMeeting = !1, this.hasScreenShareInMeeting = !1, this.hasWebScreenShareInMeeting = !1, this.currentHost = null, this.createdTimesCache = {}, this.whiteboardPauseBeforeJoin = !1
                }
            }, {
                key: "getMembers",
                value: function() {
                    return Array.from(this.membersMap, (function(e) {
                        return e[1]
                    }))
                }
            }, {
                key: "getMemberCount",
                value: function() {
                    return this.membersMap.size
                }
            }, {
                key: "getHasLocalRecorder",
                value: function() {
                    return this.hasLocalRecorder
                }
            }, {
                key: "setHasLocalRecorder",
                value: function(e) {
                    "boolean" == typeof e ? this.hasLocalRecorder !== e && (this.hasLocalRecorder = e, h.dispatch({
                        type: this.hasLocalRecorder ? S.LOCAL_RECORD_ON : S.LOCAL_RECORD_OFF,
                        payload: {}
                    })) : C.error("[ASSERT] expected to be boolean but got ".concat(e, " at setHasLocalRecorder"))
                }
            }, {
                key: "getHasVideoInMeeting",
                value: function() {
                    return this.hasVideoInMeeting
                }
            }, {
                key: "setHasVideoInMeeting",
                value: function(e) {
                    "boolean" == typeof e ? this.hasVideoInMeeting !== e && (this.hasVideoInMeeting = e, this.emit(this.hasVideoInMeeting ? S.MEETING_HAS_VIDEO_ON : S.MEETING_HAS_NO_VIDEO, {})) : C.error("[ASSERT] expected to be boolean but got ".concat(e, " at setHasVideoInMeeting"))
                }
            }, {
                key: "getHasScreenShareInMeeting",
                value: function() {
                    return this.hasScreenShareInMeeting
                }
            }, {
                key: "setHasScreenShareInMeeting",
                value: function(e) {
                    "boolean" == typeof e ? this.hasScreenShareInMeeting !== e && (this.hasScreenShareInMeeting = e) : C.error("[ASSERT] expected to be boolean but got ".concat(e, " at setHasScreenShareInMeeting"))
                }
            }, {
                key: "getHasWebScreenShareInMeeting",
                value: function() {
                    return this.hasWebScreenShareInMeeting
                }
            }, {
                key: "setHasWebScreenShareInMeeting",
                value: function(e) {
                    this.hasWebScreenShareInMeeting = e
                }
            }, {
                key: "getCurrentHost",
                value: function() {
                    return this.currentHost
                }
            }, {
                key: "setWhiteboardPauseBeforeJoin",
                value: function(e) {
                    this.whiteboardPauseBeforeJoin = e
                }
            }, {
                key: "getWhiteboardPauseBeforeJoin",
                value: function() {
                    return this.whiteboardPauseBeforeJoin
                }
            }, {
                key: "setCurrentHost",
                value: function(e) {
                    if (!e) return this.currentHost = null, C.info("会议中不再有主持人"), void this.emit(S.MEETING_HOST_INIT, {});
                    this.getCurrentHost() && this.getCurrentHost().keyString === e.keyString ? C.info("主持人不变，仍是: ".concat(e.nickname)) : this.getCurrentHost() ? (C.info('主持人由"'.concat(this.getCurrentHost().nickname, '"变更为"').concat(e.nickname, '"')), this.currentHost = e) : (C.info('"'.concat(e.nickname, '"成为主持人')), this.currentHost = e, this.emit(S.MEETING_HOST_INIT, {
                        data: e
                    }))
                }
            }, {
                key: "loadCreatedTimesFromCache",
                value: function(e) {
                    if (e) {
                        var t = e.id.unique_id;
                        (t || (t = e.id.av_uid)) && (this.createdTimesCache[t] || (this.createdTimesCache[t] = 0), e.created_times = this.createdTimesCache[t])
                    }
                }
            }, {
                key: "getCreatedTimesOf",
                value: function(e) {
                    return this.createdTimesCache[e] || (this.createdTimesCache[e] = 0), this.createdTimesCache[e]
                }
            }, {
                key: "increaseCreatedTimesOf",
                value: function(e) {
                    if (e) {
                        var t = e.keyString;
                        t ? !e.is_screen_share || /_aux$/.test(t) ? (e.created_times += 1, this.createdTimesCache[t] = e.created_times) : C.error("screen share member ".concat(e.nickname, "'s keyString should have be postfixed with '_aux'.\n        but got: ").concat(t)) : C.assert("keyString is missing. user: ".concat(JSON.stringify(e)))
                    } else C.error("user is invalid at increaseCreatedTimesOf")
                }
            }, {
                key: "handleUsersJoin",
                value: function() {
                    var e = this,
                        t = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : [],
                        i = (new Date).getTime(),
                        a = null,
                        r = [];
                    t.forEach((function(t) {
                        if (e._isValidInComeUser(t))
                            if (t.associate_type !== A.ASSOC_AUDIO_PSTN) {
                                var i = new m(t);
                                i.isSelf && (e.setSelfMember(i), E.addToHistoryNicknames(i.nickname)), e.addCommonUser(i) && (e.loadCreatedTimesFromCache(i), r.push(i), e.reflectAudioSwitchChange(i, "0", i.audio_on), e.reflectVideoSwitchChange(i, "0", i.video_on), "1" === i.share_on && (a = i), e.reflectLocalRecordSwitchChange(i, "0", i.local_record_on), e.currentHost || "1" !== i.is_host ? e.currentHost && "1" === i.is_host && C.error("[ASSERT] 会议中已有主持人(".concat(e.currentHost.nickname, ")\n        但新加入的成员(").concat(i.nickname, ")也是主持人？当前host=").concat(JSON.stringify(e.currentHost), ",\n        新加入host=").concat(JSON.stringify(i))) : e.setCurrentHost(i), i.isSelf && h.dispatch({
                                    type: f.RECEIVE_USER_JOIN_OF_ME,
                                    payload: {
                                        data: i
                                    }
                                }))
                            } else e.addAssociator(t)
                    })), this.emit(S.USER_JOIN, {
                        data: r
                    }), this.memberCountChange(), a && (this.reflectScreenShareSwitchChange(a, "0", "1"), this.reflectScreenShareStartTimeChange(a, "0", a.share_start_time, !0));
                    var n = (new Date).getTime() - i;
                    500 < n && C.warn("user_join cost too much time: ".concat(n, "ms, len = ").concat(t.length))
                }
            }, {
                key: "handleUsersUpdate",
                value: function() {
                    var e = this,
                        t = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : [],
                        i = (new Date).getTime();
                    t.forEach((function(t) {
                        if (e._isValidInComeUser(t)) {
                            var i = e.getKeyById(t.id);
                            if (e.membersMap.get(i)) {
                                if (t.associate_type === A.ASSOC_AUDIO_PSTN) return void e.updateAssociator(t);
                                e.updateCommonUser(t)
                            } else {
                                if (!e.isNeedToShow(t)) return;
                                e.handleUsersJoin([t])
                            }
                        }
                    }));
                    var a = (new Date).getTime() - i;
                    500 < a && C.warn("user_update cost too much time: ".concat(a, "ms, len = ").concat(t.length))
                }
            }, {
                key: "handleUsersRemove",
                value: function() {
                    var e = this,
                        t = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : [],
                        i = arguments.length > 1 ? arguments[1] : void 0,
                        a = (new Date).getTime();
                    t.forEach((function(t) {
                        if (e._isValidInComeUser(t)) {
                            var a = e.getKeyById(t.id),
                                r = e.membersMap.get(a);
                            if (r)
                                if (t.associate_type !== A.ASSOC_AUDIO_PSTN)
                                    if (r.isSelf) {
                                        var n = "";
                                        switch (i) {
                                            case S.USER_OFFLINE_SUCC:
                                                n = "您已离线";
                                            case S.USER_KICKED_SUCC:
                                                n = "您已被主持人移出会议";
                                            default:
                                                n = "您已离开会议", C.error("[ASSERT] unexpected type got: ".concat(i, " at ").concat(new Error("USER_OFFLINE_TYPE_ERROR").stack))
                                        }
                                        C.error("TODO: 通过Members向Meeting发送Action，让Meeting来做. reason = ", n)
                                    } else {
                                        var s = t.sub_associator || "";
                                        s && (C.info("".concat(t.nickname, "'s associate device removed")), e.associatorMap.delete(s.id.uid)), e.removeCommonUser(t)
                                    } else e.removeAssociator(t);
                            else C.warn("ignore user: ".concat(a, " because of not in user list"))
                        }
                    }));
                    var r = (new Date).getTime() - a;
                    500 < r && C.warn("user_leave cost too much time: ".concat(r, "ms, len = ").concat(t.length))
                }
            }, {
                key: "updateMediaFlags",
                value: function() {
                    var e = !1,
                        t = !1,
                        i = !1,
                        a = !1;
                    this.membersMap.forEach((function(r) {
                        e || "1" !== r.local_record_on || (e = !0), t || "1" !== r.video_on && "1" !== r.share_on || (t = !0), i || "1" !== r.share_on || (i = !0), a || "1" !== r.web_share_on || (a = !0)
                    })), this.setHasLocalRecorder(e), this.setHasVideoInMeeting(t), this.setHasScreenShareInMeeting(i), this.setHasWebScreenShareInMeeting(a)
                }
            }, {
                key: "_isValidInComeUser",
                value: function(e) {
                    var t = isNaN(e.members_seq) ? -1 : e.members_seq;
                    if (t < 0) return !1;
                    var i = this.getKeyById(e.id),
                        a = this.membersMap.get(i),
                        r = -1;
                    return a && (r = isNaN(a.members_seq) ? -1 : a.members_seq), t > r
                }
            }, {
                key: "handleAssociator",
                value: function(e, t) {
                    var i = e.associator_id,
                        a = this.getKeyById(i),
                        r = this.membersMap.get(a);
                    if (r) switch (t) {
                        case "remove":
                            C.info("associator device '".concat(e.id.uid, "' detached from main device '").concat(r.nickname, "'")), this.reflectAudioSwitchChange(r, r.audio_on, "0"), r.audio_on = "0", r.handsup = "0", r.sub_associator = null, this.associatorMap.delete(e.id.uid), this.emit(S.ASSOCIATOR_DEVICE_REMOVE, {
                                data: r
                            });
                            break;
                        case "update":
                        case "add":
                            C.info("associator device '".concat(e.id.uid, "' attached to main device '").concat(r.nickname, "'\n        when ").concat(t, "ing")), this.reflectAudioSwitchChange(r, r.audio_on, e.audio_on), r.audio_on = e.audio_on, r.handsup = e.handsup, r.sub_associator = e.id, this.associatorMap.set(e.id.uid, a), "add" === t ? this.emit(S.ASSOCIATOR_DEVICE_ADD, {
                                data: r
                            }) : "update" === t && this.emit(S.ASSOCIATOR_DEVICE_UPDATE, {
                                data: r
                            })
                    } else C.error("cannot find the main device (full_id=".concat(a, ") to which the associator device\n      would like to attach"))
                }
            }, {
                key: "getHasRecorder",
                value: function() {
                    return this.hasRecorder
                }
            }, {
                key: "setHasRecorder",
                value: function(e) {
                    this.hasRecorder !== e && (this.hasRecorder = e)
                }
            }, {
                key: "reflectAudioSwitchChange",
                value: function(e, t, i) {
                    t !== i && "0" === i && (e.is_audio_excited = !1, e.audio_grids = 0, e.keyString === this.audioExcitedCalculator.getAudioMvsp() && this.clearMvsp())
                }
            }, {
                key: "reflectVideoSwitchChange",
                value: function(e, t, i) {
                    t !== i && ("0" === i ? (e.is_video_lock = !1, e.is_loading = !1, e.loading_status = y.Closed, e.isSelf || (e.video_on = "0", this.emit(S.TURN_OFF_USER_LIVE_PLAYER, {
                        data: e
                    }))) : "1" === i && (e.loading_status === y.Closed ? (e.is_loading = !0, e.loading_status = y.Loading) : C.warn("".concat(e.nickname, "'s previous loading_status expected to be Closed\n        but got ").concat(b(e.loading_status))), e.isSelf || (e.video_on = "1", this.emit(S.TURN_ON_USER_LIVE_PLAYER, {
                        data: e
                    }))))
                }
            }, {
                key: "reflectScreenShareStartTimeChange",
                value: function(e, t, i) {
                    var a = arguments.length > 3 && void 0 !== arguments[3] && arguments[3],
                        r = +t <= 0 || null == t,
                        n = i && +i > 0,
                        s = r && n && "0" === e.share_pause && t !== i,
                        o = this.getWhiteboardPauseBeforeJoin() && +t > 0 && +i > 0 && "0" === e.share_pause;
                    a && this.setWhiteboardPauseBeforeJoin(r && n && "1" === e.share_pause), o && this.setWhiteboardPauseBeforeJoin(!1), (s || o) && this.emit(S.SHOW_WHITEBOARD_SIGNAL_TOAST)
                }
            }, {
                key: "reflectScreenShareSwitchChange",
                value: function(e, t, i) {
                    t !== i && ("0" === i ? (C.info("".concat(e.nickname, "'s screen share 开->关")), this.deleteScreenShareMember(e.keyString)) : "1" === i && (C.info("".concat(e.nickname, "'s screen share 关->开")), e.share_on = "1", this.addScreenShareMember(e.keyString), this.emit(S.SCREEN_SHARE_START, {
                        data: e
                    })))
                }
            }, {
                key: "reflectLocalRecordSwitchChange",
                value: function(e, t, i) {
                    t !== i && ("0" === i ? C.info("".concat(e.nickname, "'s local_record 开->关")) : "1" === i && C.info("".concat(e.nickname, "'s local_record 关->开")))
                }
            }, {
                key: "addScreenShareMember",
                value: function(e) {
                    e ? (this.screenShareMembers.add(e), C.info("screen share members: new guy '".concat(e, "' added.\n    current sharing count = ").concat(this.screenShareMembers.size))) : C.error("[ASSERT] addScreenShareMember failed: keyString passed in is invalid: ".concat(e, "."))
                }
            }, {
                key: "deleteScreenShareMember",
                value: function(e) {
                    if (e)
                        if (this.screenShareMembers.delete(e)) this.emit(S.SCREEN_SHARE_END, {
                            data: this.getCommonUser(e)
                        });
                        else {
                            var t = Array.from(this.screenShareMembers).join(",");
                            C.error("[ASSERT] deleteScreenShareMember failed: cannot delete '".concat(e, "'\n      from screenShareMembers SET: ").concat(t))
                        } else C.error("[ASSERT] deleteScreenShareMember failed: keyString passed in is invalid: ".concat(e, "."))
                }
            }, {
                key: "isScreenShareMember",
                value: function(e) {
                    return this.screenShareMembers.has(e)
                }
            }, {
                key: "isScreenSharePaused",
                value: function() {
                    var e = this.getScreenShareMember();
                    return !!e && "1" === e.share_pause
                }
            }, {
                key: "getScreenShareMember",
                value: function() {
                    var e, i = this.screenShareMembers.entries(),
                        a = "",
                        r = t(i);
                    try {
                        for (r.s(); !(e = r.n()).done;) {
                            a = e.value[0];
                            break
                        }
                    } catch (e) {
                        r.e(e)
                    } finally {
                        r.f()
                    }
                    return this.getCommonUser(a)
                }
            }, {
                key: "getKeyById",
                value: function(e) {
                    return d.getKeyById(e)
                }
            }, {
                key: "memberCountChange",
                value: function() {
                    this.emit(S.MEMBER_COUNT_CHANGE, {
                        data: this.getMemberCount()
                    })
                }
            }, {
                key: "isNeedToShow",
                value: function(e) {
                    var t;
                    if (this._isInvisibleMember(e)) return C.info("".concat(e.nickname, "(").concat(this.getKeyById(e.id), ") is totally invisible.")), !1;
                    var i = e.id ? this.getKeyById(e.id) : null;
                    return e.isSelf || (null === (t = this.selfMember) || void 0 === t ? void 0 : t.keyString) === i || "7" != e.role_type || "7" == e.role_type && "1" == e.allow_speak
                }
            }, {
                key: "_isInvisibleMember",
                value: function(e) {
                    var t = e.user_invisible;
                    if (isNaN(t) || t < 1) return !1;
                    var i = R.InvisibleInMembersList | R.InvisibleInAudioLayout | R.InvisibleInVideoLayout;
                    return (t & i) === i
                }
            }, {
                key: "setSelfMember",
                value: function(t) {
                    var i = this.selfMember;
                    this.selfMember = e(e({}, i), t)
                }
            }, {
                key: "getSelfMember",
                value: function() {
                    return this.selfMember
                }
            }, {
                key: "addCommonUser",
                value: function(e) {
                    if (!e) return C.warn("[ASSERT] addCommonUser error with ".concat(JSON.stringify(e))), !1;
                    var t = e.keyString ? e.keyString : this.getKeyById(e.id);
                    return this.getCommonUser(t) ? (C.warn("[ASSERT] addCommonUser error since user ".concat(e.nickname, " already exists")), !1) : this.isNeedToShow(e) ? (this.membersMap.set(t, e), !0) : (C.info("该成员不属于可以展示的成员，".concat(JSON.stringify(e))), !1)
                }
            }, {
                key: "isGuest",
                value: function(e) {
                    return "7" !== e.role_type
                }
            }, {
                key: "isAudience",
                value: function(e) {
                    return "7" === e.role_type
                }
            }, {
                key: "isSpeakable",
                value: function(e) {
                    return "1" === e.allow_speak
                }
            }, {
                key: "isUpLevel",
                value: function(e, t) {
                    var i = this.isAudience(e) && this.isGuest(t),
                        a = this.isAudience(e) && this.isAudience(t) && !this.isSpeakable(e) && this.isSpeakable(t);
                    return i ? C.info("".concat(t.nickname, " 角色升级： 观众->嘉宾")) : a && C.info("".concat(t.nickname, " 角色升级： 观众（不可发言）->观众（可发言）")), i || a
                }
            }, {
                key: "isDownLevel",
                value: function(e, t) {
                    var i = this.isGuest(e) && this.isAudience(t),
                        a = this.isAudience(e) && this.isAudience(t) && this.isSpeakable(e) && !this.isSpeakable(t);
                    return i ? C.info("".concat(t.nickname, " 角色降级： 嘉宾->观众")) : a && C.info("".concat(t.nickname, " 角色降级： 观众（可发言）->观众（不可发言）")), i || a
                }
            }, {
                key: "updateCommonUser",
                value: function(e) {
                    var t, i;
                    if (e) {
                        var a = this.getKeyById(e.id),
                            r = this.getCommonUser(a);
                        if (r) {
                            var n = "7" == e.role_type && "0" == e.allow_speak && "7" == r.role_type && "1" == r.allow_speak,
                                s = !(null === (t = this.selfMember) || void 0 === t || !t.id) && this.getKeyById(null === (i = this.selfMember) || void 0 === i ? void 0 : i.id) === a;
                            this.isNeedToShow(e) || "7" != r.role_type || n ? (this._updateUser(r, e), s && this.setSelfMember(r), this.emit(S.USER_UPDATE, {
                                data: r
                            })) : C.info("该成员不属于 可以展示的成员，".concat(JSON.stringify(e)))
                        } else C.error("updateCommonUser error with oldUser ".concat(JSON.stringify(r)))
                    } else C.error("updateCommonUser error with newUser ".concat(JSON.stringify(e)))
                }
            }, {
                key: "_updateUser",
                value: function(e, t) {
                    if (this.reflectAudioSwitchChange(e, e.audio_on, t.audio_on), this.reflectVideoSwitchChange(e, e.video_on, t.video_on), this.reflectScreenShareSwitchChange(e, e.share_on, t.share_on), this.reflectScreenShareStartTimeChange(e, e.share_start_time, t.share_start_time, !1), this.reflectLocalRecordSwitchChange(e, e.local_record_on, t.local_record_on), "1" === e.share_on && "1" === t.share_on) {
                        var i = "1" !== e.share_pause && "1" === t.share_pause,
                            a = "1" === e.share_pause && "1" !== t.share_pause;
                        i ? (C.info("".concat(e.nickname, " 暂停了屏幕共享")), e.share_pause = "1", this.emit(S.SCREEN_SHARE_PAUSE, {
                            data: e
                        })) : a && (C.info("".concat(e.nickname, " 恢复了屏幕共享")), e.share_pause = "0", this.emit(S.SCREEN_SHARE_RESUME, {
                            data: e
                        }))
                    }
                    e.update(t)
                }
            }, {
                key: "getCommonUser",
                value: function(e) {
                    return this.membersMap.get(e)
                }
            }, {
                key: "removeCommonUser",
                value: function(e) {
                    if (e && e.id) {
                        var t = this.getKeyById(e.id),
                            i = this.getCommonUser(t);
                        if (i) this.isScreenShareMember(t) && (C.info("attention: ".concat(e.nickname, " left meeting directly without closing the screen share firstly.")), this.deleteScreenShareMember(t)), this.getCurrentHost() && this.getCurrentHost().keyString === t && this.setCurrentHost(null), this.membersMap.delete(t), this.memberCountChange(), this.emit(S.USER_LEAVE, {
                            data: i
                        });
                        else C.warn("user remove from user list failed, not exist")
                    } else C.error("removeCommonUser error with ".concat(JSON.stringify(e)))
                }
            }, {
                key: "addAssociator",
                value: function(e) {
                    this.handleAssociator(e, "add")
                }
            }, {
                key: "updateAssociator",
                value: function(e) {
                    this.handleAssociator(e, "update")
                }
            }, {
                key: "removeAssociator",
                value: function(e) {
                    this.handleAssociator(e, "remove")
                }
            }, {
                key: "onceEventListener",
                value: function(e) {
                    var t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : null;
                    this.unsubscribe("CHANGE", e, t), this.subscribe("CHANGE", e, t)
                }
            }, {
                key: "addEventListener",
                value: function(e) {
                    this.subscribe("CHANGE", e)
                }
            }, {
                key: "removeEventListener",
                value: function(e) {
                    this.unsubscribe("CHANGE", e)
                }
            }, {
                key: "emit",
                value: function(e, t) {
                    this.publish("CHANGE", e, t)
                }
            }, {
                key: "onNotifyJoinAudioMixUserInfoCallBack",
                value: function(e) {
                    var t = this,
                        i = (e || {}).infoList,
                        a = void 0 === i ? [] : i;
                    if (Array.isArray(a))
                        if (a.length < 1) k({
                            errcod: "100702",
                            errmsg: "infoList expected to be non-empty, but got empty, data = ".concat(JSON.stringify(e))
                        });
                        else {
                            var r = [];
                            a.forEach((function(e) {
                                var i = (e || {}).user;
                                if (i) {
                                    i.uid = i.app_uid;
                                    var a = t.getKeyById(i);
                                    i.keyString = a;
                                    var n = (e || {}).energy;
                                    if (!(isNaN(n) || n < g.WaveAudioMinDB || g.WaveAudioMaxDB < n)) {
                                        var s = t.membersMap.get(a);
                                        if (s) s.audio_grids === M.getMicGrids(n) || (s.updateAudioGrids(n), r.push(s), s.isSelf && h.dispatch({
                                            type: f.NOTIFY_MY_AUDIO_GRIDS_CHANGE,
                                            payload: {
                                                flag: !0,
                                                data: s.audio_grids
                                            }
                                        }))
                                    }
                                } else k({
                                    errcod: "100703",
                                    errmsg: "cannot get 'user' property(that is 'id'), person = ".concat(JSON.stringify(e))
                                })
                            })), r.length < 1 || (this.audioExcitedCalculator.pushInfoList(a), this.notifyMvsp(), this.emit(S.NOTIFY_JOIN_AUDIO_MIX_USER_INFO, {
                                data: r
                            }))
                        } else k({
                        errcod: "100701",
                        errmsg: "infoList is expected to be an array, but got data = ".concat(JSON.stringify(e))
                    })
                }
            }, {
                key: "notifyMvsp",
                value: function() {
                    var e = this.audioExcitedCalculator.getAudioMvsp(),
                        t = this.getCommonUser(e);
                    e && !t || (e && "1" !== t.audio_on ? this.emit(S.NOTIFY_CURRENT_MVSP, {
                        data: {
                            mvsp: "",
                            user: {}
                        }
                    }) : this.emit(S.NOTIFY_CURRENT_MVSP, {
                        data: {
                            mvsp: e,
                            user: t
                        }
                    }))
                }
            }, {
                key: "clearMvsp",
                value: function() {
                    this.audioExcitedCalculator.setAudioMvsp(""), this.notifyMvsp()
                }
            }, {
                key: "getAudioMvsp",
                value: function() {
                    return this.audioExcitedCalculator.getAudioMvsp()
                }
            }, {
                key: "onJoinMeetingSucc",
                value: function() {
                    this.init()
                }
            }, {
                key: "onMemberLock",
                value: function(e) {
                    var t = this.membersMap.get(e);
                    t ? (t.is_video_lock = !0, this.emit(S.MEMBER_LOCK_DONE, {
                        data: t
                    })) : C.error("cannot find member ".concat(e, " in membersMap(N=").concat(this.getMemberCount(), "):\n      ").concat(JSON.stringify(this.getMembers()), "\n    "))
                }
            }, {
                key: "onMemberUnlock",
                value: function(e) {
                    var t = this.membersMap.get(e);
                    t ? (t.is_video_lock = !1, this.emit(S.MEMBER_UNLOCK_DONE, {
                        data: t
                    })) : C.error("cannot find member ".concat(e, " in membersMap(N=").concat(this.getMemberCount(), "):\n      ").concat(JSON.stringify(this.getMembers()), "\n    "))
                }
            }, {
                key: "onHostChanged",
                value: function(e) {
                    var t = this.getCurrentHost();
                    t && (t.is_host = "0", t.role_type = "3", this.emit(S.MEMBER_RETIRE_HOST, {
                        data: t
                    }));
                    var i = this.getCommonUser(this.getKeyById(e.host));
                    i.is_host = "1", i.role_type = "1", this.setCurrentHost(i), this.emit(S.MEMBER_BECOME_HOST, {
                        data: i
                    })
                }
            }, {
                key: "onCoHostChanged",
                value: function(e) {
                    var t = (e || {}).host;
                    if (t) {
                        var i = this.getKeyById(t),
                            a = "1" === t.assign,
                            r = "0" === t.assign;
                        if (a || r) {
                            var n = this.getCommonUser(i);
                            a ? (n.role_type = "2", this.emit(S.MEMBER_BECOME_COHOST, {
                                data: n
                            })) : (n.role_type = "3", this.emit(S.MEMBER_RETIRE_COHOST, {
                                data: n
                            }))
                        } else C.error("unexpected 'assign' in 'host', should be 0 or 1 but got: ".concat(t.assign, ".\n      host = ").concat(JSON.stringify(t)))
                    } else C.error("'host' is lost at onCoHostChanged. data = ".concat(JSON.stringify(e)))
                }
            }, {
                key: "onReportMediaStreamStatusPush",
                value: function(e) {
                    var t = this,
                        i = [];
                    e.forEach((function(e) {
                        var a = t.getKeyById(e.id),
                            r = t.getCommonUser(a);
                        r ? (r.network_level = e.network_level, i.push(a)) : C.warn("cannot find user(".concat(a, ") in membersMap at onReportMediaStreamStatusPush"))
                    })), 0 < i.length && this.emit(S.MEDIA_STREAM_STATUS_CHANGE, {
                        data: i
                    })
                }
            }]), _
        }());
    console.info("[Register to Dispatcher] MembersStore"), h.register((function() {
        var e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {},
            t = e.type,
            i = e.payload,
            a = void 0 === i ? {} : i,
            r = a.data;
        if (t) switch (t) {
            case S.USER_JOIN:
            case S.USER_UPDATE:
            case S.USER_LEAVE:
            case S.USER_OFFLINE:
            case S.USER_KICKED:
                var n = r || {},
                    s = n.user_list;
                t === S.USER_JOIN ? O.handleUsersJoin(s) : t === S.USER_UPDATE ? O.handleUsersUpdate(s) : O.handleUsersRemove(s, t), O.updateMediaFlags();
                break;
            case S.NOTIFY_JOIN_AUDIO_MIX_USER_INFO:
                O.onNotifyJoinAudioMixUserInfoCallBack(r);
                break;
            case f.JOIN_MEETING_SUCC:
                O.onJoinMeetingSucc(r);
                break;
            case S.CLEAR_AUDIO_MVSP:
                O.clearMvsp();
                break;
            case _.MEMBER_LOCK:
                O.onMemberLock(r);
                break;
            case _.MEMBER_UNLOCK:
                O.onMemberUnlock(r);
                break;
            case S.HOST_CHANGED:
                O.onHostChanged(r);
                break;
            case S.CO_HOST_CHANGED:
                O.onCoHostChanged(r)
        }
    })), module.exports = O, console.log("MembersStore.js loaded end");
});
define("stores/PrivateMeetingStore.js", function(require, module, exports, window, document, frames, self, location, navigator, localStorage, history, Caches, screen, alert, confirm, prompt, XMLHttpRequest, WebSocket, Reporter, webkit, WeixinJSCore) {
    "use strict";
    var e = require("../@babel/runtime/helpers/objectSpread2"),
        t = require("../@babel/runtime/helpers/classCallCheck"),
        i = require("../@babel/runtime/helpers/createClass"),
        n = require("../@babel/runtime/helpers/possibleConstructorReturn"),
        r = require("../@babel/runtime/helpers/assertThisInitialized"),
        s = require("../@babel/runtime/helpers/inherits"),
        a = require("../@babel/runtime/helpers/createSuper"),
        o = require("../utils/EventEmitter"),
        u = require("../utils/Dispatcher"),
        c = require("../constants/PrivateMeetingType"),
        l = require("../utils/logger"),
        h = require("../utils/base64.js").Base64,
        v = require("../constants/MultMediaState"),
        g = new l({
            pageName: "PrivateMeetingStore",
            aegisLogEnable: !0,
            wxLogEnable: !1
        }),
        b = new(function(u) {
            s(l, o);
            var c = a(l);

            function l(e) {
                var i;
                return t(this, l), l.prototype.instance ? n(i, l.prototype.instance) : (i = c.call(this, e), l.prototype.instance = r(i), i.init(), i)
            }
            return i(l, [{
                key: "init",
                value: function() {
                    this.privMeetingInfo = {}, this.privMeetingCode = "", this.activityId = "", this.isBindWechat = !1, this.isCreator = !1, this.isGrantToJoin = !1, this.webShareUrl = "", this.isMeetingCollected = !1
                }
            }, {
                key: "getPrivMeetingCode",
                value: function() {
                    return this.privMeetingCode
                }
            }, {
                key: "setPrivMeetingCode",
                value: function(e) {
                    this.privMeetingCode = e
                }
            }, {
                key: "getActivityId",
                value: function() {
                    return this.activityId
                }
            }, {
                key: "setActivityId",
                value: function(e) {
                    this.activityId = e
                }
            }, {
                key: "getPrivMeetingInfo",
                value: function() {
                    return this.privMeetingInfo
                }
            }, {
                key: "setPrivMeetingInfo",
                value: function() {
                    var t = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {},
                        i = t.is_creator,
                        n = void 0 !== i && i,
                        r = t.is_bind_wechat,
                        s = void 0 !== r && r,
                        a = t.activity_id,
                        o = void 0 === a ? "" : a,
                        u = t.is_grant_to_join,
                        c = void 0 !== u && u,
                        l = t.meeting_simple_info,
                        v = void 0 === l ? {} : l,
                        b = v.subject,
                        E = void 0 === b ? "" : b,
                        d = v.url,
                        C = E;
                    try {
                        C = h.decode(E)
                    } catch (e) {
                        g.error("base64.decode Fail for subject ".concat(E, ", ").concat(JSON.stringify(e)))
                    }
                    this.privMeetingInfo = e(e({}, v), {}, {
                        subject: C
                    }), this.setActivityId(o), this.setIsCreator(n), this.setIsBindWeChat(s), this.setIsGrantToJoin(c), this.setWebShareUrl(this.appendToWebShareURL(d, "launch-mode=1"))
                }
            }, {
                key: "appendToWebShareURL",
                value: function(e, t) {
                    if (!e) return g.warn("url must NOT be empty."), "";
                    var i = "";
                    try {
                        i = "".concat(h.decode(e), "?").concat(t)
                    } catch (t) {
                        g.error("base64.decode Fail for url(".concat(e, "). errmsg = ").concat(t.message)), i = ""
                    }
                    return i
                }
            }, {
                key: "getIsBindWeChat",
                value: function() {
                    return this.isBindWechat
                }
            }, {
                key: "setIsBindWeChat",
                value: function(e) {
                    return this.isBindWechat = !!e
                }
            }, {
                key: "getIsCreator",
                value: function() {
                    return this.isCreator
                }
            }, {
                key: "setIsCreator",
                value: function(e) {
                    return this.isCreator = !!e
                }
            }, {
                key: "getIsGrantToJoin",
                value: function() {
                    return this.isGrantToJoin
                }
            }, {
                key: "setIsGrantToJoin",
                value: function(e) {
                    return this.isGrantToJoin = !!e
                }
            }, {
                key: "setWebShareUrl",
                value: function(e) {
                    this.webShareUrl = e
                }
            }, {
                key: "getWebShareUrl",
                value: function() {
                    return this.webShareUrl
                }
            }, {
                key: "addEventListener",
                value: function(e) {
                    this.subscribe("CHANGE", e)
                }
            }, {
                key: "onceEventListener",
                value: function(e) {
                    this.unsubscribe("CHANGE", e), this.subscribe("CHANGE", e)
                }
            }, {
                key: "removeEventListener",
                value: function(e) {
                    this.unsubscribe("CHANGE", e)
                }
            }, {
                key: "emit",
                value: function(e, t) {
                    this.publish("CHANGE", e, t)
                }
            }, {
                key: "setIsMeetingCollected",
                value: function(e) {
                    "boolean" != typeof e && console.error("val is supposed to be type of boolean, but got: ".concat(e)), this.isMeetingCollected = e
                }
            }, {
                key: "getIsMeetingCollected",
                value: function() {
                    return this.isMeetingCollected
                }
            }, {
                key: "getIsMeetingCollectable",
                value: function() {
                    var e = (this.getPrivMeetingInfo() || {}).meeting_state;
                    return !isNaN(e) && !(v.MeetingState.CANCELLED === e || v.MeetingState.DELETED === e || v.MeetingState.RECYCLED === e || v.MeetingState.NOSTATE === e)
                }
            }, {
                key: "getMeetingState",
                value: function() {
                    return (this.getPrivMeetingInfo() || {}).meeting_state
                }
            }, {
                key: "getReadableMeetingState",
                value: function() {
                    return v.MeetingState.getReadableMeetingState(this.getMeetingState())
                }
            }]), l
        }());
    u.register((function() {
        var e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {},
            t = e.type,
            i = e.payload;
        if (t) switch (t) {
            case c.PRIVATE_MEETING_INFO_CHANGE:
                b.setPrivMeetingInfo(i), b.emit(t, i);
                break;
            case c.PRIVATE_MEETING_CODE_CHANGE:
                b.setPrivMeetingCode(i), b.emit(t, i);
                break;
            case c.PRIVATE_MEETING_IS_COLLECTED_CHANGE:
                b.setIsMeetingCollected(i), b.emit(t, i);
                break;
            case c.PRIVATE_MEETING_WEBSHARE_URL_CHANGE:
                b.setWebShareUrl(i), b.emit(t);
                break;
            case c.PRIVATE_MEETING_COLLECTED_SUCC:
                b.emit(t);
                break;
            case c.PRIVATE_MEETING_COLLECTED_FAIL:
            case c.PRIVATE_MEETING_REGISTER_ACCOUNT:
                b.emit(t, i)
        }
    })), module.exports = b;
});
define("stores/RecyclableMemberListStore.js", function(require, module, exports, window, document, frames, self, location, navigator, localStorage, history, Caches, screen, alert, confirm, prompt, XMLHttpRequest, WebSocket, Reporter, webkit, WeixinJSCore) {
    "use strict";
    var e = require("../@babel/runtime/helpers/classCallCheck"),
        t = require("../@babel/runtime/helpers/createClass"),
        i = require("../@babel/runtime/helpers/possibleConstructorReturn"),
        n = require("../@babel/runtime/helpers/assertThisInitialized"),
        r = require("../@babel/runtime/helpers/inherits"),
        a = require("../@babel/runtime/helpers/createSuper"),
        o = require("../utils/EventEmitter"),
        s = require("../utils/logger"),
        c = require("../utils/Dispatcher"),
        l = require("../clients/WemeetClient"),
        u = require("../constants/RecyclableMemberListType"),
        _ = require("../constants/MeetingType"),
        h = require("./MeetingStore"),
        y = require("../utils/util").clog,
        E = require("./MembersStore"),
        b = require("../constants/MembersType"),
        d = new s({
            pageName: "RecyclableMemberListStore",
            aegisLogEnable: !0,
            wxLogEnable: !1
        }),
        C = new(function(s) {
            r(C, o);
            var c = a(C);

            function C(t) {
                var r;
                return e(this, C), C.prototype.instance ? i(r, C.prototype.instance) : (r = c.call(this, t), C.prototype.instance = n(r), r)
            }
            return t(C, [{
                key: "_init",
                value: function() {
                    d.info("[".concat(new Date, "] RecyclableMemberListStore inited starts...")), this.initMembersList(), this.emit(u.CREATE_RECYCLE_CONTEXT_SUCC, {
                        data: {
                            isMeetingLocked: l.meetingUserCtrl.isMeetingLocked(),
                            enableAudioWave: h.getEnableAudioWave(),
                            isAllowUnmuteBySelf: l.meetingUserCtrl.isAllowUnmuteBySelf(),
                            cloudRecordStatus: h.getCloudRecordStatus(),
                            hasLocalRecord: E.getHasLocalRecorder(),
                            hasScreenShare: E.getHasScreenShareInMeeting(),
                            memberCount: E.getMembers().length,
                            audioEnable: h.getAudioEnable(),
                            isMyHandsUp: h.getIsHandsUp(),
                            enableAudioStrategy: h.getIsAudioExcitedStrategyEnabled()
                        }
                    }), this._addListener()
                }
            }, {
                key: "initMembersList",
                value: function() {
                    var e = this,
                        t = E.getMembers().filter((function(e) {
                            return e.isSelf || "7" != e.role_type
                        })),
                        i = [];
                    t.forEach((function(t) {
                        var n = e._binarySearch(i, t); - 1 !== n ? n < i.length ? i.splice(n, 0, t) : i.push(t) : d.error("[ASSERT] initMembersList error: get insert position failed for ".concat(t.nickname, ".\n          currentMembers = ").concat(JSON.stringify(i), "\n          member = ").concat(JSON.stringify(t), ",\n        "))
                    })), this.recycleCtx.appendList(i)
                }
            }, {
                key: "getRecycleMembersNumber",
                value: function() {
                    return E.getMembers().filter((function(e) {
                        return e.isSelf || "7" != e.role_type
                    })).length
                }
            }, {
                key: "_addListener",
                value: function() {
                    E.onceEventListener(this.onMembersStoreChange, this), h.onceEventListener(this.onMeetingStoreChange, this)
                }
            }, {
                key: "_removeListener",
                value: function() {
                    E.removeEventListener(this.onMembersStoreChange), h.removeEventListener(this.onMeetingStoreChange)
                }
            }, {
                key: "onCreateRecycleContextSucc",
                value: function(e) {
                    this.recycleCtx = e, this._init()
                }
            }, {
                key: "onCreateRecycleContextFail",
                value: function(e) {
                    this.recycleCtx = null, this.emit(u.CREATE_RECYCLE_CONTEXT_FAIL, {
                        data: e
                    })
                }
            }, {
                key: "onDestroyRecycleContext",
                value: function() {
                    this.recycleCtx && (this.recycleCtx.destroy(), this.recycleCtx = null, this._removeListener(), this.emit(u.DESTROY_RECYCLE_CONTEXT, {}))
                }
            }, {
                key: "onFixMemberOntoMainPos",
                value: function(e) {
                    e ? (e.is_video_lock = !0, this._binaryUpdate(e)) : d.error("onFixMemberOntoMainPos: user is null")
                }
            }, {
                key: "onUserJoin",
                value: function(e) {
                    var t = this;
                    e.forEach((function(e) {
                        t._binaryInsert(e)
                    }))
                }
            }, {
                key: "onUserUpdate",
                value: function(e) {
                    this._binaryUpdate(e)
                }
            }, {
                key: "onUserLeave",
                value: function(e) {
                    this._binaryRemove(e)
                }
            }, {
                key: "onAudioGridsChange",
                value: function() {
                    this.recycleCtx.forceUpdate((function() {}))
                }
            }, {
                key: "onMediaStreamStatusChange",
                value: function() {
                    this.recycleCtx.forceUpdate((function() {}))
                }
            }, {
                key: "onMemberLockDone",
                value: function(e) {
                    this._binaryUpdate(e), this.emit(u.MEMBER_LOCK_DONE, {
                        data: e.keyString
                    })
                }
            }, {
                key: "onMemberUnlockDone",
                value: function(e) {
                    this._binaryUpdate(e), this.emit(u.MEMBER_UNLOCK_DONE, {
                        data: e.keyString
                    })
                }
            }, {
                key: "onMemberRetireHost",
                value: function(e) {
                    this._binaryUpdate(e)
                }
            }, {
                key: "onMemberBecomeHost",
                value: function(e) {
                    this._binaryUpdate(e)
                }
            }, {
                key: "onMemberRetireCoHost",
                value: function(e) {
                    this._binaryUpdate(e)
                }
            }, {
                key: "onMemberBecomeCoHost",
                value: function(e) {
                    this._binaryUpdate(e)
                }
            }, {
                key: "onMembersStoreChange",
                value: function(e) {
                    var t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {},
                        i = t.data;
                    switch (e) {
                        case b.SCREEN_SHARE_END:
                            this.emit(u.SCREEN_SHARE_END, {});
                            break;
                        case b.SCREEN_SHARE_START:
                            this.emit(u.SCREEN_SHARE_START, {});
                            break;
                        case b.MEMBER_COUNT_CHANGE:
                            var n = i;
                            h.isWebinarMeeting() && (n = this.getRecycleMembersNumber()), this.emit(u.MEMBER_COUNT_CHANGE, {
                                data: n
                            });
                            break;
                        case b.USER_JOIN:
                            this.onUserJoin(i);
                            break;
                        case b.USER_UPDATE:
                            this.onUserUpdate(i);
                            break;
                        case b.USER_LEAVE:
                            this.onUserLeave(i);
                            break;
                        case b.NOTIFY_JOIN_AUDIO_MIX_USER_INFO:
                            this.onAudioGridsChange();
                            break;
                        case b.MEDIA_STREAM_STATUS_CHANGE:
                            this.onMediaStreamStatusChange(i);
                            break;
                        case b.MEMBER_LOCK_DONE:
                            this.onMemberLockDone(i);
                            break;
                        case b.MEMBER_UNLOCK_DONE:
                            this.onMemberUnlockDone(i);
                            break;
                        case b.MEMBER_RETIRE_HOST:
                            this.onMemberRetireHost(i);
                            break;
                        case b.MEMBER_BECOME_HOST:
                            this.onMemberBecomeHost(i);
                            break;
                        case b.MEMBER_RETIRE_COHOST:
                            this.onMemberRetireCoHost(i);
                            break;
                        case b.MEMBER_BECOME_COHOST:
                            this.onMemberBecomeCoHost(i)
                    }
                }
            }, {
                key: "onMeetingStoreChange",
                value: function(e) {
                    var t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {},
                        i = t.data;
                    switch (e) {
                        case _.CLOUD_RECORD_STATE_STOPPED:
                        case _.CLOUD_RECORD_STATE_PREPARING:
                        case _.CLOUD_RECORD_STATE_STARTED:
                        case _.CLOUD_RECORD_STATE_PAUSED:
                            this.emit(u.CLOUD_RECORD_STATE_CHANGE, {
                                data: i
                            });
                            break;
                        case _.LOCAL_RECORD_ON:
                            this.emit(u.LOCAL_RECORD_CHANGE, {
                                data: "on"
                            });
                            break;
                        case _.LOCAL_RECORD_OFF:
                            this.emit(u.LOCAL_RECORD_CHANGE, {
                                data: "off"
                            });
                            break;
                        case _.AUDIO_ENABLE_CHANGE:
                            this.emit(u.AUDIO_ENABLE_CHANGE, {
                                data: i
                            });
                            break;
                        case _.HANDS_UP_CHANGE:
                            this.emit(u.HANDS_UP_CHANGE, {
                                data: i
                            });
                            break;
                        case _.IS_MEETING_LOCKED_CHANGE:
                            this.emit(u.IS_MEETING_LOCKED_CHANGE, {
                                data: i
                            });
                            break;
                        case _.ALLOW_TURN_ON_BY_SELF_CHANGE:
                            this.emit(u.ALLOW_TURN_ON_BY_SELF_CHANGE, {
                                data: i
                            })
                    }
                }
            }, {
                key: "clear",
                value: function() {
                    d.info("recycleCtx has been cleared"), this.recycleCtx.destroy()
                }
            }, {
                key: "getMemberList",
                value: function() {
                    return this.recycleCtx ? this.recycleCtx.getList() : (d.warn("get member list failed: recycleCtx has not been initialized yet."), null)
                }
            }, {
                key: "getHasRecorder",
                value: function() {
                    return this.hasRecorder
                }
            }, {
                key: "setHasRecorder",
                value: function(e) {
                    this.hasRecorder !== e && (this.hasRecorder = e)
                }
            }, {
                key: "_binaryInsert",
                value: function(e) {
                    if (console.log("_binaryInsert:", e.nickname), e) {
                        var t = this.getMemberList();
                        if (null !== t) {
                            var i = t.length;
                            if (i < 1) this.recycleCtx.append([e]);
                            else {
                                var n = this._binarySearch(t, e);
                                i - 1 < n ? this.recycleCtx.append([e]) : this.recycleCtx.splice(n, 0, [e])
                            }
                        } else d.warn("_binaryInsert failed at inserting user ".concat(e.nickname, ": list should not be empty"))
                    } else d.warn("_binaryInsert failed: user should not be null")
                }
            }, {
                key: "_binaryUpdate",
                value: function(e) {
                    if (e) {
                        var t = this.getMemberList();
                        if (null === t || t.length < 1) d.warn("_binaryUpdate failed at updating user ".concat(e.nickname, ": list should not be empty"));
                        else {
                            var i = t.length,
                                n = this._dummyFind(t, e);
                            if (h.isWebinarMeeting()) {
                                if (!e.isSelf && "7" === e.role_type) {
                                    if (n > -1) return this._binaryRemove(e), void d.info("用户降为观众，从列表移除");
                                    d.assert("嘉宾不在recycleStore的列表中？这里有问题。")
                                }
                                if (!e.isSelf && "7" !== e.role_type && n < 0) return this._binaryInsert(e), void d.info("用户升级为嘉宾，添加到列表中")
                            }
                            if (n < 0) d.error("_binaryUpdate failed at searching pos of user ".concat(e.nickname, ".\n      pos returned = ").concat(n, ", list: ").concat(JSON.stringify(t), ", user: ").concat(JSON.stringify(e)));
                            else {
                                var r = 0 < n && this._compareFunc(e, t[n - 1]) < 0,
                                    a = n < i - 1 && this._compareFunc(t[n + 1], e) < 0;
                                if (r) {
                                    for (var o = n - 1; 0 <= --o && this._compareFunc(e, t[o]) < 0;);
                                    t.splice(n, 1), t.splice(o + 1, 0, e), this.recycleCtx.forceUpdate((function() {
                                        y.info("[forceUpdate Done][binary_update][<-] ".concat(e.nickname, "' pos changed from [").concat(n, "] to [").concat(o + 1, "]"))
                                    }))
                                } else if (a) {
                                    for (var s = n + 1; ++s < i && this._compareFunc(t[s], e) < 0;);
                                    i <= s && (s = i), t.splice(s, 0, e), t.splice(n, 1), this.recycleCtx.forceUpdate((function() {
                                        y.info("[forceUpdate Done][binary_update][->] ".concat(e.nickname, "' pos changed from [").concat(n, "] to [").concat(i === s ? i - 1 : s, "]"))
                                    }))
                                } else this.recycleCtx.forceUpdate((function() {}))
                            }
                        }
                    } else d.warn("_binaryUpdate failed: user should not be null")
                }
            }, {
                key: "_dummyFind",
                value: function(e, t) {
                    for (var i = l.getKeyById(t.id), n = -1, r = 0, a = e.length; r < a; r++)
                        if (i === e[r].keyString) {
                            n = r;
                            break
                        }
                    return n
                }
            }, {
                key: "_binaryRemove",
                value: function(e) {
                    if (e) {
                        var t = this.getMemberList();
                        if (null === t || t.length < 1) d.warn("_binaryRemove failed at removing user ".concat(e.nickname, ": list should not be empty"));
                        else {
                            var i = this._binarySearch(t, e);
                            i < 0 ? d.error("_binaryRemove failed at removing user ".concat(e.nickname, ": invalid pos found: ").concat(i)) : this.recycleCtx.splice(i, 1)
                        }
                    } else d.warn("_binaryRemove failed: user should not be null")
                }
            }, {
                key: "_binarySearch",
                value: function(e, t) {
                    if (!t) return d.error("_binarySearch error: target user must be given."), -1;
                    if (!Array.isArray(e)) return d.error("_binarySearch error: list must be type of Array"), -1;
                    if (0 === e.length) return 0;
                    for (var i = 0, n = e.length - 1, r = l.getKeyById(t.id); i < n;) {
                        var a = Math.ceil((i + n) / 2),
                            o = e[a];
                        if (r === l.getKeyById(o.id)) return a;
                        this._compareFunc(t, o) < 0 ? n = a - 1 : i = a
                    }
                    return i !== n ? (d.error("[ASSERT] i is expected to be equal to j: i = ".concat(i, ", j = ").concat(n, ".\n      list = ").concat(JSON.stringify(e), ", user = ").concat(JSON.stringify(t))), -1) : l.getKeyById(e[i].id) === r || this._compareFunc(t, e[i]) < 0 ? i : i + 1
                }
            }, {
                key: "_compareFunc",
                value: function(e, t) {
                    if (e.isSelf) return -1;
                    if (t.isSelf) return 1;
                    if ("1" === e.is_host) return -1;
                    if ("1" === t.is_host) return 1;
                    var i = this._joinTimeCompare(e, t);
                    return "2" === e.role_type && "2" !== t.role_type ? -1 : "2" === t.role_type && "2" !== e.role_type ? 1 : "2" === e.role_type && "2" === t.role_type && 0 !== i ? i : "1" === e.share_on ? -1 : "1" === t.share_on ? 1 : "2" === e.local_record_on && "2" !== t.local_record_on ? -1 : "2" === t.local_record_on && "2" !== e.local_record_on ? 1 : "2" === e.local_record_on && "2" === t.local_record_on && 0 !== i ? i : "1" === e.video_on && "1" !== t.video_on ? -1 : "1" === t.video_on && "1" !== e.video_on ? 1 : "1" === e.video_on && "1" === t.video_on && 0 !== i ? i : e.is_pstn && !t.is_pstn ? -1 : !e.is_pstn && t.is_pstn ? 1 : e.is_pstn && t.is_pstn && 0 !== i ? i : "1" === e.audio_on && "1" !== t.audio_on ? -1 : "1" === t.audio_on && "1" !== e.audio_on ? 1 : ("1" === e.audio_on && t.audio_on, i)
                }
            }, {
                key: "_joinTimeCompare",
                value: function(e, t) {
                    return e.participation_status_stamp < t.participation_status_stamp ? -1 : t.participation_status_stamp < e.participation_status_stamp ? 1 : 0
                }
            }, {
                key: "onceEventListener",
                value: function(e) {
                    this.unsubscribe("CHANGE", e), this.subscribe("CHANGE", e)
                }
            }, {
                key: "addEventListener",
                value: function(e) {
                    this.subscribe("CHANGE", e)
                }
            }, {
                key: "removeEventListener",
                value: function(e) {
                    this.unsubscribe("CHANGE", e)
                }
            }, {
                key: "emit",
                value: function(e, t) {
                    this.publish("CHANGE", e, t)
                }
            }]), C
        }());
    y.info("[Register to Dispatcher] RecyclableMemberListStore"), c.register((function() {
        var e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {},
            t = e.type,
            i = e.payload,
            n = void 0 === i ? {} : i,
            r = n.data;
        if (t) switch (t) {
            case u.CREATE_RECYCLE_CONTEXT_SUCC:
                C.onCreateRecycleContextSucc(r);
                break;
            case u.CREATE_RECYCLE_CONTEXT_FAIL:
                C.onCreateRecycleContextFail(r);
                break;
            case u.DESTORY_RECYCLE_CONTEXT:
                C.onDestroyRecycleContext();
                break;
            case _.FIX_MEMBER_ONTO_MAIN_POS:
                C.onFixMemberOntoMainPos(r)
        }
    })), module.exports = C;
});
define("stores/UserStore.js", function(require, module, exports, window, document, frames, self, location, navigator, localStorage, history, Caches, screen, alert, confirm, prompt, XMLHttpRequest, WebSocket, Reporter, webkit, WeixinJSCore) {
    "use strict";
    var e = require("../@babel/runtime/helpers/toConsumableArray"),
        t = require("../@babel/runtime/helpers/objectSpread2"),
        n = require("../@babel/runtime/helpers/regeneratorRuntime"),
        i = require("../@babel/runtime/helpers/asyncToGenerator"),
        o = require("../@babel/runtime/helpers/classCallCheck"),
        s = require("../@babel/runtime/helpers/createClass"),
        a = require("../@babel/runtime/helpers/possibleConstructorReturn"),
        r = require("../@babel/runtime/helpers/assertThisInitialized"),
        c = require("../@babel/runtime/helpers/inherits"),
        u = require("../@babel/runtime/helpers/createSuper");
    console.log("UserStore.js loaded start");
    var h = require("../utils/EventEmitter"),
        l = require("../utils/Dispatcher"),
        g = require("../constants/UserType"),
        d = require("../utils/util"),
        k = require("../utils/abtjs/index"),
        f = k.initABTestSDK,
        p = k.sendExpReport,
        C = require("../constants/MultMediaState").AccessState,
        v = new(require("../utils/logger"))({
            pageName: "UserStore",
            aegisLogEnable: !0,
            wxLogEnable: !0
        }),
        E = function(k) {
            c(N, h);
            var E, _, m = u(N);

            function N(e) {
                var t;
                return o(this, N), N.prototype.instance ? a(t, N.prototype.instance) : (t = m.call(this, e), N.prototype.instance = r(t), t.init(), t.initABTest(), t)
            }
            return s(N, [{
                key: "init",
                value: function() {
                    this.accountErrCode = 0, this.xmppLogin = !1, this.wxUserInfo = d.getValueFromLocalStorage("wx_user_info") || null, this.setOpenID(""), this.unionId = "", this.unionIdEXP = 0, this.phoneCountryCode = "", this.phone = "", this.setCGIToken(""), this.cgiTokenEXP = "", this.xmppToken = "", this.xmppTokenEXP = 0, this.defaultNickname = "", this.iKnowToKeepInForeground = !1, this.registerOrLoginAuthCode = "", this.isCorpUser = !1, this.accountList = [], this.wemeetLoginInfo = null, this.wemeetLoginInfoEXP = 0, this.captchaSecondsLeft = 0, this.captchaCountDownTimerID = 0, this.cameraAccessState = C.NeverAsk, this.microphoneAccessState = C.NeverAsk, this.leaveReason = {
                        msg: "",
                        code: 0
                    }, this.autoJoin = !1, this.prevSuccMeetingCode = "", this.isBindWX = !1, this.subscribeState = "unknown", this.expParams = {}, this.historyNames = d.getValueFromLocalStorage(N.CacheKeyHistoryNames) || []
                }
            }, {
                key: "initAccountInfo",
                value: function() {
                    var e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {},
                        t = e.openID,
                        n = void 0 === t ? "" : t,
                        i = e.unionId,
                        o = void 0 === i ? "" : i,
                        s = e.unionIdEXP,
                        a = void 0 === s ? 0 : s,
                        r = e.xmppToken,
                        c = void 0 === r ? "" : r,
                        u = e.xmppTokenEXP,
                        h = void 0 === u ? 0 : u,
                        l = e.cgiToken,
                        g = void 0 === l ? "" : l,
                        d = e.cgiTokenEXP,
                        k = void 0 === d ? 0 : d,
                        f = e.phone,
                        p = void 0 === f ? "" : f,
                        C = e.defaultNickname,
                        v = void 0 === C ? "" : C,
                        E = e.iKnowToKeepInForeground,
                        I = void 0 !== E && E,
                        _ = e.wemeetLoginInfo,
                        m = void 0 === _ ? null : _,
                        N = e.wemeetLoginInfoEXP,
                        T = void 0 === N ? 0 : N;
                    this.setOpenID(n), this.unionId = o, this.unionIdEXP = a, this.xmppToken = c, this.xmppTokenEXP = h, this.setCGIToken(g), this.cgiTokenEXP = k, this.phone = p, this.defaultNickname = v, this.iKnowToKeepInForeground = I, this.wemeetLoginInfo = m, this.wemeetLoginInfoEXP = T
                }
            }, {
                key: "initABTest",
                value: (_ = i(n().mark((function e() {
                    return n().wrap((function(e) {
                        for (;;) switch (e.prev = e.next) {
                            case 0:
                                return e.abrupt("return", f().then((function() {
                                    I.getABTestData().then((function(e) {
                                        try {
                                            v.info("ABTestData: ".concat(JSON.stringify(e)))
                                        } catch (t) {
                                            v.error("ABTestData: ".concat(t, " of ").concat(e))
                                        }
                                        l.dispatch({
                                            type: g.ABTEST_EXP_PARAMS_CHANGE,
                                            payload: e
                                        })
                                    }))
                                })));
                            case 1:
                            case "end":
                                return e.stop()
                        }
                    }), e)
                }))), function() {
                    return _.apply(this, arguments)
                })
            }, {
                key: "getABTestData",
                value: (E = i(n().mark((function e() {
                    return n().wrap((function(e) {
                        for (;;) switch (e.prev = e.next) {
                            case 0:
                                return e.abrupt("return", p("prod"));
                            case 1:
                            case "end":
                                return e.stop()
                        }
                    }), e)
                }))), function() {
                    return E.apply(this, arguments)
                })
            }, {
                key: "setOpenID",
                value: function() {
                    var e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : "";
                    !this.openID || e ? this.openID = e : v.warn("FATAL ERROR: dangerous write! Ignored. openID set from ".concat(this.openID, " to ").concat(e, "."))
                }
            }, {
                key: "getOpenID",
                value: function() {
                    return this.openID
                }
            }, {
                key: "setUnionId",
                value: function() {
                    var e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : "";
                    this.unionId = e
                }
            }, {
                key: "setUnionIdEXP",
                value: function() {
                    var e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : 0;
                    this.unionIdEXP = e
                }
            }, {
                key: "getUnionId",
                value: function() {
                    return this.unionId
                }
            }, {
                key: "getUnionIdEXP",
                value: function() {
                    return this.unionIdEXP
                }
            }, {
                key: "setCGIToken",
                value: function() {
                    var e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : "";
                    this.cgiToken && !e && v.warn("cgiToken changed to empty. call stack = ".concat(new Error("stack").stack)), this.cgiToken = e
                }
            }, {
                key: "getCGIToken",
                value: function() {
                    return this.cgiToken
                }
            }, {
                key: "getCGITokenEXP",
                value: function() {
                    return this.cgiTokenEXP
                }
            }, {
                key: "getTicket",
                value: function() {
                    var e = (this.wemeetLoginInfo || {}).activity_ticket;
                    return void 0 === e ? "" : e
                }
            }, {
                key: "setPhoneNum",
                value: function(e) {
                    var t = e || {},
                        n = t.phone_number,
                        i = void 0 === n ? "" : n,
                        o = t.country_code,
                        s = void 0 === o ? "86" : o;
                    this.phone = i, this.phoneCountryCode = s
                }
            }, {
                key: "getPhoneNum",
                value: function() {
                    return this.phone
                }
            }, {
                key: "getPhoneCountryCode",
                value: function() {
                    return this.phoneCountryCode
                }
            }, {
                key: "setXMPPToken",
                value: function() {
                    var e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : "";
                    this.xmppToken = e
                }
            }, {
                key: "getXMPPToken",
                value: function() {
                    return this.xmppToken
                }
            }, {
                key: "getXMPPTokenExp",
                value: function() {
                    return this.xmppTokenEXP
                }
            }, {
                key: "getDefaultNickName",
                value: function() {
                    return this.defaultNickname
                }
            }, {
                key: "setDefaultNickName",
                value: function(e) {
                    this.getDefaultNickName() !== e && (v.info("set default nickname to: ".concat(e)), this.defaultNickname = e, d.setValueInLocalStorage("defaultNickname", this.defaultNickname), d.setValueInLocalStorage("userManualSetNickname", "true"))
                }
            }, {
                key: "getWXUserInfo",
                value: function() {
                    return this.wxUserInfo
                }
            }, {
                key: "setWXUserInfo",
                value: function() {
                    var e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : null;
                    this.wxUserInfo = e;
                    var n = d.getValueFromLocalStorage("wx_user_info"),
                        i = t(t({}, n), e);
                    d.setValueInLocalStorage("wx_user_info", i)
                }
            }, {
                key: "getIKnowToKeepInForeground",
                value: function() {
                    return this.iKnowToKeepInForeground
                }
            }, {
                key: "setIKnowToKeepInForeground",
                value: function(e) {
                    this.iKnowToKeepInForeground = e, d.setValueInLocalStorage("iKnowToKeepInForeground", e)
                }
            }, {
                key: "setIsBindWX",
                value: function(e) {
                    this.isBindWX = e
                }
            }, {
                key: "getIsBindWX",
                value: function() {
                    return this.isBindWX
                }
            }, {
                key: "setRegisterOrLoginAuthCode",
                value: function(e) {
                    this.registerOrLoginAuthCode = e
                }
            }, {
                key: "getRegisterOrLoginAuthCode",
                value: function() {
                    return this.registerOrLoginAuthCode
                }
            }, {
                key: "clearRegisterOrLoginAuthCode",
                value: function() {
                    this.setRegisterOrLoginAuthCode("")
                }
            }, {
                key: "setIsCorpUser",
                value: function(e) {
                    this.isCorpUser = e
                }
            }, {
                key: "getIsCorpUser",
                value: function() {
                    return this.isCorpUser
                }
            }, {
                key: "getWeMeetLoginToken",
                value: function() {
                    var e = (this.wemeetLoginInfo || {}).wemeet_cgi_token;
                    return void 0 === e ? "" : e
                }
            }, {
                key: "setWeMeetLoginTokenEXP",
                value: function(e) {
                    this.wemeetLoginInfoEXP = e
                }
            }, {
                key: "getWeMeetLoginTokenEXP",
                value: function() {
                    return this.wemeetLoginInfoEXP
                }
            }, {
                key: "refreshWeMeetLoginInfo",
                value: function(e) {
                    this.setWeMeetLoginInfo(e)
                }
            }, {
                key: "getUserID",
                value: function() {
                    var e = (this.wemeetLoginInfo || {}).userid;
                    return void 0 === e ? "" : e
                }
            }, {
                key: "getAppID",
                value: function() {
                    var e = (this.wemeetLoginInfo || {}).app_id;
                    return void 0 === e ? "" : e
                }
            }, {
                key: "setWeMeetLoginInfo",
                value: function(e) {
                    this.wemeetLoginInfo = e
                }
            }, {
                key: "getWeMeetLoginInfo",
                value: function() {
                    return this.wemeetLoginInfo
                }
            }, {
                key: "clearWeMeetLoginInfo",
                value: function() {
                    this.wemeetLoginInfo = null, this.wemeetLoginInfoEXP = 0
                }
            }, {
                key: "handleCGILoginSucc",
                value: function() {
                    var e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {},
                        t = e.openID,
                        n = void 0 === t ? this.openID : t,
                        i = e.unionId,
                        o = void 0 === i ? this.unionId : i,
                        s = e.unionIdEXP,
                        a = void 0 === s ? this.unionIdEXP : s,
                        r = e.cgiToken,
                        c = void 0 === r ? this.cgiToken : r,
                        u = e.cgiExp,
                        h = void 0 === u ? this.cgiTokenEXP : u;
                    this.setOpenID(n), this.unionId = o, this.unionIdEXP = a, this.setCGIToken(c), this.cgiTokenEXP = h, this.setAccountErrorCode(0)
                }
            }, {
                key: "handleCGILoginFail",
                value: function() {
                    this.setOpenID(""), this.setCGIToken(""), this.cgiTokenEXP = "", this.unionIdEXP = ""
                }
            }, {
                key: "handleXMPPAccountInfoGetSucc",
                value: function() {
                    var e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {},
                        t = e.phoneNumber,
                        n = e.xmppToken,
                        i = e.xmppExp;
                    this.phone = t, this.xmppToken = n, this.xmppTokenEXP = i
                }
            }, {
                key: "handleXMPPAccountInfoGetFail",
                value: function() {
                    this.phone = "", this.xmppToken = "", this.xmppTokenEXP = ""
                }
            }, {
                key: "handleXmppLoginSuccess",
                value: function() {
                    this.xmppLogin = !0, this.setAccountErrorCode(0)
                }
            }, {
                key: "handleXmppLoginFail",
                value: function() {
                    var e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {},
                        t = e.code,
                        n = void 0 === t ? "UNKNOWN" : t;
                    this.xmppLogin = !1, this.setAccountErrorCode(n)
                }
            }, {
                key: "handleXMPPLogout",
                value: function(e, t) {
                    this.xmppLogin = !1, e === g.XMPP_LOGOUT_ON_ABNORMAL_ACCOUNT ? this.setAccountErrorCode(-20001) : this.setAccountErrorCode(0);
                    var n = "";
                    switch (e) {
                        case g.XMPP_LOGOUT_ON_POSITIVELY:
                            n = "";
                            break;
                        case g.XMPP_LOGOUT_ON_ABNORMAL_NETWORK:
                            n = "网络异常，如需加入会议，请退出并重新进入小程序";
                            break;
                        case g.XMPP_LOGOUT_ON_KICKED_BY_SAME_ACCOUNT:
                            n = "您已在其它设备登录，当前设备已断开连接";
                            break;
                        case g.XMPP_LOGOUT_ON_ABNORMAL_ACCOUNT:
                            n = "账号状态异常";
                            break;
                        case g.XMPP_LOGOUT_ON_OTHERS_SITUATION:
                            n = "网络可能已断开";
                            break;
                        default:
                            v.warn("Unhandled type ".concat(e, " at UserStore.handleXMPPLogout"))
                    }
                    var i = (t || {}).data,
                        o = void 0 === i ? {} : i;
                    this.emit(e, {
                        data: {
                            ecode: o.ecode,
                            reason: n
                        }
                    }), I.setLeaveReason(n)
                }
            }, {
                key: "setAutoJoin",
                value: function(e) {
                    this.autoJoin = e
                }
            }, {
                key: "getAutoJoin",
                value: function() {
                    return this.autoJoin
                }
            }, {
                key: "setPrevSuccMeetingCode",
                value: function(e) {
                    v.info("prevSuccMeetingCode changed from ".concat(this.prevSuccMeetingCode, " to ").concat(e)), this.prevSuccMeetingCode = e
                }
            }, {
                key: "getPrevSuccMeetingCode",
                value: function() {
                    return this.prevSuccMeetingCode
                }
            }, {
                key: "setAccountErrorCode",
                value: function(e) {
                    this.accountErrCode = e
                }
            }, {
                key: "getAccountErroeCode",
                value: function() {
                    return this.accountErrCode
                }
            }, {
                key: "isAccountIllegal",
                value: function() {
                    return -20001 === this.accountErrCode
                }
            }, {
                key: "handleAccountListChange",
                value: function(e) {
                    Array.isArray(e) ? this.accountList = e : console.error("'accountList' is supposed to be an array but got: ".concat(e))
                }
            }, {
                key: "getAccountList",
                value: function() {
                    return this.accountList
                }
            }, {
                key: "getAccountPicked",
                value: function() {
                    if (!this.wemeetLoginInfo) return null;
                    var e = "personnel";
                    if (this.isCorpUser) {
                        if (this.accountList.length < 1) return console.error("当前已登录，但是已绑定企业账号的用户却没有企业账号列表。"), e;
                        for (var t = 0, n = this.accountList.length; t < n; t++)
                            if (this.accountList[t].corp_id === this.wemeetLoginInfo.app_id) {
                                e = this.accountList[t];
                                break
                            }
                    }
                    return e
                }
            }, {
                key: "captchaCountDownStarted",
                value: function(e) {
                    var t = this;
                    0 < this.captchaCountDownTimerID && clearInterval(this.captchaCountDownTimerID), this.captchaSecondsLeft = e, this.captchaCountDownChanged(this.captchaSecondsLeft--), this.captchaCountDownTimerID = setInterval((function() {
                        t.captchaCountDownChanged(t.captchaSecondsLeft), t.captchaSecondsLeft -= 1, t.captchaSecondsLeft < 0 && (t.captchaSecondsLeft = 0, clearInterval(t.captchaCountDownTimerID))
                    }), 1e3)
                }
            }, {
                key: "captchaCountDownChanged",
                value: function(e) {
                    this.emit(g.WEMEET_ACCOUNT_REGISTER_CAPTCHA_COUNT_DOWN_CHANGE, e)
                }
            }, {
                key: "getCaptchaSecondsLeft",
                value: function() {
                    return this.captchaSecondsLeft
                }
            }, {
                key: "getCameraAccessState",
                value: function() {
                    return this.cameraAccessState
                }
            }, {
                key: "updateCameraAccessState",
                value: function(e) {
                    this.cameraAccessState !== e && (d.clog.info("camera access state changed from ".concat(this.cameraAccessState, " to ").concat(e)), this.cameraAccessState = e)
                }
            }, {
                key: "getMicrophoneAccessState",
                value: function() {
                    return this.microphoneAccessState
                }
            }, {
                key: "updateMicrophoneAccessState",
                value: function(e) {
                    this.microphoneAccessState !== e && (d.clog.info("microphone access state changed from ".concat(this.microphoneAccessState, " to ").concat(e)), this.microphoneAccessState = e)
                }
            }, {
                key: "setLeaveReason",
                value: function(e) {
                    if ("string" == typeof e) this.leaveReason.msg = e, this.leaveReason.code = 0;
                    else {
                        var t = e.reasonCode,
                            n = e.custom_data;
                        this.leaveReason.msg = n || require("../clients/WemeetClient").getKickoutReasonBy(t), this.leaveReason.code = t
                    }
                    v.info("leave reason changes to ".concat(JSON.stringify(this.getLeaveReason()))), this.emit(g.LEAVE_MEETING_REASON_CHANGE, {
                        data: this.getLeaveReason()
                    })
                }
            }, {
                key: "getLeaveReason",
                value: function() {
                    return this.leaveReason
                }
            }, {
                key: "getExpParams",
                value: function() {
                    return this.expParams
                }
            }, {
                key: "setExpParams",
                value: function(e) {
                    this.expParams = e
                }
            }, {
                key: "setSubscribeState",
                value: function(e) {
                    this.subscribeState = e
                }
            }, {
                key: "getSubscribeState",
                value: function() {
                    return this.subscribeState
                }
            }, {
                key: "iamInWaitingRoom",
                value: function(e) {
                    this.myUserInfoChangedByMyself(e)
                }
            }, {
                key: "myUserInfoChangedByMyself",
                value: function(e) {
                    this.userInfoInWaitingRoomChanged(e, !1)
                }
            }, {
                key: "myUserInfoChangedByHost",
                value: function(e) {
                    this.userInfoInWaitingRoomChanged(e, !0)
                }
            }, {
                key: "userInfoInWaitingRoomChanged",
                value: function(e, t) {
                    return e.nickname ? (this.emit(g.MYSELF_INFO_CHANGE, {
                        data: {
                            mySelfInfo: e,
                            byHost: t
                        }
                    }), !0) : (v.assert("nickname is invalid in: ".concat(JSON.stringify(e))), !1)
                }
            }, {
                key: "addToHistoryNicknames",
                value: function(t) {
                    if (t) {
                        for (var n = -1, i = 0, o = this.historyNames.length; i < o; i++)
                            if (t === this.historyNames[i]) {
                                n = i;
                                break
                            } - 1 !== n ? this.historyNames = [t].concat(e(this.historyNames.slice(0, n)), e(this.historyNames.slice(n + 1))) : (this.historyNames.unshift(t), this.historyNames.splice(N.MaxHistoryNames)), d.setValueInLocalStorage(N.CacheKeyHistoryNames, this.historyNames), I.emit(g.HISTORY_NAMES_CHANGE, {
                            data: {
                                historyNames: this.historyNames
                            }
                        })
                    } else v.assert("nickname is invalid")
                }
            }, {
                key: "getHistoryNicknames",
                value: function() {
                    return this.historyNames
                }
            }, {
                key: "onceEventListener",
                value: function(e) {
                    var t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : null;
                    this.unsubscribe("CHANGE", e, t), this.subscribe("CHANGE", e, t)
                }
            }, {
                key: "addEventListener",
                value: function(e) {
                    this.subscribe("CHANGE", e)
                }
            }, {
                key: "removeEventListener",
                value: function(e) {
                    this.unsubscribe("CHANGE", e)
                }
            }, {
                key: "emit",
                value: function(e, t) {
                    this.publish("CHANGE", e, t)
                }
            }, {
                key: "setSignupNickName",
                value: function(e) {
                    this.signupNickName = e
                }
            }, {
                key: "getSignupNickName",
                value: function() {
                    return this.signupNickName || ""
                }
            }, {
                key: "setUserSig",
                value: function(e) {
                    this.userW6Sig = e
                }
            }, {
                key: "getUserSig",
                value: function() {
                    return this.userW6Sig
                }
            }]), N
        }();
    E.CacheKeyHistoryNames = "history_nicknames", E.MaxHistoryNames = 10;
    var I = new E;
    l.register((function() {
        var e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {},
            t = e.type,
            n = e.payload;
        if (t) switch (t) {
            case g.ACCOUNT_INFO_INIT:
                I.initAccountInfo(n), I.emit(t, n);
                break;
            case g.CGI_LOGIN_SUCC:
                I.handleCGILoginSucc(n), I.emit(t, n);
                break;
            case g.CGI_LOGIN_FAIL:
                I.handleCGILoginFail(n), I.emit(t, n);
                break;
            case g.XMPP_ACCOUNT_INFO_GET_SUCC:
                I.handleXMPPAccountInfoGetSucc(n), I.emit(t, n);
                break;
            case g.XMPP_ACCOUNT_INFO_GET_FAIL:
                I.handleXMPPAccountInfoGetFail(n), I.emit(t, n);
                break;
            case g.ACCOUNT_ERROR_CODE_CHANGE:
                I.setAccountErrorCode(n);
                break;
            case g.OPENID_CHANGE:
                I.setOpenID(n);
                break;
            case g.UNIONID_CHANGE:
                I.setUnionId(n);
                break;
            case g.UNIONIDEXP_CHANGE:
                I.setUnionIdEXP(n);
                break;
            case g.PHONE_NUM_CHANGE:
                I.setPhoneNum(n), I.emit(t, n);
                break;
            case g.CGI_TOKEN_CHANGE:
                I.setCGIToken(n);
                break;
            case g.XMPP_TOKEN_CHANGE:
                I.setXMPPToken(n);
                break;
            case g.XMPP_LOGIN_SUCC:
                I.handleXmppLoginSuccess(), I.emit(t, n);
                break;
            case g.XMPP_LOGIN_FAIL:
                I.handleXmppLoginFail(n.data), I.emit(t, n);
                break;
            case g.XMPP_LOGOUT_ON_POSITIVELY:
            case g.XMPP_LOGOUT_ON_ABNORMAL_NETWORK:
            case g.XMPP_LOGOUT_ON_KICKED_BY_SAME_ACCOUNT:
            case g.XMPP_LOGOUT_ON_ABNORMAL_ACCOUNT:
            case g.XMPP_LOGOUT_ON_OTHERS_SITUATION:
                I.handleXMPPLogout(t, n);
                break;
            case g.WEMEET_REGISTER_OR_LOGIN_AUTH_CODE_CHANGE:
                I.setRegisterOrLoginAuthCode(n);
                break;
            case g.WEMEET_REGISTER_OR_LOGIN_BIND_WX_CHANGE:
                I.setIsBindWX(n);
                break;
            case g.WEMEET_IS_CORP_USER_CHANGE:
                I.setIsCorpUser(n);
                break;
            case g.WEMEET_ACCOUNT_LIST_CHANGE:
                I.handleAccountListChange(n), I.emit(t, n);
                break;
            case g.WEMEET_ACCOUNT_LOGIN_SUCC:
                I.setWeMeetLoginInfo(n), I.emit(t, n);
                break;
            case g.WEMEET_ACCOUNT_LOGOUT_SUCC:
                I.clearWeMeetLoginInfo(n), I.emit(t, n);
                break;
            case g.AUTH_CODE_FOR_REGISTER_GOT:
                I.setRegisterOrLoginAuthCode(n), I.emit(t, n);
                break;
            case g.USER_BIND_WX_CHANGE:
                I.setIsBindWX(n), I.emit(t, n);
                break;
            case g.WEMEET_LOGIN_INFO_EXP_CHANG:
                I.setWeMeetLoginTokenEXP(n);
                break;
            case g.WEMEET_ACCOUNT_LOGIN_INFO_REFRESHED:
                I.refreshWeMeetLoginInfo(n), I.emit(t, n);
                break;
            case g.WEMEET_ACCOUNT_REGISTER_CAPTCHA_COUNT_DOWN_START:
                I.captchaCountDownStarted(n);
                break;
            case g.WEMEET_ACCOUNT_REGISTER_CAPTCHA_COUNT_DOWN_CHANGE:
                I.captchaCountDownChanged(n);
                break;
            case g.WEMEET_ACCOUNT_REGISTER_SUCC:
                I.emit(t, n);
                break;
            case g.WX_USER_INFO_CHANGE:
                I.setWXUserInfo(n.data);
                break;
            case g.CAMERA_ACCESS_STATE_CHANGE:
                I.updateCameraAccessState(n);
                break;
            case g.MICROPHONE_ACCESS_STATE_CHANGE:
                I.updateMicrophoneAccessState(n);
                break;
            case g.USER_SUBSCRIBE_STATE_SUCC:
                I.setSubscribeState(null == n ? void 0 : n.subscribe), v.info("subscribeState: ".concat(I.getSubscribeState())), I.emit(t, n);
                break;
            case g.ABTEST_EXP_PARAMS_CHANGE:
                I.setExpParams(n), I.emit(t, n)
        }
    })), console.log("UserStore.js loaded end"), module.exports = I;
});
define("utils/Dispatcher.js", function(require, module, exports, window, document, frames, self, location, navigator, localStorage, history, Caches, screen, alert, confirm, prompt, XMLHttpRequest, WebSocket, Reporter, webkit, WeixinJSCore) {
    "use strict";
    var i = require("../@babel/runtime/helpers/classCallCheck"),
        s = require("../@babel/runtime/helpers/createClass"),
        t = new(function() {
            function t() {
                if (i(this, t), this._callbacks = {}, this._isDispatching = {}, this._isHandled = {}, this._isPending = {}, this._lastID = 1, t.instance) return t.instance;
                t.instance = this, this.init()
            }
            return s(t, [{
                key: "init",
                value: function() {
                    this._callbacks = {}, this._isDispatching = !1, this._isHandled = {}, this._isPending = {}, this._lastID = 1
                }
            }, {
                key: "register",
                value: function(i) {
                    this._lastID += 1;
                    var s = "ID_" + this._lastID;
                    return this._callbacks[s] = i, s
                }
            }, {
                key: "unregister",
                value: function(i) {
                    delete this._callbacks[i]
                }
            }, {
                key: "dispatch",
                value: function(i) {
                    this._startDispatching(i);
                    try {
                        for (var s = Object.keys(this._callbacks), t = s.length, e = 0; e < t; e++) {
                            var a = s[e];
                            this._isPending[a] || this._invokeCallback(a)
                        }
                    } finally {
                        this._stopDispatching()
                    }
                }
            }, {
                key: "_startDispatching",
                value: function(i) {
                    for (var s = Object.keys(this._callbacks), t = s.length, e = 0; e < t; e++) {
                        var a = s[e];
                        this._isPending[a] = !1, this._isHandled[a] = !1
                    }
                    this._pendingPayload = i, this._isDispatching = !0
                }
            }, {
                key: "_stopDispatching",
                value: function() {
                    delete this._pendingPayload, this._isDispatching = !1
                }
            }, {
                key: "_invokeCallback",
                value: function(i) {
                    this._isPending[i] = !0, this._callbacks[i](this._pendingPayload), this._isHandled[i] = !0
                }
            }]), t
        }());
    module.exports = t;
});
define("utils/EventEmitter.js", function(require, module, exports, window, document, frames, self, location, navigator, localStorage, history, Caches, screen, alert, confirm, prompt, XMLHttpRequest, WebSocket, Reporter, webkit, WeixinJSCore) {
    "use strict";
    var n = require("../@babel/runtime/helpers/classCallCheck"),
        e = require("../@babel/runtime/helpers/createClass"),
        t = function() {
            function t() {
                n(this, t), this._channels = {}
            }
            return e(t, [{
                key: "subscribe",
                value: function(n, e, t) {
                    n && "string" == typeof n && "function" == typeof e && (this._channels[n] || (this._channels[n] = []), t && (e.context = t), this._channels[n].push(e))
                }
            }, {
                key: "unsubscribe",
                value: function(n, e) {
                    if (n && "string" == typeof n && "function" == typeof e && this._channels[n]) {
                        var t = this._channels[n] || [],
                            s = t.findIndex((function(n) {
                                return n === e
                            }));
                        s >= 0 && t.splice(s, 1)
                    }
                }
            }, {
                key: "publish",
                value: function(n) {
                    for (var e = arguments.length, t = new Array(e > 1 ? e - 1 : 0), s = 1; s < e; s++) t[s - 1] = arguments[s];
                    if (n && "string" == typeof n) {
                        var i = this._channels[n] || [];
                        i.forEach((function(n) {
                            n.call.apply(n, [n.context || null].concat(t))
                        }))
                    }
                }
            }]), t
        }();
    module.exports = t;
});
define("utils/abtjs/abt_sdk.wx.js", function(require, module, exports, window, document, frames, self, location, navigator, localStorage, history, Caches, screen, alert, confirm, prompt, XMLHttpRequest, WebSocket, Reporter, webkit, WeixinJSCore) {
    "use strict";
    var e = require("../../@babel/runtime/helpers/inherits"),
        t = require("../../@babel/runtime/helpers/createSuper"),
        n = require("../../@babel/runtime/helpers/classCallCheck"),
        r = require("../../@babel/runtime/helpers/createClass"),
        o = require("../../@babel/runtime/helpers/typeof");
    ! function(e, t) {
        if ("object" == ("undefined" == typeof exports ? "undefined" : o(exports)) && "object" == ("undefined" == typeof module ? "undefined" : o(module))) module.exports = t();
        else if ("function" == typeof define && define.amd) define([], t);
        else {
            var n = t();
            for (var r in n)("object" == ("undefined" == typeof exports ? "undefined" : o(exports)) ? exports : e)[r] = n[r]
        }
    }(window, (function() {
        return function(e) {
            var t = {};

            function n(r) {
                if (t[r]) return t[r].exports;
                var o = t[r] = {
                    i: r,
                    l: !1,
                    exports: {}
                };
                return e[r].call(o.exports, o, o.exports, n), o.l = !0, o.exports
            }
            return n.m = e, n.c = t, n.d = function(e, t, r) {
                n.o(e, t) || Object.defineProperty(e, t, {
                    enumerable: !0,
                    get: r
                })
            }, n.r = function(e) {
                "undefined" != typeof Symbol && Symbol.toStringTag && Object.defineProperty(e, Symbol.toStringTag, {
                    value: "Module"
                }), Object.defineProperty(e, "__esModule", {
                    value: !0
                })
            }, n.t = function(e, t) {
                if (1 & t && (e = n(e)), 8 & t) return e;
                if (4 & t && "object" == o(e) && e && e.__esModule) return e;
                var r = Object.create(null);
                if (n.r(r), Object.defineProperty(r, "default", {
                        enumerable: !0,
                        value: e
                    }), 2 & t && "string" != typeof e)
                    for (var i in e) n.d(r, i, function(t) {
                        return e[t]
                    }.bind(null, i));
                return r
            }, n.n = function(e) {
                var t = e && e.__esModule ? function() {
                    return e.default
                } : function() {
                    return e
                };
                return n.d(t, "a", t), t
            }, n.o = function(e, t) {
                return Object.prototype.hasOwnProperty.call(e, t)
            }, n.p = "", n(n.s = 12)
        }([function(e, t, n) {
            n.d(t, "B", (function() {
                return r
            })), n.d(t, "A", (function() {
                return o
            })), n.d(t, "c", (function() {
                return i
            })), n.d(t, "b", (function() {
                return a
            })), n.d(t, "d", (function() {
                return u
            })), n.d(t, "a", (function() {
                return s
            })), n.d(t, "j", (function() {
                return c
            })), n.d(t, "z", (function() {
                return f
            })), n.d(t, "f", (function() {
                return d
            })), n.d(t, "i", (function() {
                return l
            })), n.d(t, "g", (function() {
                return p
            })), n.d(t, "y", (function() {
                return m
            })), n.d(t, "e", (function() {
                return v
            })), n.d(t, "h", (function() {
                return h
            })), n.d(t, "n", (function() {
                return g
            })), n.d(t, "p", (function() {
                return y
            })), n.d(t, "m", (function() {
                return E
            })), n.d(t, "k", (function() {
                return x
            })), n.d(t, "o", (function() {
                return S
            })), n.d(t, "l", (function() {
                return b
            })), n.d(t, "q", (function() {
                return D
            })), n.d(t, "u", (function() {
                return L
            })), n.d(t, "t", (function() {
                return R
            })), n.d(t, "x", (function() {
                return k
            })), n.d(t, "w", (function() {
                return T
            })), n.d(t, "v", (function() {
                return _
            })), n.d(t, "s", (function() {
                return w
            })), n.d(t, "r", (function() {
                return A
            }));
            var r = "https://tdata.ab.qq.com/",
                o = "https://data.ab.qq.com/",
                i = 2e3,
                a = 1,
                u = "default",
                s = "default",
                c = "JS0B558T33E4YJ",
                f = "_noqb_guid",
                d = "experimentInfo",
                l = "strategy",
                p = "expHitMap",
                m = "userId",
                v = 6e4,
                h = 1e3,
                g = "ROMA_PLATFORM",
                y = "ROMA_RESOLUTION",
                E = "ROMA_DEV_BRAND",
                x = "ROMA_DEV_MODEL",
                S = "ROMA_PLATFORM_VER",
                b = "ROMA_OS_MODEL",
                D = "ROMA_SDK_VERSION",
                L = 1,
                R = "initLocal",
                k = "syncRemote",
                T = "switchUser",
                _ = "reload",
                w = "getExpByName",
                A = "ERROR_INFO"
        }, function(e, t, n) {
            var r = n(2);
            n.d(t, "DefaultLogger", (function() {
                return r.a
            })), n(4);
            var o = n(0);
            n.d(t, "TABBeaconAppKey", (function() {
                return o.j
            })), n.d(t, "TAB_PROFILE_KEY_MODEL", (function() {
                return o.k
            })), n.d(t, "TAB_PROFILE_KEY_OSMODEL", (function() {
                return o.l
            })), n.d(t, "TAB_PROFILE_KEY_PBRAND", (function() {
                return o.m
            })), n.d(t, "TAB_PROFILE_KEY_PLATFORM", (function() {
                return o.n
            })), n.d(t, "TAB_PROFILE_KEY_PLATFORM_VER", (function() {
                return o.o
            })), n.d(t, "TAB_PROFILE_KEY_RESO", (function() {
                return o.p
            })), n.d(t, "TAB_PROFILE_KEY_SDKVER", (function() {
                return o.q
            }));
            var i = n(5);
            n.o(i, "LocalLoader") && n.d(t, "LocalLoader", (function() {
                return i.LocalLoader
            })), n.o(i, "RemoteLoader") && n.d(t, "RemoteLoader", (function() {
                return i.RemoteLoader
            })), n.o(i, "TabReporter") && n.d(t, "TabReporter", (function() {
                return i.TabReporter
            })), n.o(i, "TabSDK") && n.d(t, "TabSDK", (function() {
                return i.TabSDK
            }));
            var a = n(6);
            n.o(a, "LocalLoader") && n.d(t, "LocalLoader", (function() {
                return a.LocalLoader
            })), n.o(a, "RemoteLoader") && n.d(t, "RemoteLoader", (function() {
                return a.RemoteLoader
            })), n.o(a, "TabReporter") && n.d(t, "TabReporter", (function() {
                return a.TabReporter
            })), n.o(a, "TabSDK") && n.d(t, "TabSDK", (function() {
                return a.TabSDK
            }));
            var u = n(7);
            n.o(u, "LocalLoader") && n.d(t, "LocalLoader", (function() {
                return u.LocalLoader
            })), n.o(u, "RemoteLoader") && n.d(t, "RemoteLoader", (function() {
                return u.RemoteLoader
            })), n.o(u, "TabReporter") && n.d(t, "TabReporter", (function() {
                return u.TabReporter
            })), n.o(u, "TabSDK") && n.d(t, "TabSDK", (function() {
                return u.TabSDK
            }));
            var s = n(8);
            n.d(t, "LocalLoader", (function() {
                return s.a
            }));
            var c = n(9);
            n.d(t, "RemoteLoader", (function() {
                return c.a
            }));
            var f = n(10);
            n.d(t, "TabReporter", (function() {
                return f.a
            }));
            var d = n(11);
            n.d(t, "TabSDK", (function() {
                return d.a
            })), n(3)
        }, function(e, t, o) {
            o.d(t, "a", (function() {
                return i
            }));
            var i = new(function() {
                function e() {
                    n(this, e), this.method = console.log, this.level = 2
                }
                return r(e, [{
                    key: "setMethod",
                    value: function(e) {
                        this.method = e
                    }
                }, {
                    key: "setLevel",
                    value: function(e) {
                        this.level = e
                    }
                }, {
                    key: "debug",
                    value: function(e) {
                        this.level <= 0 && this.method(e)
                    }
                }, {
                    key: "info",
                    value: function(e) {
                        this.level <= 1 && this.method(e)
                    }
                }, {
                    key: "error",
                    value: function(e, t) {
                        this.level <= 2 && (this.method(e), t && this.method(t))
                    }
                }]), e
            }())
        }, function(e, t, n) {
            n.d(t, "b", (function() {
                return o
            })), n.d(t, "c", (function() {
                return i
            })), n.d(t, "a", (function() {
                return a
            })), n.d(t, "d", (function() {
                return u
            }));
            var r = n(0);

            function o(e, t, n) {
                return {
                    expName: t,
                    assignment: r.a,
                    grayId: e || r.b,
                    layerCode: n || r.d,
                    params: new Map
                }
            }

            function i(e) {
                var t = "";
                return Object.keys(e).forEach((function(n) {
                    "" !== t && (t += "&"), t += "".concat(n, "=").concat(e[n])
                })), t
            }

            function a() {
                return "xxxxxxxxxxxx4xxxyxxxxxxxxxxxxxxx".replace(/[xy]/g, (function(e) {
                    var t = 16 * Math.random() | 0;
                    return ("x" === e ? t : 3 & t | 8).toString(16)
                }))
            }

            function u(e) {
                if (e) {
                    var t = "";
                    return e.forEach((function(e) {
                        t += e.grayId + "#"
                    })), t
                }
                return ""
            }
        }, function(e, t, o) {
            o.d(t, "a", (function() {
                return i
            }));
            var i = function() {
                function e() {
                    n(this, e), this.initAll()
                }
                return r(e, [{
                    key: "registEventListener",
                    value: function(e, t) {
                        if (!t) return !1;
                        var n = this.eventListerners.get(e);
                        return !!n && (n.push(t), !0)
                    }
                }, {
                    key: "onEvent",
                    value: function(e, t) {
                        var n = this.eventListerners.get(e);
                        n && n.length > 0 && n.forEach((function(e) {
                            e(t)
                        }))
                    }
                }, {
                    key: "clear",
                    value: function() {
                        this.initAll()
                    }
                }, {
                    key: "initAll",
                    value: function() {
                        this.eventListerners = new Map, this.eventListerners.set(0, []), this.eventListerners.set(1, []), this.eventListerners.set(2, []), this.eventListerners.set(3, []), this.eventListerners.set(4, [])
                    }
                }]), e
            }()
        }, function(e, t) {}, function(e, t) {}, function(e, t) {}, function(e, t, o) {
            o.d(t, "a", (function() {
                return u
            }));
            var i = o(0),
                a = o(2).a,
                u = function() {
                    function e() {
                        var t = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : "default";
                        n(this, e), this.identifier = t, this.storedData = new Map, this.defaultLoaders = [], this.defaultLoaders.push(this.loadExpData), this.defaultLoaders.push(this.loadStrategyData), this.defaultLoaders.push(this.loadHitExpMap)
                    }
                    return r(e, [{
                        key: "saveUserId",
                        value: function(e) {
                            var t = this;
                            return new Promise((function(n) {
                                t.save("" + i.z, e), n()
                            }))
                        }
                    }, {
                        key: "saveHitExpMap",
                        value: function(e) {
                            var t = this;
                            return new Promise((function(n, r) {
                                var o = {};
                                e.forEach((function(e, t) {
                                    o[t] = e
                                }));
                                var a = JSON.stringify(o);
                                t.save("".concat(t.identifier, "_").concat(i.g), a).then((function() {
                                    return n()
                                })).catch((function(e) {
                                    return r(e)
                                }))
                            }))
                        }
                    }, {
                        key: "saveStrategyData",
                        value: function(e) {
                            var t = this;
                            return new Promise((function(n, r) {
                                var o = JSON.stringify(e);
                                t.save("".concat(t.identifier, "_").concat(i.i), o).then((function() {
                                    return n()
                                })).catch((function(e) {
                                    return r(e)
                                }))
                            }))
                        }
                    }, {
                        key: "saveExpData",
                        value: function(e) {
                            var t = this;
                            return new Promise((function(n, r) {
                                var o = {};
                                e.forEach((function(e, t) {
                                    e.grayId !== i.b && (o[t] = e)
                                }));
                                var a = JSON.stringify(o);
                                t.save("".concat(t.identifier, "_").concat(i.f), a).then((function() {
                                    return n()
                                })).catch((function(e) {
                                    return r(e)
                                }))
                            }))
                        }
                    }, {
                        key: "loadUserId",
                        value: function() {
                            var e = this;
                            return new Promise((function(t, n) {
                                e.load("" + i.z).then((function(n) {
                                    if (a.debug(n), !n) return t();
                                    e.storedData.set(i.y, n), t()
                                })).catch((function(e) {
                                    return n(e)
                                }))
                            }))
                        }
                    }, {
                        key: "loadExpData",
                        value: function() {
                            var e = this;
                            return new Promise((function(t, n) {
                                e.load("".concat(e.identifier, "_").concat(i.f)).then((function(r) {
                                    if (a.debug(r), r) {
                                        var o = new Map;
                                        e.storedData.set(i.f, o);
                                        try {
                                            var u = JSON.parse(r);
                                            Object.keys(u).forEach((function(e) {
                                                var t = u[e];
                                                o.set(e, t)
                                            })), t()
                                        } catch (e) {
                                            n(e)
                                        }
                                    } else t()
                                })).catch((function(e) {
                                    return n(e)
                                }))
                            }))
                        }
                    }, {
                        key: "loadStrategyData",
                        value: function() {
                            var e = this;
                            return new Promise((function(t, n) {
                                e.load("".concat(e.identifier, "_").concat(i.i)).then((function(r) {
                                    if (a.debug(r), r) try {
                                        var o = JSON.parse(r);
                                        e.storedData.set(i.i, o), t()
                                    } catch (e) {
                                        n(e)
                                    } else t()
                                })).catch((function(e) {
                                    return n(e)
                                }))
                            }))
                        }
                    }, {
                        key: "loadHitExpMap",
                        value: function() {
                            var e = this;
                            return new Promise((function(t, n) {
                                e.load("".concat(e.identifier, "_").concat(i.g)).then((function(r) {
                                    if (a.debug(r), r) {
                                        var o = new Map;
                                        e.storedData.set(i.g, o);
                                        try {
                                            var u = JSON.parse(r);
                                            Object.keys(u).forEach((function(e) {
                                                var t = parseInt(u[e], 10);
                                                o.set(parseInt(e, 10), t)
                                            })), t()
                                        } catch (e) {
                                            n(e)
                                        }
                                    } else t()
                                })).catch((function(e) {
                                    return n(e)
                                }))
                            }))
                        }
                    }, {
                        key: "loadAllData",
                        value: function() {
                            var e = this;
                            return new Promise((function(t, n) {
                                a.debug("loadAllData");
                                var r = [];
                                e.defaultLoaders.forEach((function(t) {
                                    var n = t.call(e);
                                    r.push(n)
                                })), Promise.all(r).then((function() {
                                    a.debug("loaddAllData success"), a.debug(e.storedData), t(e.storedData)
                                })).catch((function(e) {
                                    return n(e)
                                }))
                            }))
                        }
                    }]), e
                }()
        }, function(e, t, o) {
            o.d(t, "a", (function() {
                return s
            }));
            var i = o(2),
                a = o(0),
                u = i.a,
                s = function() {
                    function e(t) {
                        n(this, e), this.store = t
                    }
                    return r(e, [{
                        key: "loadData",
                        value: function(e, t) {
                            var n = this;
                            return new Promise((function(r, o) {
                                var i = n.store.userConfig,
                                    s = (i.isTest ? a.B : a.A) + "wabt/get_gray_policy",
                                    c = {
                                        guid: i.guid,
                                        appid: i.appid,
                                        channel: i.channel,
                                        profiles: i.profiles
                                    };
                                t && (c.guid = t);
                                var f = !1;
                                e && (c.expName = e, f = !0), i.layerCodes && (c.layerCodes = i.layerCodes);
                                var d = i.timeout || a.c;
                                (f ? n.reqWithTimeout(s, c, d) : n.loadRemoteData(s, c, -1)).then((function(e) {
                                    u.debug(e);
                                    try {
                                        var t = JSON.parse(e);
                                        if (0 === t.code) {
                                            var i = n.processData(t);
                                            r(i)
                                        } else o(Error("error http code"))
                                    } catch (e) {
                                        o(e)
                                    }
                                })).catch((function(e) {
                                    o(e)
                                }))
                            }))
                        }
                    }, {
                        key: "processExpData",
                        value: function(e) {
                            var t = new Map,
                                n = e.data;
                            return n ? (Object.keys(n).forEach((function(e) {
                                var r = n[e],
                                    o = {
                                        expName: r.expName,
                                        assignment: r.assignment,
                                        grayId: r.sGrayPolicyId,
                                        layerCode: e,
                                        params: r.params,
                                        percentage: r.percentage,
                                        bucket: r.bucket,
                                        isFirstHit: r.isFirstHit,
                                        endTime: r.endTime
                                    };
                                t.set(e, o)
                            })), t) : t
                        }
                    }, {
                        key: "processStrategyData",
                        value: function(e) {
                            var t = e.strategy;
                            if (!t) return null;
                            var n = {
                                refreshDuration: t.refreshDuration,
                                enableReport: t.enableReport,
                                reportType: t.reportType,
                                attaId: t.reportConfig.id,
                                attaToken: t.reportConfig.token,
                                debug: t.debug,
                                sdkReportRate: t.sdkReportRate
                            };
                            t.debug && (n.debug = !0);
                            var r = t.sdkReportRate;
                            return "number" == typeof r && r >= 0 && r <= 100 && (n.sdkReportRate = r), n
                        }
                    }, {
                        key: "processData",
                        value: function(e) {
                            var t = new Map;
                            try {
                                var n = this.processExpData(e),
                                    r = this.processStrategyData(e);
                                t.set(a.f, n), t.set(a.i, r)
                            } catch (e) {
                                throw u.error("process net data failed", e), Error("error process data")
                            }
                            return t
                        }
                    }, {
                        key: "reqWithTimeout",
                        value: function(e, t, n) {
                            var r = this;
                            return new Promise((function(o, i) {
                                return u.debug("reqWithTimeout"), Promise.race([r.loadRemoteData(e, t, n), new Promise((function(e) {
                                    setTimeout((function() {
                                        return e(new Error("request timeout"))
                                    }), n)
                                }))]).then((function(e) {
                                    return o(e)
                                })).catch((function(e) {
                                    return i(e)
                                }))
                            }))
                        }
                    }]), e
                }()
        }, function(e, t, o) {
            o.d(t, "a", (function() {
                return s
            }));
            var i = o(0),
                a = o(3),
                u = o(2).a,
                s = function() {
                    function e(t) {
                        n(this, e), this.memStore = t
                    }
                    return r(e, [{
                        key: "reportExpExpose",
                        value: function(e) {
                            return this.reportExpEvent("rqd_expimpression", e)
                        }
                    }, {
                        key: "reportExpEvent",
                        value: function(e, t) {
                            var n = this;
                            return new Promise((function(r) {
                                if (!n.checkNeedReport(t)) return r(!1);
                                var o = n.memStore.userConfig,
                                    s = n.memStore.systemInfo,
                                    c = {};
                                c.A149 = t.expName || "", c.A148 = String(t.grayId), c.A70 = o.guid || "", c.A71 = o.appid || "", c.absdk_ver = n.memStore.version, c.is_first_hit = t.isFirstHit ? "1" : "0", c.exp_platform = s.get("system") || "", c.user_type = "0", c.layer_code = t.layerCode, c.exp_percentage = t.percentage ? String(t.percentage) : "0", c.exp_bucket = t.bucket ? String(t.bucket) : "0", c.exp_env = o.isTest ? "test" : "formal";
                                var f = Object(a.c)(t.params);
                                f.length > i.h && (f = f.substring(0, i.h) + "...");
                                var d = o.profiles || {};
                                return Object.keys(d).forEach((function(e) {
                                    c[e] = d[e]
                                })), c.exp_params = f, u.debug(f), n.reportEvent(e, c).then((function() {
                                    r(!0)
                                })).catch((function(e) {
                                    u.info("error report event " + e.message), r(!1)
                                }))
                            }))
                        }
                    }, {
                        key: "reportSDKEvent",
                        value: function(e, t, n, r) {
                            var o = this;
                            return new Promise((function(i) {
                                if (!o.checkSDKReport()) return i(!1);
                                var s = o.memStore.userConfig,
                                    c = o.memStore.systemInfo,
                                    f = o.memStore.expData,
                                    d = {};
                                null == r || r.forEach((function(e, t) {
                                    d[t] = e
                                }));
                                var l = s.profiles || {};
                                return Object.keys(l).forEach((function(e) {
                                    d[e] = l[e]
                                })), d.api_name = e, d.consumed_time = n, d.success_flag = t, d.gray_ids = Object(a.d)(f), d.A71 = s.appid || "", d.A70 = s.guid || "", d.absdk_ver = o.memStore.version, d.exp_platform = c.get("ROMA_PLATFORM") || "", d.exp_env = s.isTest ? "test" : "formal", o.reportEvent("TabApiEvent", d).then((function() {
                                    i(!0)
                                })).catch((function(e) {
                                    u.error("error report event " + e.message), i(!1)
                                }))
                            }))
                        }
                    }, {
                        key: "checkNeedReport",
                        value: function(e) {
                            return !e.expName || e.assignment !== i.a
                        }
                    }, {
                        key: "checkSDKReport",
                        value: function() {
                            var e = this.memStore.strategy;
                            if (null == e ? void 0 : e.debug) return !0;
                            var t = (null == e ? void 0 : e.sdkReportRate) || i.u,
                                n = Math.ceil(100 * Math.random());
                            return u.debug("report api event with random ".concat(n, " ").concat(t)), n <= t
                        }
                    }]), e
                }()
        }, function(e, t, i) {
            i.d(t, "a", (function() {
                return p
            }));
            var a = i(2),
                u = i(0),
                s = i(3),
                c = i(4),
                f = a.a,
                d = function() {
                    function e(t) {
                        n(this, e), this.memStore = t
                    }
                    return r(e, [{
                        key: "setLocalLoder",
                        value: function(e) {
                            this.lLoader = e
                        }
                    }, {
                        key: "setExpHit",
                        value: function(e) {
                            var t;
                            f.debug("set exp hit " + e);
                            var n = this.memStore.hitExpMap;
                            n.set(e, 1), null === (t = this.lLoader) || void 0 === t || t.saveHitExpMap(n)
                        }
                    }, {
                        key: "getIsFirstHit",
                        value: function(e) {
                            return 1 !== this.memStore.hitExpMap.get(e)
                        }
                    }, {
                        key: "updateIsFirstHit",
                        value: function() {
                            var e = this;
                            this.memStore.expData && this.memStore.expData.forEach((function(t) {
                                var n = t;
                                e.getIsFirstHit(n.grayId) ? n.isFirstHit = !0 : n.isFirstHit = !1
                            }))
                        }
                    }]), e
                }(),
                l = a.a,
                p = function() {
                    function e() {
                        var t = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : "default",
                            r = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : "default";
                        n(this, e), this.eventHandler = new c.a, this.memStore = {
                            name: t,
                            version: r,
                            initial: !1,
                            isInit: !1,
                            syncFinish: !1,
                            hitExpMap: new Map
                        }, this.expHitHandler = new d(this.memStore)
                    }
                    return r(e, [{
                        key: "registEventListener",
                        value: function(e, t) {
                            return this.eventHandler.registEventListener(e, t)
                        }
                    }, {
                        key: "init",
                        value: function(e) {
                            var t = this;
                            return new Promise((function(n, r) {
                                if (!e) return l.error("no param config"), n(!1);
                                if (!e.appid) return l.error("appid not set"), n(!1);
                                if (t.memStore.userConfig = e, t.registCallback(), t.memStore.initial) return l.error("already initialized"), t.initFail("already initialized"), n(!1);
                                t.memStore.initial = !0, e.isTest && l.setLevel(0), t.initLoaderAndReporters(), t.expHitHandler.setLocalLoder(t.lLoader);
                                try {
                                    var o = t.initSystemInfo();
                                    t.memStore.systemInfo = o
                                } catch (e) {
                                    l.info("error init systemInfo " + e.message)
                                }
                                t.initProfiles(), e.guid || (l.info("guid not set"), t.lLoader.defaultLoaders.push(t.lLoader.loadUserId)), t.doInit().then((function(r) {
                                    t.memStore.expData && t.initLocalSuccess(), n(r), t.loadRemoteData().catch((function(e) {
                                        l.info("error process remote data " + e.message)
                                    }));
                                    var o = e.timeout || u.c;
                                    setTimeout((function() {
                                        t.memStore.initial && (t.memStore.syncFinish || t.reportErrorEvent(u.x, "timeout"), t.initRemoteSuccess())
                                    }), o), e.disableRefresh || (l.info("start refresh timer"), t.initRefreshTimer())
                                })).catch((function(e) {
                                    t.initFail("init error " + e.message), r(e)
                                }))
                            }))
                        }
                    }, {
                        key: "setProfiles",
                        value: function(e) {
                            var t = this.memStore.userConfig;
                            if (t)
                                if (e && "object" == o(e)) {
                                    var n = t.profiles || {};
                                    Object.keys(e).forEach((function(t) {
                                        n[t] = String(e[t])
                                    })), t.profiles = n
                                } else l.error("please set profiles uing object");
                            else l.error("please init sdk first")
                        }
                    }, {
                        key: "clear",
                        value: function() {
                            this.memStore.initial = !1, this.memStore.isInit = !1, this.memStore.syncFinish = !1, this.memStore.expData = void 0, this.memStore.hitExpMap = new Map, this.memStore.strategy = void 0, this.eventHandler.clear(), this.timeInterval && (clearInterval(this.timeInterval), this.timeInterval = null)
                        }
                    }, {
                        key: "switchUser",
                        value: function(e, t) {
                            var n = this;
                            return new Promise((function(r) {
                                var o = n.memStore.userConfig;
                                if (o.guid === e) return l.info("same userid"), r(!1);
                                var i = (new Date).getTime();
                                l.debug("switch to new user " + e), l.debug(t || ""), l.debug(o), o.guid = e, t && (o.profiles = t, n.initProfiles()), n.loadRemoteData().then((function() {
                                    var e;
                                    n.eventHandler.onEvent(3), null === (e = n.reporter) || void 0 === e || e.reportSDKEvent(u.w, !0, (new Date).getTime() - i), r(!0)
                                })).catch((function(e) {
                                    n.reportErrorEvent(u.w, e.message), r(!1)
                                }))
                            }))
                        }
                    }, {
                        key: "forceReload",
                        value: function() {
                            var e = this;
                            return new Promise((function(t) {
                                var n = (new Date).getTime();
                                e.loadRemoteData().then((function() {
                                    var r;
                                    e.eventHandler.onEvent(4), null === (r = e.reporter) || void 0 === r || r.reportSDKEvent(u.v, !0, (new Date).getTime() - n), t(!0)
                                })).catch((function(n) {
                                    e.reportErrorEvent(u.v, n.message), t(!1)
                                }))
                            }))
                        }
                    }, {
                        key: "getAllExps",
                        value: function() {
                            this.expHitHandler.updateIsFirstHit();
                            var e = {};
                            return this.memStore.expData && this.memStore.expData.forEach((function(t, n) {
                                e[n] = t
                            })), e
                        }
                    }, {
                        key: "getAllParams",
                        value: function() {
                            var e = {};
                            return this.memStore.expData && this.memStore.expData.forEach((function(t) {
                                Object.keys(t.params).forEach((function(n) {
                                    e[n] = t.params[n]
                                }))
                            })), e
                        }
                    }, {
                        key: "getExpById",
                        value: function(e) {
                            for (var t = this.getAllExps(), n = 0, r = Object.keys(t); n < r.length; n++) {
                                var o = t[r[n]];
                                if (o.grayId === e) return o
                            }
                            return null
                        }
                    }, {
                        key: "getExpByIdAndReport",
                        value: function(e) {
                            var t = this.getExpById(e);
                            return t && this.reportExpExpose(t), t
                        }
                    }, {
                        key: "getExpByLayerCode",
                        value: function(e) {
                            for (var t = this.getAllExps(), n = 0, r = Object.keys(t); n < r.length; n++) {
                                var o = t[r[n]];
                                if (o.layerCode === e) return o
                            }
                            return Object(s.b)()
                        }
                    }, {
                        key: "getExpByLayerCodeAndReport",
                        value: function(e) {
                            var t = this.getExpByLayerCode(e);
                            return this.reportExpExpose(t), t
                        }
                    }, {
                        key: "getCachedExpByName",
                        value: function(e) {
                            return this.findExpByName(e)
                        }
                    }, {
                        key: "getExpByName",
                        value: function(e) {
                            var t = this;
                            return new Promise((function(n) {
                                if (t.memStore.expData) n(t.findExpByName(e));
                                else {
                                    var r = (new Date).getTime();
                                    t.loadRemoteData(e).then((function() {
                                        var o;
                                        n(t.findExpByName(e)), null === (o = t.reporter) || void 0 === o || o.reportSDKEvent(u.s, !0, (new Date).getTime() - r)
                                    })).catch((function(o) {
                                        var i;
                                        l.info(o.message), n(t.findExpByName(e)), null === (i = t.reporter) || void 0 === i || i.reportSDKEvent(u.s, !1, (new Date).getTime() - r)
                                    }))
                                }
                            }))
                        }
                    }, {
                        key: "getTargetExpByName",
                        value: function(e, t) {
                            var n = this;
                            return new Promise((function(r, o) {
                                var i = (new Date).getTime();
                                n.loadTargetRemoteData(e, t).then((function(e) {
                                    var t;
                                    r(e), null === (t = n.reporter) || void 0 === t || t.reportSDKEvent(u.s, !0, (new Date).getTime() - i)
                                })).catch((function(e) {
                                    var t;
                                    l.info(e.message), o(e), null === (t = n.reporter) || void 0 === t || t.reportSDKEvent(u.s, !1, (new Date).getTime() - i)
                                }))
                            }))
                        }
                    }, {
                        key: "findExpByName",
                        value: function(e) {
                            l.debug("finde exp by name " + e);
                            var t = this.getAllExps();
                            l.debug(t);
                            for (var n = 0, r = Object.keys(t); n < r.length; n++) {
                                var o = t[r[n]];
                                if (o.expName === e) return o
                            }
                            return Object(s.b)()
                        }
                    }, {
                        key: "getExpByNameAndReport",
                        value: function(e) {
                            var t = this;
                            return new Promise((function(n) {
                                t.getExpByName(e).then((function(e) {
                                    l.info("getExpByNameAndReport get " + e.grayId), n(e), l.info("getExpByNameAndReport report expose for " + e.grayId), t.reportExpExpose(e)
                                }))
                            }))
                        }
                    }, {
                        key: "reportExpExpose",
                        value: function(e) {
                            var t;
                            try {
                                null === (t = this.reporter) || void 0 === t || t.reportExpExpose(e), this.expHitHandler.setExpHit(e.grayId)
                            } catch (e) {
                                l.info(e.message)
                            }
                        }
                    }, {
                        key: "reportExpEvent",
                        value: function(e, t) {
                            var n;
                            null === (n = this.reporter) || void 0 === n || n.reportExpEvent(e, t)
                        }
                    }, {
                        key: "doInit",
                        value: function() {
                            var e = this;
                            return new Promise((function(t) {
                                var n;
                                (null === (n = e.memStore.userConfig) || void 0 === n ? void 0 : n.disableLocalStorage) ? Promise.all([e.lLoader.loadUserId(), e.lLoader.loadHitExpMap()]).then((function() {
                                    e.saveDataToMem(e.lLoader.storedData), t(!0)
                                })): e.lLoader.loadAllData().then((function(n) {
                                    var r;
                                    e.saveDataToMem(n), (null === (r = e.memStore.strategy) || void 0 === r ? void 0 : r.debug) && (l.setLevel(0), l.debug("debug is opened")), t(!0)
                                })).catch((function(n) {
                                    l.info("error init local data " + n.message), e.initFail("init error " + n.message), t(!1)
                                }))
                            }))
                        }
                    }, {
                        key: "saveDataToMem",
                        value: function(e) {
                            e.get(u.f) && (this.memStore.expData = e.get(u.f)), e.get(u.i) && (this.memStore.strategy = e.get(u.i)), e.get(u.g) && (this.memStore.hitExpMap = e.get(u.g));
                            var t = this.memStore.userConfig;
                            t.guid || (l.debug("no guid will load or create one"), e.get(u.y) ? t.guid = e.get(u.y) : (t.guid = Object(s.a)(), this.lLoader.saveUserId(t.guid))), this.expHitHandler.updateIsFirstHit()
                        }
                    }, {
                        key: "loadRemoteData",
                        value: function(e) {
                            var t = this;
                            return new Promise((function(n, r) {
                                var o = (new Date).getTime();
                                t.rLoader.loadData(e).then((function(r) {
                                    var i;
                                    l.debug(r), t.processRometeData(r, e), e || t.initRemoteSuccess();
                                    var a = (new Date).getTime() - o;
                                    null === (i = t.reporter) || void 0 === i || i.reportSDKEvent(u.x, !0, a), n()
                                })).catch((function(e) {
                                    t.reportErrorEvent(u.x, e.message), r(e)
                                }))
                            }))
                        }
                    }, {
                        key: "loadTargetRemoteData",
                        value: function(e, t) {
                            var n = this;
                            return new Promise((function(r, o) {
                                var i = (new Date).getTime();
                                n.rLoader.loadData(e, t).then((function(t) {
                                    var o;
                                    l.debug(t);
                                    var a = t.get(u.f);
                                    l.debug(a), r(a.get(e));
                                    var s = (new Date).getTime() - i;
                                    null === (o = n.reporter) || void 0 === o || o.reportSDKEvent(u.x, !0, s)
                                })).catch((function(e) {
                                    n.reportErrorEvent(u.x, e.message), o(e)
                                }))
                            }))
                        }
                    }, {
                        key: "processRometeData",
                        value: function(e, t) {
                            var n, r, o, i = e.get(u.f),
                                a = e.get(u.i);
                            if (l.debug(i), l.debug(a), t) {
                                var s = i.get(t);
                                s && (null === (n = this.memStore.expData) || void 0 === n || n.set(t, s))
                            } else this.memStore.expData = i;
                            this.memStore.strategy = a, this.memStore.refreshDataTime = (new Date).getTime(), this.expHitHandler.updateIsFirstHit(), !(null === (r = this.memStore.userConfig) || void 0 === r ? void 0 : r.disableLocalStorage) && this.memStore.expData && (this.lLoader.saveExpData(this.memStore.expData), this.lLoader.saveStrategyData(a)), (null === (o = this.memStore.strategy) || void 0 === o ? void 0 : o.debug) && (l.setLevel(0), l.debug("debug is opened"))
                        }
                    }, {
                        key: "initRefreshTimer",
                        value: function() {
                            var e = this;
                            this.timeInterval = setInterval((function() {
                                e.loadRemoteDataTimer()
                            }), u.e)
                        }
                    }, {
                        key: "loadRemoteDataTimer",
                        value: function() {
                            if (this.memStore.isInit && void 0 !== this.memStore.strategy) {
                                l.debug("refresh timer check");
                                var e = this.memStore.refreshDataTime;
                                if (e) {
                                    var t = (new Date).getTime(),
                                        n = 1e3 * this.memStore.strategy.refreshDuration;
                                    if (l.debug("curTime: ".concat(t, " -- updateTime: ").concat(e, " --\n        diffTime: ").concat(t - e, " -- refreshTime: ").concat(n)), t - e < n) return void l.debug("do not update this time")
                                }
                                this.loadRemoteData().catch((function(e) {
                                    l.info("error process remote data " + e.message)
                                }))
                            } else l.debug("isInit has not finished and ignore update this time")
                        }
                    }, {
                        key: "reportErrorEvent",
                        value: function(e, t) {
                            var n, r = new Map;
                            r.set(u.r, t), null === (n = this.reporter) || void 0 === n || n.reportSDKEvent(e, !1, -1, r)
                        }
                    }, {
                        key: "initFail",
                        value: function(e) {
                            this.reportErrorEvent(u.t, e || "unknown"), this.eventHandler.onEvent(0)
                        }
                    }, {
                        key: "initLocalSuccess",
                        value: function() {
                            var e;
                            this.memStore.isInit || (this.memStore.isInit = !0, null === (e = this.reporter) || void 0 === e || e.reportSDKEvent(u.t, !0, 0), this.eventHandler.onEvent(1, this.getAllParams()))
                        }
                    }, {
                        key: "initRemoteSuccess",
                        value: function() {
                            this.initLocalSuccess(), this.memStore.syncFinish || (this.memStore.syncFinish = !0, this.eventHandler.onEvent(2, this.getAllParams()))
                        }
                    }, {
                        key: "registCallback",
                        value: function() {
                            var e = this.memStore.userConfig;
                            e.onInit && this.eventHandler.registEventListener(1, e.onInit), e.onNetData && this.eventHandler.registEventListener(2, e.onNetData), e.onFail && this.eventHandler.registEventListener(0, e.onFail)
                        }
                    }]), e
                }()
        }, function(o, i, a) {
            a.r(i), a.d(i, "TabWxSDK", (function() {
                return m
            })), a.d(i, "abtest", (function() {
                return g
            })), a.d(i, "getInstance", (function() {
                return E
            })), a.d(i, "init", (function() {
                return x
            })), a.d(i, "setBeaconAction", (function() {
                return S
            })), a.d(i, "setBeaconSDK", (function() {
                return b
            })), a.d(i, "clear", (function() {
                return D
            })), a.d(i, "switchUser", (function() {
                return L
            })), a.d(i, "forceReload", (function() {
                return R
            })), a.d(i, "getAllExps", (function() {
                return k
            })), a.d(i, "getExpById", (function() {
                return T
            })), a.d(i, "getExpByIdAndReport", (function() {
                return _
            })), a.d(i, "getExpByLayerCode", (function() {
                return w
            })), a.d(i, "getExpByLayerCodeAndReport", (function() {
                return A
            })), a.d(i, "getExpByName", (function() {
                return I
            })), a.d(i, "getTargetExpByName", (function() {
                return O
            })), a.d(i, "getExpByNameAndReport", (function() {
                return B
            })), a.d(i, "getCachedExpByName", (function() {
                return P
            })), a.d(i, "reportExpExpose", (function() {
                return K
            })), a.d(i, "reportExpEvent", (function() {
                return M
            })), a.d(i, "setLogLevel", (function() {
                return N
            })), a.d(i, "setLogMethod", (function() {
                return F
            }));
            var u = a(1),
                s = wx || qq,
                c = u.DefaultLogger,
                f = function(o) {
                    e(a, o);
                    var i = t(a);

                    function a() {
                        return n(this, a), i.apply(this, arguments)
                    }
                    return r(a, [{
                        key: "load",
                        value: function(e) {
                            return c.debug("get cache " + e), t = e, new Promise((function(e) {
                                s.getStorage({
                                    key: t,
                                    success: function(t) {
                                        e(t.data)
                                    },
                                    fail: function() {
                                        e(null)
                                    }
                                })
                            }));
                            var t
                        }
                    }, {
                        key: "save",
                        value: function(e, t) {
                            return c.debug("set cache ".concat(e, " ").concat(t)), n = e, r = t, new Promise((function(e) {
                                s.setStorage({
                                    key: n,
                                    data: r
                                }), e()
                            }));
                            var n, r
                        }
                    }]), a
                }(u.LocalLoader),
                d = function(o) {
                    e(a, o);
                    var i = t(a);

                    function a() {
                        return n(this, a), i.apply(this, arguments)
                    }
                    return r(a, [{
                        key: "loadRemoteData",
                        value: function(e, t, n) {
                            return function(e, t, n) {
                                return new Promise((function(r, o) {
                                    var i = {
                                        url: e,
                                        data: t,
                                        header: {
                                            "Content-Type": "application/json;charset=UTF-8"
                                        },
                                        method: "POST",
                                        success: function(e) {
                                            200 === e.statusCode ? r(JSON.stringify(e.data)) : o(Error("error http code"))
                                        },
                                        fail: function() {
                                            o(Error("error load net data"))
                                        }
                                    };
                                    n && n > 0 && (i.timeout = n), s.request(i)
                                }))
                            }(e, t, n)
                        }
                    }]), a
                }(u.RemoteLoader),
                l = u.DefaultLogger,
                p = function(o) {
                    e(a, o);
                    var i = t(a);

                    function a(e) {
                        var t;
                        n(this, a), t = i.call(this, e);
                        try {
                            var r = t.getBeaconAction();
                            if (r) t.beaconSDK = new r({
                                appkey: u.TABBeaconAppKey,
                                onReportSuccess: function() {},
                                onReportFail: function() {}
                            });
                            else {
                                var o = t.getBeaconSDK();
                                o ? t.beaconSDK = o : l.error("No Input BeaconAction or beaconSDK")
                            }
                        } catch (e) {
                            l.error("error init beacon sdk", e)
                        }
                        return t
                    }
                    return r(a, [{
                        key: "isOk",
                        value: function() {
                            return !!this.beaconSDK
                        }
                    }, {
                        key: "reportEvent",
                        value: function(e, t) {
                            var n = this;
                            return new Promise((function(r) {
                                var o;
                                (null === (o = n.beaconSDK) || void 0 === o ? void 0 : o.onDirectUserAction) && n.beaconSDK.onDirectUserAction(e, t), r()
                            }))
                        }
                    }, {
                        key: "getBeaconAction",
                        value: function() {
                            return this.memStore.BeaconAction
                        }
                    }, {
                        key: "getBeaconSDK",
                        value: function() {
                            return this.memStore.beaconSDK
                        }
                    }]), a
                }(u.TabReporter),
                m = function(o) {
                    e(a, o);
                    var i = t(a);

                    function a(e) {
                        return n(this, a), i.call(this, e, "1.1.1")
                    }
                    return r(a, [{
                        key: "initLoaderAndReporters",
                        value: function() {
                            var e = this.memStore.userConfig;
                            this.lLoader = new f("".concat(e.appid, "_").concat(this.memStore.name)), this.rLoader = new d(this.memStore), this.reporter = new p(this.memStore)
                        }
                    }, {
                        key: "initProfiles",
                        value: function() {
                            var e = this.memStore.userConfig,
                                t = e.profiles || {};
                            Object.keys(t).forEach((function(e) {
                                t[e] = String(t[e])
                            })), t[u.TAB_PROFILE_KEY_PLATFORM] = "miniprogram";
                            var n = this.memStore.systemInfo;
                            t[u.TAB_PROFILE_KEY_RESO] = n.get("resolution") || "", t[u.TAB_PROFILE_KEY_PBRAND] = n.get("brand") || "", t[u.TAB_PROFILE_KEY_MODEL] = n.get("model") || "", t.ROMA_WEIXIN_VER = n.get("version") || "", t[u.TAB_PROFILE_KEY_PLATFORM_VER] = n.get("SDKVersion") || "", t[u.TAB_PROFILE_KEY_OSMODEL] = n.get("system") || "", t[u.TAB_PROFILE_KEY_SDKVER] = this.memStore.version, e.profiles = t
                        }
                    }, {
                        key: "initSystemInfo",
                        value: function() {
                            return function() {
                                var e = new Map,
                                    t = s.getSystemInfoSync();
                                return e.set("resolution", "".concat(t.screenWidth, "*").concat(t.screenHeight)), e.set("brand", t.brand), e.set("model", t.model), e.set("version", t.version), e.set("SDKVersion", t.SDKVersion), e.set("system", t.system), e
                            }()
                        }
                    }, {
                        key: "setBeaconAction",
                        value: function(e) {
                            this.memStore.BeaconAction = e
                        }
                    }, {
                        key: "setBeaconSDK",
                        value: function(e) {
                            this.memStore.beaconSDK = e
                        }
                    }]), a
                }(u.TabSDK),
                v = u.DefaultLogger,
                h = new m,
                g = h,
                y = new Map;

            function E(e) {
                var t = y.get(e);
                return t || (t = new m(e), y.set(e, t)), t
            }

            function x(e) {
                return h.init(e)
            }

            function S(e) {
                return h.setBeaconAction(e)
            }

            function b(e) {
                return h.setBeaconSDK(e)
            }

            function D() {
                h.clear()
            }

            function L(e, t, n) {
                return new Promise((function(r) {
                    h.switchUser(e, t).then((function() {
                        r(!0), n && n(!0)
                    })).catch((function() {
                        r(!1), n && n(!1)
                    }))
                }))
            }

            function R() {
                return h.forceReload()
            }

            function k() {
                return h.getAllExps()
            }

            function T(e) {
                return h.getExpById(e)
            }

            function _(e) {
                return h.getExpByIdAndReport(e)
            }

            function w(e) {
                return h.getExpByLayerCode(e)
            }

            function A(e) {
                return h.getExpByLayerCodeAndReport(e)
            }

            function I(e, t) {
                return new Promise((function(n) {
                    h.getExpByName(e).then((function(e) {
                        v.info("getExpByName got exp " + e.grayId), n(e), t && t(e)
                    })).catch((function() {
                        n(null), t && t(null)
                    }))
                }))
            }

            function O(e, t, n) {
                return new Promise((function(r) {
                    h.getTargetExpByName(e, t).then((function(e) {
                        v.info("getTargetExpByName got exp " + e.grayId), r(e), n && n(e)
                    })).catch((function() {
                        r(null), n && n(null)
                    }))
                }))
            }

            function B(e, t) {
                return new Promise((function(n) {
                    h.getExpByNameAndReport(e).then((function(e) {
                        v.info("getExpByNameAndReport got exp " + e.grayId), n(e), t && t(e)
                    })).catch((function(e) {
                        v.info(e.message), n(null), t && t(null)
                    }))
                }))
            }

            function P(e) {
                return h.getCachedExpByName(e)
            }

            function K(e) {
                return h.reportExpExpose(e)
            }

            function M(e, t) {
                return h.reportExpEvent(e, t)
            }

            function N(e) {
                v.setLevel(e)
            }

            function F(e) {
                v.setMethod(e)
            }
            y.set("default", h)
        }])
    }));
});
define("utils/abtjs/index.js", function(require, module, exports, window, document, frames, self, location, navigator, localStorage, history, Caches, screen, alert, confirm, prompt, XMLHttpRequest, WebSocket, Reporter, webkit, WeixinJSCore) {
    "use strict";
    var e = require("../../@babel/runtime/helpers/regeneratorRuntime"),
        r = require("../../@babel/runtime/helpers/asyncToGenerator"),
        n = require("./abt_sdk.wx"),
        t = "exp_tencentMeeting_miniprogram_officialAccountGrowing_test_half_percent",
        i = "exp_tencentMeeting_miniprogram_officialAccountGrowing_pre",
        o = "exp_tencentMeeting_miniprogram_officialAccountGrowing_prod_02";

    function a() {
        return (a = r(e().mark((function r() {
            return e().wrap((function(e) {
                for (;;) switch (e.prev = e.next) {
                    case 0:
                        return e.abrupt("return", new Promise((function(e) {
                            n.init({
                                appid: "1251",
                                onInit: function() {
                                    e(!0)
                                }
                            })
                        })));
                    case 1:
                    case "end":
                        return e.stop()
                }
            }), r)
        })))).apply(this, arguments)
    }
    module.exports.initABTestSDK = function() {
        return a.apply(this, arguments)
    }, module.exports.sendExpReport = function() {
        var e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : "test";
        return new Promise((function(r, a) {
            var c;
            switch (e) {
                case "test":
                    c = t;
                    break;
                case "pre":
                    c = i;
                    break;
                case "prod":
                    c = o;
                    break;
                default:
                    return void a(new Error("没有传入变量env"))
            }
            n.getExpByNameAndReport(c, (function(e) {
                r(e.params)
            }))
        }))
    };
});
define("utils/aegis/aegis.min.js", function(require, module, exports, window, document, frames, self, location, navigator, localStorage, history, Caches, screen, alert, confirm, prompt, XMLHttpRequest, WebSocket, Reporter, webkit, WeixinJSCore) {
    "use strict";
    require("../../@babel/runtime/helpers/Arrayincludes");
    var e = require("../../@babel/runtime/helpers/typeof");
    ! function(t, n) {
        "object" == ("undefined" == typeof exports ? "undefined" : e(exports)) && "undefined" != typeof module ? module.exports = n() : "function" == typeof define && define.amd ? define(n) : (t = "undefined" != typeof globalThis ? globalThis : t || self).Aegis = n()
    }(void 0, (function() {
        var t = function(e, n) {
            return (t = Object.setPrototypeOf || {
                    __proto__: []
                }
                instanceof Array && function(e, t) {
                    e.__proto__ = t
                } || function(e, t) {
                    for (var n in t) Object.prototype.hasOwnProperty.call(t, n) && (e[n] = t[n])
                })(e, n)
        };

        function n(e, n) {
            function i() {
                this.constructor = e
            }
            t(e, n), e.prototype = null === n ? Object.create(n) : (i.prototype = n.prototype, new i)
        }
        var i = function() {
            return (i = Object.assign || function(e) {
                for (var t, n = 1, i = arguments.length; n < i; n++)
                    for (var o in t = arguments[n]) Object.prototype.hasOwnProperty.call(t, o) && (e[o] = t[o]);
                return e
            }).apply(this, arguments)
        };

        function o() {
            for (var e = 0, t = 0, n = arguments.length; t < n; t++) e += arguments[t].length;
            var i = Array(e),
                o = 0;
            for (t = 0; t < n; t++)
                for (var r = arguments[t], s = 0, a = r.length; s < a; s++, o++) i[o] = r[s];
            return i
        }
        Object.assign || Object.defineProperty(Object, "assign", {
            enumerable: !1,
            configurable: !0,
            writable: !0,
            value: function(e) {
                if (null == e) throw new TypeError("Cannot convert first argument to object");
                for (var t = Object(e), n = 1; n < arguments.length; n++)
                    if (null != (i = arguments[n]))
                        for (var i = Object(i), o = Object.keys(Object(i)), r = 0, s = o.length; r < s; r++) {
                            var a = o[r],
                                l = Object.getOwnPropertyDescriptor(i, a);
                            null != l && l.enumerable && (t[a] = i[a])
                        }
                    return t
            }
        }), a.prototype.indexOf = function(e, t) {
            for (var n = 0; n < e.length; n++)
                if (e[n].callback === t) return n;
            return -1
        }, a.prototype.on = function(e, t, n) {
            var i;
            if (void 0 === n && (n = 0), this) return (i = this.eventsList[e]) || (this.eventsList[e] = [], i = this.eventsList[e]), -1 !== this.indexOf(i, t) || i.push({
                name: e,
                type: n || 0,
                callback: t
            }), this
        }, a.prototype.one = function(e, t) {
            this.on(e, t, 1)
        }, a.prototype.remove = function(e, t) {
            if (this) {
                var n = this.eventsList[e];
                if (!n) return null;
                if (t) return n.length && (t = this.indexOf(n, t), n.splice(t, 1)), this;
                try {
                    delete this.eventsList[e]
                } catch (e) {}
                return null
            }
        }, a.prototype.clear = function() {
            this.eventsList = {}
        };
        var r = a,
            s = function(e) {
                if (!e || 0 === e.length) return "{}";
                e = Array.isArray(e) ? e : [e];
                var t = Object.keys(e[0]),
                    n = {},
                    i = (t.forEach((function(t) {
                        n[t] = e.map((function(e) {
                            return e[t]
                        }))
                    })), n.count = e.length, n);
                if ("string" == typeof i) return i;
                try {
                    return JSON.stringify(i, y()) || "undefined"
                } catch (i) {
                    return "error happen when aegis stringify: \n " + i.message + " \n " + i.stack
                }
            };

        function a() {
            var e = this;
            this.emit = function(t, n) {
                if (e) {
                    var i;
                    if (null != (o = e.eventsList[t]) && o.length)
                        for (var o = o.slice(), r = 0; r < o.length; r++) {
                            i = o[r];
                            try {
                                var s = i.callback.apply(e, [n]);
                                if (1 === i.type && e.remove(t, i.callback), !1 === s) break
                            } catch (t) {
                                throw t
                            }
                        }
                    return e
                }
            }, this.eventsList = {}
        }

        function l(e, t) {
            return "string" == typeof e ? e.split("?")[t ? 1 : 0] || "" : e
        }

        function u(e) {
            return "string" == typeof e && e.startsWith("//") ? "undefined" != typeof location && "https:" === location.protocol : /^https/.test(e)
        }

        function c(e, t, n) {
            var i, o;
            try {
                if ("function" == typeof(null == t ? void 0 : t.retCodeHandler)) return {
                    code: void 0 === (r = (o = t.retCodeHandler(e, null == n ? void 0 : n.url, null == n ? void 0 : n.ctx) || {}).code) ? "unknown" : r,
                    isErr: o.isErr
                };
                "string" == typeof e && (e = JSON.parse(e)), "function" == typeof(null === (i = null == t ? void 0 : t.ret) || void 0 === i ? void 0 : i.join) && (v = [].concat(t.ret.map((function(e) {
                    return e.toLowerCase()
                }))));
                var r, s = Object.getOwnPropertyNames(e).filter((function(e) {
                    return -1 !== v.indexOf(e.toLowerCase())
                }));
                return s.length ? {
                    code: "" + (r = Number(e[s[0]])),
                    isErr: 0 !== r
                } : {
                    code: "unknown",
                    isErr: !1
                }
            } catch (e) {
                return {
                    code: "unknown",
                    isErr: !1
                }
            }
        }

        function f(t, n) {
            void 0 === n && (n = 3);
            var i, o, r, s = "";
            return Array.isArray(t) ? (s += "[", i = t.length, t.forEach((function(t, o) {
                var r, a;
                s = (s += "object" == e(t) && 1 < n ? f(t, n - 1) : (a = "", a += "undefined" == (r = e(t = t)) || "symbol" == r || "function" == r ? "null" : "string" == r || "object" == r ? '"' + t + '"' : t)) + (o === i - 1 ? "" : ",")
            })), s += "]") : t instanceof Object ? (s = "{", o = Object.keys(t), r = o.length, o.forEach((function(i, a) {
                var l, u, c;
                "object" == e(t[i]) && 1 < n ? s += '"' + i + '":' + f(t[i], n - 1) : s += (l = t[i = i], c = "", "string" == (u = e(l)) || "object" == u ? c += '"' + i + '":"' + l + '"' : "function" == typeof l ? c += '"' + i + '":"function ' + l.name + '"' : "symbol" == e(l) ? c += '"' + i + '":"symbol"' : "number" != typeof l && "boolean" != u || (c += '"' + i + '": ' + l), c), s += a === r - 1 || a < r - 1 && void 0 === t[o[a + 1]] ? "" : ","
            })), s += "}") : s += t, s
        }
        var p, d, h, g, m, v = ["ret", "retcode", "code", "errcode"],
            y = function() {
                var t = new WeakSet;
                return function(n, i) {
                    if (i instanceof Error) return "Error.message: " + i.message + " \n  Error.stack: " + i.stack;
                    if ("object" == e(i) && null !== i) {
                        if (t.has(i)) return "[Circular " + (n || "root") + "]";
                        t.add(i)
                    }
                    return i
                }
            },
            b = function(e) {
                if ("string" == typeof e) return e;
                try {
                    return e instanceof Error ? (JSON.stringify(e, y(), 4) || "undefined").replace(/"/gim, "") : JSON.stringify(e, y(), 4) || "undefined"
                } catch (e) {
                    return "error happen when aegis stringify: \n " + e.message + " \n " + e.stack
                }
            };

        function O(e, t) {
            var n, i = [],
                o = e.config;
            return e.lifeCycle.on("destroy", (function() {
                    i.length = 0
                })),
                function(r, s) {
                    if (Array.isArray(r) ? i = i.concat(r) : i.push(r), t && i.length >= t || e.sendNow && 0 < i.length) return i = I(i), s(i.splice(0, i.length)), void(n && clearTimeout(n));
                    n && clearTimeout(n), n = setTimeout((function() {
                        n = null, 0 < (i = I(i)).length && s(i.splice(0, i.length))
                    }), o.delay)
                }
        }

        function E(e, t) {
            return Array.isArray(e) ? t(e.map((function(e) {
                return i(i({}, e), {
                    msg: "string" == typeof e.msg ? e.msg : [].concat(e.msg).map(b).join(" ")
                })
            }))) : t([i(i({}, e), {
                msg: "string" == typeof e.msg ? e.msg : b(e.msg)
            })])
        }

        function w(e, t) {
            return function(n, o) {
                var r = Array.isArray(n),
                    s = r ? n : [n],
                    a = (e.lifeCycle.emit("beforeRequest", n), e.config.beforeRequest);
                (s = "function" == typeof a ? s.map((function(e) {
                    try {
                        var n = a({
                            logs: e,
                            logType: t
                        });
                        return (null == n ? void 0 : n.logType) === t && null != n && n.logs ? n.logs : !1 !== n && e
                    } catch (n) {
                        return e
                    }
                })).filter((function(e) {
                    return !1 !== e
                })) : s).length && (s = function(e, t) {
                    if (!Array.isArray(e) || e.length <= 1) return e;
                    var n = [],
                        o = [];
                    return !(o = "string" == typeof t ? [t] : t) || o.length <= 0 || (o.forEach((function(t) {
                        e.forEach((function(e) {
                            null != e && e[t] && n.push(t)
                        }))
                    })), 0 < n.length && (e = e.map((function(e) {
                        var t = {};
                        return n.forEach((function(e) {
                            t[e] = ""
                        })), i(i({}, t), e)
                    })))), e
                }(s, ["ext1", "ext2", "ext3", "level", "trace", "tag", "seq"]), o(r ? s : s[0]))
            }
        }

        function R(t) {
            return function(n, i) {
                t.lifeCycle.emit("modifyRequest", n);
                var o = t.config.modifyRequest;
                if ("function" == typeof o) try {
                    var r = o(n);
                    "object" == e(r) && "url" in r && (n = r)
                } catch (n) {
                    console.error(n)
                }
                i(n)
            }
        }

        function P(e) {
            return function(t, n) {
                e.lifeCycle.emit("afterRequest", t);
                var i = e.config.afterRequest;
                "function" == typeof i && !1 === i(t) || n(t)
            }
        }

        function S(e) {
            if (!e || !e.reduce || !e.length) throw new TypeError("createPipeline need at least one function param");
            return 1 === e.length ? function(t, n) {
                e[0](t, n || H)
            } : e.reduce((function(e, t) {
                return function(n, i) {
                    return void 0 === i && (i = H), e(n, (function(e) {
                        return null == t ? void 0 : t(e, i)
                    }))
                }
            }))
        }

        function T(e, t) {
            Object.getOwnPropertyNames(e).forEach((function(n) {
                "function" == typeof e[n] && "constructor" !== n && (t ? t[n] = "sendPipeline" === n ? function() {
                    return function() {}
                } : function() {} : e[n] = function() {})
            }))
        }

        function k() {
            try {
                var e = getCurrentPages(),
                    t = e[e.length - 1] || {},
                    n = (i = t.options, Object.keys(i).length ? "?" + Object.keys(i).map((function(e) {
                        return e + "=" + i[e]
                    })).join("&") : "");
                return t.route ? t.route + n : ""
            } catch (e) {
                return ""
            }
            var i
        }

        function x(e, t) {
            if ("string" == typeof e && "string" == typeof t) {
                if (e === t) return 1;
                for (var n = e.split("."), i = t.split("."), o = Math.max(n.length, i.length), r = 0; r < o; r++) {
                    var s = ~~n[r],
                        a = ~~i[r];
                    if (s < a) return;
                    if (a < s) return 1
                }
            }
        }

        function N(e) {
            return x(W = W || V.getSystemInfoSync().SDKVersion, "1.1.1") && V.canIUse ? V.canIUse(e) : !!V[e]
        }

        function L(e) {
            for (var t, n = {
                    unknown: /unknown|none/i,
                    wifi: /wifi/i,
                    net2g: /2g/i,
                    net3g: /3g/i,
                    net4g: /4g/i,
                    net5g: /5g/i,
                    net6g: /6g/i
                }, i = h.unknown, o = 0; o < Object.keys(n).length; o++) {
                var r = Object.keys(n)[o];
                if (null !== (t = n[r]) && void 0 !== t && t.test(e)) {
                    i = h[r];
                    break
                }
            }
            return i
        }

        function C(e) {
            var t = e.apiName,
                n = ne[t];
            return n ? n.hackReq.addCallback(e) : (n = wx[t], ne[t] = {
                hackReq: new ie(e),
                originApi: n
            }), ne[t]
        }(B = p = p || {}).INFO_ALL = "-1", B.API_RESPONSE = "1", B.INFO = "2", B.ERROR = "4", B.PROMISE_ERROR = "8", B.AJAX_ERROR = "16", B.SCRIPT_ERROR = "32", B.IMAGE_ERROR = "64", B.CSS_ERROR = "128", B.CONSOLE_ERROR = "256", B.MEDIA_ERROR = "512", B.RET_ERROR = "1024", B.REPORT = "2048", B.PV = "4096", B.EVENT = "8192", B.PAGE_NOT_FOUND_ERROR = "16384", B.WEBSOCKET_ERROR = "32768", (B = d = d || {})[B.android = 1] = "android", B[B.ios = 2] = "ios", B[B.windows = 3] = "windows", B[B.macos = 4] = "macos", B[B.linux = 5] = "linux", B[B.devtools = 6] = "devtools", B[B.other = 100] = "other", (B = h = h || {})[B.unknown = 100] = "unknown", B[B.wifi = 1] = "wifi", B[B.net2g = 2] = "net2g", B[B.net3g = 3] = "net3g", B[B.net4g = 4] = "net4g", B[B.net5g = 5] = "net5g", B[B.net6g = 6] = "net6g", (B = g = g || {}).LOG = "log", B.SPEED = "speed", B.PERFORMANCE = "performance", B.OFFLINE = "offline", B.WHITE_LIST = "whiteList", B.VITALS = "vitals", B.PV = "pv", B.CUSTOM_PV = "customPV", B.EVENT = "event", B.CUSTOM = "custom", B.SDK_ERROR = "sdkError", B.SET_DATA = "setData", B.LOAD_PACKAGE = "loadPackage", (B = m = m || {}).production = "production", B.development = "development", B.gray = "gray", B.pre = "pre", B.daily = "daily", B.local = "local", B.test = "test", B.others = "others";
        var A, U, j, _, q, I = function(e) {
                return e.filter((function(t, n) {
                    return "static" !== t.type || !e.find((function(e, i) {
                        return t.url === e.url && 200 === t.status && n < i
                    }))
                }))
            },
            F = function(e) {
                e.level === p.INFO_ALL && (e.level = p.INFO)
            },
            D = function(e) {
                return (Array.isArray(e) ? e : [e]).map((function(e) {
                    return Object.getOwnPropertyNames(e).reduce((function(t, n) {
                        return "ctx" !== n && (t[n] = e[n]), t
                    }), {
                        level: p.INFO,
                        msg: ""
                    })
                }))
            },
            M = function(e) {
                return function(t) {
                    return e.sendPipeline([function(t, n) {
                        return n({
                            url: e.config.url || "",
                            data: s(D(t)),
                            method: "post",
                            contentType: "application/json",
                            type: g.LOG,
                            log: t,
                            requestConfig: {
                                timeout: 5e3
                            },
                            success: function() {
                                var i = e.config.onReport;
                                "function" == typeof i && t.forEach((function(e) {
                                    i(e)
                                })), "function" == typeof n && n([])
                            },
                            fail: function(t) {
                                "403 forbidden" === t && e.destroy()
                            }
                        })
                    }], g.LOG)(t)
                }
            },
            H = function() {},
            B = (Object.defineProperty(Oe.prototype, "__version__", {get: function() {
                    return console.warn("__version__ has discard, please use version"), "1.24.57"
                },
                enumerable: !1,
                configurable: !0
            }), Object.defineProperty(Oe.prototype, "LogType", {get: function() {
                    return console.warn("LogType has discard, please use logType"), p
                },
                enumerable: !1,
                configurable: !0
            }), Oe.prototype.init = function(e) {
                this.setConfig(e);
                for (var t = 0; t < Oe.installedPlugins.length; t++) try {
                    Oe.installedPlugins[t].patch(this)
                } catch (e) {
                    this.sendSDKError(e)
                }
                this.lifeCycle.emit("onInited")
            }, Oe.prototype.setConfig = function(e) {
                Object.assign(this.config, e);
                var t = (e = this.config).id,
                    n = e.uin,
                    i = e.version,
                    o = e.ext1,
                    r = e.ext2,
                    s = e.ext3,
                    a = e.aid,
                    l = void 0 === (u = e.env) ? "production" : u,
                    u = e.pageUrl;
                e = this.bean.id !== t || this.bean.uin !== n || this.bean.aid !== a;
                return this.bean.id = t || "", this.bean.uin = n || "", this.bean.version = i || "1.24.57", this.bean.aid = a || "", this.bean.env = function() {
                    switch (l) {
                        case m.production:
                        case m.development:
                        case m.gray:
                        case m.pre:
                        case m.daily:
                        case m.local:
                        case m.test:
                        case m.others:
                            return 1;
                        default:
                            return
                    }
                }() ? l : m.others, u && this.extendBean("from", encodeURIComponent(u)), o && this.extendBean("ext1", encodeURIComponent(o)), r && this.extendBean("ext2", encodeURIComponent(r)), s && this.extendBean("ext3", encodeURIComponent(s)), e && this.lifeCycle.emit("onConfigChange", this.config), this.config
            }, Oe.use = function(e) {
                -1 === Oe.installedPlugins.indexOf(e) && e.aegisPlugin && Oe.installedPlugins.push(e)
            }, Oe.unuse = function(e) {
                -1 !== (e = Oe.installedPlugins.indexOf(e)) && Oe.installedPlugins.splice(e, 1)
            }, Oe.prototype.info = function() {
                for (var e = [], t = 0; t < arguments.length; t++) e[t] = arguments[t];
                var n = {
                    level: p.INFO,
                    msg: e
                };
                1 === e.length && e[0].msg && Object.assign(n, i({}, e[0]), {
                    level: p.INFO
                }), this.normalLogPipeline(n)
            }, Oe.prototype.infoAll = function() {
                for (var e = [], t = 0; t < arguments.length; t++) e[t] = arguments[t];
                var n = {
                    level: p.INFO_ALL,
                    msg: e
                };
                1 === e.length && e[0].msg && Object.assign(n, i({}, e[0]), {
                    level: p.INFO_ALL
                }), this.normalLogPipeline(n)
            }, Oe.prototype.report = function() {
                for (var e = [], t = 0; t < arguments.length; t++) e[t] = arguments[t];
                var n = {
                    level: p.REPORT,
                    msg: e
                };
                1 === e.length && e[0].msg && Object.assign(n, i({}, e[0])), this.normalLogPipeline(n)
            }, Oe.prototype.error = function() {
                for (var e = [], t = 0; t < arguments.length; t++) e[t] = arguments[t];
                var n = {
                    level: p.ERROR,
                    msg: e
                };
                1 === e.length && e[0].msg && Object.assign(n, i({}, e[0]), {
                    level: p.ERROR
                }), this.normalLogPipeline(n)
            }, Oe.prototype.speedLogPipeline = function(e) {
                throw new Error('You need to override "speedLogPipeline" method')
            }, Oe.prototype.reportPv = function(e) {
                var t, n = this;
                e && (console.warn("reportPv is deprecated, please use reportEvent"), t = "" + Object.getOwnPropertyNames(this.bean).filter((function(e) {
                    return "id" !== e
                })).map((function(e) {
                    return e + "=" + n.bean[e]
                })).join("&"), this.sendPipeline([function(i, o) {
                    o({
                        url: n.config.url + "/" + e + "?" + t,
                        addBean: !1,
                        type: g.CUSTOM_PV,
                        fail: function(e) {
                            "403 forbidden" === e && n.destroy()
                        }
                    })
                }], g.CUSTOM_PV)(null))
            }, Oe.prototype.reportEvent = function(e) {
                e && ((e = "string" == typeof e ? {
                    name: e,
                    ext1: this.config.ext1 || "",
                    ext2: this.config.ext2 || "",
                    ext3: this.config.ext3 || ""
                } : e).name ? this.eventPipeline(e) : console.warn("reportEvent params error"))
            }, Oe.prototype.reportTime = function(t, n) {
                if ("object" == e(t)) return this.reportT(t);
                "string" == typeof t ? "number" == typeof n ? n < 0 || 6e4 < n ? console.warn("reportTime: duration must between 0 and 60000") : this.submitCustomTime(t, n) : console.warn("reportTime: second param must be number") : console.warn("reportTime: first param must be a string")
            }, Oe.prototype.reportT = function(e) {
                var t = e.name,
                    n = e.duration,
                    i = void 0 === (i = e.ext1) ? "" : i,
                    o = void 0 === (o = e.ext2) ? "" : o,
                    r = void 0 === (r = e.ext3) ? "" : r;
                e = e.from;
                if ("string" == typeof t && "number" == typeof n && "string" == typeof i && "string" == typeof o && "string" == typeof r) {
                    if (!(n < 0 || 6e4 < n)) return this.submitCustomTime(t, n, i, o, r, void 0 === e ? "" : e);
                    console.warn("reportTime: duration must between 0 and 60000")
                } else console.warn("reportTime: params error")
            }, Oe.prototype.time = function(e) {
                "string" == typeof e ? this.timeMap[e] ? console.warn("Timer " + e + " already exists") : this.timeMap[e] = Date.now() : console.warn("time: first param must be a string")
            }, Oe.prototype.timeEnd = function(e) {
                "string" == typeof e ? this.timeMap[e] ? (this.submitCustomTime(e, Date.now() - this.timeMap[e]), delete this.timeMap[e]) : console.warn("Timer " + e + " does not exist") : console.warn("timeEnd: first param must be a string")
            }, Oe.prototype.submitCustomTime = function(e, t, n, i, o, r) {
                this.customTimePipeline({
                    name: e,
                    duration: t,
                    ext1: n || this.config.ext1,
                    ext2: i || this.config.ext2,
                    ext3: o || this.config.ext3,
                    from: r || void 0
                })
            }, Oe.prototype.extendBean = function(e, t) {
                this.bean[e] = t
            }, Oe.prototype.sendPipeline = function(e, t) {
                var n, i = this;
                return S(o([function(e, t) {
                    if ("number" != typeof n.config.random && (console.warn("random must in [0, 1], default is 1."), n.config.random = 1), !n.isHidden || !n.isGetSample)
                        if (n.isGetSample) n.isHidden || t(e);
                        else {
                            if (n.isGetSample = !0, Math.random() < n.config.random) return n.isHidden = !1, t(e);
                            n.isHidden = !0
                        }
                }, w(n = this, t)], e, [R(this), function(e, t) {
                    i.request(e, (function() {
                        for (var n, r = [], s = 0; s < arguments.length; s++) r[s] = arguments[s];
                        i.failRequestCount = 0, t({
                            isErr: !1,
                            result: r,
                            logType: null == e ? void 0 : e.type,
                            logs: null == e ? void 0 : e.log
                        }), null === (n = null == e ? void 0 : e.success) || void 0 === n || n.call.apply(n, o([e], r))
                    }), (function() {
                        for (var n, r = [], s = 0; s < arguments.length; s++) r[s] = arguments[s];
                        10 <= ++i.failRequestCount && i.destroy(), t({
                            isErr: !0,
                            result: r,
                            logType: null == e ? void 0 : e.type,
                            logs: null == e ? void 0 : e.log
                        }), null === (n = null == e ? void 0 : e.fail) || void 0 === n || n.call.apply(n, o([e], r))
                    }))
                }, P(this)]))
            }, Oe.prototype.send = function(e, t, n) {
                var i = this;
                return S([R(this), function(e, o) {
                    i.request(e, (function() {
                        for (var n = [], i = 0; i < arguments.length; i++) n[i] = arguments[i];
                        o({
                            isErr: !1,
                            result: n,
                            logType: e.type,
                            logs: e.log
                        }), null == t || t.apply(void 0, n)
                    }), (function() {
                        for (var t = [], i = 0; i < arguments.length; i++) t[i] = arguments[i];
                        o({
                            isErr: !0,
                            result: t,
                            logType: e.type,
                            logs: e.log
                        }), null == n || n.apply(void 0, t)
                    }))
                }, P(this)])(e)
            }, Oe.prototype.request = function(e, t, n) {
                throw new Error('You need to override "request" method')
            }, Oe.prototype.sendSDKError = function(e) {
                var t = this;
                this.sendPipeline([function(e, n) {
                    n({
                        url: t.config.url + "?id=1085&msg[0]=" + encodeURIComponent(b(e)) + "&level[0]=2&from=" + t.config.id + "&count=1&version=" + t.config.id + "(1.24.57)",
                        addBean: !1,
                        method: "get",
                        type: g.SDK_ERROR,
                        log: e
                    })
                }], g.SDK_ERROR)(e)
            }, Oe.prototype.destroy = function(e) {
                void 0 === e && (e = !1);
                var t, n, i = Oe.instances.indexOf(this); - 1 !== i && Oe.instances.splice(i, 1);
                for (var o = Oe.installedPlugins.length - 1; 0 <= o; o--) try {
                    Oe.installedPlugins[o].unpatch(this)
                } catch (e) {
                    this.sendSDKError(e)
                }
                if (this.lifeCycle.emit("destroy"), this.lifeCycle.clear(), e) t = this, n = Object.getOwnPropertyDescriptors(t), Object.keys(n).forEach((function(e) {
                    n[e].writable && (t[e] = null)
                })), Object.setPrototypeOf(this, null);
                else {
                    for (var r = this; r.constructor !== Object && T(r, this), r = Object.getPrototypeOf(r););
                    0 === Oe.instances.length && (T(i = Object.getPrototypeOf(this).constructor), T(Oe))
                }
            }, Oe.version = "1.24.57", Oe.instances = [], Oe.logType = p, Oe.environment = m, Oe.installedPlugins = [], Oe),
            J = (be.prototype.patch = function(e) {
                this.canUse(e) && this.exist(e) && (this.instances.push(e), this.triggerInit(e), this.triggerOnNewAegis(e))
            }, be.prototype.unpatch = function(e) {
                -1 !== (e = this.instances.indexOf(e)) && (this.instances.splice(e, 1), 0 === this.instances.length && this.uninstall())
            }, be.prototype.countInstance = function() {
                return this.instances.length
            }, be.prototype.uninstall = function() {
                var e;
                null === (e = null === (e = this.option) || void 0 === e ? void 0 : e.destroy) || void 0 === e || e.apply(this)
            }, be.prototype.walk = function(e) {
                var t = this;
                this.instances.forEach((function(n) {
                    var i = t.canUse(n);
                    i && e(n, i)
                }))
            }, be.prototype.canUse = function(t) {
                return !(!(t = this.getConfig(t)) || "object" != e(t)) || !!t
            }, be.prototype.getConfig = function(e) {
                return null === (e = e.config) || void 0 === e ? void 0 : e[this.name]
            }, be.prototype.exist = function(e) {
                return -1 === this.instances.indexOf(e)
            }, be.prototype.triggerInit = function(e) {
                var t;
                this.inited || (this.inited = !0, null === (t = null === (t = this.option) || void 0 === t ? void 0 : t.init) || void 0 === t || t.call(this.option, this.getConfig(e)))
            }, be.prototype.triggerOnNewAegis = function(e) {
                var t;
                null === (t = null === (t = this.option) || void 0 === t ? void 0 : t.onNewAegis) || void 0 === t || t.call(this.option, e, this.getConfig(e))
            }, be),
            V = wx || qq,
            W = "",
            G = new J({
                name: "offlineLog",
                onNewAegis: function(e) {
                    if (V.getFileSystemManager) try {
                        var t = e.config,
                            n = t.id,
                            i = void 0 === n ? "" : n,
                            o = t.uin,
                            r = void 0 === o ? 0 : o,
                            s = t.offlineUrl,
                            a = void 0 === s ? "" : s,
                            l = t.offlineLogLimit,
                            u = new K({
                                limit: l
                            });
                        e.lifeCycle.on("beforeWrite", (function(t) {
                            u.save2Offline(t = void 0 === t ? [] : t, e.config)
                        })), u.ready((function(t) {
                            var n = (e.bean || {}).aid,
                                o = void 0 === n ? "" : n;
                            !t && i && (r || o) && e.send({
                                url: a + "/offlineAuto",
                                type: g.OFFLINE,
                                log: g.OFFLINE
                            }, (function(n) {
                                var s = (null == n ? void 0 : n.data).secretKey;
                                s && (t || u.getLogs({
                                    id: i,
                                    uin: r
                                }, (function(t, n) {
                                    t ? console.error(t) : e.send({
                                        url: a + "/offlineLog",
                                        data: {
                                            logs: n,
                                            secretKey: s,
                                            id: i,
                                            uin: r,
                                            aid: o
                                        },
                                        method: "post",
                                        type: g.OFFLINE,
                                        log: n
                                    }, (function() {
                                        u.clearLogs()
                                    }))
                                })))
                            }))
                        }))
                    } catch (e) {
                        console.error(e)
                    } else console.warn("[aegis-mp-sdk]unsupport getFileSystemManager offline log not work!")
                }
            }),
            K = (ye.prototype.getLogs = function(e, t) {
                var n = this.fileSystem,
                    i = this.filePath;
                n.readFile({
                    filePath: i,
                    encoding: "utf8",
                    fail: function(e) {
                        console.error(e)
                    },
                    success: function(e) {
                        e = (void 0 === (e = e.data) ? "" : e).toString().split("\n").filter((function(e) {
                            return e
                        })).map((function(e) {
                            return JSON.parse(e)
                        })), t(null, e)
                    }
                })
            }, ye.prototype.checkLimit = function(e, t) {
                void 0 === t && (t = function() {});
                var n = this.fileSystem,
                    i = this.filePath,
                    o = this.limitSize;
                n.readFile({
                    filePath: i,
                    encoding: "utf8",
                    success: function(r) {
                        if ((r = (r = void 0 === (r = r.data) ? "" : r).toString() + e).length > o) {
                            for (var s = r.split("\n"), a = "", l = s.length - 1; 0 <= l && !(s[l] && (a = s[l] + "\n" + a).length > o); l--);
                            n.writeFile({
                                filePath: i,
                                data: a,
                                success: t
                            })
                        } else n.appendFile({
                            data: e,
                            filePath: i,
                            encoding: "utf8",
                            success: t,
                            fail: function(e) {
                                console.error(e)
                            }
                        })
                    }
                })
            }, ye),
            $ = new J({
                name: "device",
                onNewAegis: function(e) {
                    return t = this, o = function() {
                        return function(e, t) {
                            var n, i, o, r = {
                                    label: 0,
                                    sent: function() {
                                        if (1 & o[0]) throw o[1];
                                        return o[1]
                                    },
                                    trys: [],
                                    ops: []
                                },
                                s = {
                                    next: a(0),
                                    throw: a(1),
                                    return: a(2)
                                };
                            return "function" == typeof Symbol && (s[Symbol.iterator] = function() {
                                return this
                            }), s;

                            function a(s) {
                                return function(a) {
                                    var l = [s, a];
                                    if (n) throw new TypeError("Generator is already executing.");
                                    for (; r;) try {
                                        if (n = 1, i && (o = 2 & l[0] ? i.return : l[0] ? i.throw || ((o = i.return) && o.call(i), 0) : i.next) && !(o = o.call(i, l[1])).done) return o;
                                        switch (i = 0, (l = o ? [2 & l[0], o.value] : l)[0]) {
                                            case 0:
                                            case 1:
                                                o = l;
                                                break;
                                            case 4:
                                                return r.label++, {
                                                    value: l[1],
                                                    done: !1
                                                };
                                            case 5:
                                                r.label++, i = l[1], l = [0];
                                                continue;
                                            case 7:
                                                l = r.ops.pop(), r.trys.pop();
                                                continue;
                                            default:
                                                if (!((o = 0 < (o = r.trys).length && o[o.length - 1]) || 6 !== l[0] && 2 !== l[0])) {
                                                    r = 0;
                                                    continue
                                                }
                                                if (3 === l[0] && (!o || l[1] > o[0] && l[1] < o[3])) {
                                                    r.label = l[1];
                                                    break
                                                }
                                                if (6 === l[0] && r.label < o[1]) {
                                                    r.label = o[1], o = l;
                                                    break
                                                }
                                                if (o && r.label < o[2]) {
                                                    r.label = o[2], r.ops.push(l);
                                                    break
                                                }
                                                o[2] && r.ops.pop(), r.trys.pop();
                                                continue
                                        }
                                        l = t.call(e, r)
                                    } catch (a) {
                                        l = [6, a], i = 0
                                    } finally {
                                        n = o = 0
                                    }
                                    if (5 & l[0]) throw l[1];
                                    return {
                                        value: l[0] ? l[1] : void 0,
                                        done: !0
                                    }
                                }
                            }
                        }(this, (function(t) {
                            return this.setSystemInfo(e), this.refreshNetwork(e), this.setNetworkChange(e), [2]
                        }))
                    }, new(i = (i = n = void 0) || Promise)((function(e, r) {
                        function s(e) {
                            try {
                                l(o.next(e))
                            } catch (e) {
                                r(e)
                            }
                        }

                        function a(e) {
                            try {
                                l(o.throw(e))
                            } catch (e) {
                                r(e)
                            }
                        }

                        function l(t) {
                            var n;
                            t.done ? e(t.value) : ((n = t.value) instanceof i ? n : new i((function(e) {
                                e(n)
                            }))).then(s, a)
                        }
                        l((o = o.apply(t, n || [])).next())
                    }));
                    var t, n, i, o
                },
                setSystemInfo: function(e) {
                    var t = this;
                    try {
                        N("getSystemInfo") && V.getSystemInfo({
                            success: function(n) {
                                var i = n.platform,
                                    o = n.model,
                                    r = n.windowHeight,
                                    s = n.windowWidth,
                                    a = void 0 === (a = n.screenWidth) ? 0 : a;
                                n = void 0 === (n = n.screenHeight) ? 0 : n;
                                e.extendBean("platform", t.getPlatFormType(i)), e.extendBean("model", o), e.extendBean("vp", Math.round(s) + " * " + Math.round(r)), e.extendBean("sr", Math.round(a) + " * " + Math.round(n))
                            }
                        })
                    } catch (e) {}
                },
                getPlatFormType: function(e) {
                    for (var t, n = {
                            android: /android/i,
                            ios: /ios/i,
                            windows: /windows/i,
                            macos: /mac/i,
                            devtools: /devtools/i
                        }, i = d.other, o = 0; o < Object.keys(n).length; o++) {
                        var r = Object.keys(n)[o];
                        if (null !== (t = n[r]) && void 0 !== t && t.test(e)) {
                            i = d[r];
                            break
                        }
                    }
                    return i
                },
                setNetworkChange: function(e) {
                    N("onNetworkStatusChange") && V.onNetworkStatusChange((function(t) {
                        t = L(t.networkType), e.extendBean("netType", t)
                    }))
                },
                setNetworkType: function(e) {
                    N("getNetworkType") && V.getNetworkType({
                        success: function(t) {
                            t = L(t.networkType), e.extendBean("netType", t)
                        }
                    })
                },
                refreshNetwork: function(e) {
                    var t = this;
                    this.timer && clearTimeout(this.timer), this.setNetworkType(e), this.timer = setTimeout((function() {
                        t.refreshNetwork(e)
                    }), 1e4)
                }
            }),
            z = V.request,
            X = (B = (n(ve, q = B), Object.defineProperty(ve.prototype, "getBean", {get: function() {
                    var e = this;
                    return this.bean ? Object.getOwnPropertyNames(this.bean).map((function(t) {
                        return t + "=" + e.bean[t]
                    })).join("&") + "&from=" + encodeURIComponent(k()) : "from=" + encodeURIComponent(k())
                },
                enumerable: !1,
                configurable: !0
            }), ve.prototype.initOfflineLog = function() {
                ve.use(G)
            }, ve.prototype.uploadLogs = function(e, t) {
                this.lifeCycle.emit("uploadLogs", e = void 0 === e ? {} : e, t = void 0 === t ? {} : t)
            }, ve.prototype.reportPv = function(e) {
                var t, n = this;
                e && (t = Object.getOwnPropertyNames(this.bean).filter((function(e) {
                    return "id" !== e
                })).map((function(e) {
                    return e + "=" + n.bean[e]
                })).join("&") + "&from=" + encodeURIComponent(k()), this.send({
                    url: this.config.url + "/" + e + "?" + t,
                    addBean: !1,
                    type: g.CUSTOM_PV,
                    log: g.CUSTOM_PV
                }, (function() {}), (function() {})))
            }, ve.sessionID = "session-" + Date.now(), ve.asyncPluginIndex = 0, ve), new J({
                name: "aid",
                onNewAegis: function(e) {
                    this.initAid((function(t) {
                        e.bean.aid = t, e.config.aid = t
                    }))
                },
                initAid: function(e) {
                    V.getStorage({
                        key: "AEGIS_ID",
                        success: function(t) {
                            e(t.data)
                        },
                        fail: function() {
                            var t = "xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx".replace(/[xy]/g, (function(e) {
                                var t = 16 * Math.random() | 0;
                                return ("x" === e ? t : 3 & t | 8).toString(16)
                            }));
                            V.setStorage({
                                key: "AEGIS_ID",
                                data: t,
                                success: function() {
                                    e(t)
                                }
                            })
                        }
                    })
                }
            })),
            Q = (me.prototype.addCallback = function(e) {
                e && this.callbacks.push(e)
            }, me.prototype.prefixHandler = function(e) {
                return i(i({}, e), {
                    aegisRequestStartTime: +new Date
                })
            }, me.prototype.successHandler = function(e, t) {
                var n;
                this.callbacks.forEach((function(n) {
                    var i;
                    try {
                        null === (i = n.success) || void 0 === i || i.call(n, e, t)
                    } catch (n) {}
                })), null === (n = t.success) || void 0 === n || n.call(t, e, t)
            }, me.prototype.failHandler = function(e, t) {
                var n;
                this.callbacks.forEach((function(n) {
                    var i;
                    try {
                        null === (i = n.fail) || void 0 === i || i.call(n, e, t)
                    } catch (n) {}
                })), null === (n = t.fail) || void 0 === n || n.call(t, e, t)
            }, me.prototype.completeHandler = function(e, t) {
                var n;
                this.callbacks.forEach((function(n) {
                    var i;
                    try {
                        null === (i = n.complete) || void 0 === i || i.call(n, e, t)
                    } catch (n) {}
                })), null === (n = t.complete) || void 0 === n || n.call(t, e, t)
            }, me.prototype.override = function() {
                try {
                    this.defineApiProperty()
                } catch (e) {
                    console.warn("cannot override `" + this.apiName + "`, error is: " + e)
                } finally {
                    this.isOverride = !0
                }
            }, me),
            Y = wx || qq,
            Z = null === (oe = Y.cloud) || void 0 === oe ? void 0 : oe.callFunction,
            ee = (n(ge, _ = Q), ge.prototype.defineApiProperty = function() {
                var e = this;
                Y.cloud && Y.cloud.callFunction && Object.defineProperty(Y.cloud, "callFunction", {get: function() {
                        return e.hackHandler.bind(e)
                    }
                })
            }, ge.prototype.hackHandler = function(e) {
                var t = this,
                    n = this.prefixHandler(e);
                return new Promise((function(e, o) {
                    Z(i(i({}, n), {
                        success: function(i) {
                            t.successHandler(i, n), e(i)
                        },
                        fail: function(e) {
                            t.failHandler(e, n), o(e)
                        },
                        complete: function(e) {
                            t.completeHandler(e, n)
                        }
                    }))
                }))
            }, ge),
            te = wx || qq,
            ne = {},
            ie = (n(he, j = Q), he.prototype.defineApiProperty = function() {
                var e = this;
                Object.defineProperty(te, this.apiName, {get: function() {
                        return e.hackHandler.bind(e)
                    }
                })
            }, he.prototype.hackHandler = function(e) {
                var t = this,
                    n = this.prefixHandler(e);
                return null == (e = null === (e = ne[this.apiName]) || void 0 === e ? void 0 : e.originApi) ? void 0 : e(i(i({}, n), {
                    success: function(e) {
                        t.successHandler(e, n)
                    },
                    fail: function(e) {
                        t.failHandler(e, n)
                    },
                    complete: function(e) {
                        t.completeHandler(e, n)
                    }
                }))
            }, he),
            oe = new J({
                name: "reportApiSpeed",
                override: !1,
                onNewAegis: function(e) {
                    this.override || (this.override = !0, this.hackRequest(e.config), this.overrideCallFunction(e.config))
                },
                hackRequest: function(e) {
                    var t = this;
                    C({
                        apiName: "request",
                        success: function(n, i) {
                            var o, r, s, a;
                            e.hostUrl && -1 < i.url.indexOf(e.hostUrl) || (o = {
                                method: i.method || "get",
                                url: l(i.url),
                                duration: Date.now() - i.aegisRequestStartTime,
                                status: n.statusCode || 0,
                                isHttps: u(i.url),
                                type: "fetch"
                            }, r = null === (r = e.api) || void 0 === r ? void 0 : r.apiDetail, s = (a = c(n.data, e.api, {
                                url: i.url,
                                ctx: n
                            }) || {}).code, a = a.isErr, i = "req url: " + o.url + " \n                        \nreq method: " + o.method + " \n                        \nreq param: " + (r ? b(i.data) : "") + " \n                        \nres duration: " + o.duration + "ms \n                        \nres status: " + (n.statusCode || 0) + " \n                        \nres retcode: " + s + " \n                        \nres data: " + (r ? f(n.data) : ""), t.publishNormalLog({
                                msg: i,
                                level: p.API_RESPONSE,
                                ctx: n
                            }), o.ret = s, o.isErr = +a, t.publishSpeedLog(o), a && t.publishNormalLog({
                                msg: i,
                                level: p.RET_ERROR,
                                ctx: n
                            }))
                        },
                        fail: function(n, i) {
                            e.hostUrl && -1 < i.url.indexOf(e.hostUrl) || (i = {
                                method: i.method || "get",
                                url: l(i.url),
                                duration: Date.now() - i.aegisRequestStartTime,
                                status: 0,
                                isHttps: u(i.url),
                                type: "fetch"
                            }, t.publishSpeedLog(i))
                        }
                    })
                },
                overrideCallFunction: function(e) {
                    var t = this;
                    new ee({
                        apiName: "callFunction",
                        success: function(n, i) {
                            var o, r, s = {
                                    method: "call",
                                    url: "wx.cloud.callFunction." + i.name,
                                    duration: Date.now() - i.aegisRequestStartTime,
                                    status: 200,
                                    type: "fetch",
                                    errMsg: n.errMsg,
                                    isHttps: !0
                                },
                                a = null === (a = e.api) || void 0 === a ? void 0 : a.apiDetail,
                                l = (a = "req url: " + s.url + "\n                        \nreq type: " + s.type + "\n                        \nres duration: " + s.duration + "ms \n                        \nres errMsg: " + s.errMsg + "\n                        \nres data: " + (a ? f(n.result) : "") + "\n                        ", t.publishNormalLog({
                                    msg: a,
                                    level: p.API_RESPONSE,
                                    ctx: n
                                }));
                            i = "function" == typeof(null === (o = e.api) || void 0 === o ? void 0 : o.retCodeCloudFunctionHandler) ? (r = (o = e.api.retCodeCloudFunctionHandler(n.result, i.name, i, n) || {}).code, void 0 !== (i = o.isErr) && i) : (r = (o = c(n.result, e.api, {
                                url: s.url,
                                ctx: n
                            }) || {}).code, o.isErr), s.ret = r, l = i;
                            s.isErr = +l, t.publishSpeedLog(s), l && t.publishNormalLog({
                                msg: a,
                                level: p.RET_ERROR,
                                ctx: n
                            })
                        },
                        fail: function(e, n) {
                            n = {
                                method: "call",
                                url: "wx.cloud.callFunction." + n.name,
                                duration: Date.now() - n.aegisRequestStartTime,
                                status: 0,
                                type: "fetch",
                                errMsg: e.errMsg,
                                isHttps: !0
                            }, t.publishSpeedLog(n)
                        }
                    })
                },
                publishSpeedLog: function(e) {
                    this.$walk((function(t) {
                        t.speedLogPipeline(e)
                    }))
                },
                publishNormalLog: function(e) {
                    this.$walk((function(t) {
                        t.normalLogPipeline(e)
                    }))
                }
            }),
            re = wx || qq,
            se = re.connectSocket,
            ae = (de.prototype.addConfig = function(e) {
                var t = e.send;
                e = e.onError;
                t && this.sends.push(t), e && this.onErrors.push(e)
            }, de.prototype.toHack = function(e) {
                var t = this,
                    n = (this.onErrors.forEach((function(t) {
                        e.onError(t)
                    })), e.send);
                return Object.defineProperty(e, "send", {get: function() {
                        return function(o) {
                            return new Promise((function(r) {
                                n.call(e, i(i({}, o), {
                                    fail: function(e) {
                                        t.sends.forEach((function(t) {
                                            var n;
                                            null === (n = t.fail) || void 0 === n || n.call(t, e, o)
                                        })), r(e)
                                    }
                                }))
                            }))
                        }
                    }
                }), e
            }, de),
            le = (n(pe, U = Q), pe.prototype.addTaskConf = function(e) {
                this.taskHack.addConfig(e)
            }, pe.prototype.defineApiProperty = function() {
                var e = this;
                Object.defineProperty(re, "connectSocket", {get: function() {
                        return e.hackHandler.bind(e)
                    }
                })
            }, pe.prototype.hackHandler = function(e) {
                var t = this,
                    n = this.prefixHandler(e);
                e = se(i(i({}, n), {
                    success: function(e) {
                        t.successHandler(e, n)
                    },
                    fail: function(e) {
                        t.failHandler(e, n)
                    },
                    complete: function(e) {
                        t.completeHandler(e, n)
                    }
                }));
                return this.taskHack.toHack(e), e
            }, pe),
            ue = (Q = new J({
                name: "onError",
                onNewAegis: function(e) {
                    var t = V.getSystemInfoSync().SDKVersion;
                    this.listenError(), this.hackNetWork(e), e.config.websocketHack && x(t, "1.7.0") && this.hackWsConnect()
                },
                listenError: function() {
                    var e = this;
                    "function" == typeof V.onError && V.onError((function(t) {
                        t && e.publishErrorLog({
                            msg: t,
                            level: p.ERROR
                        })
                    })), N("onUnhandledRejection") && V.onUnhandledRejection((function(t) {
                        (t = t.reason) && (-1 < JSON.stringify(t).indexOf("request:fail") || e.publishErrorLog({
                            msg: t,
                            level: p.PROMISE_ERROR
                        }))
                    })), N("onPageNotFound") && V.onPageNotFound((function(t) {
                        t && e.publishErrorLog({
                            msg: t,
                            level: p.PAGE_NOT_FOUND_ERROR
                        })
                    }))
                },
                publishErrorLog: function(e) {
                    this.$walk((function(t) {
                        t.normalLogPipeline(e)
                    }))
                },
                hackNetWork: function(e) {
                    for (var t = this, n = e.config, i = 0, o = [{
                            apiName: "request",
                            complete: function(e, i) {
                                return t.requestCompleteError(e, i, n)
                            }
                        }, {
                            apiName: "uploadFile",
                            complete: function(e, i) {
                                return t.uploadFileCompleteError(e, i, n)
                            }
                        }, {
                            apiName: "downloadFile",
                            complete: function(e, i) {
                                return t.downloadFileCompleteError(e, i, n)
                            }
                        }]; i < o.length; i++) {
                        var r;
                        C({
                            apiName: (r = o[i]).apiName,
                            complete: r = r.complete
                        })
                    }
                },
                requestCompleteError: function(e, t, n) {
                    var i, o = e.errMsg,
                        r = e.statusCode;
                    n.hostUrl && -1 < (null === (i = t.url) || void 0 === i ? void 0 : i.indexOf(n.hostUrl)) || (i = this.getErrorType({
                        errMsg: o,
                        statusCode: r
                    })) && this.publishNetWorkError({
                        apiName: "request",
                        opts: t,
                        res: e,
                        config: n,
                        type: i
                    })
                },
                downloadFileCompleteError: function(e, t, n) {
                    var i = e.errMsg,
                        o = e.statusCode,
                        r = e.filePath,
                        s = (e = e.tempFilePath, this.getErrorType({
                            errMsg: i,
                            statusCode: o
                        }));
                    s && (n = null === (n = n.api) || void 0 === n ? void 0 : n.apiDetail, this.publishErrorLog({
                        msg: "AJAX_ERROR: downloadFile " + s + "\n                  \nres status: " + (o || 0) + "\n                  \nres duration: " + (Date.now() - t.aegisRequestStartTime) + "ms\n                  \nres filePath: " + r + "\n                  \nres tempFilePath: " + e + "\n                  \nreq url: " + t.url + "\n                  \nreq method: " + (t.method || "get") + "\n                  \nreq param: " + (n ? b(t.data) : "") + "\n                  \nerrMsg: " + i.slice(0, 1e3),
                        level: p.AJAX_ERROR
                    }))
                },
                uploadFileCompleteError: function(e, t, n) {
                    var i = e.errMsg,
                        o = e.statusCode;
                    (i = this.getErrorType({
                        errMsg: i,
                        statusCode: o
                    })) && this.publishNetWorkError({
                        apiName: "uploadFile",
                        opts: t,
                        res: e,
                        config: n,
                        type: i
                    })
                },
                publishNetWorkError: function(e) {
                    var t = e.apiName,
                        n = e.opts,
                        i = e.res,
                        o = e.config,
                        r = (e = e.type, i.errMsg),
                        s = i.statusCode,
                        a = i.data,
                        l = null === (l = o.api) || void 0 === l ? void 0 : l.apiDetail,
                        u = "wx.cloud.callFunction." + n.url;
                    o = c(a, o.api, {
                        url: u,
                        ctx: i
                    }).code;
                    this.publishErrorLog({
                        msg: "AJAX_ERROR: " + t + " " + e + "\n                  \nres status: " + (s || 0) + "\n                  \nres retcode: " + o + "\n                  \nres duration: " + (Date.now() - n.aegisRequestStartTime) + "ms\n                  \nres data: " + (l ? b(a) : "") + "\n                  \nreq url: " + n.url + "\n                  \nreq method: " + (n.method || "get") + "\n                  \nreq param: " + (l ? b(n.data) : "") + "\n                  \nerrMsg: " + r.slice(0, 1e3),
                        level: p.AJAX_ERROR
                    })
                },
                getErrorType: function(e) {
                    var t = e.errMsg,
                        n = (e = e.statusCode, "");
                    return -1 < t.indexOf("timeout") || -1 < t.indexOf("超时") ? n = "timeout" : 400 <= e ? n = "error" : (-1 < t.indexOf("fail") || !e || e < 0) && (n = "failed"), n
                },
                hackWsConnect: function() {
                    var e, t, n = this;
                    C({
                        apiName: "sendSocketMessage",
                        fail: function(e) {
                            n.publishSocketError(e)
                        }
                    }), e = (t = {
                        connectCallback: {
                            fail: function(e) {
                                n.publishSocketError(e)
                            }
                        },
                        taskOpt: {
                            onError: function(e) {
                                n.publishSocketError(e)
                            },
                            send: {
                                fail: function(e) {
                                    n.publishSocketError(e)
                                }
                            }
                        }
                    }).connectCallback, t = t.taskOpt, A ? A.addCallback(e) : A = new le(e), t && A.addTaskConf(t)
                },
                publishSocketError: function(e) {
                    e && this.publishErrorLog({
                        msg: e.errMsg,
                        level: p.WEBSOCKET_ERROR
                    })
                }
            }), new J({
                name: "reportAssetSpeed",
                isStart: !1,
                onNewAegis: function(e) {
                    this.isStart || (this.isStart = !0, this.start(e))
                },
                start: function() {
                    var e = this;
                    V.getPerformance && V.getPerformance().createObserver((function(t) {
                        null == (t = t.getEntries()) || t.forEach((function(t) {
                            "number" != typeof t.duration || t.duration <= 0 || e.publishAssetLog(t)
                        }))
                    })).observe({
                        entryTypes: ["resource"]
                    })
                },
                generateLog: function(e) {
                    return {
                        url: "" + l(e.uri),
                        method: "get",
                        duration: Math.round(100 * e.duration) / 100,
                        status: 200,
                        type: "static",
                        isHttps: !0,
                        urlQuery: "",
                        domainLookup: 0,
                        connectTime: 0
                    }
                },
                publishAssetLog: function(e) {
                    var t = this;
                    this.$walk((function(n) {
                        n.speedLogPipeline(t.generateLog(e))
                    }))
                }
            })),
            ce = ["onLaunch", "onHide", "onError", "onLoad", "onReady", "onShow", "onUnload"],
            fe = new J({
                name: "pagePerformance",
                pageNavigationStartTime: {},
                onNewAegis: function(e) {
                    try {
                        N("getPerformance") && this.reportPerformance(e), this.setPagePV(e), this.reportSetDataTiming(e)
                    } catch (e) {}
                },
                reportPerformance: function(e) {
                    var t, n = this;
                    null == (t = null == (t = V.getPerformance()) ? void 0 : t.createObserver((function(t) {
                        var i = {},
                            o = null === (o = t.getEntriesByName("appLaunch")) || void 0 === o ? void 0 : o[0],
                            r = null === (r = t.getEntriesByName("firstRender")) || void 0 === r ? void 0 : r[0],
                            s = null === (s = t.getEntriesByName("evaluateScript")) || void 0 === s ? void 0 : s[0],
                            a = null === (a = t.getEntriesByName("route")) || void 0 === a ? void 0 : a[0],
                            l = null === (l = null === (l = t.getEntriesByName("firstPaint")) || void 0 === l ? void 0 : l[0]) || void 0 === l ? void 0 : l.startTime,
                            u = null === (u = (null === (u = t.getEntriesByName("firstPaint")) || void 0 === u ? void 0 : u[0]) || (null === (u = t.getEntriesByName("route")) || void 0 === u ? void 0 : u[0]) || (null === (u = t.getEntriesByName("appLaunch")) || void 0 === u ? void 0 : u[0])) || void 0 === u ? void 0 : u.pageId,
                            c = null === (t = (null === (c = t.getEntriesByName("route")) || void 0 === c ? void 0 : c[0]) || (null === (c = t.getEntriesByName("appLaunch")) || void 0 === c ? void 0 : c[0])) || void 0 === t ? void 0 : t.startTime;
                        u && (n.pageNavigationStartTime[u] = null, c && (n.pageNavigationStartTime[u] = c)), o && (i.appLaunch = o.duration), r && (i.firstScreenTiming = r.duration), s && (i.scriptEvaluateTiming = s.duration), a && (i.pageRouteTiming = a.duration), l && c ? i.firstPaintTiming = Math.max(l - c, 0) : l && n.pageNavigationStartTime[u] && (i.firstPaintTiming = Math.max(l - n.pageNavigationStartTime[u], 0)), n.publish(i, e)
                    }))) || t.observe({
                        entryTypes: ["navigation", "render", "script"]
                    })
                },
                publish: function(e, t) {
                    var n, i, o = [],
                        r = t.config,
                        s = -1 === (null === (n = t.config.performanceUrl) || void 0 === n ? void 0 : n.indexOf("?")) ? "?" : "&";
                    for (i in e) o.push(i + "=" + e[i]);
                    "function" == typeof r.urlHandler ? this.$walk((function(n) {
                        n.send({
                            url: t.config.performanceUrl + s + o.join("&") + "&from=" + (encodeURIComponent(r.urlHandler()) || window.location.href),
                            beanFilter: ["from"],
                            type: g.PERFORMANCE,
                            log: e
                        })
                    })) : this.$walk((function(n) {
                        n.send({
                            url: t.config.performanceUrl + s + o.join("&"),
                            type: g.PERFORMANCE,
                            log: e
                        })
                    }))
                },
                setPagePV: function(e) {
                    var t = this;
                    V.onAppRoute && V.onAppRoute((function(e) {
                        "appLaunch" !== e.openType && (t.$walk((function(e) {
                            e.send({
                                url: "" + e.config.pvUrl,
                                type: g.PV
                            })
                        })), t.reportPageLoaded(e))
                    }))
                },
                reportPageLoaded: function(e) {
                    e = "infoType: behaviorBacktracking\ndataType: pageLoadAndRoute\npageLoadedPath: " + e.path + "\nopenType: " + e.openType, this.publishNormalLog({
                        msg: e,
                        level: p.INFO
                    })
                },
                publishNormalLog: function(e) {
                    this.$walk((function(t) {
                        t.normalLogPipeline(e)
                    }))
                },
                reportSetDataTiming: function(e) {
                    var t, n, i, o, r, s, a, l, u, c, f = this;
                    !0 !== (c = (c = e.config).setDataReportConfig || (null === (c = c.pagePerformance) || void 0 === c ? void 0 : c.setDataReportConfig) || {}).disabled && (t = c.timeThreshold, n = !1 !== c.withDataPaths, i = t && 0 < +t ? +t : 30, o = S([O(e, 10), function(t) {
                        t = t.map((function(e) {
                            return {
                                type: g.SET_DATA,
                                component: e.from,
                                duration: e.duration,
                                fields: e.dataPaths && e.dataPaths.length ? e.dataPaths.sort().join(";") : void 0,
                                size: e.size
                            }
                        })), e.send({
                            url: e.config.setDataReportUrl + "?payload=" + encodeURIComponent(JSON.stringify({
                                miniProgramData: t
                            })),
                            type: g.SET_DATA,
                            log: t
                        })
                    }]), r = Page, s = Component, a = function(e, t) {
                        var n = 0;
                        return null != e && e.data ? (t.forEach((function(t) {
                            for (var i = e.data[t[0]], o = 1, r = t.length; o < r; o++) i[t[o]] && (i = i[t[o]]);
                            var s = "";
                            try {
                                s = JSON.stringify(i)
                            } catch (t) {
                                s = ""
                            }
                            n += 2 * (void 0 === s ? "" : s).replace(/[\u4e00-\u9fa5]/g, "aa").length
                        })), n = Math.min(n, 10485760)) : n
                    }, l = function(e, t) {
                        var r = t.updateStartTimestamp,
                            s = t.updateEndTimestamp;
                        t = void 0 === (t = t.dataPaths) ? [] : t, s -= r;
                        isNaN(s) || s < i || (r = {
                            from: e.is,
                            duration: s
                        }, n && 0 < t.length && Object.assign(r, {
                            dataPaths: t.slice(0, 30),
                            size: a(e, t)
                        }), o(r))
                    }, u = function(e) {
                        var t = "infoType: behaviorBacktracking\ndataType: tapEvent" + Object.keys(e[0]).reduce((function(t, n) {
                            var i = "";
                            try {
                                i = n + ": " + JSON.stringify(e[0][n])
                            } catch (t) {
                                i = ""
                            }
                            return t + "\n" + i
                        }), "");
                        f.publishNormalLog({
                            msg: t,
                            level: p.INFO
                        })
                    }, Page = function(e) {
                        var t = e.onReady;
                        return e.onReady = function() {
                            var e = this;
                            return "function" == typeof this.setUpdatePerformanceListener && this.setUpdatePerformanceListener({
                                withDataPaths: n
                            }, (function(t) {
                                l(e, t)
                            })), null == t ? void 0 : t.call(this)
                        }, Object.keys(e).forEach((function(t) {
                            var n;
                            "function" != typeof e[t] || ce.includes(t) || (n = e[t], e[t] = function() {
                                for (var e = [], t = 0; t < arguments.length; t++) e[t] = arguments[t];
                                return null != e && e[0] && "tap" === e[0].type && u(e), null == n ? void 0 : n.apply(this, e)
                            })
                        })), r(e)
                    }, Component = function(e) {
                        e.lifetimes && e.lifetimes.attached ? (t = e.lifetimes.attached, e.lifetimes.attached = function() {
                            var e = this;
                            return "function" == typeof this.setUpdatePerformanceListener && this.setUpdatePerformanceListener({
                                withDataPaths: n
                            }, (function(t) {
                                l(e, t)
                            })), null == t ? void 0 : t.call(this)
                        }) : (i = e.attached, e.attached = function() {
                            var e = this;
                            return "function" == typeof this.setUpdatePerformanceListener && this.setUpdatePerformanceListener({
                                withDataPaths: n
                            }, (function(t) {
                                l(e, t)
                            })), null == i ? void 0 : i.call(this)
                        });
                        var t, i, o = e.methods;
                        return o && "[object Object]" === Object.prototype.toString.call(o) && Object.keys(o).forEach((function(e) {
                            var t;
                            "function" == typeof o[e] && (t = o[e], o[e] = function() {
                                for (var e = [], n = 0; n < arguments.length; n++) e[n] = arguments[n];
                                return null != e && e[0] && "tap" === e[0].type && u(e), null == t ? void 0 : t.apply(this, e)
                            })
                        })), s(e)
                    })
                }
            });
        J = new J({
            name: "reportLoadPackageSpeed",
            isLoaded: !1,
            onNewAegis: function(e) {
                this.isLoaded || (this.isLoaded = !0, this.start(e))
            },
            start: function() {
                var e = this;
                V.getPerformance && V.getPerformance().createObserver((function(t) {
                    null == (t = t.getEntries()) || t.forEach((function(t) {
                        "number" != typeof t.duration || t.duration <= 0 || e.publishPackageLog(t)
                    }))
                })).observe({
                    entryTypes: ["loadPackage"]
                })
            },
            generateLog: function(e) {
                return [{
                    type: g.LOAD_PACKAGE,
                    packageName: e.packageName,
                    size: Math.round(100 * e.packageSize) / 100,
                    duration: Math.round(100 * e.duration) / 100
                }]
            },
            publishPackageLog: function(e) {
                var t = this;
                this.$walk((function(n) {
                    var i = t.generateLog(e);
                    n.send({
                        url: n.config.setDataReportUrl + "?payload=" + encodeURIComponent(JSON.stringify({
                            miniProgramData: i
                        })),
                        type: g.LOAD_PACKAGE,
                        log: i
                    })
                }))
            }
        });

        function pe(e) {
            return (e = U.call(this, e) || this).taskHack = new ae, e
        }

        function de() {
            this.onErrors = [], this.sends = []
        }

        function he() {
            return null !== j && j.apply(this, arguments) || this
        }

        function ge() {
            return null !== _ && _.apply(this, arguments) || this
        }

        function me(e) {
            this.callbacks = [], this.isOverride = !1;
            var t = e.apiName;
            this.apiName = t, this.isOverride || this.override(), this.callbacks.push(e)
        }

        function ve(t) {
            var n, o, r, s = q.call(this, t) || this;
            s.originRequest = z, s.speedLogPipeline = S([(o = s.config, r = {}, function(t, n) {
                var i, s;
                o.speedSample ? (s = "object" == e(o.repeat) ? o.repeat : {
                    repeat: o.repeat
                }, i = +s.speed || +s.repeat || 5, Array.isArray(t) ? (s = t.filter((function(e) {
                    var t = !r[e.url] || r[e.url] < i;
                    return r[e.url] = 1 + ~~r[e.url], t
                }))).length && n(s) : (!r[t.url] || r[t.url] < i) && (r[t.url] = 1 + ~~r[t.url], n(t))) : n(t)
            }), O(s), function(e, t) {
                N("getNetworkType") ? V.getNetworkType({
                    success: function(i) {
                        i = L(i.networkType), n.extendBean("netType", i), t(e)
                    }
                }) : t(e)
            }, function(e, t) {
                s.lifeCycle.emit("beforeReportSpeed", e);
                var n = s.config.beforeReportSpeed;
                if ((e = "function" == typeof n ? e.filter((function(e) {
                        return !1 !== n(e)
                    })) : e).length) return t(e)
            }, w(n = s, g.SPEED), function(e) {
                var t, n, o, r;
                s.send({
                    url: "" + s.config.speedUrl,
                    method: "post",
                    data: (e = e, t = s.bean, o = {
                        fetch: [],
                        static: []
                    }, r = {}, Array.isArray(e) ? e.forEach((function(e) {
                        var t;
                        null === (t = o[e.type]) || void 0 === t || t.push(e)
                    })) : null === (n = o[e.type]) || void 0 === n || n.push(e), r.payload = JSON.stringify(i({
                        duration: o
                    }, t)), r)
                })
            }]), s.requestQueue = [], s.requesting = !1, s.request = function(t, n, o) {
                if (t.url && s.bean.id)
                    if (/^\w{8}-\w{4}-\w{4}-\w{4}-\w{12}$/.test(String(s.bean.aid))) {
                        if (!(s.requesting || N("getNetworkType") && void 0 === s.bean.netType)) {
                            s.requesting = !0;
                            var r, a = t.url,
                                l = (s.config.whiteListUrl === a && (r = n, n = function(e) {
                                    null == r || r(JSON.stringify(e.data))
                                }), !1 !== t.addBean && (a = a + (-1 === a.indexOf("?") ? "?" : "&") + s.getBean), t.method || "get"),
                                u = function() {
                                    s.requesting = !1;
                                    var e = s.requestQueue.shift();
                                    e && s.request(e.options, e.success, e.fail)
                                },
                                c = t,
                                f = s.config.onBeforeRequest;
                            return (c = f ? f(t, s) : c) && c.url ? (f = s.config.enableHttp2 || !1, "get" === l ? (l = a, p = c.data, a = "string" != typeof l ? "" : "object" == e(p) && p ? (d = Object.getOwnPropertyNames(p).map((function(e) {
                                var t = p[e];
                                return e + "=" + ("string" == typeof t ? encodeURIComponent(t) : encodeURIComponent(JSON.stringify(t)))
                            })).join("&").replace(/eval/gi, "evaI"), l + (-1 === l.indexOf("?") ? "?" : "&") + d) : l, s.originRequest(i({
                                url: a,
                                enableHttp2: f,
                                success: n,
                                fail: o,
                                complete: u
                            }, t.requestConfig))) : ("string" == typeof c.data && (c.data = c.data.replace(/eval/gi, "evaI")), s.originRequest(i({
                                url: a,
                                enableHttp2: f,
                                header: c.contentType ? {
                                    "content-type": c.contentType
                                } : void 0,
                                method: "POST",
                                data: c.data,
                                success: n,
                                fail: o,
                                complete: u
                            }, t.requestConfig))), !0) : (f = "", c && c.url || (f = "Sending request blocked. Please handle the parameters reasonably, options.url is necessary", console.log(f)), null == o || o(f), u(), !1)
                        }
                        s.requestQueue.push({
                            options: t,
                            success: n,
                            fail: o
                        })
                    } else s.requestQueue.push({
                        options: t,
                        success: n,
                        fail: o
                    });
                var p, d
            };
            try {
                t.offlineLog && s.initOfflineLog(), s.init(t), s.extendBean("sessionId", ve.sessionID), s.extendBean("referer", (N("getLaunchOptionsSync") ? V.getLaunchOptionsSync() : {
                    scene: ""
                }).scene || "")
            } catch (t) {
                console.warn(t), console.log("%cThe above error occurred in the process of initializing Aegis, which will affect your normal use of Aegis.\nIt is recommended that you contact us for feedback and thank you for your support.", "color: red"), s.sendSDKError(t)
            }
            return s
        }

        function ye(e) {
            var t, n, i = this,
                o = void 0 === (o = (e = void 0 === e ? {} : e).path) ? "/.aegis.offline.log" : o;
            e = void 0 === (e = e.limit) ? 2e4 : e;
            this.offlineBuffer = [], this.insertLog = (t = null, n = [], function(e) {
                n = n.concat(e), t = t || setTimeout((function() {
                    t = null;
                    var e, o = i.fileSystem,
                        r = i.filePath,
                        s = n.map((function(e) {
                            return JSON.stringify(e)
                        })).join("\n") + "\n";
                    s && (e = function(e) {
                        e ? i.checkLimit(s, (function() {
                            n = []
                        })) : o.writeFile({
                            data: s,
                            filePath: r,
                            encoding: "utf8",
                            fail: function(e) {
                                console.error(e)
                            },
                            success: function() {
                                n = []
                            }
                        })
                    }, o.access({
                        path: r,
                        success: function() {
                            e(!0)
                        },
                        fail: function() {
                            e()
                        }
                    }))
                }), 2e3)
            }), this.ready = function(e) {
                i.fileSystem ? setTimeout((function() {
                    e(null)
                }), 0) : (e(new Error("getFileSystemManager file")), i.offlineLog = !1)
            }, this.clearLogs = function() {
                var e = i.fileSystem,
                    t = i.filePath;
                e.writeFile({
                    filePath: t,
                    data: "",
                    fail: function() {
                        e.unlinkSync(t)
                    }
                })
            }, this.save2Offline = function(e, t) {
                e = (e = Array.isArray(e) ? e : [e]).map((function(e) {
                    return "string" == typeof e && (e = {
                            msg: e
                        }),
                        function() {
                            for (var e = [], t = 0; t < arguments.length; t++) e[t] = arguments[t];
                            if (0 === e.length) throw new TypeError("Cannot convert undefined or null to object");
                            for (var n = Object(e[0]), i = 1; i < e.length; i++) {
                                var o = e[i];
                                if (null !== o)
                                    for (var r in o) Object.prototype.hasOwnProperty.call(o, r) && (n[r] = o[r])
                            }
                            return n
                        }({
                            id: t.id,
                            uin: t.uin,
                            time: +Date.now(),
                            version: t.version,
                            from: k()
                        }, e)
                })), i.fileSystem ? i.insertLog(e) : (i.fileSystem || i.offlineBuffer.length || i.ready((function(e) {
                    e ? console.error(e) : i.offlineBuffer.length && (i.addLogs(i.offlineBuffer), i.offlineBuffer = [])
                })), i.offlineBuffer = i.offlineBuffer.concat(e))
            }, this.addLogs = function(e) {
                i.fileSystem && i.insertLog(e)
            }, this.filePath = V.env.USER_DATA_PATH + o, this.fileSystem = V.getFileSystemManager(), this.limitSize = e
        }

        function be(e) {
            this.aegisPlugin = !0, this.name = "", this.instances = [], this.inited = !1, e.$walk = this.walk.bind(this), e.$getConfig = this.getConfig.bind(this), this.option = e, this.name = e.name
        }

        function Oe(e) {
            var t, n, i, o, s, a, l, u, c, f, d, h, m, v, y, w = this;
            this.isGetSample = !1, this.isHidden = !1, this.config = {
                version: 0,
                delay: 1e3,
                onError: !0,
                repeat: 5,
                random: 1,
                aid: !0,
                device: !0,
                pagePerformance: !0,
                webVitals: !0,
                speedSample: !0,
                onClose: !0,
                hostUrl: "https://aegis.qq.com",
                websocketHack: !1,
                env: "production",
                url: "",
                offlineUrl: "",
                whiteListUrl: "",
                pvUrl: "",
                speedUrl: "",
                customTimeUrl: "",
                performanceUrl: "",
                webVitalsUrl: "",
                eventUrl: "",
                setDataReportUrl: ""
            }, this.isWhiteList = !1, this.lifeCycle = new r, this.bean = {}, this.normalLogPipeline = S([O(this, 5), E, (t = this, function(e, n) {
                var i = t.config;
                n(e = e.map((function(e) {
                    var t, n = i.maxLength || 204800;
                    try {
                        if (!e.msg || e.msg.length <= n) return e;
                        e.msg = null === (t = e.msg) || void 0 === t ? void 0 : t.substring(0, n)
                    } catch (t) {
                        e.msg = b(e.msg).substring(0, i.maxLength)
                    }
                    return e
                })))
            }), (v = this.config, y = {}, function(e, t) {
                var n = "number" == typeof v.repeat ? v.repeat : 5;
                if (0 === n) return t(e);
                t(e.filter((function(e) {
                    return e.level !== p.ERROR && e.level !== p.PROMISE_ERROR && e.level !== p.AJAX_ERROR && e.level !== p.SCRIPT_ERROR && e.level !== p.IMAGE_ERROR && e.level !== p.CSS_ERROR && e.level !== p.MEDIA_ERROR || (y[e.msg] = y[e.msg] || 0, y[e.msg] += 1, !(y[e.msg] > n))
                })))
            }), (h = this.lifeCycle.emit, m = this.config, function(e, t) {
                var n, i = m.logCreated;
                return "function" == typeof i ? (n = e.filter((function(e) {
                    return !1 !== i(e)
                })), h("beforeWrite", n), t(n)) : (h("beforeWrite", e), t(e))
            }), (d = this, setTimeout((function() {
                var e = d.config.pvUrl,
                    t = void 0 === e ? "" : e;
                t && d.sendPipeline([function(e, n) {
                    n({
                        url: t,
                        type: g.PV,
                        fail: function(e) {
                            "403 forbidden" === e && d.destroy()
                        }
                    })
                }], g.PV)(null)
            }), 100), function(e, t) {
                t(e)
            }), (c = u = l = !1, f = [], (s = this).lifeCycle.on("onConfigChange", (function() {
                a && clearTimeout(a), a = setTimeout((function() {
                    var e, t;
                    !c && s.config && (c = !0, e = s.config.whiteListUrl, (t = void 0 === e ? "" : e) && s.sendPipeline([function(e, n) {
                        n({
                            url: t,
                            type: g.WHITE_LIST,
                            success: function(e) {
                                u = !0;
                                try {
                                    var t = e.data || JSON.parse(e),
                                        n = t.retcode,
                                        i = t.result,
                                        o = void 0 === i ? {} : i;
                                    if (0 === n) {
                                        if (l = o.is_in_white_list, s.isWhiteList = l, o.shutdown) return void s.destroy();
                                        0 <= o.rate && o.rate <= 1 && (s.config.random = o.rate, s.isGetSample = !1)
                                    }
                                    s.isWhiteList && f.length ? M(s)(f.splice(0), (function() {})) : !s.isWhiteList && f.length && (f.length = 0);
                                    var r = s.config.onWhitelist;
                                    "function" == typeof r && r(l)
                                } catch (e) {}
                            },
                            fail: function(e) {
                                "403 forbidden" === e && s.destroy(), u = !0
                            }
                        })
                    }], g.WHITE_LIST)(null), c = !1)
                }), s.config.uin ? 50 : 500)
            })), s.lifeCycle.on("destroy", (function() {
                f.length = 0
            })), function(e, t) {
                var n;
                l || null !== (n = null === (n = s.config) || void 0 === n ? void 0 : n.api) && void 0 !== n && n.reportRequest ? t(e.concat(f.splice(0)).map((function(e) {
                    return F(e), e
                }))) : (n = e.filter((function(e) {
                    return e.level !== p.INFO && e.level !== p.API_RESPONSE ? (F(e), !0) : (u || (f.push(e), 200 <= f.length && (f.length = 200)), !1)
                }))).length && t(n)
            }), function(e, t) {
                try {
                    var n = JSON.parse(JSON.stringify(e)),
                        i = (w.lifeCycle.emit("beforeReport", n), w.config.beforeReport);
                    (e = "function" == typeof i ? e.filter((function(e) {
                        return !1 !== i(e)
                    })) : e).length && t(e)
                } catch (e) {}
            }, M(this)]), this.eventPipeline = S([O(this, 5), (o = this, function(e) {
                o.sendPipeline([function(e, t) {
                    var n = e.map((function(e) {
                        return {
                            name: e.name,
                            ext1: e.ext1 || o.config.ext1 || "",
                            ext2: e.ext2 || o.config.ext2 || "",
                            ext3: e.ext3 || o.config.ext3 || ""
                        }
                    }));
                    t({
                        url: o.config.eventUrl + "?payload=" + encodeURIComponent(JSON.stringify(n)),
                        type: g.EVENT,
                        log: e,
                        fail: function(e) {
                            "403 forbidden" === e && o.destroy()
                        }
                    })
                }], g.EVENT)(e)
            })]), this.timeMap = {}, this.failRequestCount = 0, this.customTimePipeline = S([O(this, 5), (i = this, function(e) {
                return i.sendPipeline([function(e, t) {
                    t({
                        url: i.config.customTimeUrl + "?payload=" + encodeURIComponent(JSON.stringify({
                            custom: e
                        })),
                        type: g.CUSTOM,
                        log: e,
                        fail: function(e) {
                            "403 forbidden" === e && i.destroy()
                        }
                    })
                }], g.CUSTOM)(e)
            })]), this.config = (n = this.config, void 0 === (e = e.hostUrl) && (e = "https://aegis.qq.com"), n.url = n.url || e + "/collect", n.offlineUrl = n.offlineUrl || e + "/offline", n.whiteListUrl = n.whiteListUrl || e + "/collect/whitelist", n.pvUrl = n.pvUrl || e + "/collect/pv", n.eventUrl = n.eventUrl || e + "/collect/events", n.speedUrl = n.speedUrl || e + "/speed", n.customTimeUrl = n.customTimeUrl || e + "/speed/custom", n.performanceUrl = n.performanceUrl || e + "/speed/performance", n.webVitalsUrl = n.webVitalsUrl || e + "/speed/webvitals", n.setDataReportUrl = n.SetDataReportUrl || e + "/speed/miniProgramData", n), Oe.instances.push(this)
        }
        return B.use(Q), B.use(oe), B.use(X), B.use(ue), B.use(fe), B.use(J), B.use($), B
    }));
});
define("utils/app.js", function(require, module, exports, window, document, frames, self, location, navigator, localStorage, history, Caches, screen, alert, confirm, prompt, XMLHttpRequest, WebSocket, Reporter, webkit, WeixinJSCore) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
        value: !0
    }), exports.getReadableBiz = void 0;
    exports.getReadableBiz = function(e) {
        switch (e) {
            case "index":
                return "腾讯会议";
            case "verify":
                return "人脸核验";
            default:
                return "known"
        }
    };
});
define("utils/base64.js", function(require, module, exports, window, document, frames, self, location, navigator, localStorage, history, Caches, screen, alert, confirm, prompt, XMLHttpRequest, WebSocket, Reporter, webkit, WeixinJSCore) {
    "use strict";
    var _typeof2 = require("../@babel/runtime/helpers/typeof");
    ! function(e, o) {
        "object" === ("undefined" == typeof exports ? "undefined" : _typeof2(exports)) && "undefined" != typeof module ? module.exports = o(e) : "function" == typeof define && define.amd ? define(o) : o(e)
    }("undefined" != typeof self ? self : "undefined" != typeof window ? window : "undefined" != typeof global ? global : void 0, (function(global) {
        global = global || {};
        var _Base64 = global.Base64,
            version = "2.5.1",
            buffer;
        if ("undefined" != typeof module && module.exports) try {
            buffer = eval("require('buffer').Buffer")
        } catch (e) {
            buffer = void 0
        }
        var b64chars = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/",
            b64tab = function(e) {
                for (var o = {}, r = 0, t = e.length; r < t; r++) o[e.charAt(r)] = r;
                return o
            }(b64chars),
            fromCharCode = String.fromCharCode,
            cb_utob = function(e) {
                if (e.length < 2) return (o = e.charCodeAt(0)) < 128 ? e : o < 2048 ? fromCharCode(192 | o >>> 6) + fromCharCode(128 | 63 & o) : fromCharCode(224 | o >>> 12 & 15) + fromCharCode(128 | o >>> 6 & 63) + fromCharCode(128 | 63 & o);
                var o = 65536 + 1024 * (e.charCodeAt(0) - 55296) + (e.charCodeAt(1) - 56320);
                return fromCharCode(240 | o >>> 18 & 7) + fromCharCode(128 | o >>> 12 & 63) + fromCharCode(128 | o >>> 6 & 63) + fromCharCode(128 | 63 & o)
            },
            re_utob = /[\uD800-\uDBFF][\uDC00-\uDFFFF]|[^\x00-\x7F]/g,
            utob = function(e) {
                return e.replace(re_utob, cb_utob)
            },
            cb_encode = function(e) {
                var o = [0, 2, 1][e.length % 3],
                    r = e.charCodeAt(0) << 16 | (e.length > 1 ? e.charCodeAt(1) : 0) << 8 | (e.length > 2 ? e.charCodeAt(2) : 0);
                return [b64chars.charAt(r >>> 18), b64chars.charAt(r >>> 12 & 63), o >= 2 ? "=" : b64chars.charAt(r >>> 6 & 63), o >= 1 ? "=" : b64chars.charAt(63 & r)].join("")
            },
            btoa = global.btoa ? function(e) {
                return global.btoa(e)
            } : function(e) {
                return e.replace(/[\s\S]{1,3}/g, cb_encode)
            },
            _encode = function(e) {
                return "[object Uint8Array]" === Object.prototype.toString.call(e) ? e.toString("base64") : btoa(utob(String(e)))
            },
            encode = function(e, o) {
                return o ? _encode(String(e)).replace(/[+\/]/g, (function(e) {
                    return "+" == e ? "-" : "_"
                })).replace(/=/g, "") : _encode(e)
            },
            encodeURI = function(e) {
                return encode(e, !0)
            },
            re_btou = new RegExp(["[À-ß][-¿]", "[à-ï][-¿]{2}", "[ð-÷][-¿]{3}"].join("|"), "g"),
            cb_btou = function(e) {
                switch (e.length) {
                    case 4:
                        var o = ((7 & e.charCodeAt(0)) << 18 | (63 & e.charCodeAt(1)) << 12 | (63 & e.charCodeAt(2)) << 6 | 63 & e.charCodeAt(3)) - 65536;
                        return fromCharCode(55296 + (o >>> 10)) + fromCharCode(56320 + (1023 & o));
                    case 3:
                        return fromCharCode((15 & e.charCodeAt(0)) << 12 | (63 & e.charCodeAt(1)) << 6 | 63 & e.charCodeAt(2));
                    default:
                        return fromCharCode((31 & e.charCodeAt(0)) << 6 | 63 & e.charCodeAt(1))
                }
            },
            btou = function(e) {
                return e.replace(re_btou, cb_btou)
            },
            cb_decode = function(e) {
                var o = e.length,
                    r = o % 4,
                    t = (o > 0 ? b64tab[e.charAt(0)] << 18 : 0) | (o > 1 ? b64tab[e.charAt(1)] << 12 : 0) | (o > 2 ? b64tab[e.charAt(2)] << 6 : 0) | (o > 3 ? b64tab[e.charAt(3)] : 0),
                    n = [fromCharCode(t >>> 16), fromCharCode(t >>> 8 & 255), fromCharCode(255 & t)];
                return n.length -= [0, 0, 2, 1][r], n.join("")
            },
            _atob = global.atob ? function(e) {
                return global.atob(e)
            } : function(e) {
                return e.replace(/\S{1,4}/g, cb_decode)
            },
            atob = function(e) {
                return _atob(String(e).replace(/[^A-Za-z0-9\+\/]/g, ""))
            },
            _decode = buffer ? buffer.from && Uint8Array && buffer.from !== Uint8Array.from ? function(e) {
                return (e.constructor === buffer.constructor ? e : buffer.from(e, "base64")).toString()
            } : function(e) {
                return (e.constructor === buffer.constructor ? e : new buffer(e, "base64")).toString()
            } : function(e) {
                return btou(_atob(e))
            },
            decode = function(e) {
                return _decode(String(e).replace(/[-_]/g, (function(e) {
                    return "-" == e ? "+" : "/"
                })).replace(/[^A-Za-z0-9\+\/]/g, ""))
            },
            noConflict = function() {
                var e = global.Base64;
                return global.Base64 = _Base64, e
            };
        if (global.Base64 = {
                VERSION: version,
                atob: atob,
                btoa: btoa,
                fromBase64: decode,
                toBase64: encode,
                utob: utob,
                encode: encode,
                encodeURI: encodeURI,
                btou: btou,
                decode: decode,
                noConflict: noConflict,
                __buffer__: buffer
            }, "function" == typeof Object.defineProperty) {
            var noEnum = function(e) {
                return {
                    value: e,
                    enumerable: !1,
                    writable: !0,
                    configurable: !0
                }
            };
            global.Base64.extendString = function() {
                Object.defineProperty(String.prototype, "fromBase64", noEnum((function() {
                    return decode(this)
                }))), Object.defineProperty(String.prototype, "toBase64", noEnum((function(e) {
                    return encode(this, e)
                }))), Object.defineProperty(String.prototype, "toBase64URI", noEnum((function() {
                    return encode(this, !0)
                })))
            }
        }
        return global.Meteor && (Base64 = global.Base64), "undefined" != typeof module && module.exports ? module.exports.Base64 = global.Base64 : "function" == typeof define && define.amd && define([], (function() {
            return global.Base64
        })), {
            Base64: global.Base64
        }
    }));
});
define("utils/crypto.js", function(require, module, exports, window, document, frames, self, location, navigator, localStorage, history, Caches, screen, alert, confirm, prompt, XMLHttpRequest, WebSocket, Reporter, webkit, WeixinJSCore) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
        value: !0
    }), exports.decryptAES = function(e) {
        return t.default.AES.decrypt(e, d, {
            iv: d,
            mode: t.default.mode.CBC,
            padding: t.default.pad.Pkcs7
        }).toString(t.default.enc.Utf8)
    }, exports.encryptAES = function(e) {
        return t.default.AES.encrypt(e, d, {
            iv: d,
            mode: t.default.mode.CBC,
            padding: t.default.pad.Pkcs7
        }).toString()
    };
    var e, t = (e = require("crypto-js")) && e.__esModule ? e : {
        default: e
    };
    var d = t.default.enc.Utf8.parse("tB4hxIfdrptkjMhGAIPSWhmELd6BztyL");
});
define("utils/historyCodes.js", function(require, module, exports, window, document, frames, self, location, navigator, localStorage, history, Caches, screen, alert, confirm, prompt, XMLHttpRequest, WebSocket, Reporter, webkit, WeixinJSCore) {
    "use strict";
    var t = require("../@babel/runtime/helpers/classCallCheck"),
        e = require("../@babel/runtime/helpers/createClass"),
        i = new(require("./logger.js"))({
            pageName: "historyCodes",
            aegisLogEnable: !0,
            wxLogEnable: !0
        }),
        n = require("./util"),
        s = function() {
            function s() {
                t(this, s), this.list = [], this.MAX_NUM = 10, this.KEY = "historyCodes", this.init()
            }
            return e(s, [{
                key: "init",
                value: function() {
                    var t = this;
                    wx.getStorage({
                        key: this.KEY,
                        success: function(e) {
                            t.list = e.data
                        },
                        fail: function(e) {
                            i.warn("failed to get key(".concat(t.KEY, ") from local storage at init HistoryCodes becasue ").concat(e.errMsg))
                        }
                    })
                }
            }, {
                key: "add",
                value: function(t) {
                    var e = t.meetingInfo,
                        n = e.meetingCode,
                        s = e.name,
                        o = t.nickname,
                        a = !t.meetingInfo.isMeetingCodeFullyVisible();
                    if ("string" == typeof n) {
                        for (var c = -1, r = 0, l = this.list.length; r < l; r++) {
                            var u = this.list[r];
                            if (this.list[r].code === n) {
                                c = r, u.isMasked = a, u.subject = s, u.nickname = o, u.option = this.getOption(this.list[r]);
                                break
                            }
                        }
                        if (0 < c) {
                            var h = this.list.splice(c, 1);
                            this.list.unshift(h[0])
                        } else if (c < 0) {
                            var f = {
                                code: n,
                                subject: s,
                                option: "",
                                nickname: o,
                                isMasked: a
                            };
                            f.option = this.getOption(f), this.list.unshift(f), this.MAX_NUM < this.list.length && (this.MAX_NUM + 1 < this.list.length && i.error("history codes list length should NOT be greater than MAX+1.\n            MAX=".concat(this.MAX_NUM, ",\n            current length=").concat(this.list.length, "\n          ")), this.list.splice(this.MAX_NUM))
                        }
                        var d = this;
                        wx.setStorage({
                            key: this.KEY,
                            data: this.list,
                            success: function() {},
                            fail: function(t) {
                                i.warn("update ".concat(d.KEY, " into localStorage failed: ").concat(JSON.stringify(t)))
                            }
                        })
                    } else i.warn("add code to history: code should be type of string. code: ".concat(n))
                }
            }, {
                key: "findItemByCode",
                value: function(t) {
                    for (var e = 0, i = this.list.length; e < i; e++) {
                        if (this.list[e].code === t) return this.list[e]
                    }
                    return null
                }
            }, {
                key: "updateNickname",
                value: function(t, e) {
                    var n = this;
                    if (e)
                        for (var s = function() {
                                if (n.list[o].code === t) {
                                    if (n.list[o].nickname !== e) {
                                        console.log("update ", t, " nickname from ", n.list[o].nickname, " to ", e), n.list[o].nickname = e;
                                        var s = n;
                                        wx.setStorage({
                                            key: n.KEY,
                                            data: n.list,
                                            success: function() {},
                                            fail: function(t) {
                                                i.warn("update ".concat(s.KEY, " into localStorage failed: ").concat(JSON.stringify(t)))
                                            }
                                        })
                                    } else console.warn("update ", t, " nickname ignored because they are same: ", e);
                                    return 1
                                }
                            }, o = 0, a = this.list.length; o < a && !s(); o++);
                    else console.warn("update nickname of meeting code ", t, " failed, nickname should not be empty")
                }
            }, {
                key: "clear",
                value: function() {
                    this.list = [];
                    var t = this;
                    wx.setStorage({
                        key: this.KEY,
                        data: [],
                        success: function() {},
                        fail: function(e) {
                            i.error("clear ".concat(t.KEY, " of localStorage failed: ").concat(JSON.stringify(e)))
                        }
                    })
                }
            }, {
                key: "getOption",
                value: function(t) {
                    var e = t.subject,
                        i = s.getMeetingCodeToShow(t),
                        o = n.truncateText(e, 20);
                    return o !== e && (o += "..."), "".concat(i, "   ").concat(o)
                }
            }], [{
                key: "getMeetingCodeToShow",
                value: function(t) {
                    return t.isMasked ? n.maskMeetingCode(t.code) : n.getMeetingCodeFormatted(t.code)
                }
            }, {
                key: "getInstance",
                value: function() {
                    return s.prototype.instance || (s.prototype.instance = new s), s.prototype.instance
                }
            }]), s
        }();
    module.exports = s;
});
define("utils/i18n.js", function(require, module, exports, window, document, frames, self, location, navigator, localStorage, history, Caches, screen, alert, confirm, prompt, XMLHttpRequest, WebSocket, Reporter, webkit, WeixinJSCore) {
    "use strict";
    require("../@babel/runtime/helpers/Arrayincludes");
    var e = require("./util").getValueFromLocalStorage,
        r = require("../resources/i18n/zh_CN/translation.js"),
        n = require("../resources/i18n/en/translation.js"),
        a = ["zh_CN", "zh_TW", "zh_HK"];

    function u() {
        var r = e("Language") || "zh_CN";
        return console.log("getLanguage()", r), a.includes(r) ? "zh_CN" : "en"
    }

    function t() {
        var e = null;
        switch (u()) {
            case "zh_CN":
                e = r;
                break;
            case "en":
                e = n;
                break;
            default:
                e = r
        }
        return e.languageCon
    }
    module.exports = {
        getLanguage: u,
        _t: t,
        _: function(e) {
            return t()[e] || e
        }
    };
});
define("utils/imageLoader.js", function(require, module, exports, window, document, frames, self, location, navigator, localStorage, history, Caches, screen, alert, confirm, prompt, XMLHttpRequest, WebSocket, Reporter, webkit, WeixinJSCore) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
        value: !0
    }), exports.preLoadImage = exports.imageUrls = exports.EmojiTextImageSuffixMap = void 0, require("../@babel/runtime/helpers/Objectvalues");
    exports.preLoadImage = function() {
        var t = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : [];
        t.forEach((function(t) {
            wx.getImageInfo({
                src: t,
                success: function() {}
            })
        })), e.forEach((function(t) {
            wx.getImageInfo({
                src: t,
                success: function() {}
            })
        }))
    };
    var t = exports.EmojiTextImageSuffixMap = {
            "[呲牙]": "https://cdn.meeting.tencent.com/pro/NmE5NmRmYTYtNjVmMS00NDEwLTlkMDktY2FmYWU3YzBjMjc5",
            "[捂嘴笑]": "https://cdn.meeting.tencent.com/pro/OWJhOTA0MjQtY2E4OC00MzgzLWE0ZDQtNzZmYTdlZDA5MzRk",
            "[笑泪]": "https://cdn.meeting.tencent.com/pro/YzNmOWQ1NzktMjM1ZC00NWY1LWJiZmQtMTBjNDU1YjgwOGI1",
            "[喝水]": "https://cdn.meeting.tencent.com/pro/Zjk1YjA3YzgtYjRiNi00NTI0LTgwZWItZTNjOTU4ZDVjZTNk",
            "[加班]": "https://cdn.meeting.tencent.com/pro/YzU3YmNiZDUtZDI5Ny00MDUyLTgzM2QtZWRiNGY4MDE1MTFj",
            "[眺望]": "https://cdn.meeting.tencent.com/pro/OTQ0OTg3MzctN2MwNi00OTJlLWFjZWMtNTFjNmFkODVkODRh",
            "[文海]": "https://cdn.meeting.tencent.com/pro/NDM3ZmU3ZjQtOTQzNS00MjkwLWE5ZWQtZDY0NTI5MTA1MDZl",
            "[下班]": "https://cdn.meeting.tencent.com/pro/MDFmMTIyZDEtZTI3MC00MjJiLWE3NDgtNjk5NDlhNTBiOTI1",
            "[炮仗]": "https://cdn.meeting.tencent.com/pro/N2E0YmM4YWQtZTU4Yi00ODU2LTkwNWUtY2FlYzJiNzQxYzBl",
            "[烟花]": "https://cdn.meeting.tencent.com/pro/MGI0NTc4M2YtOTk4ZC00Nzc1LWE1MDEtODFhNTRiMmEzZDlk",
            "[捂脸]": "https://cdn.meeting.tencent.com/pro/Y2IwZDg3NjUtYmFiNy00MGEyLTkyNzktZTVkMjU2OWFkNTg0",
            "[摸摸头]": "https://cdn.meeting.tencent.com/pro/Y2I4ZDZjNGItZDcyOC00N2M3LTkyODAtYTU2MTc4ZmM5NzMx",
            "[我错了]": "https://cdn.meeting.tencent.com/pro/Mjc4MjA5M2ItNjJkNC00ODZkLTg2ODktMjYyNzRkNTNjMzVi",
            "[红包]": "https://cdn.meeting.tencent.com/pro/MzhlNTk3M2UtNzRhOS00YjlhLThhZWEtNTBiOTJlZjlkMTE5",
            "[记笔记]": "https://cdn.meeting.tencent.com/pro/ODU4ODM4ZjAtMjZlZi00YWIzLWIzY2QtNWVlNDc2NDZlZWQx",
            "[露脸]": "https://cdn.meeting.tencent.com/pro/ZTdjOGMwYzgtYTIwZS00NTliLTk4MGEtYWRiOTIxMmMyOTE1",
            "[感谢]": "https://cdn.meeting.tencent.com/pro/ZmU3ZWMxYmQtNDU2ZC00MTU2LTg4NWQtOWViZGY2YWNjODQ1",
            "[举手]": "https://cdn.meeting.tencent.com/pro/MjY2OTQxODgtMWJmOC00ZTA0LTk3MjItZWZjMDdkNDJmOWYz",
            "[赞]": "https://cdn.meeting.tencent.com/pro/M2ZjYmM2MWQtYjZjYi00OWQwLTg4YTMtNGNmNzliNzlkNDIw",
            "[OK]": "https://cdn.meeting.tencent.com/pro/NTNiOTg5Y2MtODg3OS00ODE0LTlhMWItODg4Y2RhNDBhMTQz",
            "[鼓掌]": "https://cdn.meeting.tencent.com/pro/NGViYjNkZTctNDU1MS00ODczLTk5ZTMtNGFlNjI0M2QxMjNi",
            "[你好]": "https://cdn.meeting.tencent.com/pro/OWU5OTM4M2EtOWM3NS00MTkzLTg0NjYtYzAyN2FjODVmYTBi",
            "[比心]": "https://cdn.meeting.tencent.com/pro/YjMzZTEwNWUtYzU1Yi00NTEzLWE3OGItZTc2NmZjYjdmZjBk",
            "[送财]": "https://cdn.meeting.tencent.com/pro/YjZmYjEwOWMtMjdmMC00YWU1LTkxNzctMmMyNmY1NTdmODFi",
            "[醒狮]": "https://cdn.meeting.tencent.com/pro/NDllM2FjMzMtYTkzMy00ZDQzLWE5YzktYWNhZTQzYmQ2NWRl",
            "[悲伤]": "https://cdn.meeting.tencent.com/pro/YTQzZjY3MjgtM2U0Ny00YjI4LWE3NzUtNTRiZTAyOThjYzVm",
            "[炫酷]": "https://cdn.meeting.tencent.com/pro/NGNkYTAyODUtZDVkZC00MzhjLWJhZjgtYjE2YTc5MDJjMjEy",
            "[再见]": "https://cdn.meeting.tencent.com/pro/NzViMzFiNmUtOTBmYy00YTA0LThmOTQtMzRmZjM0NmYzMmQz",
            "[赞一个]": "https://cdn.meeting.tencent.com/pro/ODIyZDAzNDQtYTMwZC00N2RiLThmYjYtOTJhNjVhMTQ4ZWM3",
            "[喝咖啡]": "https://cdn.meeting.tencent.com/pro/MWZjNjliMjgtNWQ3ZC00MTY0LTgzOGItNTczMWY2YTQ3Yzgz",
            "[拜托]": "https://cdn.meeting.tencent.com/pro/Zjc4ZTg2NGQtZDg5Yi00MzUwLTllYzEtN2Y2MTY1NzU5OGEx",
            "[么么哒]": "https://cdn.meeting.tencent.com/pro/MDRkNDJkMzAtYzFlYy00YmU1LWJiZjctMzllZmY2ZjlhMTE5",
            "[生气]": "https://cdn.meeting.tencent.com/pro/MzU3NDM3MjEtZjRlYi00NDk4LWJhODYtYmU3ZmQ0M2UyMGUw",
            "[捂脸哭]": "https://cdn.meeting.tencent.com/pro/OTI1MjRlYTYtYTNhOC00NDJkLThlZWMtMzRkYjM3OGE3ZjU1",
            "[听到了]": "https://cdn.meeting.tencent.com/pro/ZWExODg2MWQtN2ZkZS00MTdkLWE1OTktNWQyMzJjN2FiOGVl",
            "[裂开]": "https://cdn.meeting.tencent.com/pro/NmVjMDI1ZTEtN2Q4MS00ZDBhLWI1ZWMtMzNjYzBjMjgwMmJj",
            "[笑哭了]": "https://cdn.meeting.tencent.com/pro/MmE0MWQ2NjYtMjRjYS00OWRiLWFmMDktMTU1ZDI3MjNjOTI2",
            "[签到]": "https://cdn.meeting.tencent.com/pro/NjE3ZjA3MDUtMGYxNy00MzkwLTg5YjUtYjE4NDdjMWIzZjlk",
            "[庆祝]": "https://cdn.meeting.tencent.com/pro/OThiNWQ5MjYtOWE0ZC00OTQ1LWI4MTktMTkxYzZiYmEyNDNl",
            "[超时]": "https://cdn.meeting.tencent.com/pro/NWU3Yjc2YWEtNTNmMi00YTUxLTgwY2MtOGUxOGE0MjkyZTYw",
            "[小红花]": "https://cdn.meeting.tencent.com/pro/ZTI2NWNmNDAtMGYxYy00OGQ3LThhY2YtNzk0OWM1ZDNlYzcz",
            "[doge]": "https://cdn.meeting.tencent.com/pro/ZmE0NmYzNDAtMjQ3MS00MWM4LWFkNDAtM2MwNGEyOTcwMTc5"
        },
        e = (exports.imageUrls = Object.values(t), ["https://cdn.meeting.tencent.com/pro/ZGJhZjQ2MjYtYWNjMC00ZTVmLTgzZjUtOTRmMTJkNjdlNGZl", "https://cdn.meeting.tencent.com/pro/NWUyNmEyZGMtMDEzNy00YTEzLTgzOGQtNWI0MDFhZDZiYzQw", "https://cdn.meeting.tencent.com/pro/MTJiMmVhMzktNDM2Zi00YTU2LTlmNGItNWY4ZDEwODZiZjll", "https://cdn.meeting.tencent.com/pro/MTNmMTNmY2EtZGRlNy00MGI0LWE0ZWEtOTFlODU0MGViOTkw", "https://cdn.meeting.tencent.com/pro/OTA2NjEzOGItNGE4MS00OWMzLWJmZjMtMTg5YmQ0ZmI4M2I2", "https://cdn.meeting.tencent.com/pro/ZDYyZGY3OWItYTJhNS00YTQ1LWI1NWYtZGY1ZTBkZTBlMmY1", "https://cdn.meeting.tencent.com/pro/MGVjM2ExNzEtZTM2Zi00YTI5LTgyZTItZGFiMGVhMjI3MTg0", "https://cdn.meeting.tencent.com/pro/NTcyOTI5YjctYmFkNi00N2QyLWE0MjQtYjQ0YjU0ZmEwZWJm", "https://cdn.meeting.tencent.com/pro/NzNmOGFjZjUtYjljMy00MGM2LTk3OGYtMjM0NGNmOTYxMGNm", "https://cdn.meeting.tencent.com/pro/ZjAzNGNkN2QtNWVlNS00N2I2LTk1OGUtMWQ2MGIxZTg2ZTUw", "https://cdn.meeting.tencent.com/pro/M2QzMzkyOWEtNzljNi00N2FjLThkY2ItMmNhYWYxOGM1OTVm", "https://cdn.meeting.tencent.com/pro/ZDYwYzU1YjctOTZlNi00ODY0LTlhY2ItNWRhYjg0M2FmMzVi", "https://cdn.meeting.tencent.com/pro/NTA3ZDE1MWYtMDZmOS00M2EzLWE1MjctYTM4YTE0Y2JmMzcz", "https://cdn.meeting.tencent.com/pro/MGM2MjMxZjctZGI5ZS00MTE3LWI2MzUtNWZmMTI1NmJhZDY4", "https://cdn.meeting.tencent.com/pro/YmI2YTNlMDgtM2ZjNC00OWRmLWFkMjYtOGIyMzg1ODdhYjY1", "https://cdn.meeting.tencent.com/pro/ZThhZTU0YjYtM2M0NS00YjA5LTk1Y2YtZjA5ZmI5NzllNTNi", "https://cdn.meeting.tencent.com/pro/MmMzNGEyYTYtYWIxNS00ZTgzLWI3MWEtNmM0YWFjNDMwMzYw", "https://cdn.meeting.tencent.com/pro/ZGU2ZmVkNmQtODczYi00M2I0LTg2ZjAtODc4MTUwYjNhMGNl", "https://cdn.meeting.tencent.com/pro/YzRlYTI3MTQtYmNjYi00ZDUxLTkyOGQtN2UwZDBhYmYwMDI4", "https://cdn.meeting.tencent.com/pro/MzA4ZTBmYTgtNTViOC00ZGRkLTg5ZmItM2I3ODQ0OWUwYzFl", "https://cdn.meeting.tencent.com/pro/NTQwYzI5ZTItMTZiNi00ZjJjLWFlN2YtNGFkOTk3NTYxM2E2", "https://cdn.meeting.tencent.com/pro/YTRjYWIzMGEtZDhjYy00NzMzLTg3MDgtNTZmYzU0ZWU4MDQ0", "https://cdn.meeting.tencent.com/pro/M2EyNTRkNGEtN2E4Ni00NjkwLTk0YTYtZDU0OWY5M2I3ZGEx", "https://cdn.meeting.tencent.com/pro/M2M1NjAyYmQtNGZkNC00ODYzLTlkOTUtZTdhNTU2NzE5MWVk", "https://cdn.meeting.tencent.com/pro/OGNhZTdlYzktNjdmZi00N2U5LTg1M2MtYzg1YTY4MDZiMmE2"]);
});
define("utils/log.js", function(require, module, exports, window, document, frames, self, location, navigator, localStorage, history, Caches, screen, alert, confirm, prompt, XMLHttpRequest, WebSocket, Reporter, webkit, WeixinJSCore) {
    "use strict";
    var r = wx.getRealtimeLogManager ? wx.getRealtimeLogManager() : null;
    module.exports = {
        info: function() {
            if (r) {
                for (var e = arguments.length, t = new Array(e), n = 0; n < e; n++) t[n] = arguments[n];
                r.info(t)
            }
        },
        warn: function() {
            if (r) {
                for (var e = arguments.length, t = new Array(e), n = 0; n < e; n++) t[n] = arguments[n];
                r.error(t)
            }
        },
        error: function(e) {
            r && r.error(e)
        },
        setFilterMsg: function(e) {
            r && r.setFilterMsg && "string" == typeof e && r.setFilterMsg(e)
        },
        addFilterMsg: function(e) {
            r && r.addFilterMsg && "string" == typeof e && r.addFilterMsg(e)
        }
    };
});
define("utils/logger.js", function(require, module, exports, window, document, frames, self, location, navigator, localStorage, history, Caches, screen, alert, confirm, prompt, XMLHttpRequest, WebSocket, Reporter, webkit, WeixinJSCore) {
    "use strict";
    var e = require("../@babel/runtime/helpers/classCallCheck"),
        t = require("../@babel/runtime/helpers/createClass"),
        n = require("./log.js"),
        o = require("../clients/AegisClient"),
        i = [],
        r = [],
        a = function() {
            function a() {
                var t = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {};
                e(this, a);
                var n = t.pageName,
                    o = t.wxLogEnable,
                    i = void 0 !== o && o,
                    r = t.aegisLogEnable,
                    s = void 0 !== r && r;
                this.wxLogEnable = i, this.aegisLogEnable = s, this.pageName = n
            }
            return t(a, [{
                key: "info",
                value: function(e, t) {
                    var o = this._getMsgStr(e, t),
                        r = this.getNowTime();
                    a.isDEV && console.log("[".concat(r, "] ").concat(o)), this.wxLogEnable && n.info(o), this.aegisLogEnable && (i.push({
                        time: r,
                        msg: o
                    }), i.length >= 20 && this.reportCurrLog("info"))
                }
            }, {
                key: "warn",
                value: function(e, t) {
                    var o = this._getMsgStr(e, t),
                        r = this.getNowTime();
                    if (a.isDEV && console.warn("[".concat(r, "] ").concat(o)), this.wxLogEnable && n.warn(o), this.aegisLogEnable) {
                        var s = this.getNowTime();
                        i.push({
                            time: s,
                            msg: o
                        }), i.length >= 20 && this.reportCurrLog("info")
                    }
                }
            }, {
                key: "error",
                value: function(e, t) {
                    var o = this._getMsgStr(e, t),
                        i = this.getNowTime();
                    a.isDEV && console.error("[".concat(i, "] ").concat(o)), this.wxLogEnable && n.error(o), this.aegisLogEnable && (r.push({
                        time: i,
                        msg: o
                    }), r.length >= 20 && this.reportCurrLog("error"))
                }
            }, {
                key: "assert",
                value: function(e, t) {
                    var o = "[assert]".concat(this._getMsgStr(e, t)),
                        r = this.getNowTime();
                    a.isDEV && console.warn("[".concat(r, "] ").concat(o)), this.wxLogEnable && n.warn(o), this.aegisLogEnable && (i.push({
                        time: r,
                        msg: o
                    }), i.length >= 20 && this.reportCurrLog("info"))
                }
            }, {
                key: "reportEvent",
                value: function(e, t, n, i) {
                    a.isDEV && console.log("[reportEvent] name: ".concat(e, "\n      ext1: ").concat(t || "", "\n      ext2: ").concat(n || "", "\n      ext3: ").concat(i || "", "\n    ")), this.aegisLogEnable && o.reportEvent({
                        name: e,
                        ext1: t,
                        ext2: n,
                        ext3: i
                    })
                }
            }, {
                key: "reportCls",
                value: function(e, t) {
                    var n = this._getMsgStr(e, t),
                        i = this.getNowTime(),
                        r = "[".concat(i, "] [report_cls] ").concat(n);
                    a.isDEV && console.log(r), this.aegisLogEnable && o.infoAll({
                        msg: r
                    })
                }
            }, {
                key: "reportCurrLog",
                value: function() {
                    var e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : "all";
                    "all" !== e ? this.handleLogList(e) : (this.handleLogList("info"), this.handleLogList("error"))
                }
            }, {
                key: "calcReportSize",
                value: function(e) {
                    return this.byteLength(e)
                }
            }, {
                key: "getNowTime",
                value: function() {
                    var e = new Date,
                        t = e.getMonth() + 1,
                        n = e.getDate();
                    t >= 1 && t <= 9 && (t = "0".concat(t)), n >= 0 && n <= 9 && (n = "0".concat(n));
                    var o = e.getHours();
                    o >= 0 && o <= 9 && (o = "0".concat(o));
                    var i = e.getMinutes();
                    i >= 0 && i <= 9 && (i = "0".concat(i));
                    var r = e.getSeconds();
                    r >= 0 && r <= 9 && (r = "0".concat(r));
                    var a = e.getMilliseconds();
                    return a < 10 ? a = "00".concat(a) : a < 100 && (a = "0".concat(a)), "".concat(e.getFullYear() + "-" + t + "-" + n, " ").concat(o).concat(":").concat(i).concat(":").concat(r, ".").concat(a)
                }
            }, {
                key: "handleLogList",
                value: function(e) {
                    for (var t = "", n = "", a = !1, s = "info" === e ? i : r, c = s.length, g = 0; g < c; g++) {
                        var l = s[g];
                        if (t += "\n ".concat(l.time, " , ----: ").concat(l.msg), this.calcReportSize(t) > 9e5) {
                            a = !0, n += "\n *** The size of this log is ".concat((this.calcReportSize(n) / 1e3).toFixed(2), "k ***"), "info" === e && i.length > 0 ? (o.infoAll({
                                msg: n
                            }), i = s.splice(g)) : "error" === e && r.length > 0 && (o.error({
                                msg: n
                            }), r = s.splice(g)), this.reportEvent("The log content exceeds the upper limit", (this.calcReportSize(t) / 1e3).toFixed(2));
                            break
                        }
                        n = t
                    }
                    a || ("info" === e && i.length > 0 ? (o.infoAll({
                        msg: n
                    }), i = []) : "error" === e && r.length > 0 && (o.error({
                        msg: n
                    }), r = []))
                }
            }, {
                key: "byteLength",
                value: function(e) {
                    var t = 0,
                        n = e.length;
                    if (n > 0) {
                        for (var o = 0; o < n; o++) e.charCodeAt(o) > 255 ? t += 2 : t += 1;
                        return t
                    }
                    return 0
                }
            }, {
                key: "setWXLogEnable",
                value: function() {
                    return this
                }
            }, {
                key: "_getMsgStr",
                value: function() {
                    var e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : "",
                        t = arguments.length > 1 ? arguments[1] : void 0,
                        n = this.pageName,
                        o = "string" == typeof e ? e : JSON.stringify(e);
                    return "".concat(a.isQywx ? "[wxwork]" : "", "[").concat(n, "]").concat("string" == typeof t ? "[".concat(t, "]") : "", " ").concat(o)
                }
            }], [{
                key: "setIsDEV",
                value: function(e) {
                    a.isDEV = e
                }
            }]), a
        }();
    a.isDEV = !1, module.exports = a;
});
define("utils/loggers/index.js", function(require, module, exports, window, document, frames, self, location, navigator, localStorage, history, Caches, screen, alert, confirm, prompt, XMLHttpRequest, WebSocket, Reporter, webkit, WeixinJSCore) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
        value: !0
    }), exports.default = exports.LOG_MAX_LEN = exports.BUFFER_MAX_LEN = void 0;
    var e, t = require("../../@babel/runtime/helpers/classCallCheck"),
        o = require("../../@babel/runtime/helpers/createClass"),
        n = (e = require("./log")) && e.__esModule ? e : {
            default: e
        },
        i = require("./utils");
    var s = require("../../clients/AegisClient"),
        r = exports.LOG_MAX_LEN = 20,
        a = exports.BUFFER_MAX_LEN = 9e5,
        l = [],
        g = [],
        c = function() {
            function e() {
                var o = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {};
                t(this, e);
                var n = o.pageName,
                    i = o.wxLogEnable,
                    s = void 0 !== i && i,
                    r = o.aegisLogEnable,
                    a = void 0 !== r && r;
                this.wxLogEnable = s, this.aegisLogEnable = a, this.pageName = n
            }
            return o(e, [{
                key: "setWXLogEnable",
                value: function(e) {
                    this.wxLogEnable = e
                }
            }, {
                key: "setAegisLogEnable",
                value: function(e) {
                    this.aegisLogEnable = e
                }
            }, {
                key: "log",
                value: function(t, o) {
                    var s = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : "info",
                        a = this._getMsgStr(t, o),
                        g = (0, i.getNowTime)();
                    e.isDEV && console.log("[".concat(g, "] ").concat(a)), this.wxLogEnable && n.default.info(a), this.aegisLogEnable && (l.push({
                        time: g,
                        msg: a
                    }), l.length >= r && this.reportCurrLog(s))
                }
            }, {
                key: "info",
                value: function(t, o) {
                    var s = this._getMsgStr(t, o),
                        a = (0, i.getNowTime)();
                    e.isDEV && console.log("[".concat(a, "] ").concat(s)), this.wxLogEnable && n.default.info(s), this.aegisLogEnable && (l.push({
                        time: a,
                        msg: s
                    }), l.length >= r && this.reportCurrLog("info"))
                }
            }, {
                key: "warn",
                value: function(t, o) {
                    var s = this._getMsgStr(t, o),
                        a = (0, i.getNowTime)();
                    if (e.isDEV && console.warn("[".concat(a, "] ").concat(s)), this.wxLogEnable && n.default.warn(s), this.aegisLogEnable) {
                        var g = (0, i.getNowTime)();
                        l.push({
                            time: g,
                            msg: s
                        }), l.length >= r && this.reportCurrLog("info")
                    }
                }
            }, {
                key: "error",
                value: function(t, o) {
                    var s = this._getMsgStr(t, o),
                        a = (0, i.getNowTime)();
                    e.isDEV && console.error("[".concat(a, "] ").concat(s)), this.wxLogEnable && n.default.error(s), this.aegisLogEnable && (g.push({
                        time: a,
                        msg: s
                    }), g.length >= r && this.reportCurrLog("error"))
                }
            }, {
                key: "assert",
                value: function(t, o) {
                    var s = "[assert]".concat(this._getMsgStr(t, o)),
                        a = (0, i.getNowTime)();
                    e.isDEV && console.warn("[".concat(a, "] ").concat(s)), this.wxLogEnable && n.default.warn(s), this.aegisLogEnable && (l.push({
                        time: a,
                        msg: s
                    }), l.length >= r && this.reportCurrLog("info"))
                }
            }, {
                key: "reportEvent",
                value: function(t, o, n, i) {
                    e.isDEV && console.log("[reportEvent] name: ".concat(t, "\n      ext1: ").concat(o || "", "\n      ext2: ").concat(n || "", "\n      ext3: ").concat(i || "", "\n    ")), this.aegisLogEnable && s.reportEvent({
                        name: t,
                        ext1: o,
                        ext2: n,
                        ext3: i
                    })
                }
            }, {
                key: "reportCls",
                value: function(t, o) {
                    var n = this._getMsgStr(t, o),
                        r = (0, i.getNowTime)(),
                        a = "[".concat(r, "] [report_cls] ").concat(n);
                    e.isDEV && console.log(a), this.aegisLogEnable && s.infoAll({
                        msg: a
                    })
                }
            }, {
                key: "reportCurrLog",
                value: function() {
                    var e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : "all";
                    "all" !== e ? this.handleLogList(e) : (this.handleLogList("info"), this.handleLogList("error"))
                }
            }, {
                key: "calcReportSize",
                value: function(e) {
                    return (0, i.byteLength)(e)
                }
            }, {
                key: "handleLogList",
                value: function(e) {
                    for (var t = "", o = "", n = !1, i = "info" === e ? l : g, r = i.length, c = 0; c < r; c++) {
                        var h = i[c];
                        if (t += "\n ".concat(h.time, " , ----: ").concat(h.msg), this.calcReportSize(t) > a) {
                            n = !0, o += "\n *** The size of this log is ".concat((this.calcReportSize(o) / 1e3).toFixed(2), "k ***"), "info" === e && l.length > 0 ? (s.infoAll({
                                msg: o
                            }), l = i.splice(c)) : "error" === e && g.length > 0 && (s.error({
                                msg: o
                            }), g = i.splice(c)), this.reportEvent("The log content exceeds the upper limit", (this.calcReportSize(t) / 1e3).toFixed(2));
                            break
                        }
                        o = t
                    }
                    n || ("info" === e && l.length > 0 ? (s.infoAll({
                        msg: o
                    }), l = []) : "error" === e && g.length > 0 && (s.error({
                        msg: o
                    }), g = []))
                }
            }, {
                key: "_getMsgStr",
                value: function(t, o) {
                    var n = this.pageName,
                        i = "string" == typeof t ? t : JSON.stringify(t);
                    return "".concat(e.isQywx ? "[wxwork]" : "", "[").concat(n, "]").concat("string" == typeof o ? "[".concat(o, "]") : "", " ").concat(i)
                }
            }], [{
                key: "setIsDEV",
                value: function(t) {
                    e.isDEV = t
                }
            }, {
                key: "setIsQywx",
                value: function(t) {
                    e.isQywx = t
                }
            }]), e
        }();
    c.isDEV = !1, c.isQywx = !1;
    exports.default = c;
});
define("utils/loggers/log.js", function(require, module, exports, window, document, frames, self, location, navigator, localStorage, history, Caches, screen, alert, confirm, prompt, XMLHttpRequest, WebSocket, Reporter, webkit, WeixinJSCore) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
        value: !0
    }), exports.default = void 0;
    var e = wx.getRealtimeLogManager ? wx.getRealtimeLogManager() : null;
    exports.default = {
        info: function() {
            if (e) {
                for (var r = arguments.length, t = new Array(r), n = 0; n < r; n++) t[n] = arguments[n];
                e.info(t)
            }
        },
        warn: function() {
            if (e) {
                for (var r = arguments.length, t = new Array(r), n = 0; n < r; n++) t[n] = arguments[n];
                e.warn(t)
            }
        },
        error: function() {
            if (e) {
                for (var r = arguments.length, t = new Array(r), n = 0; n < r; n++) t[n] = arguments[n];
                e.error(t)
            }
        },
        setFilterMsg: function(r) {
            e && e.setFilterMsg && "string" == typeof r && e.setFilterMsg(r)
        },
        addFilterMsg: function(r) {
            e && e.addFilterMsg && "string" == typeof r && e.addFilterMsg(r)
        }
    };
});
define("utils/loggers/utils.js", function(require, module, exports, window, document, frames, self, location, navigator, localStorage, history, Caches, screen, alert, confirm, prompt, XMLHttpRequest, WebSocket, Reporter, webkit, WeixinJSCore) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
        value: !0
    }), exports.getNowTime = exports.byteLength = void 0;
    exports.getNowTime = function() {
        var t = new Date,
            e = t.getMonth() + 1,
            c = t.getDate();
        e >= 1 && e <= 9 && (e = "0".concat(e)), c >= 0 && c <= 9 && (c = "0".concat(c));
        var o = t.getHours();
        o >= 0 && o <= 9 && (o = "0".concat(o));
        var n = t.getMinutes();
        n >= 0 && n <= 9 && (n = "0".concat(n));
        var a = t.getSeconds();
        a >= 0 && a <= 9 && (a = "0".concat(a));
        var r = t.getMilliseconds();
        return r < 10 ? r = "00".concat(r) : r < 100 && (r = "0".concat(r)), "".concat(t.getFullYear() + "-" + e + "-" + c, " ").concat(o).concat(":").concat(n).concat(":").concat(a, ".").concat(r)
    }, exports.byteLength = function(t) {
        var e = 0,
            c = t.length;
        if (c > 0) {
            for (var o = 0; o < c; o++) t.charCodeAt(o) > 255 ? e += 2 : e += 1;
            return e
        }
        return 0
    };
});
define("utils/meetingTime.js", function(require, module, exports, window, document, frames, self, location, navigator, localStorage, history, Caches, screen, alert, confirm, prompt, XMLHttpRequest, WebSocket, Reporter, webkit, WeixinJSCore) {
    "use strict";
    var t = {
        init: function() {
            this.startTm = 0, this.endTm = 0, this.durationTm = 0, this.lastMemberCount = 0, this.currMemberCount = 0, this.validStartTm = 0, this.validEndTm = 0, this.validDurationTm = 0
        },
        start: function() {
            this.init(), this.startTm = Date.now(), this.endTm = 0
        },
        end: function() {
            0 === this.endTm && 0 !== this.startTm && (this.currMemberCount >= 2 && this.validEnd(), this.endTm = Date.now(), this.durationTm = this.endTm - this.startTm, this.startTm = 0)
        },
        validStart: function() {
            this.validStartTm = Date.now(), this.validEndTm = 0
        },
        validEnd: function() {
            if (0 === this.validEndTm && 0 !== this.validStartTm) {
                this.validEndTm = Date.now();
                var t = this.validEndTm - this.validStartTm;
                this.validDurationTm += t, console.log("validDurationTime changed", this.validDurationTm), this.validStartTm = 0
            }
        },
        updateMemberCount: function(t) {
            0 !== this.startTm && (this.currMemberCount = t, this.currMemberCount >= 2 ? this.lastMemberCount < 2 && this.validStart() : this.lastMemberCount >= 2 && this.validEnd(), this.lastMemberCount = t)
        },
        getDurationTime: function() {
            return void 0 === this.durationTm ? 0 : Math.round(this.durationTm / 1e3)
        },
        getValidDurationTime: function() {
            return void 0 === this.validDurationTm ? 0 : Math.round(this.validDurationTm / 1e3)
        }
    };
    module.exports = t;
});
define("utils/performanceReporter.js", function(require, module, exports, window, document, frames, self, location, navigator, localStorage, history, Caches, screen, alert, confirm, prompt, XMLHttpRequest, WebSocket, Reporter, webkit, WeixinJSCore) {
    "use strict";
    var e = require("../@babel/runtime/helpers/classCallCheck"),
        r = require("../@babel/runtime/helpers/createClass");
    console.log("performanceReporter.js loaded start");
    var t = require("../clients/BeaconClient"),
        o = new(require("./logger.js"))({
            pageName: "PerformanceReporter",
            aegisLogEnable: !0,
            wxLogEnable: !0
        }),
        n = function() {
            function n() {
                e(this, n), this.times = {}
            }
            return r(n, [{
                key: "start",
                value: function(e) {
                    if ("number" != typeof e || e < 1) o.error("number required for PerformanceReporter to start. passed in reportID: ".concat(e));
                    else {
                        var r = "r".concat(e);
                        this.times[r] && o.warn("already started for reportID: ".concat(e, ", clear it to restart")), this.times[r] = [(new Date).getTime()]
                    }
                }
            }, {
                key: "end",
                value: function(e) {
                    if ("number" != typeof e || e < 1) o.error("number required for PerformanceReporter to end. passed in reportID: ".concat(e));
                    else {
                        var r = "r".concat(e);
                        if (this.times[r]) {
                            if (!Array.isArray(this.times[r]) || 1 !== this.times[r].length) return o.error("reportID(".concat(e, ") end failed since invalid time record for it")), void delete this.times[r];
                            var t = this.times[r][0],
                                n = (new Date).getTime();
                            delete this.times[r], this.report(e, n - t)
                        } else o.warn("reportID(".concat(e, ") has not been started"))
                    }
                }
            }, {
                key: "report",
                value: function(e, r) {
                    try {
                        wx.canIUse("reportPerformance") && wx.reportPerformance(e, r), t.report("mp_performance_reporter", {
                            id: e,
                            cost: r
                        })
                    } catch (e) {
                        o.error("report error: ".concat(e.message))
                    }
                }
            }], [{
                key: "getInstance",
                value: function() {
                    return void 0 === n.prototype.instance && (n.prototype.instance = new n), n.prototype.instance
                }
            }]), n
        }();
    console.log("performanceReporter.js loaded end"), module.exports = n.getInstance();
});
define("utils/plugins/AudioExcitedCalculator.js", function(require, module, exports, window, document, frames, self, location, navigator, localStorage, history, Caches, screen, alert, confirm, prompt, XMLHttpRequest, WebSocket, Reporter, webkit, WeixinJSCore) {
    "use strict";
    var e = require("../../@babel/runtime/helpers/classCallCheck"),
        t = require("../../@babel/runtime/helpers/createClass"),
        i = new(require("../logger"))({
            pageName: "AudioExcitedCalculator",
            aegisLogEnable: !0,
            wxLogEnable: !1
        }),
        r = function() {
            function r() {
                e(this, r), this.audioMvsp = "", this.SEGMENT_LENTH = 3, this.SWITCH_PERIOD_LENGTH = 3, this.gSegmentArr = [], this.gSwitchSlideWinQueue = []
            }
            return t(r, [{
                key: "getAudioMvsp",
                value: function() {
                    return this.audioMvsp
                }
            }, {
                key: "setAudioMvsp",
                value: function(e) {
                    this.audioMvsp !== e && (this.audioMvsp = e)
                }
            }, {
                key: "pushInfoList",
                value: function(e) {
                    if (this.gSegmentArr.push(e), this.SEGMENT_LENTH < this.gSegmentArr.length) return this.gSegmentArr = [], void i.error("length of segement array for every audio push should NOT be larger than ", this.SEGMENT_LENTH, ". current len: ", this.gSegmentArr.length);
                    var t = this.getMostVoicedPerson();
                    t && this.setAudioMvsp(t)
                }
            }, {
                key: "getMostVoicedPerson",
                value: function() {
                    if (this.gSegmentArr.length !== this.SEGMENT_LENTH) return "";
                    var e = this.getMvpAtSegmentArr();
                    return this.gSegmentArr = [], this.enqueueSwitchSlideWin(e), this.isGotMostValuableSpeakingPerson() ? e : ""
                }
            }, {
                key: "enqueueSwitchSlideWin",
                value: function(e) {
                    this.gSwitchSlideWinQueue.length === this.SWITCH_PERIOD_LENGTH && this.gSwitchSlideWinQueue.splice(0, 1), this.gSwitchSlideWinQueue.push(e)
                }
            }, {
                key: "isGotMostValuableSpeakingPerson",
                value: function() {
                    if (this.gSwitchSlideWinQueue.length !== this.SWITCH_PERIOD_LENGTH) return !1;
                    for (var e = this.gSwitchSlideWinQueue[0], t = 1; t < this.SWITCH_PERIOD_LENGTH; t++)
                        if (e !== this.gSwitchSlideWinQueue[t]) return !1;
                    return !0
                }
            }, {
                key: "getMvpAtSegmentArr",
                value: function() {
                    if (this.gSegmentArr.length !== this.SEGMENT_LENTH) return console.warn("you should call getMvpAtSegmentArr as the gSegmentArr is not full: ", this.gSegmentArr.length), "";
                    var e = {};
                    this.gSegmentArr.forEach((function(t) {
                        t.forEach((function(t) {
                            var i = t.user.keyString,
                                r = e[i] || 0;
                            e[i] = r + (t.energy || 0)
                        }))
                    }));
                    var t = "",
                        i = 0;
                    return Object.keys(e).forEach((function(r) {
                        i < e[r] && (i = e[r], t = r)
                    })), t
                }
            }]), r
        }();
    module.exports = r;
});
define("utils/plugins/LivePusherRestarter.js", function(require, module, exports, window, document, frames, self, location, navigator, localStorage, history, Caches, screen, alert, confirm, prompt, XMLHttpRequest, WebSocket, Reporter, webkit, WeixinJSCore) {
    "use strict";
    var e = require("../../@babel/runtime/helpers/regeneratorRuntime"),
        t = require("../../@babel/runtime/helpers/asyncToGenerator"),
        r = require("../../@babel/runtime/helpers/classCallCheck"),
        i = require("../../@babel/runtime/helpers/createClass"),
        n = require("../../actions/MeetingAction"),
        a = require("../../stores/MeetingStore"),
        s = require("../../constants/MeetingType"),
        o = require("../util.js"),
        u = new(require("../logger"))({
            pageName: "LivePusherRestarter",
            aegisLogEnable: !0,
            wxLogEnable: !1
        }),
        c = function() {
            function c() {
                r(this, c), this._counter = 0, this._timerID = 0, this._prevPushURL = "", u.info("LivePusherRestarter created."), a.onceEventListener(this.onMeetingStoreChange, this)
            }
            var h;
            return i(c, [{
                key: "getState",
                value: function() {
                    return a.getMediaRoomState()
                }
            }, {
                key: "onMeetingStoreChange",
                value: function(e) {
                    var t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {},
                        r = t.data;
                    switch (e) {
                        case s.LIVE_PUSHER_JOIN_MEDIA_ROOM_SUCC:
                            this.onJoinMediaRoomSucc();
                            break;
                        case s.LIVE_PUSHER_MEDIA_ROOM_RECOVERD:
                            this.onMediaRoomRecovered();
                            break;
                        case s.LIVE_PUSHER_MEDIA_ROOM_RESTARTING:
                            this.restartPusher(r);
                            break;
                        case s.LIVE_PUSHER_NEED_LEAVE_MEDIA_ROOM:
                            this.clearState();
                            break;
                        case s.LIVE_PUSHER_MEDIA_ROOM_INTERRUPTED:
                            this.mediaRoomInterrupted()
                    }
                }
            }, {
                key: "onJoinMediaRoomSucc",
                value: function() {
                    0 < this._timerID && (u.info("重启推流成功！重试了".concat(this._counter, "次，重试间隔").concat(c.RETRY_INTERVAL / 1e3, "s.\n        重试恢复耗时: ").concat(this._counter * c.RETRY_INTERVAL / 1e3, "s")), clearInterval(this._timerID), this._timerID = 0, this._counter = 0)
                }
            }, {
                key: "onMediaRoomRecovered",
                value: function() {
                    this.onJoinMediaRoomSucc()
                }
            }, {
                key: "restartPusher",
                value: function() {
                    var e = arguments.length > 0 && void 0 !== arguments[0] && arguments[0];
                    this.start(e)
                }
            }, {
                key: "clearState",
                value: function() {
                    0 < this._timerID && (clearInterval(this._timerID), this._timerID = 0), this._counter = 0
                }
            }, {
                key: "mediaRoomInterrupted",
                value: function() {
                    this.stop()
                }
            }, {
                key: "stop",
                value: function() {
                    0 < this._timerID && (clearInterval(this._timerID), this._timerID = 0, u.info("restart pusher timer cleared, current retry times: ".concat(this._counter))), this._counter = 0, this._prevPushURL = ""
                }
            }, {
                key: "start",
                value: function() {
                    var e = this,
                        t = arguments.length > 0 && void 0 !== arguments[0] && arguments[0];
                    this.stop(), t && this.startPusherCleanly(), this._timerID = setInterval((function() {
                        e.startPusherCleanly()
                    }), c.RETRY_INTERVAL)
                }
            }, {
                key: "startPusherCleanly",
                value: (h = t(e().mark((function t() {
                    var r, i;
                    return e().wrap((function(e) {
                        for (;;) switch (e.prev = e.next) {
                            case 0:
                                if (i = a.getReadableMediaRoomState(), u.info("准备重启推流，当前媒体房间状态：".concat(a.getMediaRoomState(), "(").concat(i, ")")), !a.isInMediaRoom()) {
                                    e.next = 8;
                                    break
                                }
                                return u.warn("重启推流不应该走到这里，已经收到1018就应该取消重试了"), clearInterval(this._timerID), this._timerID = 0, this._counter = 0, e.abrupt("return");
                            case 8:
                                if (null === (r = a.getTRTCInstance()) || void 0 === r || !r.getPusherInstance()) {
                                    e.next = 26;
                                    break
                                }
                                if (!(c.RETRY_TIMES < ++this._counter)) {
                                    e.next = 14;
                                    break
                                }
                                return u.error("restartPusher has been invoked for ".concat(this._counter - 1, " times, prompt user to exit and retry.")), this.stop(), a.emit(s.LIVE_PUSHER_RESTART_FAILED, {
                                    data: "重连失败，请重新加入会议"
                                }), e.abrupt("return");
                            case 14:
                                if (!(this._counter <= c.RETRY_TIMES)) {
                                    e.next = 23;
                                    break
                                }
                                return u.warn("[No.".concat(this._counter, "] live-pusher is restarting...")), n.updatePusherAttrs({
                                    url: ""
                                }), e.next = 19, o.sleep(1);
                            case 19:
                                u.info("let's re-enter media room..."), n.recoverMediaRoom(), e.next = 24;
                                break;
                            case 23:
                                u.warn("[ASSERT] should NOT be here, count = ".concat(this._counter));
                            case 24:
                                e.next = 30;
                                break;
                            case 26:
                                u.error("restartPusher error because no livepusherContext found."), 0 < this._timerID && (clearInterval(this._timerID), this._timerID = 0), this._counter = 0, a.emit(s.LIVE_PUSHER_RESTART_FAILED, {
                                    data: "媒体状态不正确，请重新进入小程序再试"
                                });
                            case 30:
                            case "end":
                                return e.stop()
                        }
                    }), t, this)
                }))), function() {
                    return h.apply(this, arguments)
                })
            }]), c
        }();
    c.RETRY_TIMES = 5, c.RETRY_INTERVAL = 5e3;
    var h = new c;
    module.exports = h;
});
define("utils/plugins/MeetingInfo.js", function(require, module, exports, window, document, frames, self, location, navigator, localStorage, history, Caches, screen, alert, confirm, prompt, XMLHttpRequest, WebSocket, Reporter, webkit, WeixinJSCore) {
    "use strict";
    var e = require("../../@babel/runtime/helpers/classCallCheck"),
        t = require("../../@babel/runtime/helpers/createClass"),
        i = require("../../constants/MultMediaState").MeetingState,
        n = require("../util"),
        s = function() {
            function s(t) {
                e(this, s), this.meetingCode = t.meetingCode || "", this.pmiCode = t.pmiCode || "", this.name = t.name || "", this.startTime = t.startTime || 0, this.endTime = t.endTime || 0, this.location = t.location || "", this.password = t.password || "", this.hasPwd = t.hasPwd || !1, this.pstnPhone = t.pstnPhone || 0, this.pstnCode = t.pstnCode || 0, this.pstnPassword = t.pstnPassword || 0, this.url = t.url || "", this.meetingID = t.meetingID || 0, this.hostUID = t.hostUID || "", this.hostAppid = t.hostAppid || "", this.isOwner = t.isOwner || !1, this.videoOn = !n.bValid(t.videoOn) || t.videoOn, this.audioOn = !n.bValid(t.audioOn) || t.audioOn, this.nickName = t.nickName || "", this.isQuickMeeting = t.isQuickMeeting || !1, this.meetingState = parseInt(t.meetingState, 10), this.creatorAppID = t.creatorAppID, this.meetingLock = 1 === t.meetingLockSettings.meeting_lock, this.loginUsersOnly = t.loginUsersOnly, this.creatorNickname = t.creatorNickname, this.needEnroll = t.needEnroll, this.isAnonymous = t.isAnonymous, this.meetingInfoMaskFlag = void 0 !== t.meetingInfoMaskFlag ? t.meetingInfoMaskFlag : 0, this.securityVerifyType = t.securityVerifyType
            }
            return t(s, [{
                key: "state",
                value: function() {
                    var e = (new Date).getTime();
                    return e > this.endTime ? i.END : e >= this.startTime ? i.START : e >= this.startTime - 36e5 ? i.SOON : i.RESERVED
                }
            }, {
                key: "getPublicMeetingCode",
                value: function() {
                    return this.pmiCode || this.meetingCode
                }
            }, {
                key: "getMeetingCodeToShow",
                value: function() {
                    var e = this.getPublicMeetingCode();
                    return this.isMeetingCodeFullyVisible() ? n.getMeetingCodeFormatted(e) : n.maskMeetingCode(e)
                }
            }, {
                key: "getMeetingInfoMaskFlag",
                value: function() {
                    return this.meetingInfoMaskFlag
                }
            }, {
                key: "isMeetingCodeFullyVisible",
                value: function() {
                    return 0 == (1 & this.getMeetingInfoMaskFlag())
                }
            }, {
                key: "isMeetingInviteLinkVisible",
                value: function() {
                    return 0 == (2 & this.getMeetingInfoMaskFlag())
                }
            }]), s
        }();
    module.exports = s;
});
define("utils/plugins/Member.js", function(require, module, exports, window, document, frames, self, location, navigator, localStorage, history, Caches, screen, alert, confirm, prompt, XMLHttpRequest, WebSocket, Reporter, webkit, WeixinJSCore) {
    "use strict";
    var e = require("../../@babel/runtime/helpers/classCallCheck"),
        a = require("../../@babel/runtime/helpers/createClass"),
        s = require("../../clients/WemeetClient"),
        t = (require("../util").clog, require("../util").getMicGrids),
        i = require("../../constants/LoadingStatus").LoadingStatus,
        r = require("../../configs/AppConfig").AvatarURL,
        o = require("../../stores/UserStore"),
        n = ["audio_on", "video_on", "share_on", "web_share_on", "audio_reason", "video_reason", "share_reason", "audio_pause", "video_pause", "share_pause", "share_start_time", "handsup", "raise_hand", "id", "is_creator", "is_host", "role_type", "nickname", "sub_associator", "members_seq", "avatar_type", "avatar_token", "local_record_on", "participation_status_stamp", "allow_speak", "user_invisible", "isSelf", "keyString"],
        _ = ["audio_on", "video_on", "share_on", "share_pause", "share_start_time", "web_share_on", "handsup", "raise_hand", "is_host", "role_type", "nickname", "members_seq", "local_record_on", "allow_speak"],
        u = function() {
            function u(a) {
                var t, _ = this;
                (e(this, u), n.forEach((function(e) {
                    "" !== a[e] && null !== a[e] && void 0 !== a[e] && (_[e] = a[e])
                })), this.sub_associator && (this.sub_associator.keyString = s.getKeyById(this.sub_associator)), this.isSelf) ? (this.header = (null === (t = o.getWXUserInfo()) || void 0 === t ? void 0 : t.avatarUrl) || "", this.avatar_type = 100) : 0 === a.avatar_type || 1 === a.avatar_type ? this.header = "" : a.avatar_token ? this.header = "".concat(r, "/").concat(a.avatar_token, "/small") : (this.header = "", console.error("".concat(a.nickname, "'s avatar_type is ").concat(a.avatar_type, ", but we got no avatar_token")));
                this.playURL = "", this.audio_grids = 0, this.is_video_lock = !1, this.loading_status = i.Closed, this.is_loading = !1, this.created_times = 0
            }
            return a(u, [{
                key: "update",
                value: function(e) {
                    var a = this;
                    _.forEach((function(s) {
                        var t = e[s],
                            i = a[s];
                        null != t && "" !== t && t !== i && (a[s] = t)
                    }))
                }
            }, {
                key: "updateAudioGrids",
                value: function(e) {
                    this.audio_grids = t(e)
                }
            }]), u
        }();
    module.exports = u;
});
define("utils/plugins/PlayerVideoMetric.js", function(require, module, exports, window, document, frames, self, location, navigator, localStorage, history, Caches, screen, alert, confirm, prompt, XMLHttpRequest, WebSocket, Reporter, webkit, WeixinJSCore) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
        value: !0
    }), exports.default = void 0;
    var t = require("../../@babel/runtime/helpers/classCallCheck"),
        e = require("../../@babel/runtime/helpers/createClass"),
        s = a(require("../../clients/BeaconClient")),
        i = a(require("../logger"));

    function a(t) {
        return t && t.__esModule ? t : {
            default: t
        }
    }
    var r = function(t) {
            return t.Closed = "closed", t.Loading = "loading", t.Playing = "playing", t
        }(r || {}),
        n = new i.default({
            pageName: "PlayerVideoMetric",
            aegisLogEnable: !0,
            wxLogEnable: !1
        }),
        o = function() {
            function a(e) {
                t(this, a), this.userid = e, this.state = r.Loading, this.ts = +new Date, this.timerId = 0, this.logger = new i.default({
                    pageName: "PlayerVideoMetric-".concat(this.userid),
                    aegisLogEnable: !0,
                    wxLogEnable: !1
                })
            }
            return e(a, [{
                key: "setState",
                value: function(t) {
                    this.state === t && this.logger.warn("video state is as same as previous: ".concat(t)), this.ts = +new Date, this.state = t
                }
            }, {
                key: "startLoading",
                value: function() {
                    this.state !== r.Loading && (this.setState(r.Loading), this.startTimer())
                }
            }, {
                key: "startPlaying",
                value: function() {
                    if (this.state === r.Loading) {
                        this.stopTimer();
                        var t = +new Date,
                            e = t - this.ts;
                        if (e < 0 || 6e4 < e) this.logger.warn("time cost from loading to playing is invalid: ".concat(e, ".\n        loading ts: ").concat(this.ts, "\n        playing ts: ").concat(t, "\n      "));
                        else {
                            var i = this.userid.replace(/^\d+_/, "") || "unknown stream type";
                            s.default.report("mp_play_video_time_cost", {
                                timeCost: e,
                                streamType: i
                            }, !1), n.reportCls("cls_media_play_video_".concat(i, "_success_").concat(e), "")
                        }
                        this.ts = t, this.setState(r.Playing)
                    }
                }
            }, {
                key: "stopPlaying",
                value: function() {
                    this.state === r.Closed && this.logger.assert("previous state is also closed?"), this.setState(r.Closed), this.stopTimer()
                }
            }, {
                key: "startTimer",
                value: function() {
                    var t = this;
                    this.stopTimer(), this.timerId = setTimeout((function() {
                        if (t.state === r.Loading) {
                            var e = t.userid.replace(/^\d+_/, "") || "unknown stream type";
                            n.reportCls("cls_media_play_video_".concat(e, "_fail"), "")
                        }
                        t.timerId = 0
                    }), a.LOADING_TIMEOUT)
                }
            }, {
                key: "stopTimer",
                value: function() {
                    0 < this.timerId && (clearTimeout(this.timerId), this.timerId = 0)
                }
            }]), a
        }();
    o.LOADING_TIMEOUT = 1e4;
    var l = new(function() {
        function s() {
            t(this, s), this.players = {}
        }
        return e(s, [{
            key: "startLoading",
            value: function(t) {
                this.isUserIdValid(t) && (this.players[t] ? this.players[t].startLoading() : this.players[t] = new o(t), n.info("".concat(t, " starts loading")))
            }
        }, {
            key: "startPlaying",
            value: function(t) {
                this.isUserIdValid(t) && (this.players[t] ? this.players[t].startPlaying() : n.assert("user(".concat(t, ") doesn't exist in monitor. This is a bug.")))
            }
        }, {
            key: "stopPlaying",
            value: function(t) {
                this.isUserIdValid(t) && (this.players[t] ? this.players[t].stopPlaying() : n.assert("user(".concat(t, ") doesn't exist in monitor. This is a bug.")))
            }
        }, {
            key: "isUserIdValid",
            value: function(t) {
                return !(!t || !/^\d+_(main|aux|small)$/.test(t)) || (n.assert("userid must match format like: 144115225668686485_main, but got: ".concat(t)), n.reportEvent("ASSERT_PlayerVideoMetric_user_id_format_error"), !1)
            }
        }]), s
    }());
    exports.default = l;
});
define("utils/plugins/audioEnergyPushMonitor.js", function(require, module, exports, window, document, frames, self, location, navigator, localStorage, history, Caches, screen, alert, confirm, prompt, XMLHttpRequest, WebSocket, Reporter, webkit, WeixinJSCore) {
    "use strict";
    var e = require("../../@babel/runtime/helpers/classCallCheck"),
        t = require("../../@babel/runtime/helpers/createClass"),
        r = require("../../utils/logger.js"),
        n = require("../../clients/BeaconClient"),
        i = new r({
            pageName: "AudioEnergyPushMonitor",
            aegisLogEnable: !0,
            wxLogEnable: !0
        }),
        o = function() {
            function r() {
                e(this, r), this._timer = 0, this._hasAudioEnergyPush = !1, this._reportCounter = 0, this._MAX_REPORT = 3
            }
            return t(r, [{
                key: "start",
                value: function() {
                    var e = this;
                    this._timer && (i.warn("end hasn't been called before start"), clearInterval(this._timer), this._timer = 0), this._reportCounter = 0, this._timer = setInterval((function() {
                        e._hasAudioEnergyPush ? (0 < e._reportCounter && (i.warn("there's ".concat(e._reportCounter, " times that no audio energy push found, but this time, gotcha!")), n.reportError(100404)), e._hasAudioEnergyPush = !1, e._reportCounter = 0) : ++e._reportCounter <= e._MAX_REPORT || (i.warn("reaches max report limit, stop monitor"), n.reportError(100403), wx.reportMonitor("4", 1), e.end())
                    }), 1e4)
                }
            }, {
                key: "end",
                value: function() {
                    this._timer && (clearInterval(this._timer), this._timer = 0)
                }
            }, {
                key: "update",
                value: function() {
                    this._hasAudioEnergyPush = !0
                }
            }], [{
                key: "getInstance",
                value: function() {
                    return r.prototype.instance || (r.prototype.instance = new r), r.prototype.instance
                }
            }]), r
        }();
    module.exports = o;
});
define("utils/plugins/mediaController.js", function(require, module, exports, window, document, frames, self, location, navigator, localStorage, history, Caches, screen, alert, confirm, prompt, XMLHttpRequest, WebSocket, Reporter, webkit, WeixinJSCore) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
        value: !0
    }), exports.default = void 0;
    var e = require("../../@babel/runtime/helpers/regeneratorRuntime"),
        t = require("../../@babel/runtime/helpers/asyncToGenerator"),
        r = require("../../@babel/runtime/helpers/classCallCheck"),
        n = require("../../@babel/runtime/helpers/createClass");
    (exports.default = function() {
        function l(e) {
            r(this, l), this.delegate = null, this.delegate = e.delegate
        }
        var a;
        return n(l, [{
            key: "leave",
            value: (a = t(e().mark((function t() {
                return e().wrap((function(e) {
                    for (;;) switch (e.prev = e.next) {
                        case 0:
                            return e.next = 2, this.delegate.leaveMediaRoomSpecific();
                        case 2:
                        case "end":
                            return e.stop()
                    }
                }), t, this)
            }))), function() {
                return a.apply(this, arguments)
            })
        }], [{
            key: "getInstance",
            value: function(e) {
                return null === l.singleton && (l.singleton = new l({
                    delegate: e
                })), l.singleton
            }
        }]), l
    }()).singleton = null;
});
define("utils/plugins/mixAudioStreamPushMonitor.js", function(require, module, exports, window, document, frames, self, location, navigator, localStorage, history, Caches, screen, alert, confirm, prompt, XMLHttpRequest, WebSocket, Reporter, webkit, WeixinJSCore) {
    "use strict";
    var n = require("../../@babel/runtime/helpers/classCallCheck"),
        t = require("../../@babel/runtime/helpers/createClass"),
        i = require("../../utils/logger.js"),
        e = require("../../clients/BeaconClient"),
        o = new i({
            pageName: "MixAudioStreamPushMonitor",
            aegisLogEnable: !0,
            wxLogEnable: !0
        }),
        a = function() {
            function i() {
                n(this, i), this._duration = null, this._nonMixAudioDuration = []
            }
            return t(i, [{
                key: "update",
                value: function(n) {
                    n && null === this._duration || (n ? (this._duration.end = (new Date).getTime(), this._nonMixAudioDuration.push(this._duration), this._duration = null) : this._duration = {
                        start: (new Date).getTime()
                    })
                }
            }, {
                key: "end",
                value: function() {
                    var n = 0;
                    this._nonMixAudioDuration.forEach((function(t) {
                        n += parseInt((t.end - t.start) / 1e3, 10) || 0
                    })), e.report("mp_mix_audio_stream_broken", {
                        non_durations: this._nonMixAudioDuration.length,
                        non_seconds: n
                    }), o.info("non mix-audio durations: ".concat(this._nonMixAudioDuration.length, ", non total seconds: ").concat(n)), o.info("non mix-audio durations detail: ".concat(JSON.stringify(this._nonMixAudioDuration))), this._clear()
                }
            }, {
                key: "_clear",
                value: function() {
                    this._nonMixAudioDuration = [], this._duration = null
                }
            }], [{
                key: "getInstance",
                value: function() {
                    return i.prototype.instance || (i.prototype.instance = new i), i.prototype.instance
                }
            }]), i
        }();
    module.exports = a;
});
define("utils/plugins/myComponent.js", function(require, module, exports, window, document, frames, self, location, navigator, localStorage, history, Caches, screen, alert, confirm, prompt, XMLHttpRequest, WebSocket, Reporter, webkit, WeixinJSCore) {
    "use strict";
    new(require("../logger.js"))({
        pageName: "setData",
        wxLogEnable: !1,
        aegisLogEnable: !0
    });
    var e = Component;
    module.exports = function(t) {
        t.name;
        var a = t.lifetimes.created;
        t.lifetimes.created = function(e) {
            var t = this,
                i = this.setData,
                c = 0,
                n = 0;
            this.__setDataPerformanceLog = [], this.setData = function(e) {
                var a = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : function() {};
                c += 1;
                var s = (new Date).getTime();
                n < 1 && (n = s);
                var r = s - n;
                try {
                    var o = JSON.stringify(e).length,
                        l = "[".concat(c, "][").concat(r, "] ").concat(o);
                    t.__setDataPerformanceLog.push(l)
                } catch (e) {
                    console.error(e.message)
                }
                i.call(t, e, a)
            }, a.call(this, e)
        };
        var i = t.detached || t.lifetimes.detached;
        t.lifetimes.detached = function() {
            i.call(this)
        }, e.call(this, t)
    };
});
define("utils/plugins/myPage.js", function(require, module, exports, window, document, frames, self, location, navigator, localStorage, history, Caches, screen, alert, confirm, prompt, XMLHttpRequest, WebSocket, Reporter, webkit, WeixinJSCore) {
    "use strict";
    var t = new(require("../logger.js"))({
            pageName: "myPage",
            wxLogEnable: !1,
            aegisLogEnable: !0
        }),
        o = Page;

    function a(t) {
        var o = this.selectComponent("#toast-component").component;
        if (!o) throw new Error("Cannot get toast component '#toast-component' on page '".concat(t, "'. Did you miss to add that component into .wxml?"));
        return o
    }
    module.exports = function(n) {
        var e = n.name || "UNKNOWN PAGE",
            s = n.onLoad;
        n.onLoad = function(t) {
            var o = this,
                a = this.setData,
                n = 0,
                e = 0;
            this.__setDataPerformanceLog = [], this.setData = function(t) {
                var s = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : function() {};
                n += 1;
                var c = (new Date).getTime();
                e < 1 && (e = c);
                var i = c - e;
                try {
                    var r = JSON.stringify(t).length,
                        h = (new Error("setData stack").stack, "[".concat(n, "][").concat(i, "] ").concat(r));
                    o.__setDataPerformanceLog.push(h)
                } catch (t) {
                    console.error(t.message)
                }
                a.call(o, t, s)
            }, s.call(this, t)
        };
        var c = n.onUnload;
        n.onUnload = function() {
                c.call(this)
            },
            function(o, n) {
                if (o.showToast) return void t.warn("function 'showToast' has been defined on this page.", n);
                if (o.hideToast) return void t.warn("function 'hideToast' has been defined on this page.", n);
                o.showToast = function(o) {
                    try {
                        a.call(this, n).show(o)
                    } catch (o) {
                        t.error("show toast on page '".concat(n, "' failed: ").concat(o.message))
                    }
                }, o.hideToast = function() {
                    try {
                        a.call(this, n).close()
                    } catch (o) {
                        t.error("hide toast on page '".concat(n, "' failed: ").concat(o.message))
                    }
                }
            }(n, e), o.call(this, n)
    };
});
define("utils/raven/raven.min.js", function(require, module, exports, window, document, frames, self, location, navigator, localStorage, history, Caches, screen, alert, confirm, prompt, XMLHttpRequest, WebSocket, Reporter, webkit, WeixinJSCore) {
    "use strict";
    var t = require("../../@babel/runtime/helpers/typeof");
    ! function(e) {
        if ("object" == ("undefined" == typeof exports ? "undefined" : t(exports)) && "undefined" != typeof module) module.exports = e();
        else if ("function" == typeof define && define.amd) define([], e);
        else {
            ("undefined" != typeof window ? window : "undefined" != typeof global ? global : "undefined" != typeof self ? self : this).Raven = e()
        }
    }((function() {
        return function t(e, r, n) {
            function i(a, o) {
                if (!r[a]) {
                    if (!e[a]) {
                        var u = "function" == typeof require && require;
                        if (!o && u) return u(a, !0);
                        if (s) return s(a, !0);
                        var c = new Error("Cannot find module '" + a + "'");
                        throw c.code = "MODULE_NOT_FOUND", c
                    }
                    var l = r[a] = {
                        exports: {}
                    };
                    e[a][0].call(l.exports, (function(t) {
                        var r = e[a][1][t];
                        return i(r || t)
                    }), l, l.exports, t, e, r, n)
                }
                return r[a].exports
            }
            for (var s = "function" == typeof require && require, a = 0; a < n.length; a++) i(n[a]);
            return i
        }({
            1: [function(t, e, r) {
                function n(t) {
                    this.name = "RavenConfigError", this.message = t
                }
                n.prototype = new Error, n.prototype.constructor = n, e.exports = n
            }, {}],
            2: [function(t, e, r) {
                e.exports = {
                    wrapMethod: function(t, e, r) {
                        var n = t[e],
                            i = t;
                        if (e in t) {
                            var s = "warn" === e ? "warning" : e;
                            t[e] = function() {
                                var t = [].slice.call(arguments),
                                    a = "" + t.join(" "),
                                    o = {
                                        level: s,
                                        logger: "console",
                                        extra: {
                                            arguments: t
                                        }
                                    };
                                "assert" === e ? !1 === t[0] && (a = "Assertion failed: " + (t.slice(1).join(" ") || "console.assert"), o.extra.arguments = t.slice(1), r && r(a, o)) : r && r(a, o), n && Function.apply.call(n, i, t)
                            }
                        }
                    }
                }
            }, {}],
            3: [function(e, r, n) {
                (function(n) {
                    function i() {
                        return +new Date
                    }

                    function s(t, e) {
                        return u(e) ? function(r) {
                            return e(r, t)
                        } : e
                    }

                    function a() {
                        for (var e in this.a = !("object" != ("undefined" == typeof JSON ? "undefined" : t(JSON)) || !JSON.stringify), this.b = !o(N), this.c = !o(L), this.d = null, this.e = null, this.f = null, this.g = null, this.h = null, this.i = null, this.j = {}, this.k = {
                                logger: "javascript",
                                ignoreErrors: [],
                                ignoreUrls: [],
                                whitelistUrls: [],
                                includePaths: [],
                                crossOrigin: "anonymous",
                                collectWindowErrors: !0,
                                maxMessageLength: 0,
                                maxUrlLength: 250,
                                stackTraceLimit: 50,
                                autoBreadcrumbs: !0,
                                instrument: !0,
                                sampleRate: 1
                            }, this.l = 0, this.m = !1, this.n = Error.stackTraceLimit, this.o = F.console || {}, this.p = {}, this.q = [], this.r = i(), this.s = [], this.t = [], this.u = null, this.v = F.location, this.w = this.v && this.v.href, this.x(), this.o) this.p[e] = this.o[e]
                    }

                    function o(t) {
                        return void 0 === t
                    }

                    function u(t) {
                        return "function" == typeof t
                    }

                    function c(t) {
                        return "[object String]" === _.toString.call(t)
                    }

                    function l(t) {
                        for (var e in t) return !1;
                        return !0
                    }

                    function f(t, e) {
                        var r, n;
                        if (o(t.length))
                            for (r in t) v(t, r) && e.call(null, r, t[r]);
                        else if (n = t.length)
                            for (r = 0; r < n; r++) e.call(null, r, t[r])
                    }

                    function h(t, e) {
                        return e ? (f(e, (function(e, r) {
                            t[e] = r
                        })), t) : t
                    }

                    function p(t) {
                        return !!Object.isFrozen && Object.isFrozen(t)
                    }

                    function d(t, e) {
                        return !e || t.length <= e ? t : t.substr(0, e) + "…"
                    }

                    function v(t, e) {
                        return _.hasOwnProperty.call(t, e)
                    }

                    function m(t) {
                        for (var e, r = [], n = 0, i = t.length; n < i; n++) c(e = t[n]) ? r.push(e.replace(/([.*+?^=!:${}()|\[\]\/\\])/g, "\\$1")) : e && e.source && r.push(e.source);
                        return new RegExp(r.join("|"), "i")
                    }

                    function g(t) {
                        var e = [];
                        return f(t, (function(t, r) {
                            e.push(encodeURIComponent(t) + "=" + encodeURIComponent(r))
                        })), e.join("&")
                    }

                    function y(t) {
                        var e = t.match(/^(([^:\/?#]+):)?(\/\/([^\/?#]*))?([^?#]*)(\?([^#]*))?(#(.*))?$/);
                        if (!e) return {};
                        var r = e[6] || "",
                            n = e[8] || "";
                        return {
                            protocol: e[2],
                            host: e[4],
                            path: e[5],
                            relative: e[5] + r + n
                        }
                    }

                    function x(t, e) {
                        return !!(!!t ^ !!e)
                    }

                    function b(t, e) {
                        if (x(t, e)) return !1;
                        var r = t.frames,
                            n = e.frames;
                        if (r.length !== n.length) return !1;
                        for (var i, s, a = 0; a < r.length; a++)
                            if (i = r[a], s = n[a], i.filename !== s.filename || i.lineno !== s.lineno || i.colno !== s.colno || i.function !== s.function) return !1;
                        return !0
                    }

                    function k(t, e, r, n) {
                        var i = t[e];
                        t[e] = r(i), n && n.push([t, e, i])
                    }
                    var w = e("../vendor/TraceKit/tracekit"),
                        E = e("../vendor/json-stringify-safe/stringify"),
                        S = e("./configError"),
                        j = e("./utils"),
                        C = j.isError,
                        R = j.isObject,
                        T = e("./console").wrapMethod,
                        O = "source protocol user pass host port path".split(" "),
                        U = /^(?:(\w+):)?\/\/(?:(\w+)(:\w+)?@)?([\w\.-]+)(?::(\d+))?(\/.*)/,
                        F = "undefined" != typeof window ? window : void 0 !== n ? n : "undefined" != typeof self ? self : {},
                        N = F.document,
                        L = F.navigator;
                    a.prototype = {
                        VERSION: "0.0.7",
                        debug: !1,
                        TraceKit: w,
                        config: function(t, e) {
                            var r = this;
                            if (r.g) return this.y("error", "Error: Raven has already been configured"), r;
                            if (!t) return r;
                            var n = r.k;
                            e && f(e, (function(t, e) {
                                "tags" === t || "extra" === t || "user" === t ? r.j[t] = e : n[t] = e
                            })), r.setDSN(t), n.ignoreErrors.push(/^Script error\.?$/), n.ignoreErrors.push(/^Javascript error: Script error\.? on line 0$/), n.ignoreErrors = m(n.ignoreErrors), n.ignoreUrls = !!n.ignoreUrls.length && m(n.ignoreUrls), n.whitelistUrls = !!n.whitelistUrls.length && m(n.whitelistUrls), n.includePaths = m(n.includePaths), n.maxBreadcrumbs = Math.max(0, Math.min(n.maxBreadcrumbs || 100, 100));
                            var i = {
                                    xhr: !1,
                                    console: !0,
                                    dom: !1,
                                    location: !1
                                },
                                s = n.autoBreadcrumbs;
                            "[object Object]" === {}.toString.call(s) ? s = h(i, s) : !1 !== s && (s = i), n.autoBreadcrumbs = s;
                            var a = {
                                    tryCatch: !0
                                },
                                o = n.instrument;
                            return "[object Object]" === {}.toString.call(o) ? o = h(a, o) : !1 !== o && (o = a), n.instrument = o, w.collectWindowErrors = !!n.collectWindowErrors, r
                        },
                        install: function() {
                            var t = this;
                            return t.isSetup() && !t.m && (w.report.subscribe((function() {
                                t.z.apply(t, arguments)
                            })), t.k.instrument && t.k.instrument.tryCatch && t.A(), t.k.autoBreadcrumbs && t.B(), t.C(), this.installWeapp(), t.m = !0), Error.stackTraceLimit = t.k.stackTraceLimit, this
                        },
                        installWeapp: function() {
                            var t = this;
                            wx.getSystemInfo({
                                success: function(e) {
                                    t.setTagsContext({
                                        device: e.model,
                                        system: e.system,
                                        WXversion: e.version,
                                        SDKversion: e.SDKVersion
                                    })
                                }
                            }), wx.getNetworkType({
                                success: function(e) {
                                    t.setTagsContext({
                                        network: e.networkType
                                    })
                                }
                            })
                        },
                        setDSN: function(t) {
                            var e = this,
                                r = e.D(t),
                                n = r.path.lastIndexOf("/"),
                                i = r.path.substr(1, n);
                            e.E = t, e.h = r.user, e.F = r.pass && r.pass.substr(1), e.i = r.path.substr(n + 1), e.g = e.G(r), e.H = e.g + "/" + i + "api/" + e.i + "/store/", this.x()
                        },
                        context: function(t, e, r) {
                            return u(t) && (r = e || [], e = t, t = void 0), this.wrap(t, e).apply(this, r)
                        },
                        wrap: function(t, e, r) {
                            function n() {
                                var n = [],
                                    s = arguments.length,
                                    a = !t || t && !1 !== t.deep;
                                for (r && u(r) && r.apply(this, arguments); s--;) n[s] = a ? i.wrap(t, arguments[s]) : arguments[s];
                                try {
                                    return e.apply(this, n)
                                } catch (e) {
                                    throw i.I(), i.captureException(e, t), e
                                }
                            }
                            var i = this;
                            if (o(e) && !u(t)) return t;
                            if (u(t) && (e = t, t = void 0), !u(e)) return e;
                            try {
                                if (e.J) return e;
                                if (e.K) return e.K
                            } catch (t) {
                                return e
                            }
                            for (var s in e) v(e, s) && (n[s] = e[s]);
                            return n.prototype = e.prototype, e.K = n, n.J = !0, n.L = e, n
                        },
                        uninstall: function() {
                            return w.report.uninstall(), this.M(), Error.stackTraceLimit = this.n, this.m = !1, this
                        },
                        captureException: function(t, e) {
                            if ("[object String]" === Object.prototype.toString.call(t) && -1 !== t.indexOf("thirdScriptError")) {
                                var r = t.split("\n");
                                (t = new Error(r[1])).name = r[0], r.shift(), r.shift(), t.stack = r.join("\n")
                            }
                            if (!C(t)) return this.captureMessage(t, h({
                                trimHeadFrames: 1,
                                stacktrace: !0
                            }, e));
                            this.d = t;
                            try {
                                var n = w.computeStackTrace(t);
                                this.N(n, e)
                            } catch (e) {
                                if (t !== e) throw e
                            }
                            return this
                        },
                        captureMessage: function(t, e) {
                            if (!this.k.ignoreErrors.test || !this.k.ignoreErrors.test(t)) {
                                var r = h({
                                    message: t + ""
                                }, e = e || {});
                                if (this.k.stacktrace || e && e.stacktrace) {
                                    var n;
                                    try {
                                        throw new Error(t)
                                    } catch (t) {
                                        n = t
                                    }
                                    n.name = null, e = h({
                                        fingerprint: t,
                                        trimHeadFrames: (e.trimHeadFrames || 0) + 1
                                    }, e);
                                    var i = w.computeStackTrace(n),
                                        s = this.O(i, e);
                                    r.stacktrace = {
                                        frames: s.reverse()
                                    }
                                }
                                return this.P(r), this
                            }
                        },
                        captureBreadcrumb: function(t) {
                            var e = h({
                                timestamp: i() / 1e3
                            }, t);
                            if (u(this.k.breadcrumbCallback)) {
                                var r = this.k.breadcrumbCallback(e);
                                if (R(r) && !l(r)) e = r;
                                else if (!1 === r) return this
                            }
                            return this.t.push(e), this.t.length > this.k.maxBreadcrumbs && this.t.shift(), this
                        },
                        addPlugin: function(t) {
                            var e = [].slice.call(arguments, 1);
                            return this.q.push([t, e]), this.m && this.C(), this
                        },
                        setUserContext: function(t) {
                            return this.j.user = t, this
                        },
                        setExtraContext: function(t) {
                            return this.Q("extra", t), this
                        },
                        setTagsContext: function(t) {
                            return this.Q("tags", t), this
                        },
                        clearContext: function() {
                            return this.j = {}, this
                        },
                        getContext: function() {
                            return JSON.parse(E(this.j))
                        },
                        setEnvironment: function(t) {
                            return this.k.environment = t, this
                        },
                        setRelease: function(t) {
                            return this.k.release = t, this
                        },
                        setDataCallback: function(t) {
                            var e = this.k.dataCallback;
                            return this.k.dataCallback = s(e, t), this
                        },
                        setBreadcrumbCallback: function(t) {
                            var e = this.k.breadcrumbCallback;
                            return this.k.breadcrumbCallback = s(e, t), this
                        },
                        setShouldSendCallback: function(t) {
                            var e = this.k.shouldSendCallback;
                            return this.k.shouldSendCallback = s(e, t), this
                        },
                        setTransport: function(t) {
                            return this.k.transport = t, this
                        },
                        lastException: function() {
                            return this.d
                        },
                        lastEventId: function() {
                            return this.f
                        },
                        isSetup: function() {
                            return !(!this.a || !this.g && (this.ravenNotConfiguredError || (this.ravenNotConfiguredError = !0, this.y("error", "Error: Raven has not been configured.")), 1))
                        },
                        afterLoad: function() {
                            var t = F.RavenConfig;
                            t && this.config(t.dsn, t.config).install()
                        },
                        I: function() {
                            var t = this;
                            this.l += 1, setTimeout((function() {
                                t.l -= 1
                            }))
                        },
                        R: function(t, e) {
                            var r, n;
                            if (this.b) {
                                for (n in e = e || {}, t = "raven" + t.substr(0, 1).toUpperCase() + t.substr(1), N.createEvent ? (r = N.createEvent("HTMLEvents")).initEvent(t, !0, !0) : (r = N.createEventObject()).eventType = t, e) v(e, n) && (r[n] = e[n]);
                                if (N.createEvent) N.dispatchEvent(r);
                                else try {
                                    N.fireEvent("on" + r.eventType.toLowerCase(), r)
                                } catch (t) {}
                            }
                        },
                        S: function(t, e) {
                            var r = y(this.v.href),
                                n = y(e),
                                i = y(t);
                            this.w = e, r.protocol === n.protocol && r.host === n.host && (e = n.relative), r.protocol === i.protocol && r.host === i.host && (t = i.relative), this.captureBreadcrumb({
                                category: "navigation",
                                data: {
                                    to: e,
                                    from: t
                                }
                            })
                        },
                        A: function() {
                            function t(t) {
                                return function(r, n) {
                                    for (var i = new Array(arguments.length), s = 0; s < i.length; ++s) i[s] = arguments[s];
                                    var a = i[0];
                                    return u(a) && (i[0] = e.wrap(a)), t.apply ? t.apply(this, i) : t(i[0], i[1])
                                }
                            }
                            var e = this,
                                r = e.s;
                            k(F, "setTimeout", t, r), k(F, "setInterval", t, r), F.requestAnimationFrame && k(F, "requestAnimationFrame", (function(t) {
                                return function(r) {
                                    return t(e.wrap(r))
                                }
                            }), r)
                        },
                        B: function() {
                            var t = this,
                                e = this.k.autoBreadcrumbs,
                                r = t.s,
                                n = F.chrome,
                                i = !(n && n.app && n.app.runtime) && F.history && history.pushState;
                            if (e.location && i) {
                                var s = F.onpopstate;
                                F.onpopstate = function() {
                                    var e = t.v.href;
                                    if (t.S(t.w, e), s) return s.apply(this, arguments)
                                }, k(history, "pushState", (function(e) {
                                    return function() {
                                        var r = arguments.length > 2 ? arguments[2] : void 0;
                                        return r && t.S(t.w, r + ""), e.apply(this, arguments)
                                    }
                                }), r)
                            }
                            if (e.console && console && console.log) {
                                var a = function(e, r) {
                                    t.captureBreadcrumb({
                                        message: e,
                                        level: r.level,
                                        category: "console"
                                    })
                                };
                                f(["debug", "info", "warn", "error", "log"], (function(t, e) {
                                    T(console, e, a)
                                }))
                            }
                        },
                        M: function() {
                            for (var t; this.s.length;) {
                                var e = (t = this.s.shift())[0],
                                    r = t[1],
                                    n = t[2];
                                e[r] = n
                            }
                        },
                        C: function() {
                            var t = this;
                            f(this.q, (function(e, r) {
                                var n = r[0],
                                    i = r[1];
                                n.apply(t, [t].concat(i))
                            }))
                        },
                        D: function(t) {
                            var e = U.exec(t),
                                r = {},
                                n = 7;
                            try {
                                for (; n--;) r[O[n]] = e[n] || ""
                            } catch (e) {
                                throw new S("Invalid DSN: " + t)
                            }
                            if (r.pass && !this.k.allowSecretKey) throw new S("Do not specify your secret key in the DSN. See: http://bit.ly/raven-secret-key");
                            return r
                        },
                        G: function(t) {
                            var e = "//" + t.host + (t.port ? ":" + t.port : "");
                            return t.protocol && (e = t.protocol + ":" + e), e
                        },
                        z: function() {
                            this.l || this.N.apply(this, arguments)
                        },
                        N: function(t, e) {
                            var r = this.O(t, e);
                            this.R("handle", {
                                stackInfo: t,
                                options: e
                            }), this.T(t.name, t.message, t.url, t.lineno, r, e)
                        },
                        O: function(t, e) {
                            var r = this,
                                n = [];
                            if (t.stack && t.stack.length && (f(t.stack, (function(e, i) {
                                    var s = r.U(i, t.url);
                                    s && n.push(s)
                                })), e && e.trimHeadFrames))
                                for (var i = 0; i < e.trimHeadFrames && i < n.length; i++) n[i].in_app = !1;
                            return n = n.slice(0, this.k.stackTraceLimit)
                        },
                        U: function(t, e) {
                            var r = {
                                filename: t.url,
                                lineno: t.line,
                                colno: t.column,
                                function: t.func || "?"
                            };
                            return t.url || (r.filename = e), r.in_app = !(this.k.includePaths.test && !this.k.includePaths.test(r.filename) || /(Raven|TraceKit)\./.test(r.function) || /raven\.(min\.)?js$/.test(r.filename)), r
                        },
                        T: function(t, e, r, n, i, s) {
                            var a;
                            if ((!this.k.ignoreErrors.test || !this.k.ignoreErrors.test(e)) && (e += "", i && i.length ? (r = i[0].filename || r, i.reverse(), a = {
                                    frames: i
                                }) : r && (a = {
                                    frames: [{
                                        filename: r,
                                        lineno: n,
                                        in_app: !0
                                    }]
                                }), (!this.k.ignoreUrls.test || !this.k.ignoreUrls.test(r)) && (!this.k.whitelistUrls.test || this.k.whitelistUrls.test(r)))) {
                                var o = h({
                                    exception: {
                                        values: [{
                                            type: t,
                                            value: e,
                                            stacktrace: a
                                        }]
                                    },
                                    culprit: r
                                }, s);
                                this.P(o)
                            }
                        },
                        V: function(t) {
                            var e = this.k.maxMessageLength;
                            if (t.message && (t.message = d(t.message, e)), t.exception) {
                                var r = t.exception.values[0];
                                r.value = d(r.value, e)
                            }
                            var n = t.request;
                            return n && (n.url && (n.url = d(n.url, this.k.maxUrlLength)), n.Referer && (n.Referer = d(n.Referer, this.k.maxUrlLength))), t.breadcrumbs && t.breadcrumbs.values && this.W(t.breadcrumbs), t
                        },
                        W: function(t) {
                            for (var e, r, n, i = ["to", "from", "url"], s = 0; s < t.values.length; ++s)
                                if ((r = t.values[s]).hasOwnProperty("data") && R(r.data) && !p(r.data)) {
                                    n = h({}, r.data);
                                    for (var a = 0; a < i.length; ++a) e = i[a], n.hasOwnProperty(e) && n[e] && (n[e] = d(n[e], this.k.maxUrlLength));
                                    t.values[s].data = n
                                }
                        },
                        X: function() {
                            var t = {
                                    headers: {
                                        "User-Agent": "weapp"
                                    }
                                },
                                e = getCurrentPages();
                            return e && e.length && (t.url = e[e.length - 1].route), t
                        },
                        x: function() {
                            this.Y = 0, this.Z = null
                        },
                        $: function() {
                            return this.Y && i() - this.Z < this.Y
                        },
                        _: function(t) {
                            var e = this.e;
                            return !(!e || t.message !== e.message || t.culprit !== e.culprit) && (t.stacktrace || e.stacktrace ? b(t.stacktrace, e.stacktrace) : !t.exception && !e.exception || function(t, e) {
                                return !x(t, e) && (t = t.values[0], e = e.values[0], t.type === e.type && t.value === e.value && b(t.stacktrace, e.stacktrace))
                            }(t.exception, e.exception))
                        },
                        aa: function(t) {
                            if (!this.$()) {
                                var e = t.status;
                                if (400 === e || 401 === e || 429 === e) {
                                    var r;
                                    try {
                                        r = t.getResponseHeader("Retry-After"), r = 1e3 * parseInt(r, 10)
                                    } catch (t) {}
                                    this.Y = r || (2 * this.Y || 1e3), this.Z = i()
                                }
                            }
                        },
                        P: function(t) {
                            var e = this.k,
                                r = {
                                    project: this.i,
                                    logger: e.logger,
                                    platform: "javascript"
                                },
                                n = this.X();
                            if (n && (r.request = n), t.trimHeadFrames && delete t.trimHeadFrames, (t = h(r, t)).tags = h(h({}, this.j.tags), t.tags), t.extra = h(h({}, this.j.extra), t.extra), t.extra["session:duration"] = i() - this.r, this.t && this.t.length > 0 && (t.breadcrumbs = {
                                    values: [].slice.call(this.t, 0)
                                }), l(t.tags) && delete t.tags, this.j.user && (t.user = this.j.user), e.environment && (t.environment = e.environment), e.release && (t.release = e.release), e.serverName && (t.server_name = e.serverName), u(e.dataCallback) && (t = e.dataCallback(t) || t), t && !l(t) && (!u(e.shouldSendCallback) || e.shouldSendCallback(t))) return this.$() ? void this.y("warn", "Raven dropped error due to backoff: ", t) : void("number" == typeof e.sampleRate ? Math.random() < e.sampleRate && this.ba(t) : this.ba(t))
                        },
                        ca: function() {
                            return function() {
                                var t = F.crypto || F.msCrypto;
                                if (!o(t) && t.getRandomValues) {
                                    var e = new Uint16Array(8);
                                    t.getRandomValues(e), e[3] = 4095 & e[3] | 16384, e[4] = 16383 & e[4] | 32768;
                                    var r = function(t) {
                                        for (var e = t.toString(16); e.length < 4;) e = "0" + e;
                                        return e
                                    };
                                    return r(e[0]) + r(e[1]) + r(e[2]) + r(e[3]) + r(e[4]) + r(e[5]) + r(e[6]) + r(e[7])
                                }
                                return "xxxxxxxxxxxx4xxxyxxxxxxxxxxxxxxx".replace(/[xy]/g, (function(t) {
                                    var e = 16 * Math.random() | 0;
                                    return ("x" === t ? e : 3 & e | 8).toString(16)
                                }))
                            }()
                        },
                        ba: function(t, e) {
                            var r = this,
                                n = this.k;
                            if (this.isSetup()) {
                                if (t = this.V(t), !this.k.allowDuplicates && this._(t)) return void this.y("warn", "Raven dropped repeat event: ", t);
                                this.f = t.event_id || (t.event_id = this.ca()), this.e = t, this.y("debug", "Raven about to send:", t);
                                var i = {
                                    sentry_version: "7",
                                    sentry_client: "raven-weapp/" + this.VERSION,
                                    sentry_key: this.h
                                };
                                this.F && (i.sentry_secret = this.F);
                                var s = t.exception && t.exception.values[0];
                                this.captureBreadcrumb({
                                    category: "sentry",
                                    message: s ? (s.type ? s.type + ": " : "") + s.value : t.message,
                                    event_id: t.event_id,
                                    level: t.level || "error"
                                });
                                var a = this.H;
                                (n.transport || this.da).call(this, {
                                    url: a,
                                    auth: i,
                                    data: t,
                                    options: n,
                                    onSuccess: function() {
                                        r.x(), r.R("success", {
                                            data: t,
                                            src: a
                                        }), e && e()
                                    },
                                    onError: function(n) {
                                        r.y("error", "Raven transport failed to send: ", n), n.request && r.aa(n.request), r.R("failure", {
                                            data: t,
                                            src: a
                                        }), n = n || new Error("Raven send failed (no additional details provided)"), e && e(n)
                                    }
                                })
                            }
                        },
                        da: function(t) {
                            "production" === this.k.environment && wx.request({
                                url: t.url + "?" + g(t.auth),
                                method: "POST",
                                header: {
                                    "content-type": "text/plain;charset=UTF-8"
                                },
                                data: E(t.data),
                                success: function() {
                                    t.onSuccess && t.onSuccess()
                                },
                                fail: function(e) {
                                    t.onError && t.onError(e)
                                }
                            })
                        },
                        y: function(t) {
                            this.p[t] && this.debug && Function.apply.call(this.p[t], this.o, [].slice.call(arguments, 1))
                        },
                        Q: function(t, e) {
                            o(e) ? delete this.j[t] : this.j[t] = h(this.j[t] || {}, e)
                        }
                    };
                    var _ = Object.prototype;
                    a.prototype.setUser = a.prototype.setUserContext, a.prototype.setReleaseContext = a.prototype.setRelease, r.exports = a
                }).call(this, "undefined" != typeof global ? global : "undefined" != typeof self ? self : "undefined" != typeof window ? window : {})
            }, {
                "../vendor/TraceKit/tracekit": 6,
                "../vendor/json-stringify-safe/stringify": 7,
                "./configError": 1,
                "./console": 2,
                "./utils": 5
            }],
            4: [function(t, e, r) {
                (function(r) {
                    var n = t("./raven"),
                        i = "undefined" != typeof window ? window : void 0 !== r ? r : "undefined" != typeof self ? self : {},
                        s = i.Raven,
                        a = new n;
                    a.noConflict = function() {
                        return i.Raven = s, a
                    }, a.afterLoad(), e.exports = a
                }).call(this, "undefined" != typeof global ? global : "undefined" != typeof self ? self : "undefined" != typeof window ? window : {})
            }, {
                "./raven": 3
            }],
            5: [function(e, r, n) {
                r.exports = {
                    isObject: function(e) {
                        return "object" == t(e) && null !== e
                    },
                    isError: function(t) {
                        switch (Object.prototype.toString.call(t)) {
                            case "[object Error]":
                            case "[object Exception]":
                            case "[object DOMException]":
                                return !0;
                            default:
                                return t instanceof Error
                        }
                    },
                    wrappedCallback: function(t) {
                        return function(e, r) {
                            var n = t(e) || e;
                            return r && r(n) || n
                        }
                    }
                }
            }, {}],
            6: [function(t, e, r) {
                (function(r) {
                    var n = t("../../src/utils"),
                        i = {
                            collectWindowErrors: !0,
                            debug: !1
                        },
                        s = "undefined" != typeof window ? window : void 0 !== r ? r : "undefined" != typeof self ? self : {},
                        a = [].slice,
                        o = "?",
                        u = /^(?:[Uu]ncaught (?:exception: )?)?(?:((?:Eval|Internal|Range|Reference|Syntax|Type|URI|)Error): )?(.*)$/,
                        c = function() {
                            var t = getCurrentPages();
                            return t && t.length ? t[t.length - 1].route : ""
                        };
                    i.report = function() {
                        function t(t, e) {
                            var r = null;
                            if (!e || i.collectWindowErrors) {
                                for (var n in p)
                                    if (p.hasOwnProperty(n)) try {
                                        p[n].apply(null, [t].concat(a.call(arguments, 2)))
                                    } catch (t) {
                                        r = t
                                    }
                                    if (r) throw r
                            }
                        }

                        function e(e, s, a, l, h) {
                            if (m) i.computeStackTrace.augmentStackTraceWithInitialElement(m, s, a, e), r();
                            else if (h && n.isError(h)) t(i.computeStackTrace(h), !0);
                            else {
                                var p, d = {
                                        url: s,
                                        line: a,
                                        column: l
                                    },
                                    v = void 0,
                                    g = e;
                                if ("[object String]" === {}.toString.call(e))(p = e.match(u)) && (v = p[1], g = p[2]);
                                d.func = o, t({
                                    name: v,
                                    message: g,
                                    url: c(),
                                    stack: [d]
                                }, !0)
                            }
                            return !!f && f.apply(this, arguments)
                        }

                        function r() {
                            var e = m,
                                r = d;
                            d = null, m = null, v = null, t.apply(null, [e, !1].concat(r))
                        }

                        function l(t, e) {
                            var n = a.call(arguments, 1);
                            if (m) {
                                if (v === t) return;
                                r()
                            }
                            var s = i.computeStackTrace(t);
                            if (m = s, v = t, d = n, setTimeout((function() {
                                    v === t && r()
                                }), s.incomplete ? 2e3 : 0), !1 !== e) throw t
                        }
                        var f, h, p = [],
                            d = null,
                            v = null,
                            m = null;
                        return l.subscribe = function(t) {
                            h || (f = s.onerror, s.onerror = e, h = !0), p.push(t)
                        }, l.unsubscribe = function(t) {
                            for (var e = p.length - 1; e >= 0; --e) p[e] === t && p.splice(e, 1)
                        }, l.uninstall = function() {
                            h && (s.onerror = f, h = !1, f = void 0), p = []
                        }, l
                    }(), i.computeStackTrace = function() {
                        function t(t) {
                            if (void 0 !== t.stack && t.stack) {
                                for (var e, r, n, i = /^\s*at (.*?) ?\(((?:file|https?|blob|chrome-extension|native|eval|webpack|<anonymous>|\/).*?)(?::(\d+))?(?::(\d+))?\)?\s*$/i, s = /\((\S*)(?::(\d+))(?::(\d+))\)/, a = t.stack.split("\n"), u = [], l = (/^(.*) is undefined$/.exec(t.message), 0), f = a.length; l < f; ++l)
                                    if (r = i.exec(a[l])) {
                                        var h = r[2] && 0 === r[2].indexOf("native");
                                        r[2] && 0 === r[2].indexOf("eval") && (e = s.exec(r[2])) && (r[2] = e[1], r[3] = e[2], r[4] = e[3]), !(n = {
                                            url: h ? null : r[2],
                                            func: r[1] || o,
                                            args: h ? [r[2]] : [],
                                            line: r[3] ? +r[3] : null,
                                            column: r[4] ? +r[4] : null
                                        }).func && n.line && (n.func = o), u.push(n)
                                    }
                                return u.length ? {
                                    name: t.name,
                                    message: t.message,
                                    url: c(),
                                    stack: u
                                } : null
                            }
                        }

                        function e(t, e, r, n) {
                            var i = {
                                url: e,
                                line: r
                            };
                            if (i.url && i.line) {
                                if (t.incomplete = !1, i.func || (i.func = o), t.stack.length > 0 && t.stack[0].url === i.url) {
                                    if (t.stack[0].line === i.line) return !1;
                                    if (!t.stack[0].line && t.stack[0].func === i.func) return t.stack[0].line = i.line, !1
                                }
                                return t.stack.unshift(i), t.partial = !0, !0
                            }
                            return t.incomplete = !0, !1
                        }

                        function r(t, s) {
                            for (var a, u, l = /function\s+([_$a-zA-Z\xA0-\uFFFF][_$a-zA-Z0-9\xA0-\uFFFF]*)?\s*\(/i, f = [], h = {}, p = !1, d = r.caller; d && !p; d = d.caller)
                                if (d !== n && d !== i.report) {
                                    if (u = {
                                            url: null,
                                            func: o,
                                            line: null,
                                            column: null
                                        }, d.name ? u.func = d.name : (a = l.exec(d.toString())) && (u.func = a[1]), void 0 === u.func) try {
                                        u.func = a.input.substring(0, a.input.indexOf("{"))
                                    } catch (t) {}
                                    h["" + d] ? p = !0 : h["" + d] = !0, f.push(u)
                                }
                            s && f.splice(0, s);
                            var v = {
                                name: t.name,
                                message: t.message,
                                url: c(),
                                stack: f
                            };
                            return e(v, t.sourceURL || t.fileName, t.line || t.lineNumber, t.message || t.description), v
                        }

                        function n(e, n) {
                            var s = null;
                            n = null == n ? 0 : +n;
                            try {
                                if (s = t(e)) return s
                            } catch (t) {
                                if (i.debug) throw t
                            }
                            try {
                                if (s = r(e, n + 1)) return s
                            } catch (t) {
                                if (i.debug) throw t
                            }
                            return {
                                name: e.name,
                                message: e.message,
                                url: c()
                            }
                        }
                        return n.augmentStackTraceWithInitialElement = e, n.computeStackTraceFromStackProp = t, n
                    }(), e.exports = i
                }).call(this, "undefined" != typeof global ? global : "undefined" != typeof self ? self : "undefined" != typeof window ? window : {})
            }, {
                "../../src/utils": 5
            }],
            7: [function(t, e, r) {
                function n(t, e) {
                    for (var r = 0; r < t.length; ++r)
                        if (t[r] === e) return r;
                    return -1
                }

                function i(t, e) {
                    var r = [],
                        i = [];
                    return null == e && (e = function(t, e) {
                            return r[0] === e ? "[Circular ~]" : "[Circular ~." + i.slice(0, n(r, e)).join(".") + "]"
                        }),
                        function(s, a) {
                            if (r.length > 0) {
                                var o = n(r, this);
                                ~o ? r.splice(o + 1) : r.push(this), ~o ? i.splice(o, 1 / 0, s) : i.push(s), ~n(r, a) && (a = e.call(this, s, a))
                            } else r.push(a);
                            return null == t ? a : t.call(this, s, a)
                        }
                }(e.exports = function(t, e, r, n) {
                    return JSON.stringify(t, i(e, n), r)
                }).getSerialize = i
            }, {}]
        }, {}, [4])(4)
    }));
});
define("utils/remove-emoji/index.js", function(require, module, exports, window, document, frames, self, location, navigator, localStorage, history, Caches, screen, alert, confirm, prompt, XMLHttpRequest, WebSocket, Reporter, webkit, WeixinJSCore) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
        value: !0
    }), exports.default = function(u) {
        return u.replace(D, "")
    };
    var D = /\uD83C\uDFF4\uDB40\uDC67\uDB40\uDC62(?:\uDB40\uDC77\uDB40\uDC6C\uDB40\uDC73|\uDB40\uDC73\uDB40\uDC63\uDB40\uDC74|\uDB40\uDC65\uDB40\uDC6E\uDB40\uDC67)\uDB40\uDC7F|(?:\uD83E\uDDD1\uD83C\uDFFF\u200D\u2764\uFE0F\u200D(?:\uD83D\uDC8B\u200D)?\uD83E\uDDD1|\uD83D\uDC69\uD83C\uDFFF\u200D\uD83E\uDD1D\u200D(?:\uD83D[\uDC68\uDC69]))(?:\uD83C[\uDFFB-\uDFFE])|(?:\uD83E\uDDD1\uD83C\uDFFE\u200D\u2764\uFE0F\u200D(?:\uD83D\uDC8B\u200D)?\uD83E\uDDD1|\uD83D\uDC69\uD83C\uDFFE\u200D\uD83E\uDD1D\u200D(?:\uD83D[\uDC68\uDC69]))(?:\uD83C[\uDFFB-\uDFFD\uDFFF])|(?:\uD83E\uDDD1\uD83C\uDFFD\u200D\u2764\uFE0F\u200D(?:\uD83D\uDC8B\u200D)?\uD83E\uDDD1|\uD83D\uDC69\uD83C\uDFFD\u200D\uD83E\uDD1D\u200D(?:\uD83D[\uDC68\uDC69]))(?:\uD83C[\uDFFB\uDFFC\uDFFE\uDFFF])|(?:\uD83E\uDDD1\uD83C\uDFFC\u200D\u2764\uFE0F\u200D(?:\uD83D\uDC8B\u200D)?\uD83E\uDDD1|\uD83D\uDC69\uD83C\uDFFC\u200D\uD83E\uDD1D\u200D(?:\uD83D[\uDC68\uDC69]))(?:\uD83C[\uDFFB\uDFFD-\uDFFF])|(?:\uD83E\uDDD1\uD83C\uDFFB\u200D\u2764\uFE0F\u200D(?:\uD83D\uDC8B\u200D)?\uD83E\uDDD1|\uD83D\uDC69\uD83C\uDFFB\u200D\uD83E\uDD1D\u200D(?:\uD83D[\uDC68\uDC69]))(?:\uD83C[\uDFFC-\uDFFF])|\uD83D\uDC68(?:\uD83C\uDFFB(?:\u200D(?:\u2764\uFE0F\u200D(?:\uD83D\uDC8B\u200D\uD83D\uDC68(?:\uD83C[\uDFFB-\uDFFF])|\uD83D\uDC68(?:\uD83C[\uDFFB-\uDFFF]))|\uD83E\uDD1D\u200D\uD83D\uDC68(?:\uD83C[\uDFFC-\uDFFF])|[\u2695\u2696\u2708]\uFE0F|\uD83C[\uDF3E\uDF73\uDF7C\uDF93\uDFA4\uDFA8\uDFEB\uDFED]|\uD83D[\uDCBB\uDCBC\uDD27\uDD2C\uDE80\uDE92]|\uD83E[\uDDAF-\uDDB3\uDDBC\uDDBD]))?|(?:\uD83C[\uDFFC-\uDFFF])\u200D\u2764\uFE0F\u200D(?:\uD83D\uDC8B\u200D\uD83D\uDC68(?:\uD83C[\uDFFB-\uDFFF])|\uD83D\uDC68(?:\uD83C[\uDFFB-\uDFFF]))|\u200D(?:\u2764\uFE0F\u200D(?:\uD83D\uDC8B\u200D)?\uD83D\uDC68|(?:\uD83D[\uDC68\uDC69])\u200D(?:\uD83D\uDC66\u200D\uD83D\uDC66|\uD83D\uDC67\u200D(?:\uD83D[\uDC66\uDC67]))|\uD83D\uDC66\u200D\uD83D\uDC66|\uD83D\uDC67\u200D(?:\uD83D[\uDC66\uDC67])|\uD83C[\uDF3E\uDF73\uDF7C\uDF93\uDFA4\uDFA8\uDFEB\uDFED]|\uD83D[\uDCBB\uDCBC\uDD27\uDD2C\uDE80\uDE92]|\uD83E[\uDDAF-\uDDB3\uDDBC\uDDBD])|\uD83C\uDFFF\u200D(?:\uD83E\uDD1D\u200D\uD83D\uDC68(?:\uD83C[\uDFFB-\uDFFE])|\uD83C[\uDF3E\uDF73\uDF7C\uDF93\uDFA4\uDFA8\uDFEB\uDFED]|\uD83D[\uDCBB\uDCBC\uDD27\uDD2C\uDE80\uDE92]|\uD83E[\uDDAF-\uDDB3\uDDBC\uDDBD])|\uD83C\uDFFE\u200D(?:\uD83E\uDD1D\u200D\uD83D\uDC68(?:\uD83C[\uDFFB-\uDFFD\uDFFF])|\uD83C[\uDF3E\uDF73\uDF7C\uDF93\uDFA4\uDFA8\uDFEB\uDFED]|\uD83D[\uDCBB\uDCBC\uDD27\uDD2C\uDE80\uDE92]|\uD83E[\uDDAF-\uDDB3\uDDBC\uDDBD])|\uD83C\uDFFD\u200D(?:\uD83E\uDD1D\u200D\uD83D\uDC68(?:\uD83C[\uDFFB\uDFFC\uDFFE\uDFFF])|\uD83C[\uDF3E\uDF73\uDF7C\uDF93\uDFA4\uDFA8\uDFEB\uDFED]|\uD83D[\uDCBB\uDCBC\uDD27\uDD2C\uDE80\uDE92]|\uD83E[\uDDAF-\uDDB3\uDDBC\uDDBD])|\uD83C\uDFFC\u200D(?:\uD83E\uDD1D\u200D\uD83D\uDC68(?:\uD83C[\uDFFB\uDFFD-\uDFFF])|\uD83C[\uDF3E\uDF73\uDF7C\uDF93\uDFA4\uDFA8\uDFEB\uDFED]|\uD83D[\uDCBB\uDCBC\uDD27\uDD2C\uDE80\uDE92]|\uD83E[\uDDAF-\uDDB3\uDDBC\uDDBD])|(?:\uD83C\uDFFF\u200D[\u2695\u2696\u2708]|\uD83C\uDFFE\u200D[\u2695\u2696\u2708]|\uD83C\uDFFD\u200D[\u2695\u2696\u2708]|\uD83C\uDFFC\u200D[\u2695\u2696\u2708]|\u200D[\u2695\u2696\u2708])\uFE0F|\u200D(?:(?:\uD83D[\uDC68\uDC69])\u200D(?:\uD83D[\uDC66\uDC67])|\uD83D[\uDC66\uDC67])|\uD83C\uDFFF|\uD83C\uDFFE|\uD83C\uDFFD|\uD83C\uDFFC)?|(?:\uD83D\uDC69(?:\uD83C\uDFFB\u200D\u2764\uFE0F\u200D(?:\uD83D\uDC8B\u200D(?:\uD83D[\uDC68\uDC69])|\uD83D[\uDC68\uDC69])|(?:\uD83C[\uDFFC-\uDFFF])\u200D\u2764\uFE0F\u200D(?:\uD83D\uDC8B\u200D(?:\uD83D[\uDC68\uDC69])|\uD83D[\uDC68\uDC69]))|\uD83E\uDDD1(?:\uD83C[\uDFFB-\uDFFF])\u200D\uD83E\uDD1D\u200D\uD83E\uDDD1)(?:\uD83C[\uDFFB-\uDFFF])|\uD83D\uDC69\u200D\uD83D\uDC69\u200D(?:\uD83D\uDC66\u200D\uD83D\uDC66|\uD83D\uDC67\u200D(?:\uD83D[\uDC66\uDC67]))|\uD83D\uDC69(?:\u200D(?:\u2764\uFE0F\u200D(?:\uD83D\uDC8B\u200D(?:\uD83D[\uDC68\uDC69])|\uD83D[\uDC68\uDC69])|\uD83C[\uDF3E\uDF73\uDF7C\uDF93\uDFA4\uDFA8\uDFEB\uDFED]|\uD83D[\uDCBB\uDCBC\uDD27\uDD2C\uDE80\uDE92]|\uD83E[\uDDAF-\uDDB3\uDDBC\uDDBD])|\uD83C\uDFFF\u200D(?:\uD83C[\uDF3E\uDF73\uDF7C\uDF93\uDFA4\uDFA8\uDFEB\uDFED]|\uD83D[\uDCBB\uDCBC\uDD27\uDD2C\uDE80\uDE92]|\uD83E[\uDDAF-\uDDB3\uDDBC\uDDBD])|\uD83C\uDFFE\u200D(?:\uD83C[\uDF3E\uDF73\uDF7C\uDF93\uDFA4\uDFA8\uDFEB\uDFED]|\uD83D[\uDCBB\uDCBC\uDD27\uDD2C\uDE80\uDE92]|\uD83E[\uDDAF-\uDDB3\uDDBC\uDDBD])|\uD83C\uDFFD\u200D(?:\uD83C[\uDF3E\uDF73\uDF7C\uDF93\uDFA4\uDFA8\uDFEB\uDFED]|\uD83D[\uDCBB\uDCBC\uDD27\uDD2C\uDE80\uDE92]|\uD83E[\uDDAF-\uDDB3\uDDBC\uDDBD])|\uD83C\uDFFC\u200D(?:\uD83C[\uDF3E\uDF73\uDF7C\uDF93\uDFA4\uDFA8\uDFEB\uDFED]|\uD83D[\uDCBB\uDCBC\uDD27\uDD2C\uDE80\uDE92]|\uD83E[\uDDAF-\uDDB3\uDDBC\uDDBD])|\uD83C\uDFFB\u200D(?:\uD83C[\uDF3E\uDF73\uDF7C\uDF93\uDFA4\uDFA8\uDFEB\uDFED]|\uD83D[\uDCBB\uDCBC\uDD27\uDD2C\uDE80\uDE92]|\uD83E[\uDDAF-\uDDB3\uDDBC\uDDBD]))|\uD83E\uDDD1(?:\u200D(?:\uD83E\uDD1D\u200D\uD83E\uDDD1|\uD83C[\uDF3E\uDF73\uDF7C\uDF84\uDF93\uDFA4\uDFA8\uDFEB\uDFED]|\uD83D[\uDCBB\uDCBC\uDD27\uDD2C\uDE80\uDE92]|\uD83E[\uDDAF-\uDDB3\uDDBC\uDDBD])|\uD83C\uDFFF\u200D(?:\uD83C[\uDF3E\uDF73\uDF7C\uDF84\uDF93\uDFA4\uDFA8\uDFEB\uDFED]|\uD83D[\uDCBB\uDCBC\uDD27\uDD2C\uDE80\uDE92]|\uD83E[\uDDAF-\uDDB3\uDDBC\uDDBD])|\uD83C\uDFFE\u200D(?:\uD83C[\uDF3E\uDF73\uDF7C\uDF84\uDF93\uDFA4\uDFA8\uDFEB\uDFED]|\uD83D[\uDCBB\uDCBC\uDD27\uDD2C\uDE80\uDE92]|\uD83E[\uDDAF-\uDDB3\uDDBC\uDDBD])|\uD83C\uDFFD\u200D(?:\uD83C[\uDF3E\uDF73\uDF7C\uDF84\uDF93\uDFA4\uDFA8\uDFEB\uDFED]|\uD83D[\uDCBB\uDCBC\uDD27\uDD2C\uDE80\uDE92]|\uD83E[\uDDAF-\uDDB3\uDDBC\uDDBD])|\uD83C\uDFFC\u200D(?:\uD83C[\uDF3E\uDF73\uDF7C\uDF84\uDF93\uDFA4\uDFA8\uDFEB\uDFED]|\uD83D[\uDCBB\uDCBC\uDD27\uDD2C\uDE80\uDE92]|\uD83E[\uDDAF-\uDDB3\uDDBC\uDDBD])|\uD83C\uDFFB\u200D(?:\uD83C[\uDF3E\uDF73\uDF7C\uDF84\uDF93\uDFA4\uDFA8\uDFEB\uDFED]|\uD83D[\uDCBB\uDCBC\uDD27\uDD2C\uDE80\uDE92]|\uD83E[\uDDAF-\uDDB3\uDDBC\uDDBD]))|\uD83D\uDC69\u200D\uD83D\uDC66\u200D\uD83D\uDC66|\uD83D\uDC69\u200D\uD83D\uDC69\u200D(?:\uD83D[\uDC66\uDC67])|\uD83D\uDC69\u200D\uD83D\uDC67\u200D(?:\uD83D[\uDC66\uDC67])|(?:\uD83D\uDC41\uFE0F\u200D\uD83D\uDDE8|\uD83E\uDDD1(?:\uD83C\uDFFF\u200D[\u2695\u2696\u2708]|\uD83C\uDFFE\u200D[\u2695\u2696\u2708]|\uD83C\uDFFD\u200D[\u2695\u2696\u2708]|\uD83C\uDFFC\u200D[\u2695\u2696\u2708]|\uD83C\uDFFB\u200D[\u2695\u2696\u2708]|\u200D[\u2695\u2696\u2708])|\uD83D\uDC69(?:\uD83C\uDFFF\u200D[\u2695\u2696\u2708]|\uD83C\uDFFE\u200D[\u2695\u2696\u2708]|\uD83C\uDFFD\u200D[\u2695\u2696\u2708]|\uD83C\uDFFC\u200D[\u2695\u2696\u2708]|\uD83C\uDFFB\u200D[\u2695\u2696\u2708]|\u200D[\u2695\u2696\u2708])|\uD83D\uDE36\u200D\uD83C\uDF2B|\uD83C\uDFF3\uFE0F\u200D\u26A7|\uD83D\uDC3B\u200D\u2744|(?:(?:\uD83C[\uDFC3\uDFC4\uDFCA]|\uD83D[\uDC6E\uDC70\uDC71\uDC73\uDC77\uDC81\uDC82\uDC86\uDC87\uDE45-\uDE47\uDE4B\uDE4D\uDE4E\uDEA3\uDEB4-\uDEB6]|\uD83E[\uDD26\uDD35\uDD37-\uDD39\uDD3D\uDD3E\uDDB8\uDDB9\uDDCD-\uDDCF\uDDD4\uDDD6-\uDDDD])(?:\uD83C[\uDFFB-\uDFFF])|\uD83D\uDC6F|\uD83E[\uDD3C\uDDDE\uDDDF])\u200D[\u2640\u2642]|(?:\u26F9|\uD83C[\uDFCB\uDFCC]|\uD83D\uDD75)(?:\uFE0F|\uD83C[\uDFFB-\uDFFF])\u200D[\u2640\u2642]|\uD83C\uDFF4\u200D\u2620|(?:\uD83C[\uDFC3\uDFC4\uDFCA]|\uD83D[\uDC6E\uDC70\uDC71\uDC73\uDC77\uDC81\uDC82\uDC86\uDC87\uDE45-\uDE47\uDE4B\uDE4D\uDE4E\uDEA3\uDEB4-\uDEB6]|\uD83E[\uDD26\uDD35\uDD37-\uDD39\uDD3D\uDD3E\uDDB8\uDDB9\uDDCD-\uDDCF\uDDD4\uDDD6-\uDDDD])\u200D[\u2640\u2642]|[\xA9\xAE\u203C\u2049\u2122\u2139\u2194-\u2199\u21A9\u21AA\u2328\u23CF\u23ED-\u23EF\u23F1\u23F2\u23F8-\u23FA\u24C2\u25AA\u25AB\u25B6\u25C0\u25FB\u25FC\u2600-\u2604\u260E\u2611\u2618\u2620\u2622\u2623\u2626\u262A\u262E\u262F\u2638-\u263A\u2640\u2642\u265F\u2660\u2663\u2665\u2666\u2668\u267B\u267E\u2692\u2694-\u2697\u2699\u269B\u269C\u26A0\u26A7\u26B0\u26B1\u26C8\u26CF\u26D1\u26D3\u26E9\u26F0\u26F1\u26F4\u26F7\u26F8\u2702\u2708\u2709\u270F\u2712\u2714\u2716\u271D\u2721\u2733\u2734\u2744\u2747\u2763\u27A1\u2934\u2935\u2B05-\u2B07\u3030\u303D\u3297\u3299]|\uD83C[\uDD70\uDD71\uDD7E\uDD7F\uDE02\uDE37\uDF21\uDF24-\uDF2C\uDF36\uDF7D\uDF96\uDF97\uDF99-\uDF9B\uDF9E\uDF9F\uDFCD\uDFCE\uDFD4-\uDFDF\uDFF5\uDFF7]|\uD83D[\uDC3F\uDCFD\uDD49\uDD4A\uDD6F\uDD70\uDD73\uDD76-\uDD79\uDD87\uDD8A-\uDD8D\uDDA5\uDDA8\uDDB1\uDDB2\uDDBC\uDDC2-\uDDC4\uDDD1-\uDDD3\uDDDC-\uDDDE\uDDE1\uDDE3\uDDE8\uDDEF\uDDF3\uDDFA\uDECB\uDECD-\uDECF\uDEE0-\uDEE5\uDEE9\uDEF0\uDEF3])\uFE0F|\uD83C\uDFF3\uFE0F\u200D\uD83C\uDF08|\uD83D\uDC69\u200D\uD83D\uDC67|\uD83D\uDC69\u200D\uD83D\uDC66|\uD83D\uDE35\u200D\uD83D\uDCAB|\uD83D\uDE2E\u200D\uD83D\uDCA8|\uD83D\uDC15\u200D\uD83E\uDDBA|\uD83E\uDDD1(?:\uD83C\uDFFF|\uD83C\uDFFE|\uD83C\uDFFD|\uD83C\uDFFC|\uD83C\uDFFB)?|\uD83D\uDC69(?:\uD83C\uDFFF|\uD83C\uDFFE|\uD83C\uDFFD|\uD83C\uDFFC|\uD83C\uDFFB)?|\uD83C\uDDFD\uD83C\uDDF0|\uD83C\uDDF6\uD83C\uDDE6|\uD83C\uDDF4\uD83C\uDDF2|\uD83D\uDC08\u200D\u2B1B|\u2764\uFE0F\u200D(?:\uD83D\uDD25|\uD83E\uDE79)|\uD83D\uDC41\uFE0F|\uD83C\uDFF3\uFE0F|\uD83C\uDDFF(?:\uD83C[\uDDE6\uDDF2\uDDFC])|\uD83C\uDDFE(?:\uD83C[\uDDEA\uDDF9])|\uD83C\uDDFC(?:\uD83C[\uDDEB\uDDF8])|\uD83C\uDDFB(?:\uD83C[\uDDE6\uDDE8\uDDEA\uDDEC\uDDEE\uDDF3\uDDFA])|\uD83C\uDDFA(?:\uD83C[\uDDE6\uDDEC\uDDF2\uDDF3\uDDF8\uDDFE\uDDFF])|\uD83C\uDDF9(?:\uD83C[\uDDE6\uDDE8\uDDE9\uDDEB-\uDDED\uDDEF-\uDDF4\uDDF7\uDDF9\uDDFB\uDDFC\uDDFF])|\uD83C\uDDF8(?:\uD83C[\uDDE6-\uDDEA\uDDEC-\uDDF4\uDDF7-\uDDF9\uDDFB\uDDFD-\uDDFF])|\uD83C\uDDF7(?:\uD83C[\uDDEA\uDDF4\uDDF8\uDDFA\uDDFC])|\uD83C\uDDF5(?:\uD83C[\uDDE6\uDDEA-\uDDED\uDDF0-\uDDF3\uDDF7-\uDDF9\uDDFC\uDDFE])|\uD83C\uDDF3(?:\uD83C[\uDDE6\uDDE8\uDDEA-\uDDEC\uDDEE\uDDF1\uDDF4\uDDF5\uDDF7\uDDFA\uDDFF])|\uD83C\uDDF2(?:\uD83C[\uDDE6\uDDE8-\uDDED\uDDF0-\uDDFF])|\uD83C\uDDF1(?:\uD83C[\uDDE6-\uDDE8\uDDEE\uDDF0\uDDF7-\uDDFB\uDDFE])|\uD83C\uDDF0(?:\uD83C[\uDDEA\uDDEC-\uDDEE\uDDF2\uDDF3\uDDF5\uDDF7\uDDFC\uDDFE\uDDFF])|\uD83C\uDDEF(?:\uD83C[\uDDEA\uDDF2\uDDF4\uDDF5])|\uD83C\uDDEE(?:\uD83C[\uDDE8-\uDDEA\uDDF1-\uDDF4\uDDF6-\uDDF9])|\uD83C\uDDED(?:\uD83C[\uDDF0\uDDF2\uDDF3\uDDF7\uDDF9\uDDFA])|\uD83C\uDDEC(?:\uD83C[\uDDE6\uDDE7\uDDE9-\uDDEE\uDDF1-\uDDF3\uDDF5-\uDDFA\uDDFC\uDDFE])|\uD83C\uDDEB(?:\uD83C[\uDDEE-\uDDF0\uDDF2\uDDF4\uDDF7])|\uD83C\uDDEA(?:\uD83C[\uDDE6\uDDE8\uDDEA\uDDEC\uDDED\uDDF7-\uDDFA])|\uD83C\uDDE9(?:\uD83C[\uDDEA\uDDEC\uDDEF\uDDF0\uDDF2\uDDF4\uDDFF])|\uD83C\uDDE8(?:\uD83C[\uDDE6\uDDE8\uDDE9\uDDEB-\uDDEE\uDDF0-\uDDF5\uDDF7\uDDFA-\uDDFF])|\uD83C\uDDE7(?:\uD83C[\uDDE6\uDDE7\uDDE9-\uDDEF\uDDF1-\uDDF4\uDDF6-\uDDF9\uDDFB\uDDFC\uDDFE\uDDFF])|\uD83C\uDDE6(?:\uD83C[\uDDE8-\uDDEC\uDDEE\uDDF1\uDDF2\uDDF4\uDDF6-\uDDFA\uDDFC\uDDFD\uDDFF])|\uFE0F\u20E3|\u2764\uFE0F|(?:\uD83C[\uDFC3\uDFC4\uDFCA]|\uD83D[\uDC6E\uDC70\uDC71\uDC73\uDC77\uDC81\uDC82\uDC86\uDC87\uDE45-\uDE47\uDE4B\uDE4D\uDE4E\uDEA3\uDEB4-\uDEB6]|\uD83E[\uDD26\uDD35\uDD37-\uDD39\uDD3D\uDD3E\uDDB8\uDDB9\uDDCD-\uDDCF\uDDD4\uDDD6-\uDDDD])(?:\uD83C[\uDFFB-\uDFFF])|(?:\u26F9|\uD83C[\uDFCB\uDFCC]|\uD83D\uDD75)(?:\uFE0F|\uD83C[\uDFFB-\uDFFF])|\uD83C\uDFF4|(?:[\u270A\u270B]|\uD83C[\uDF85\uDFC2\uDFC7]|\uD83D[\uDC42\uDC43\uDC46-\uDC50\uDC66\uDC67\uDC6B-\uDC6D\uDC72\uDC74-\uDC76\uDC78\uDC7C\uDC83\uDC85\uDC8F\uDC91\uDCAA\uDD7A\uDD95\uDD96\uDE4C\uDE4F\uDEC0\uDECC]|\uD83E[\uDD0C\uDD0F\uDD18-\uDD1C\uDD1E\uDD1F\uDD30-\uDD34\uDD36\uDD77\uDDB5\uDDB6\uDDBB\uDDD2\uDDD3\uDDD5])(?:\uD83C[\uDFFB-\uDFFF])|(?:[\u261D\u270C\u270D]|\uD83D[\uDD74\uDD90])(?:\uFE0F|\uD83C[\uDFFB-\uDFFF])|[\u270A\u270B]|\uD83C[\uDF85\uDFC2\uDFC7]|\uD83D[\uDC08\uDC15\uDC3B\uDC42\uDC43\uDC46-\uDC50\uDC66\uDC67\uDC6B-\uDC6D\uDC72\uDC74-\uDC76\uDC78\uDC7C\uDC83\uDC85\uDC8F\uDC91\uDCAA\uDD7A\uDD95\uDD96\uDE2E\uDE35\uDE36\uDE4C\uDE4F\uDEC0\uDECC]|\uD83E[\uDD0C\uDD0F\uDD18-\uDD1C\uDD1E\uDD1F\uDD30-\uDD34\uDD36\uDD77\uDDB5\uDDB6\uDDBB\uDDD2\uDDD3\uDDD5]|\uD83C[\uDFC3\uDFC4\uDFCA]|\uD83D[\uDC6E\uDC70\uDC71\uDC73\uDC77\uDC81\uDC82\uDC86\uDC87\uDE45-\uDE47\uDE4B\uDE4D\uDE4E\uDEA3\uDEB4-\uDEB6]|\uD83E[\uDD26\uDD35\uDD37-\uDD39\uDD3D\uDD3E\uDDB8\uDDB9\uDDCD-\uDDCF\uDDD4\uDDD6-\uDDDD]|\uD83D\uDC6F|\uD83E[\uDD3C\uDDDE\uDDDF]|[\u231A\u231B\u23E9-\u23EC\u23F0\u23F3\u25FD\u25FE\u2614\u2615\u2648-\u2653\u267F\u2693\u26A1\u26AA\u26AB\u26BD\u26BE\u26C4\u26C5\u26CE\u26D4\u26EA\u26F2\u26F3\u26F5\u26FA\u26FD\u2705\u2728\u274C\u274E\u2753-\u2755\u2757\u2795-\u2797\u27B0\u27BF\u2B1B\u2B1C\u2B50\u2B55]|\uD83C[\uDC04\uDCCF\uDD8E\uDD91-\uDD9A\uDE01\uDE1A\uDE2F\uDE32-\uDE36\uDE38-\uDE3A\uDE50\uDE51\uDF00-\uDF20\uDF2D-\uDF35\uDF37-\uDF7C\uDF7E-\uDF84\uDF86-\uDF93\uDFA0-\uDFC1\uDFC5\uDFC6\uDFC8\uDFC9\uDFCF-\uDFD3\uDFE0-\uDFF0\uDFF8-\uDFFF]|\uD83D[\uDC00-\uDC07\uDC09-\uDC14\uDC16-\uDC3A\uDC3C-\uDC3E\uDC40\uDC44\uDC45\uDC51-\uDC65\uDC6A\uDC79-\uDC7B\uDC7D-\uDC80\uDC84\uDC88-\uDC8E\uDC90\uDC92-\uDCA9\uDCAB-\uDCFC\uDCFF-\uDD3D\uDD4B-\uDD4E\uDD50-\uDD67\uDDA4\uDDFB-\uDE2D\uDE2F-\uDE34\uDE37-\uDE44\uDE48-\uDE4A\uDE80-\uDEA2\uDEA4-\uDEB3\uDEB7-\uDEBF\uDEC1-\uDEC5\uDED0-\uDED2\uDED5-\uDED7\uDEEB\uDEEC\uDEF4-\uDEFC\uDFE0-\uDFEB]|\uD83E[\uDD0D\uDD0E\uDD10-\uDD17\uDD1D\uDD20-\uDD25\uDD27-\uDD2F\uDD3A\uDD3F-\uDD45\uDD47-\uDD76\uDD78\uDD7A-\uDDB4\uDDB7\uDDBA\uDDBC-\uDDCB\uDDD0\uDDE0-\uDDFF\uDE70-\uDE74\uDE78-\uDE7A\uDE80-\uDE86\uDE90-\uDEA8\uDEB0-\uDEB6\uDEC0-\uDEC2\uDED0-\uDED6]|(?:[\xA9\xAE\u203C\u2049\u2122\u2139\u2194-\u2199\u21A9\u21AA\u231A\u231B\u2328\u23CF\u23E9-\u23F3\u23F8-\u23FA\u24C2\u25AA\u25AB\u25B6\u25C0\u25FB-\u25FE\u2600-\u2604\u260E\u2611\u2614\u2615\u2618\u261D\u2620\u2622\u2623\u2626\u262A\u262E\u262F\u2638-\u263A\u2640\u2642\u2648-\u2653\u265F\u2660\u2663\u2665\u2666\u2668\u267B\u267E\u267F\u2692-\u2697\u2699\u269B\u269C\u26A0\u26A1\u26A7\u26AA\u26AB\u26B0\u26B1\u26BD\u26BE\u26C4\u26C5\u26C8\u26CE\u26CF\u26D1\u26D3\u26D4\u26E9\u26EA\u26F0-\u26F5\u26F7-\u26FA\u26FD\u2702\u2705\u2708-\u270D\u270F\u2712\u2714\u2716\u271D\u2721\u2728\u2733\u2734\u2744\u2747\u274C\u274E\u2753-\u2755\u2757\u2763\u2764\u2795-\u2797\u27A1\u27B0\u27BF\u2934\u2935\u2B05-\u2B07\u2B1B\u2B1C\u2B50\u2B55\u3030\u303D\u3297\u3299]|\uD83C[\uDC04\uDCCF\uDD70\uDD71\uDD7E\uDD7F\uDD8E\uDD91-\uDD9A\uDDE6-\uDDFF\uDE01\uDE02\uDE1A\uDE2F\uDE32-\uDE3A\uDE50\uDE51\uDF00-\uDF21\uDF24-\uDF93\uDF96\uDF97\uDF99-\uDF9B\uDF9E-\uDFF0\uDFF3-\uDFF5\uDFF7-\uDFFF]|\uD83D[\uDC00-\uDCFD\uDCFF-\uDD3D\uDD49-\uDD4E\uDD50-\uDD67\uDD6F\uDD70\uDD73-\uDD7A\uDD87\uDD8A-\uDD8D\uDD90\uDD95\uDD96\uDDA4\uDDA5\uDDA8\uDDB1\uDDB2\uDDBC\uDDC2-\uDDC4\uDDD1-\uDDD3\uDDDC-\uDDDE\uDDE1\uDDE3\uDDE8\uDDEF\uDDF3\uDDFA-\uDE4F\uDE80-\uDEC5\uDECB-\uDED2\uDED5-\uDED7\uDEE0-\uDEE5\uDEE9\uDEEB\uDEEC\uDEF0\uDEF3-\uDEFC\uDFE0-\uDFEB]|\uD83E[\uDD0C-\uDD3A\uDD3C-\uDD45\uDD47-\uDD78\uDD7A-\uDDCB\uDDCD-\uDDFF\uDE70-\uDE74\uDE78-\uDE7A\uDE80-\uDE86\uDE90-\uDEA8\uDEB0-\uDEB6\uDEC0-\uDEC2\uDED0-\uDED6])\uFE0F?/g;
});
define("utils/sha256.js", function(require, module, exports, window, document, frames, self, location, navigator, localStorage, history, Caches, screen, alert, confirm, prompt, XMLHttpRequest, WebSocket, Reporter, webkit, WeixinJSCore) {
    "use strict";
    var _typeof2 = require("../@babel/runtime/helpers/typeof");
    /**
     * [js-sha256]{@link https://github.com/emn178/js-sha256}
     *
     * @version 0.9.0
     * @author Chen, Yi-Cyuan [emn178@gmail.com]
     * @copyright Chen, Yi-Cyuan 2014-2017
     * @license MIT
     */
    ! function() {
        function t(t, i) {
            i ? (d[0] = d[16] = d[1] = d[2] = d[3] = d[4] = d[5] = d[6] = d[7] = d[8] = d[9] = d[10] = d[11] = d[12] = d[13] = d[14] = d[15] = 0, this.blocks = d) : this.blocks = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], t ? (this.h0 = 3238371032, this.h1 = 914150663, this.h2 = 812702999, this.h3 = 4144912697, this.h4 = 4290775857, this.h5 = 1750603025, this.h6 = 1694076839, this.h7 = 3204075428) : (this.h0 = 1779033703, this.h1 = 3144134277, this.h2 = 1013904242, this.h3 = 2773480762, this.h4 = 1359893119, this.h5 = 2600822924, this.h6 = 528734635, this.h7 = 1541459225), this.block = this.start = this.bytes = this.hBytes = 0, this.finalized = this.hashed = !1, this.first = !0, this.is224 = t
        }

        function i(i, e, s) {
            var r, n = _typeof2(i);
            if ("string" === n) {
                var u, o = [],
                    a = i.length,
                    y = 0;
                for (r = 0; r < a; ++r)(u = i.charCodeAt(r)) < 128 ? o[y++] = u : u < 2048 ? (o[y++] = 192 | u >> 6, o[y++] = 128 | 63 & u) : u < 55296 || u >= 57344 ? (o[y++] = 224 | u >> 12, o[y++] = 128 | u >> 6 & 63, o[y++] = 128 | 63 & u) : (u = 65536 + ((1023 & u) << 10 | 1023 & i.charCodeAt(++r)), o[y++] = 240 | u >> 18, o[y++] = 128 | u >> 12 & 63, o[y++] = 128 | u >> 6 & 63, o[y++] = 128 | 63 & u);
                i = o
            } else {
                if ("object" !== n) throw new Error(h);
                if (null === i) throw new Error(h);
                if (f && i.constructor === ArrayBuffer) i = new Uint8Array(i);
                else if (!(Array.isArray(i) || f && ArrayBuffer.isView(i))) throw new Error(h)
            }
            i.length > 64 && (i = new t(e, !0).update(i).array());
            var d = [],
                c = [];
            for (r = 0; r < 64; ++r) {
                var p = i[r] || 0;
                d[r] = 92 ^ p, c[r] = 54 ^ p
            }
            t.call(this, e, s), this.update(c), this.oKeyPad = d, this.inner = !0, this.sharedMemory = s
        }
        var h = "input is invalid type",
            r = "object" == ("undefined" == typeof window ? "undefined" : _typeof2(window)),
            s = r ? window : {};
        s.JS_SHA256_NO_WINDOW && (r = !1);
        var e = !r && "object" == ("undefined" == typeof self ? "undefined" : _typeof2(self)),
            n = !s.JS_SHA256_NO_NODE_JS && "object" == ("undefined" == typeof process ? "undefined" : _typeof2(process)) && process.versions && process.versions.node;
        n ? s = global : e && (s = self);
        var o = !s.JS_SHA256_NO_COMMON_JS && "object" == ("undefined" == typeof module ? "undefined" : _typeof2(module)) && module.exports,
            a = "function" == typeof define && define.amd,
            f = !s.JS_SHA256_NO_ARRAY_BUFFER && "undefined" != typeof ArrayBuffer,
            u = "0123456789abcdef".split(""),
            c = [-2147483648, 8388608, 32768, 128],
            y = [24, 16, 8, 0],
            p = [1116352408, 1899447441, 3049323471, 3921009573, 961987163, 1508970993, 2453635748, 2870763221, 3624381080, 310598401, 607225278, 1426881987, 1925078388, 2162078206, 2614888103, 3248222580, 3835390401, 4022224774, 264347078, 604807628, 770255983, 1249150122, 1555081692, 1996064986, 2554220882, 2821834349, 2952996808, 3210313671, 3336571891, 3584528711, 113926993, 338241895, 666307205, 773529912, 1294757372, 1396182291, 1695183700, 1986661051, 2177026350, 2456956037, 2730485921, 2820302411, 3259730800, 3345764771, 3516065817, 3600352804, 4094571909, 275423344, 430227734, 506948616, 659060556, 883997877, 958139571, 1322822218, 1537002063, 1747873779, 1955562222, 2024104815, 2227730452, 2361852424, 2428436474, 2756734187, 3204031479, 3329325298],
            l = ["hex", "array", "digest", "arrayBuffer"],
            d = [];
        !s.JS_SHA256_NO_NODE_JS && Array.isArray || (Array.isArray = function(t) {
            return "[object Array]" === Object.prototype.toString.call(t)
        }), !f || !s.JS_SHA256_NO_ARRAY_BUFFER_IS_VIEW && ArrayBuffer.isView || (ArrayBuffer.isView = function(t) {
            return "object" == _typeof2(t) && t.buffer && t.buffer.constructor === ArrayBuffer
        });
        var A = function(i, h) {
                return function(e) {
                    return new t(h, !0).update(e)[i]()
                }
            },
            w = function(i) {
                var h = A("hex", i);
                n && (h = b(h, i)), h.create = function() {
                    return new t(i)
                }, h.update = function(t) {
                    return h.create().update(t)
                };
                for (var e = 0; e < l.length; ++e) {
                    var s = l[e];
                    h[s] = A(s, i)
                }
                return h
            },
            b = function b(t, i) {
                var r = eval("require('crypto')"),
                    s = eval("require('buffer').Buffer"),
                    e = i ? "sha224" : "sha256",
                    n = function(i) {
                        if ("string" == typeof i) return r.createHash(e).update(i, "utf8").digest("hex");
                        if (null == i) throw new Error(h);
                        return i.constructor === ArrayBuffer && (i = new Uint8Array(i)), Array.isArray(i) || ArrayBuffer.isView(i) || i.constructor === s ? r.createHash(e).update(new s(i)).digest("hex") : t(i)
                    };
                return n
            },
            v = function(t, h) {
                return function(e, s) {
                    return new i(e, h, !0).update(s)[t]()
                }
            },
            _ = function(t) {
                var h = v("hex", t);
                h.create = function(h) {
                    return new i(h, t)
                }, h.update = function(t, i) {
                    return h.create(t).update(i)
                };
                for (var e = 0; e < l.length; ++e) {
                    var s = l[e];
                    h[s] = v(s, t)
                }
                return h
            };
        t.prototype.update = function(t) {
            if (!this.finalized) {
                var i, e = _typeof2(t);
                if ("string" !== e) {
                    if ("object" !== e) throw new Error(h);
                    if (null === t) throw new Error(h);
                    if (f && t.constructor === ArrayBuffer) t = new Uint8Array(t);
                    else if (!(Array.isArray(t) || f && ArrayBuffer.isView(t))) throw new Error(h);
                    i = !0
                }
                for (var s, r, n = 0, u = t.length, o = this.blocks; n < u;) {
                    if (this.hashed && (this.hashed = !1, o[0] = this.block, o[16] = o[1] = o[2] = o[3] = o[4] = o[5] = o[6] = o[7] = o[8] = o[9] = o[10] = o[11] = o[12] = o[13] = o[14] = o[15] = 0), i)
                        for (r = this.start; n < u && r < 64; ++n) o[r >> 2] |= t[n] << y[3 & r++];
                    else
                        for (r = this.start; n < u && r < 64; ++n)(s = t.charCodeAt(n)) < 128 ? o[r >> 2] |= s << y[3 & r++] : s < 2048 ? (o[r >> 2] |= (192 | s >> 6) << y[3 & r++], o[r >> 2] |= (128 | 63 & s) << y[3 & r++]) : s < 55296 || s >= 57344 ? (o[r >> 2] |= (224 | s >> 12) << y[3 & r++], o[r >> 2] |= (128 | s >> 6 & 63) << y[3 & r++], o[r >> 2] |= (128 | 63 & s) << y[3 & r++]) : (s = 65536 + ((1023 & s) << 10 | 1023 & t.charCodeAt(++n)), o[r >> 2] |= (240 | s >> 18) << y[3 & r++], o[r >> 2] |= (128 | s >> 12 & 63) << y[3 & r++], o[r >> 2] |= (128 | s >> 6 & 63) << y[3 & r++], o[r >> 2] |= (128 | 63 & s) << y[3 & r++]);
                    this.lastByteIndex = r, this.bytes += r - this.start, r >= 64 ? (this.block = o[16], this.start = r - 64, this.hash(), this.hashed = !0) : this.start = r
                }
                return this.bytes > 4294967295 && (this.hBytes += this.bytes / 4294967296 << 0, this.bytes = this.bytes % 4294967296), this
            }
        }, t.prototype.finalize = function() {
            if (!this.finalized) {
                this.finalized = !0;
                var t = this.blocks,
                    i = this.lastByteIndex;
                t[16] = this.block, t[i >> 2] |= c[3 & i], this.block = t[16], i >= 56 && (this.hashed || this.hash(), t[0] = this.block, t[16] = t[1] = t[2] = t[3] = t[4] = t[5] = t[6] = t[7] = t[8] = t[9] = t[10] = t[11] = t[12] = t[13] = t[14] = t[15] = 0), t[14] = this.hBytes << 3 | this.bytes >>> 29, t[15] = this.bytes << 3, this.hash()
            }
        }, t.prototype.hash = function() {
            var t, i, h, e, s, r, n, u, o, a = this.h0,
                f = this.h1,
                y = this.h2,
                d = this.h3,
                c = this.h4,
                l = this.h5,
                A = this.h6,
                w = this.h7,
                b = this.blocks;
            for (t = 16; t < 64; ++t) i = ((s = b[t - 15]) >>> 7 | s << 25) ^ (s >>> 18 | s << 14) ^ s >>> 3, h = ((s = b[t - 2]) >>> 17 | s << 15) ^ (s >>> 19 | s << 13) ^ s >>> 10, b[t] = b[t - 16] + i + b[t - 7] + h << 0;
            for (o = f & y, t = 0; t < 64; t += 4) this.first ? (this.is224 ? (r = 300032, w = (s = b[0] - 1413257819) - 150054599 << 0, d = s + 24177077 << 0) : (r = 704751109, w = (s = b[0] - 210244248) - 1521486534 << 0, d = s + 143694565 << 0), this.first = !1) : (i = (a >>> 2 | a << 30) ^ (a >>> 13 | a << 19) ^ (a >>> 22 | a << 10), e = (r = a & f) ^ a & y ^ o, w = d + (s = w + (h = (c >>> 6 | c << 26) ^ (c >>> 11 | c << 21) ^ (c >>> 25 | c << 7)) + (c & l ^ ~c & A) + p[t] + b[t]) << 0, d = s + (i + e) << 0), i = (d >>> 2 | d << 30) ^ (d >>> 13 | d << 19) ^ (d >>> 22 | d << 10), e = (n = d & a) ^ d & f ^ r, A = y + (s = A + (h = (w >>> 6 | w << 26) ^ (w >>> 11 | w << 21) ^ (w >>> 25 | w << 7)) + (w & c ^ ~w & l) + p[t + 1] + b[t + 1]) << 0, i = ((y = s + (i + e) << 0) >>> 2 | y << 30) ^ (y >>> 13 | y << 19) ^ (y >>> 22 | y << 10), e = (u = y & d) ^ y & a ^ n, l = f + (s = l + (h = (A >>> 6 | A << 26) ^ (A >>> 11 | A << 21) ^ (A >>> 25 | A << 7)) + (A & w ^ ~A & c) + p[t + 2] + b[t + 2]) << 0, i = ((f = s + (i + e) << 0) >>> 2 | f << 30) ^ (f >>> 13 | f << 19) ^ (f >>> 22 | f << 10), e = (o = f & y) ^ f & d ^ u, c = a + (s = c + (h = (l >>> 6 | l << 26) ^ (l >>> 11 | l << 21) ^ (l >>> 25 | l << 7)) + (l & A ^ ~l & w) + p[t + 3] + b[t + 3]) << 0, a = s + (i + e) << 0;
            this.h0 = this.h0 + a << 0, this.h1 = this.h1 + f << 0, this.h2 = this.h2 + y << 0, this.h3 = this.h3 + d << 0, this.h4 = this.h4 + c << 0, this.h5 = this.h5 + l << 0, this.h6 = this.h6 + A << 0, this.h7 = this.h7 + w << 0
        }, t.prototype.hex = function() {
            this.finalize();
            var t = this.h0,
                i = this.h1,
                h = this.h2,
                e = this.h3,
                s = this.h4,
                r = this.h5,
                n = this.h6,
                o = this.h7,
                a = u[t >> 28 & 15] + u[t >> 24 & 15] + u[t >> 20 & 15] + u[t >> 16 & 15] + u[t >> 12 & 15] + u[t >> 8 & 15] + u[t >> 4 & 15] + u[15 & t] + u[i >> 28 & 15] + u[i >> 24 & 15] + u[i >> 20 & 15] + u[i >> 16 & 15] + u[i >> 12 & 15] + u[i >> 8 & 15] + u[i >> 4 & 15] + u[15 & i] + u[h >> 28 & 15] + u[h >> 24 & 15] + u[h >> 20 & 15] + u[h >> 16 & 15] + u[h >> 12 & 15] + u[h >> 8 & 15] + u[h >> 4 & 15] + u[15 & h] + u[e >> 28 & 15] + u[e >> 24 & 15] + u[e >> 20 & 15] + u[e >> 16 & 15] + u[e >> 12 & 15] + u[e >> 8 & 15] + u[e >> 4 & 15] + u[15 & e] + u[s >> 28 & 15] + u[s >> 24 & 15] + u[s >> 20 & 15] + u[s >> 16 & 15] + u[s >> 12 & 15] + u[s >> 8 & 15] + u[s >> 4 & 15] + u[15 & s] + u[r >> 28 & 15] + u[r >> 24 & 15] + u[r >> 20 & 15] + u[r >> 16 & 15] + u[r >> 12 & 15] + u[r >> 8 & 15] + u[r >> 4 & 15] + u[15 & r] + u[n >> 28 & 15] + u[n >> 24 & 15] + u[n >> 20 & 15] + u[n >> 16 & 15] + u[n >> 12 & 15] + u[n >> 8 & 15] + u[n >> 4 & 15] + u[15 & n];
            return this.is224 || (a += u[o >> 28 & 15] + u[o >> 24 & 15] + u[o >> 20 & 15] + u[o >> 16 & 15] + u[o >> 12 & 15] + u[o >> 8 & 15] + u[o >> 4 & 15] + u[15 & o]), a
        }, t.prototype.toString = t.prototype.hex, t.prototype.digest = function() {
            this.finalize();
            var t = this.h0,
                i = this.h1,
                h = this.h2,
                e = this.h3,
                s = this.h4,
                r = this.h5,
                n = this.h6,
                u = this.h7,
                o = [t >> 24 & 255, t >> 16 & 255, t >> 8 & 255, 255 & t, i >> 24 & 255, i >> 16 & 255, i >> 8 & 255, 255 & i, h >> 24 & 255, h >> 16 & 255, h >> 8 & 255, 255 & h, e >> 24 & 255, e >> 16 & 255, e >> 8 & 255, 255 & e, s >> 24 & 255, s >> 16 & 255, s >> 8 & 255, 255 & s, r >> 24 & 255, r >> 16 & 255, r >> 8 & 255, 255 & r, n >> 24 & 255, n >> 16 & 255, n >> 8 & 255, 255 & n];
            return this.is224 || o.push(u >> 24 & 255, u >> 16 & 255, u >> 8 & 255, 255 & u), o
        }, t.prototype.array = t.prototype.digest, t.prototype.arrayBuffer = function() {
            this.finalize();
            var t = new ArrayBuffer(this.is224 ? 28 : 32),
                i = new DataView(t);
            return i.setUint32(0, this.h0), i.setUint32(4, this.h1), i.setUint32(8, this.h2), i.setUint32(12, this.h3), i.setUint32(16, this.h4), i.setUint32(20, this.h5), i.setUint32(24, this.h6), this.is224 || i.setUint32(28, this.h7), t
        }, i.prototype = new t, i.prototype.finalize = function() {
            if (t.prototype.finalize.call(this), this.inner) {
                this.inner = !1;
                var i = this.array();
                t.call(this, this.is224, this.sharedMemory), this.update(this.oKeyPad), this.update(i), t.prototype.finalize.call(this)
            }
        };
        var B = w();
        B.sha256 = B, B.sha224 = w(!0), B.sha256.hmac = _(), B.sha224.hmac = _(!0), o ? module.exports = B : (s.sha256 = B.sha256, s.sha224 = B.sha224, a && define((function() {
            return B
        })))
    }();
});
define("utils/uploadStreamController.js", function(require, module, exports, window, document, frames, self, location, navigator, localStorage, history, Caches, screen, alert, confirm, prompt, XMLHttpRequest, WebSocket, Reporter, webkit, WeixinJSCore) {
    "use strict";
    var e = require("../@babel/runtime/helpers/regeneratorRuntime"),
        t = require("../@babel/runtime/helpers/asyncToGenerator"),
        a = require("../@babel/runtime/helpers/classCallCheck"),
        n = require("../@babel/runtime/helpers/createClass"),
        u = new(require("./logger.js"))({
            pageName: "UploadStreamController",
            aegisLogEnable: !0,
            wxLogEnable: !0
        }),
        r = function() {
            function r() {
                a(this, r), this._taskQueue = [], this._judgeFunc = null
            }
            var s;
            return n(r, [{
                key: "addTask",
                value: function(e) {
                    e ? (this._taskQueue.push(e), 1 < this._taskQueue.length || this.executeTaskQueue()) : u.error("invalid task passed to addTask: ".concat(e))
                }
            }, {
                key: "executeTaskQueue",
                value: (s = t(e().mark((function t() {
                    var a, n;
                    return e().wrap((function(e) {
                        for (;;) switch (e.prev = e.next) {
                            case 0:
                                if (!(0 < this._taskQueue.length)) {
                                    e.next = 21;
                                    break
                                }
                                if (a = "", "function" != typeof this._judgeFunc) {
                                    e.next = 16;
                                    break
                                }
                                return e.prev = 3, n = this._taskQueue[0].judgeData, e.next = 7, this._judgeFunc(n);
                            case 7:
                                a = e.sent, e.next = 14;
                                break;
                            case 10:
                                e.prev = 10, e.t0 = e.catch(3), u.error("_judgeFunc executed failed: ".concat(e.t0)), a = e.t0 || "judgeFunc failed";
                            case 14:
                                e.next = 17;
                                break;
                            case 16:
                                u.warn("_judgeFunc is not set properly, we consider judgement as true");
                            case 17:
                                this.executeTask(this._taskQueue[0], a), this._taskQueue.shift(), e.next = 0;
                                break;
                            case 21:
                            case "end":
                                return e.stop()
                        }
                    }), t, this, [
                        [3, 10]
                    ])
                }))), function() {
                    return s.apply(this, arguments)
                })
            }, {
                key: "executeTask",
                value: function(e, t) {
                    var a = e.action,
                        n = e.succ,
                        r = void 0 === n ? function() {} : n,
                        s = e.fail,
                        c = void 0 === s ? function() {} : s;
                    if ("function" != typeof a || t) return t ? u.error("task '".concat(e.name || "no_task_name_provided", "' failed because judge failed: ").concat(t)) : u.error("action of task '".concat(e.name || "no_task_name_provided", "' expected to be a function: ").concat(a)), void c(t);
                    a(), r()
                }
            }, {
                key: "setJudgeFunc",
                value: function(e) {
                    "function" != typeof e && u.warn("func expected to be a function at setJudgeFunc"), this._judgeFunc = e
                }
            }]), r
        }();
    module.exports = r;
});
define("utils/util.js", function(require, module, exports, window, document, frames, self, location, navigator, localStorage, history, Caches, screen, alert, confirm, prompt, XMLHttpRequest, WebSocket, Reporter, webkit, WeixinJSCore) {
    "use strict";
    require("../@babel/runtime/helpers/Arrayincludes");
    var e = require("../@babel/runtime/helpers/slicedToArray"),
        t = require("./remove-emoji/index").default,
        r = require("../constants/WaveAudio"),
        n = new(require("./logger.js"))({
            pageName: "util",
            aegisLogEnable: !0,
            wxLogEnable: !0
        }),
        o = function(e) {
            return (e = e.toString())[1] ? e : "0".concat(e)
        };

    function a(e, t) {
        if ("string" != typeof e) throw new Error("version1 should be type of string: ".concat(e));
        if ("string" != typeof t) throw new Error("version2 should be type of string: ".concat(t));
        for (var r = e.split("."), n = t.split("."), o = r.length, a = n.length, c = 0; c < o && c < a; c++) {
            var i = parseInt(r[c], 10);
            if (isNaN(i) || i < 0) throw new Error("invalid version1: ".concat(r));
            var s = parseInt(n[c], 10);
            if (isNaN(s) || s < 0) throw new Error("invalid version2: ".concat(n));
            if (i < s) return -1;
            if (i > s) return 1
        }
        if (o === a) return 0;
        if (o > a) {
            for (var u = a; u < o; u++)
                if ("0" !== r[u]) return 1;
            return 0
        }
        for (var l = o; l < a; l++)
            if ("0" !== n[l]) return -1;
        return 0
    }

    function c(e) {
        return e && e.platform && e.platform.toLowerCase().indexOf("android") >= 0
    }

    function i(e) {
        return e && e.platform && e.platform.toLowerCase().indexOf("ios") >= 0
    }

    function s(e) {
        var t = e;
        return "string" == typeof e && (t = Number(e)), isNaN(t) && (t = 0), t < 10 ? "0".concat(t) : "".concat(t)
    }
    var u = ["share_on", "audio_on", "video_on", "nickname"];
    var l = {
        info: function(e) {
            console.log("%c%s", "background-color: #006fff; color: white;", e)
        },
        warn: function(e) {
            console.log("%c%s", "background-color: orange; color: white;", e)
        },
        error: function(e) {
            console.log("%c%s", "background-color: red; color: white;", e)
        }
    };

    function f(e) {
        if ("string" != typeof e) return e;
        var t = e.match(/(request:fail\s+)-?\d+(?=:net::ERR)/g);
        if (!t) return "网络超时";
        var r = (t[0] || "").replace(/request:fail\s+/, "");
        return "网络超时(".concat(r, ")")
    }

    function d() {
        return (getCurrentPages() || []).length < 2
    }

    function g(e) {
        var t = e.replace(/\s/g, ""),
            r = "";
        if (t.length < 10) return r = t.replace(/(.{3})(?=.)/g, "$1 ");
        switch (t.length) {
            case 10:
                r = "".concat(t.substr(0, 3), " ").concat(t.substr(3, 3), " ").concat(t.substr(6, 4));
                break;
            case 11:
                r = "".concat(t.substr(0, 3), " ").concat(t.substr(3, 4), " ").concat(t.substr(7, 4));
                break;
            case 12:
                r = "".concat(t.substr(0, 4), " ").concat(t.substr(4, 4), " ").concat(t.substr(8, 4));
                break;
            default:
                r = t
        }
        return r
    }

    function p() {
        for (var e = ["A", "B", "C", "D", "E", "F", "G", "H", "I", "J", "K", "L", "M", "N", "O", "P", "Q", "R", "S", "T", "U", "V", "W", "X", "Y", "Z", "a", "b", "c", "d", "e", "f", "g", "h", "i", "j", "k", "l", "m", "n", "o", "p", "q", "r", "s", "t", "u", "v", "w", "x", "y", "z", "0", "1", "2", "3", "4", "5", "6", "7", "8", "9", "+", "/"], t = [], r = 0; r <= 7; r++) {
            var n = e[Math.floor(64 * Math.random()) % 64];
            t.push(n)
        }
        return t.join("")
    }
    module.exports = {
        formatTime: function(e) {
            var t = e.getFullYear(),
                r = e.getMonth() + 1,
                n = e.getDate(),
                a = e.getHours(),
                c = e.getMinutes(),
                i = e.getSeconds();
            return "".concat([t, r, n].map(o).join("/"), " ").concat([a, c, i].map(o).join(":"))
        },
        mirror: function() {
            var e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {},
                t = {};
            return Object.keys(e).forEach((function(r) {
                Object.prototype.hasOwnProperty.call(e, r) && (t[r] = r)
            })), t
        },
        xmppAssign: function() {
            var e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {},
                t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {},
                r = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : u;
            return Object.keys(t).forEach((function(n) {
                Object.prototype.hasOwnProperty.call(t, n) && (r.indexOf(n) < 0 || "" !== t[n]) && (e[n] = t[n])
            })), e
        },
        getParamFromUri: function() {
            var t = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : "",
                r = {},
                n = decodeURIComponent(t),
                o = n,
                a = n.indexOf("?");
            a > -1 && (o = n.substr(a + 1));
            var c = o.split("&");
            return c.forEach((function(t) {
                var n = t.split("="),
                    o = e(n, 2),
                    a = o[0],
                    c = o[1];
                r[a] = c
            })), r
        },
        getValueFromLocalStorage: function(e) {
            var t = null;
            try {
                t = wx.getStorageSync(e)
            } catch (r) {
                t = null, n.error("unable to get cached data for key = ".concat(e, " from local storage becasue: ").concat(JSON.stringify(r)))
            }
            return t
        },
        setValueInLocalStorage: function(e, t) {
            wx.setStorage({
                key: e,
                data: t,
                success: function() {
                    "string" == typeof t || n.info("set ".concat(e, "=").concat(JSON.stringify(t), " into localStorage succeed"))
                },
                fail: function(r) {
                    n.error("set to local storage failed. key=".concat(e, ", value=").concat(t, ". error=").concat(JSON.stringify(r)))
                }
            })
        },
        getFormatedTime: function(e) {
            var t = new Date(e),
                r = s(t.getHours()),
                n = s(t.getMinutes());
            return "".concat(r, ":").concat(n)
        },
        getFormatedDate: function(e, t) {
            var r = new Date(e),
                n = s(r.getFullYear()),
                o = s(r.getMonth() + 1),
                a = s(r.getDate());
            return t ? "".concat(n, "年").concat(o, "月").concat(a, "日") : "".concat(n, "/").concat(o, "/").concat(a)
        },
        getFormatedDurationTime: function(e, t, r) {
            var n = "",
                o = Math.floor((t - e) / 36e5),
                a = Math.floor((t - e) / 6e4 % 60);
            return o < 1 ? n = "".concat(a, r ? "分钟" : "mins") : (n = "".concat(o, r ? "小时" : "hours"), 0 !== a && (n += "".concat(a, r ? "分钟" : "mins"))), n
        },
        randomString: function() {
            for (var e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : 9, t = "ABCDEFGHJKMNPQRSTWXYZabcdefhijkmnprstwxyz2345678", r = "", n = 0; n < e; n++) r += t[Math.floor(Math.random() * t.length)];
            return r
        },
        fixedEncodeURIComponent: function(e) {
            return encodeURIComponent(e).replace(/[!'()*]/g, (function(e) {
                return "%".concat(e.charCodeAt(0).toString(16).toUpperCase())
            }))
        },
        isPad: function() {
            return wx.getSystemInfoSync().model.toLowerCase().includes("pad")
        },
        isPC: function() {
            var e = wx.getSystemInfoSync(),
                t = e.model.toLowerCase(),
                r = e.platform.toLowerCase();
            return t.includes("windows") || r.includes("windows") || t.includes("mac") || r.includes("macos")
        },
        isIPhone: function() {
            var e = wx.getSystemInfoSync(),
                t = e.platform.toLowerCase(),
                r = e.model.toLowerCase();
            return t.includes("ios") || r.includes("iphone")
        },
        isWindows: function() {
            var e = wx.getSystemInfoSync(),
                t = e.model.toLowerCase(),
                r = e.platform.toLowerCase();
            return t.includes("windows") || r.includes("windows")
        },
        isMac: function() {
            var e = wx.getSystemInfoSync(),
                t = e.model.toLowerCase(),
                r = e.platform.toLowerCase();
            return t.includes("mac") || r.includes("macos")
        },
        JOIN_MEETING_REPORT_SOURCE: {
            MP_DIRECT: "10",
            MP_LAUNCH_APP: "37"
        },
        isTimeout: function() {
            var e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : "";
            if ("string" != typeof e) return !1;
            var t = -1 < e.indexOf("timeout") || -1 < e.indexOf("请求超时") || -1 < e.indexOf("timed out") || -1 < e.indexOf("time out");
            return t
        },
        getMicGrids: function(e) {
            var t = 0;
            return r.WaveAudioMinValidDB < e ? t = Math.ceil((e - r.WaveAudioMinValidDB) / r.WaveAudioGridDB) : r.WaveAudioMaxValidDB <= e && (t = r.WaveAudioGrids), r.WaveAudioGrids < t && (t = r.WaveAudioGrids), t
        },
        getDetailErrmsg: function(e) {
            var t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : "";
            if (t || (t = "错误信息"), !e) return t;
            if (!e.msg) return t;
            var r = e.msg;
            return Object.prototype.hasOwnProperty.call(e, "code") && (r += "(".concat(e.code, ")")), Object.prototype.hasOwnProperty.call(e, "detail") && (r += ": ".concat(e.detail)), r
        },
        formatWxRequestFailMsg: f,
        navigateBack: function() {
            d() ? (n.warn("页面栈只有当前页面，重定向到首页"), wx.redirectTo({
                url: "/pages/index/index",
                success: function() {
                    n.info("back to home page succeed")
                },
                fail: function(e) {
                    n.error("back to home page failed: ".concat(e.errMsg))
                }
            })) : (n.warn("页面栈还有其它页面，可返回上一页"), wx.navigateBack({
                delta: 1
            }))
        },
        isNoMorePageInStack: d,
        isVersion: function(e) {
            return "string" == typeof e && /^(0|[1-9]\d*)\.((0|[1-9]\d*)\.)*(0|[1-9]\d*)$/.test(e)
        },
        sleep: function(e) {
            return new Promise((function(t) {
                setTimeout((function() {
                    t("")
                }), 1e3 * e)
            }))
        },
        removeEmoji: t,
        isBangsScreen: function(e) {
            var t = (e || {}).model;
            if (!t) return !1;
            for (var r = ["iPhone X", "iPhone 12", "iPhone 13", "iPhone 14"], n = 0, o = r.length; n < o; n++)
                if (-1 < t.indexOf(r[n])) return !0;
            return !1
        },
        maskMeetingCode: function(e) {
            var t = e.length,
                r = 0,
                n = t - (r = t < 9 ? 0 : t < 11 ? 5 : 6) >> 1,
                o = n + r;
            return g("".concat(e.substr(0, n)).concat("*".repeat(r)).concat(e.substr(o)))
        },
        generateUUID: p
    }, module.exports.bValid = function(e) {
        return null != e && void 0 !== e
    }, module.exports.isSupportForceLandscape = function(e) {
        return a(e.SDKVersion, "2.5.0") >= 0
    }, module.exports.isSupportWatchingScreenShare = function(e) {
        return a(e.version, "7.0.7") >= 0 || "wxwork" === e.environment
    }, module.exports.isSupportPassingDataPageToPage = function(e) {
        return a(e.SDKVersion, "2.7.3") >= 0
    }, module.exports.isSupportSmoothVOIP = function(e) {
        return c(e) && a(e.version, "7.0.14") >= 0 || i(e) && a(e.version, "8.0.24") >= 0
    }, module.exports.compareVersion = a, module.exports.base64Decode = function(e) {
        var t, r, n, o, a, c, i = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=",
            s = "",
            u = 0;
        if ("" === (e = e.replace(/[^A-Za-z0-9+/=]/g, ""))) return "";
        do {
            t = i.indexOf(e.charAt(u++)) << 2 | (o = i.indexOf(e.charAt(u++))) >> 4, r = (15 & o) << 4 | (a = i.indexOf(e.charAt(u++))) >> 2, n = (3 & a) << 6 | (c = i.indexOf(e.charAt(u++))), s += String.fromCharCode(t), 64 !== a && (s += String.fromCharCode(r)), 64 !== c && (s += String.fromCharCode(n))
        } while (u < e.length);
        return s
    }, module.exports.showWXToast = function(e) {
        var t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : 2e3;
        e && wx.showToast({
            title: e,
            duration: t,
            icon: "none"
        })
    }, module.exports.truncateText = function(e) {
        var t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : 36,
            r = 0,
            n = "";
        if (!e) return n;
        for (var o = 0, a = e.length; o < a; o++) {
            var c = e[o],
                i = c.codePointAt(0);
            if (isNaN(i) || i < 0) return console.error("cannot get code point for char: ".concat(c)), e;
            if (i < 256) {
                if (!(r < t)) break;
                n += c, r++
            } else {
                if (!(r < t - 1)) break;
                n += c, r += 2
            }
        }
        return n
    }, module.exports.keepScreenOn = function() {
        wx.setKeepScreenOn({
            keepScreenOn: !0,
            success: function() {},
            fail: function(e) {
                console.error("防止熄灭屏幕失败!", e)
            }
        })
    }, module.exports.isTimeAfterNow = function(e) {
        return e >= (new Date).getTime()
    }, module.exports.JSONStr = function(e) {
        return JSON.stringify(e)
    }, module.exports.isSupportQYWX = function(e) {
        return a(e, "3.0.10") >= 0
    }, module.exports.isSupportTRTC = function(e) {
        return !(a(e.SDKVersion, "2.10.0") < 0) && (c(e) ? a(e.version, "7.0.8") >= 0 : i(e) ? a(e.version, "7.0.9") >= 0 : (function(e) {
            return "devtools" === e.platform.toLowerCase()
        }(e) || n.warn("current device is neither Android, iOS nor devtools", "isSupportTRTC"), !1))
    }, module.exports.getMeetingCodeFormatted = function(e) {
        if ("string" != typeof e || !/^[\d\s]+$/.test(e)) return e;
        var t = "";
        if ((e = e.replace(/\s/g, "")).length < 10) return t = e.replace(/(\d{3})(?=\d)/g, "$1 ");
        switch (e.length) {
            case 10:
                t = "".concat(e.substr(0, 3), " ").concat(e.substr(3, 3), " ").concat(e.substr(6, 4));
                break;
            case 11:
                t = "".concat(e.substr(0, 3), " ").concat(e.substr(3, 4), " ").concat(e.substr(7, 4));
                break;
            case 12:
                t = "".concat(e.substr(0, 4), " ").concat(e.substr(4, 4), " ").concat(e.substr(8, 4));
                break;
            default:
                t = e
        }
        return t
    }, module.exports.getMeetingCodeWechatFormat = function(e) {
        return "#腾讯会议：" + g(e).replace(/\s+/g, "-")
    }, module.exports.isMeetingCodeValid = function(e, t) {
        return "string" != typeof e && (e += ""), (isNaN(t) || t < 9) && (t = 9), new RegExp("^\\d{9,".concat(t, "}$")).test(e.replace(/\s/g, ""))
    }, module.exports.logEventFailed = function(e) {
        for (var t = arguments.length, r = new Array(t > 1 ? t - 1 : 0), o = 1; o < t; o++) r[o - 1] = arguments[o];
        n.error("".concat(e, " failed: ").concat(JSON.stringify(r)))
    }, module.exports.getQueryString = function() {
        var e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {},
            t = "";
        return Object.keys(e).forEach((function(r) {
            t += t ? "&" : "?", t += "".concat(r, "=").concat(e[r])
        })), t
    }, module.exports.isOldAccessUrl = function(e) {
        return !e || /^https?:\/\/([a-z|A-Z|0-9|_|-]+\.)+[a-z|A-Z|0-9|_|-]+(:\d+)?$/.test(e)
    }, module.exports.isAndroid = c, module.exports.getReadableInstanceName = function(e) {
        switch (e = parseInt(e, 10)) {
            case 1:
                return "winPC";
            case 2:
                return "macOS";
            case 3:
                return "Android";
            case 4:
                return "iOS";
            case 5:
                return "Web";
            case 6:
                return "iPad";
            case 7:
                return "aPad";
            case 8:
                return "miniProgram";
            default:
                return "UnKnown"
        }
    }, module.exports.clog = l, module.exports.generateUUID = p;
});
define("app.js", function(require, module, exports, window, document, frames, self, location, navigator, localStorage, history, Caches, screen, alert, confirm, prompt, XMLHttpRequest, WebSocket, Reporter, webkit, WeixinJSCore) {
    "use strict";
    var e = require("@babel/runtime/helpers/regeneratorRuntime"),
        n = require("@babel/runtime/helpers/asyncToGenerator"),
        r = require("@babel/runtime/helpers/typeof"),
        o = require("./utils/app"),
        t = require("./utils/imageLoader"),
        i = require("./actions/AppAction"),
        a = require("./utils/logger"),
        c = require("./clients/RavenClient"),
        s = require("./clients/BeaconClient"),
        p = require("./clients/WemeetClient"),
        u = require("./stores/AppStore"),
        f = require("./actions/MeetingAction"),
        l = require("./stores/MeetingStore"),
        d = require("./configs/AppConfig"),
        h = require("./stores/UserStore"),
        m = require("./utils/util"),
        _ = new a({
            pageName: "app",
            aegisLogEnable: !0,
            wxLogEnable: !0
        });
    _.info("App.js is loaded...");
    var g = "verify",
        w = "index";
    App({
        onLaunch: function(e) {
            var n = "\n      App onLaunch at ".concat(new Date, ".\n      version: ").concat(d.MP_WEMEET_VERSION, ",\n    ");
            _.info(n), i.init(), this.setCurrentBiz(e), this.onAppLaunchOfBiz(e), (0, t.preLoadImage)(t.imageUrls)
        },
        onShow: function(e) {
            this.onAppShowOfBiz(e)
        },
        onHide: function() {
            this.onAppHideOfBiz()
        },
        onError: function(e) {
            this.onAppErrorOfBiz(e)
        },
        onUnhandledRejection: function(e) {
            try {
                var n, r = (e || {}).reason;
                n = "string" == typeof r ? r : r.stack || r.errMsg || r.message || "unknown reason", _.error("unhandled rejection.\n        detail msg: ".concat(n, "\n        callstack: ").concat(new Error("unhandled promise").stack, "\n      ")), c.captureException("UnhandledRejection", {
                    level: "error"
                })
            } catch (e) {
                _.error("print unhandled rejection failed: ".concat(e.message))
            }
        },
        onPageNotFound: function(e) {
            _.info("该".concat(e.path, "，页面404，已重定向到index")), wx.redirectTo({
                url: "/pages/index/index"
            })
        },
        setCurrentBiz: function(e) {
            var n, r = e || {},
                t = r.path,
                i = r.scene,
                a = r.query;
            n = "pages/face-verify/face-verify" === t || /^t%3D/.test(a.scene) ? g : w, _.info("\n      [".concat((0, o.getReadableBiz)(n), "]\n      App onLaunch at ").concat(new Date, "\n      with params:\n        path=").concat(t, ",\n        scene=").concat(i, ",\n        query=").concat(JSON.stringify(a), "\n      ")), this.biz = n
        },
        onAppErrorOfBiz: function(e) {
            switch (_.error("App onError: ".concat("object" === r(e) ? JSON.stringify(e) : e)), e || (e = ""), this.biz) {
                case g:
                    this.onAppErrorOfVerify(e);
                    break;
                case w:
                    this.onAppErrorOfIndex(e)
            }
        },
        onAppErrorOfIndex: function(e) {
            c.captureException(e, {
                level: "error"
            })
        },
        onAppErrorOfVerify: function(e) {
            c.captureException(e, {
                level: "error"
            })
        },
        onAppHideOfBiz: function() {
            switch (this.biz) {
                case g:
                    this.onAppHideOfVerify();
                    break;
                case w:
                    this.onAppHideOfIndex()
            }
        },
        onAppHideOfIndex: function() {
            return n(e().mark((function n() {
                var r;
                return e().wrap((function(e) {
                    for (;;) switch (e.prev = e.next) {
                        case 0:
                            u.onAppOnHide();
                            try {
                                wx.offMemoryWarning()
                            } catch (e) {
                                _.error("wx.offMemoryWarning not supported: ".concat(e.message))
                            }
                            if (r = !u.getIsSupportSmoothVOIP() && !l.getIsSpBackend() && l.isInMeeting(), s.report("mp_switch_to_backend", {
                                    doesLeadToExit: r ? "Y" : "N"
                                }), _.reportCls("cls_switch_to_backend_success_".concat(r ? "Y" : "N")), !u.getIsSupportSmoothVOIP()) {
                                e.next = 8;
                                break
                            }
                            return _.info("good! your client supports smooth VOIP."), e.abrupt("return");
                        case 8:
                            if (l.getIsSpBackend()) {
                                e.next = 21;
                                break
                            }
                            if (!l.isInMeeting()) {
                                e.next = 17;
                                break
                            }
                            return _.warn("user switches to backend while in meeting, regard it as leave meeting."), h.setAutoJoin(!0), e.next = 14, f.leaveMeeting();
                        case 14:
                            m.navigateBack(), e.next = 19;
                            break;
                        case 17:
                            _.info("[App onHide]user switches to backend but he is not in meeting, we dont need to auto join"), h.setAutoJoin(!1);
                        case 19:
                            e.next = 22;
                            break;
                        case 21:
                            l.setIsSpBackend(!1);
                        case 22:
                        case "end":
                            return e.stop()
                    }
                }), n)
            })))()
        },
        onAppHideOfVerify: function() {
            u.onAppOnHide()
        },
        onAppShowOfBiz: function(e) {
            switch (this.biz) {
                case "verify":
                    this.onAppShowOfVerify(e);
                    break;
                case "index":
                    this.onAppShowOfIndex(e)
            }
        },
        onAppShowOfIndex: function(e) {
            u.onAppOnShow(e);
            var n = e.scene,
                r = function(e) {
                    var n = "";
                    switch (e) {
                        case 1001:
                            n = "open_mp_by_main_port_of_discover";
                            break;
                        case 1005:
                            n = "open_mp_by_search";
                            break;
                        case 1010:
                            n = "open_mp_by_favourites";
                            break;
                        case 1089:
                            n = "open_mp_by_recently_used";
                            break;
                        case 1036:
                            n = "open_mp_by_share_card_from_app";
                            break;
                        case 1007:
                            n = "open_mp_by_share_card_from_mp";
                            break;
                        case 1037:
                            n = "open_mp_by_another_mp";
                            break;
                        case 1048:
                            n = "open_mp_by_longpress_on_mp_code";
                            break;
                        case 1131:
                            n = "open_mp_by_popup_window";
                            break;
                        default:
                            n = ""
                    }
                    return n
                }(n),
                o = (e.path.match(/[^/]+$/g) || [e.path])[0];
            "in-meeting" !== o && "waiting-room" !== o || _.warn("想直接进入".concat(o, "，进入场景：").concat(n, "(").concat(r, ")。"));
            try {
                wx.onMemoryWarning((function(e) {
                    var n = (e || {}).level;
                    5 == n ? console.log("memory warning moderate") : 10 == n ? console.warn("memory warning low") : 15 == n ? console.error("memory warning critical") : _.warn("unexpected memory warning level received: ".concat(n)), s.report("mp_memory_warning", {
                        level: n
                    }), _.warn("memory warning level: ".concat(n))
                }))
            } catch (e) {
                _.error("wx.onMemoryWarning not supported: ".concat(e.message))
            }
        },
        onAppShowOfVerify: function(e) {
            u.onAppOnShow(e)
        },
        onAppLaunchOfBiz: function(e) {
            switch (this.biz) {
                case "verify":
                    this.onAppLaunchOfVerify(e);
                    break;
                case "index":
                    this.onAppLaunchOfIndex(e)
            }
        },
        onAppLaunchOfIndex: function(e) {
            s.report("wmp_init"), s.report("mp_support_mix_audio", {
                isSupport: u.getIsSupportMixAudio() ? "Y" : "N"
            });
            var n = e.scene;
            _.reportCls("cls_wmp_init_success_".concat(n)), p.weMeetSdkLoggerReportor.setReportCallback((function(e) {
                var n = e.lv,
                    r = void 0 === n ? 0 : n,
                    o = e.classid;
                if ("report" !== o) {
                    var t = "[wemeetsdk][".concat(o, "]:").concat(JSON.stringify(e));
                    switch (r) {
                        case 3:
                            _.error({
                                msg: t
                            });
                            break;
                        case 2:
                        case 1:
                            _.info({
                                msg: t
                            })
                    }
                } else ! function(e) {
                    var n = null;
                    try {
                        n = JSON.parse(e)
                    } catch (n) {
                        return void _.error("parse json failed: ".concat(n.message, ". content: ").concat(e))
                    }
                    var r = n,
                        o = r.namespace,
                        t = r.protocolName,
                        i = r.timeCost,
                        a = r.code,
                        c = r.msg,
                        s = "xmpp<".concat(o, ":").concat(t, ">"),
                        p = 0 === a ? "success" : "fail",
                        u = "cls_".concat(s, "_").concat(p, "_").concat(a, "_").concat(i).concat(c ? "_".concat(c) : "");
                    _.reportCls(u)
                }(e.content)
            }))
        },
        onAppLaunchOfVerify: function() {
            c.setConfig({
                release: "1.0.0",
                environment: "production",
                allowDuplicates: !0,
                sampleRate: .5
            })
        }
    });
});
require("app.js");
__wxRoute = 'components/custom-modal/custom-modal';
__wxRouteBegin = true;
__wxAppCurrentFile__ = 'components/custom-modal/custom-modal.js';
define("components/custom-modal/custom-modal.js", function(require, module, exports, window, document, frames, self, location, navigator, localStorage, history, Caches, screen, alert, confirm, prompt, XMLHttpRequest, WebSocket, Reporter, webkit, WeixinJSCore) {
    "use strict";
    var t = require("../../@babel/runtime/helpers/objectSpread2"),
        n = require("../../configs/MsgCfgInMeeting"),
        e = require("../../clients/BeaconClient");
    Component({
        properties: {
            key: {
                type: String,
                value: ""
            },
            closable: {
                type: Boolean,
                value: !1
            },
            closeOnTapOverlay: {
                type: Boolean,
                value: !1
            },
            onClose: {
                type: Function,
                value: function() {}
            },
            buttonStyle: {
                type: String,
                value: "flat"
            },
            className: {
                type: String,
                value: ""
            },
            mainContentClassName: {
                type: String,
                value: ""
            },
            title: {
                type: String,
                value: ""
            },
            content: {
                type: String,
                value: ""
            },
            contentIsLeft: {
                type: Boolean,
                value: !1
            },
            okBtn: {
                type: Object,
                value: {
                    text: "确认",
                    onClick: null,
                    isOpen: !1,
                    "open-type": "",
                    "app-parameter": "",
                    "show-message-card": "",
                    "send-message-img": "",
                    "send-message-title": "",
                    bindlaunchapp: null,
                    bindgetuserinfo: null,
                    binderror: null
                }
            },
            cancelBtn: {
                type: Object,
                value: {
                    text: "取消",
                    onClick: null,
                    isOpen: !1,
                    "open-type": "",
                    "app-parameter": "",
                    "show-message-card": "",
                    "send-message-img": "",
                    "send-message-title": "",
                    bindlaunchapp: null,
                    bindgetuserinfo: null,
                    binderror: null
                }
            }
        },
        observers: {},
        data: {
            visible: !1,
            key: ""
        },
        attached: function() {},
        detached: function() {},
        methods: {
            _getInitData: function() {
                return {
                    visible: !1,
                    closable: !1,
                    closeOnTapOverlay: !1,
                    key: "",
                    onClose: function() {},
                    buttonStyle: "flat",
                    className: "",
                    mainContentClassName: "",
                    title: "",
                    content: "",
                    cancelBtn: {
                        text: "取消",
                        onClick: null
                    },
                    okBtn: {
                        text: "确认",
                        onClick: null
                    }
                }
            },
            _init: function() {
                var t = this._getInitData();
                this.setData(t)
            },
            _handleCoverViewTap: function() {
                if (this.closeOnTapOverlay) {
                    var t = this.data.onClose;
                    this.close(), t && t()
                }
            },
            _onCloseBtnClick: function(t) {
                var n = this.data.onClose;
                this.close(), n && n(t)
            },
            close: function() {
                var n = this._getInitData();
                this.setData(t(t({}, n), {}, {
                    visible: !1
                }))
            },
            open: function() {
                var n = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {},
                    e = arguments.length > 1 && void 0 !== arguments[1] && arguments[1],
                    o = e ? this._getInitData() : {},
                    i = n.closable,
                    a = void 0 !== i && i,
                    l = n.closeOnTapOverlay,
                    s = void 0 !== l && l,
                    c = n.onClose,
                    r = void 0 === c ? function() {} : c,
                    u = n.key,
                    p = void 0 === u ? "" : u,
                    d = n.buttonStyle,
                    v = void 0 === d ? "flat" : d,
                    f = n.className,
                    h = void 0 === f ? "" : f,
                    y = n.mainContentClassName,
                    C = void 0 === y ? "" : y,
                    b = n.title,
                    g = void 0 === b ? "" : b,
                    k = n.content,
                    m = void 0 === k ? "" : k,
                    B = n.contentIsLeft,
                    _ = void 0 !== B && B,
                    O = n.okBtn,
                    S = void 0 === O ? {
                        text: "确认",
                        onClick: null
                    } : O,
                    I = n.cancelBtn,
                    x = void 0 === I ? {
                        text: "取消",
                        onClick: null
                    } : I;
                o.visible = !0, this.setData(t(t({}, o), {}, {
                    closable: a,
                    closeOnTapOverlay: s,
                    onClose: r,
                    key: p,
                    buttonStyle: v,
                    className: h,
                    mainContentClassName: C,
                    title: g,
                    content: m,
                    contentIsLeft: _,
                    okBtn: S,
                    cancelBtn: x
                }))
            },
            getKey: function() {
                return this.data.key
            },
            _onCancelBtnClick: function(t) {
                var o = (this.data.cancelBtn || {}).onClick;
                "function" == typeof o && o(t);
                var i = (this.data.cancelBtn || {}).isOpen;
                this.data.cancelBtn === n.hostAskMeToTurnOnAudioDialog.cancelBtn && e.report("e#request_unmute#mute#click", {
                    is_on: 1
                }), i || this.close()
            },
            _onCancelBtnLaunchApp: function(t) {
                var n = (this.data.cancelBtn || {}).bindlaunchapp;
                "function" == typeof n && n(t), this.close()
            },
            _onCancelBtnGetUserInfo: function(t) {
                var n = (this.data.cancelBtn || {}).bindgetuserinfo;
                "function" == typeof n && n(t), this.close()
            },
            _onCancelBtnError: function(t) {
                var n = (this.data.cancelBtn || {}).binderror;
                "function" == typeof n && n(t), this.close()
            },
            _onOkBtnClick: function(t) {
                var n = this.data.okBtn || {},
                    o = n.onClick,
                    i = n.isOpen;
                "function" == typeof o && o(t), 13436 === o && e.report("e#inmeeting_crossmeeting_buy_pop#mobile#click"), 9098 === o && e.report("e#meeting_limit_buy_pop#konwit#click"), i || this.close()
            },
            _onOkBtnLaunchApp: function(t) {
                var n = (this.data.okBtn || {}).bindlaunchapp;
                "function" == typeof n && n(t), this.close()
            },
            _onOkBtnGetUserInfo: function(t) {
                var n = (this.data.okBtn || {}).bindgetuserinfo;
                "function" == typeof n && n(t), this.close()
            },
            _onOkBtnError: function(t) {
                var n = this.data.okBtn || {},
                    e = n.binderror,
                    o = n.dialogNoClose;
                "function" == typeof e && e(t), !o && this.close()
            }
        },
        behaviors: ["wx://component-export"],
        export: function() {
            return {
                component: this
            }
        }
    });
});
require("components/custom-modal/custom-modal.js");
__wxRoute = 'components/full-screen-msg-view/full-screen-msg-view';
__wxRouteBegin = true;
__wxAppCurrentFile__ = 'components/full-screen-msg-view/full-screen-msg-view.js';
define("components/full-screen-msg-view/full-screen-msg-view.js", function(require, module, exports, window, document, frames, self, location, navigator, localStorage, history, Caches, screen, alert, confirm, prompt, XMLHttpRequest, WebSocket, Reporter, webkit, WeixinJSCore) {
    "use strict";
    Component({
        properties: {
            background: {
                type: String,
                value: "#E0E2E5"
            },
            fontColor: {
                type: String,
                value: "#2D3033"
            }
        },
        data: {
            message: "",
            visible: !1
        },
        attached: function() {},
        detached: function() {},
        methods: {
            show: function() {
                var e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : "";
                this.setData({
                    message: e,
                    visible: !0
                })
            },
            hide: function() {
                this.setData({
                    message: "",
                    visible: !1
                })
            },
            onCoverTaped: function() {
                this.hide()
            }
        },
        behaviors: ["wx://component-export"],
        export: function() {
            return {
                component: this
            }
        }
    });
});
require("components/full-screen-msg-view/full-screen-msg-view.js");
__wxRoute = 'components/fullpage-message-box-view/fullpage-message-box-view';
__wxRouteBegin = true;
__wxAppCurrentFile__ = 'components/fullpage-message-box-view/fullpage-message-box-view.js';
define("components/fullpage-message-box-view/fullpage-message-box-view.js", function(require, module, exports, window, document, frames, self, location, navigator, localStorage, history, Caches, screen, alert, confirm, prompt, XMLHttpRequest, WebSocket, Reporter, webkit, WeixinJSCore) {
    "use strict";
    Component({
        properties: {},
        data: {
            visible: !1,
            type: "info",
            message: "",
            subMessage: "",
            showButton: !1,
            button: {
                text: "确定",
                onClick: void 0,
                style: ""
            },
            closeOnTap: !1
        },
        attached: function() {},
        detached: function() {},
        methods: {
            show: function() {
                var t = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {},
                    o = t.closeOnTap,
                    e = void 0 !== o && o,
                    s = t.type,
                    n = void 0 === s ? "info" : s,
                    i = t.message,
                    a = void 0 === i ? "会议邀请无效" : i,
                    c = t.subMessage,
                    u = void 0 === c ? "请使用创建者账号绑定的微信进行邀请" : c,
                    d = t.showButton,
                    h = void 0 !== d && d,
                    p = t.button,
                    v = void 0 === p ? {
                        text: "确定"
                    } : p;
                this.setData({
                    visible: !0,
                    type: n,
                    message: a,
                    subMessage: u,
                    closeOnTap: e,
                    showButton: h,
                    button: v
                })
            },
            hide: function() {
                this.setData({
                    closeOnTap: !1,
                    type: "success",
                    message: "",
                    subMessage: "",
                    visible: !1,
                    showButton: !1,
                    button: {
                        text: "确定"
                    }
                })
            },
            onCoverTaped: function() {
                this.data.closeOnTap && this.hide()
            },
            onBtnClick: function() {
                var t = this.data.button,
                    o = void 0 === t ? {} : t;
                "function" == typeof o.onClick && o.onClick()
            }
        },
        behaviors: ["wx://component-export"],
        export: function() {
            return {
                component: this
            }
        }
    });
});
require("components/fullpage-message-box-view/fullpage-message-box-view.js");
__wxRoute = 'components/index-message-dialog/message-dialog';
__wxRouteBegin = true;
__wxAppCurrentFile__ = 'components/index-message-dialog/message-dialog.js';
define("components/index-message-dialog/message-dialog.js", function(require, module, exports, window, document, frames, self, location, navigator, localStorage, history, Caches, screen, alert, confirm, prompt, XMLHttpRequest, WebSocket, Reporter, webkit, WeixinJSCore) {
    "use strict";
    Component({
        options: {
            multipleSlots: !0
        },
        properties: {},
        data: {
            show: !1
        },
        attached: function() {
            console.log("slider-message-dialog attached")
        },
        methods: {
            show: function() {
                this.setData({
                    show: !0
                })
            },
            hide: function() {
                this.setData({
                    show: !1
                })
            }
        }
    });
});
require("components/index-message-dialog/message-dialog.js");
__wxRoute = 'components/mask/mask';
__wxRouteBegin = true;
__wxAppCurrentFile__ = 'components/mask/mask.js';
define("components/mask/mask.js", function(require, module, exports, window, document, frames, self, location, navigator, localStorage, history, Caches, screen, alert, confirm, prompt, XMLHttpRequest, WebSocket, Reporter, webkit, WeixinJSCore) {
    "use strict";
    Component({
        properties: {},
        data: {
            visible: !1,
            onClose: function() {
                return !0
            },
            isModel: !0
        },
        methods: {
            open: function() {
                var o = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {};
                (o = Object.assign({
                    onClose: function() {
                        return !0
                    },
                    isModel: !0
                }, o)).visible = !0, this.setData(o)
            },
            close: function() {
                this._close()
            },
            onMaskTapped: function() {
                console.log("mask tapped"), this.data.isModel ? console.log("mask is model, ignored") : "function" == typeof this.onClose ? this.onClose() ? (console.log("custom before close mask callback succeed, hide mask"), this._close()) : console.warn("custom before close mask function failed, wont hide mask") : this._close()
            },
            _close: function() {
                this.setData({
                    visible: !1
                })
            }
        }
    });
});
require("components/mask/mask.js");
__wxRoute = 'components/message-dialog/message-dialog';
__wxRouteBegin = true;
__wxAppCurrentFile__ = 'components/message-dialog/message-dialog.js';
define("components/message-dialog/message-dialog.js", function(require, module, exports, window, document, frames, self, location, navigator, localStorage, history, Caches, screen, alert, confirm, prompt, XMLHttpRequest, WebSocket, Reporter, webkit, WeixinJSCore) {
    "use strict";
    var t = require("../../@babel/runtime/helpers/objectSpread2"),
        n = require("../../configs/MsgCfgInMeeting"),
        e = require("../../clients/BeaconClient");
    Component({
        properties: {
            key: {
                type: String,
                value: ""
            },
            closable: {
                type: Boolean,
                value: !1
            },
            closeOnTapOverlay: {
                type: Boolean,
                value: !1
            },
            onClose: {
                type: Function,
                value: function() {}
            },
            buttonStyle: {
                type: String,
                value: "flat"
            },
            className: {
                type: String,
                value: ""
            },
            mainContentClassName: {
                type: String,
                value: ""
            },
            title: {
                type: String,
                value: ""
            },
            content: {
                type: String,
                value: ""
            },
            contentArr: {
                type: Array,
                value: []
            },
            contentIsLeft: {
                type: Boolean,
                value: !1
            },
            okBtn: {
                type: Object,
                value: {
                    text: "确认",
                    onClick: null,
                    isOpen: !1,
                    "open-type": "",
                    "app-parameter": "",
                    "show-message-card": "",
                    "send-message-img": "",
                    "send-message-title": "",
                    bindlaunchapp: null,
                    bindgetuserinfo: null,
                    binderror: null
                }
            },
            cancelBtn: {
                type: Object,
                value: {
                    text: "取消",
                    onClick: null,
                    isOpen: !1,
                    "open-type": "",
                    "app-parameter": "",
                    "show-message-card": "",
                    "send-message-img": "",
                    "send-message-title": "",
                    bindlaunchapp: null,
                    bindgetuserinfo: null,
                    binderror: null
                }
            }
        },
        observers: {},
        data: {
            visible: !1,
            key: ""
        },
        attached: function() {},
        detached: function() {},
        methods: {
            _getInitData: function() {
                return {
                    visible: !1,
                    closable: !1,
                    closeOnTapOverlay: !1,
                    key: "",
                    onClose: function() {},
                    buttonStyle: "flat",
                    className: "",
                    mainContentClassName: "",
                    title: "",
                    content: "",
                    cancelBtn: {
                        text: "取消",
                        onClick: null
                    },
                    okBtn: {
                        text: "确认",
                        onClick: null
                    }
                }
            },
            _init: function() {
                var t = this._getInitData();
                this.setData(t)
            },
            _handleCoverViewTap: function() {
                if (this.closeOnTapOverlay) {
                    var t = this.data.onClose;
                    this.close(), t && t()
                }
            },
            _onCloseBtnClick: function(t) {
                var n = this.data.onClose;
                this.close(), n && n(t)
            },
            close: function() {
                var n = this._getInitData();
                this.setData(t(t({}, n), {}, {
                    visible: !1
                }))
            },
            open: function() {
                var n = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {},
                    e = arguments.length > 1 && void 0 !== arguments[1] && arguments[1],
                    o = e ? this._getInitData() : {},
                    i = n.closable,
                    a = void 0 !== i && i,
                    l = n.closeOnTapOverlay,
                    s = void 0 !== l && l,
                    c = n.onClose,
                    r = void 0 === c ? function() {} : c,
                    u = n.key,
                    d = void 0 === u ? "" : u,
                    p = n.buttonStyle,
                    v = void 0 === p ? "flat" : p,
                    f = n.className,
                    h = void 0 === f ? "" : f,
                    y = n.mainContentClassName,
                    C = void 0 === y ? "" : y,
                    k = n.title,
                    B = void 0 === k ? "" : k,
                    g = n.content,
                    b = void 0 === g ? "" : g,
                    m = n.contentIsLeft,
                    O = void 0 !== m && m,
                    _ = n.okBtn,
                    A = void 0 === _ ? {
                        text: "确认",
                        onClick: null
                    } : _,
                    S = n.cancelBtn,
                    x = void 0 === S ? {
                        text: "取消",
                        onClick: null
                    } : S,
                    I = n.contentArr,
                    T = void 0 === I ? [] : I;
                o.visible = !0, this.setData(t(t({}, o), {}, {
                    closable: a,
                    closeOnTapOverlay: s,
                    onClose: r,
                    key: d,
                    buttonStyle: v,
                    className: h,
                    mainContentClassName: C,
                    title: B,
                    content: b,
                    contentIsLeft: O,
                    okBtn: A,
                    cancelBtn: x,
                    contentArr: T
                }))
            },
            _onClickContentArr: function(t) {
                var n, e, o, i, a, l = null == t || null === (n = t.target) || void 0 === n || null === (e = n.dataset) || void 0 === e ? void 0 : e.idx,
                    s = null === (o = this.data) || void 0 === o || null === (i = o.contentArr) || void 0 === i ? void 0 : i[l];
                null == s || null === (a = s.onClick) || void 0 === a || a.call(s)
            },
            getKey: function() {
                return this.data.key
            },
            _onCancelBtnClick: function(t) {
                var o = (this.data.cancelBtn || {}).onClick;
                "function" == typeof o && o(t);
                var i = (this.data.cancelBtn || {}).isOpen;
                this.data.cancelBtn === n.hostAskMeToTurnOnAudioDialog.cancelBtn && e.report("e#request_unmute#mute#click", {
                    is_on: 1
                }), i || this.close()
            },
            _onCancelBtnLaunchApp: function(t) {
                var n = (this.data.cancelBtn || {}).bindlaunchapp;
                "function" == typeof n && n(t), this.close()
            },
            _onCancelBtnGetUserInfo: function(t) {
                var n = (this.data.cancelBtn || {}).bindgetuserinfo;
                "function" == typeof n && n(t), this.close()
            },
            _onCancelBtnError: function(t) {
                var n = (this.data.cancelBtn || {}).binderror;
                "function" == typeof n && n(t), this.close()
            },
            _onOkBtnClick: function(t) {
                var o = this.data.okBtn || {},
                    i = o.onClick,
                    a = o.isOpen;
                "function" == typeof i && i(t), this.data.okBtn === n.hostAskMeToTurnOnAudioDialog.okBtn && e.report("e#request_unmute#mute#click", {
                    is_on: 0
                }), a || this.close()
            },
            _onOkBtnLaunchApp: function(t) {
                var n = (this.data.okBtn || {}).bindlaunchapp;
                "function" == typeof n && n(t), this.close()
            },
            _onOkBtnGetUserInfo: function(t) {
                var n = (this.data.okBtn || {}).bindgetuserinfo;
                "function" == typeof n && n(t), this.close()
            },
            _onOkBtnError: function(t) {
                var n = this.data.okBtn || {},
                    e = n.binderror,
                    o = n.dialogNoClose;
                "function" == typeof e && e(t), !o && this.close()
            }
        },
        behaviors: ["wx://component-export"],
        export: function() {
            return {
                component: this
            }
        }
    });
});
require("components/message-dialog/message-dialog.js");
__wxRoute = 'components/miniprogram-recycle-view/recycle-item';
__wxRouteBegin = true;
__wxAppCurrentFile__ = 'components/miniprogram-recycle-view/recycle-item.js';
define("components/miniprogram-recycle-view/recycle-item.js", function(require, module, exports, window, document, frames, self, location, navigator, localStorage, history, Caches, screen, alert, confirm, prompt, XMLHttpRequest, WebSocket, Reporter, webkit, WeixinJSCore) {
    "use strict";
    var e = require("../../@babel/runtime/helpers/typeof");
    module.exports = function(t) {
        var r = {};

        function n(e) {
            if (r[e]) return r[e].exports;
            var o = r[e] = {
                i: e,
                l: !1,
                exports: {}
            };
            return t[e].call(o.exports, o, o.exports, n), o.l = !0, o.exports
        }
        return n.m = t, n.c = r, n.d = function(e, t, r) {
            n.o(e, t) || Object.defineProperty(e, t, {
                enumerable: !0,
                get: r
            })
        }, n.r = function(e) {
            "undefined" != typeof Symbol && Symbol.toStringTag && Object.defineProperty(e, Symbol.toStringTag, {
                value: "Module"
            }), Object.defineProperty(e, "__esModule", {
                value: !0
            })
        }, n.t = function(t, r) {
            if (1 & r && (t = n(t)), 8 & r) return t;
            if (4 & r && "object" === e(t) && t && t.__esModule) return t;
            var o = Object.create(null);
            if (n.r(o), Object.defineProperty(o, "default", {
                    enumerable: !0,
                    value: t
                }), 2 & r && "string" != typeof t)
                for (var u in t) n.d(o, u, function(e) {
                    return t[e]
                }.bind(null, u));
            return o
        }, n.n = function(e) {
            var t = e && e.__esModule ? function() {
                return e.default
            } : function() {
                return e
            };
            return n.d(t, "a", t), t
        }, n.o = function(e, t) {
            return Object.prototype.hasOwnProperty.call(e, t)
        }, n.p = "", n(n.s = 5)
    }({
        5: function(e, t, r) {
            Component({
                relations: {
                    "./recycle-view": {
                        type: "parent",
                        linked: function() {}
                    }
                },
                properties: {},
                data: {},
                methods: {
                    heightChange: function() {}
                }
            })
        }
    });
});
require("components/miniprogram-recycle-view/recycle-item.js");
__wxRoute = 'components/miniprogram-recycle-view/recycle-view';
__wxRouteBegin = true;
__wxAppCurrentFile__ = 'components/miniprogram-recycle-view/recycle-view.js';
define("components/miniprogram-recycle-view/recycle-view.js", function(require, module, exports, window, document, frames, self, location, navigator, localStorage, history, Caches, screen, alert, confirm, prompt, XMLHttpRequest, WebSocket, Reporter, webkit, WeixinJSCore) {
    "use strict";
    var t = require("../../@babel/runtime/helpers/typeof"),
        e = require("../../utils/plugins/myComponent"),
        i = new(require("../../utils/logger"))({
            pageName: "recycle-view",
            aegisLogEnable: !0,
            wxLogEnable: !1
        });
    module.exports = function(e) {
        var i = {};

        function o(t) {
            if (i[t]) return i[t].exports;
            var r = i[t] = {
                i: t,
                l: !1,
                exports: {}
            };
            return e[t].call(r.exports, r, r.exports, o), r.l = !0, r.exports
        }
        return o.m = e, o.c = i, o.d = function(t, e, i) {
            o.o(t, e) || Object.defineProperty(t, e, {
                enumerable: !0,
                get: i
            })
        }, o.r = function(t) {
            "undefined" != typeof Symbol && Symbol.toStringTag && Object.defineProperty(t, Symbol.toStringTag, {
                value: "Module"
            }), Object.defineProperty(t, "__esModule", {
                value: !0
            })
        }, o.t = function(e, i) {
            if (1 & i && (e = o(e)), 8 & i) return e;
            if (4 & i && "object" === t(e) && e && e.__esModule) return e;
            var r = Object.create(null);
            if (o.r(r), Object.defineProperty(r, "default", {
                    enumerable: !0,
                    value: e
                }), 2 & i && "string" != typeof e)
                for (var n in e) o.d(r, n, function(t) {
                    return e[t]
                }.bind(null, n));
            return r
        }, o.n = function(t) {
            var e = t && t.__esModule ? function() {
                return t.default
            } : function() {
                return t
            };
            return o.d(e, "a", e), e
        }, o.o = function(t, e) {
            return Object.prototype.hasOwnProperty.call(t, e)
        }, o.p = "", o(o.s = 6)
    }({
        0: function(t, e, i) {
            var o = !1,
                r = void 0,
                n = void 0;
            ! function() {
                var t = wx.getSystemInfoSync();
                o = "ios" === t.platform;
                var e = t.screenWidth || 375,
                    i = t.pixelRatio || 2;
                e === r && i === n || (r = e, n = i)
            }();
            var l = /([+-]?\d+(?:\.\d+)?)rpx/gi;
            t.exports = {
                transformRpx: function(t, e) {
                    if ("string" != typeof t) return t;
                    var i = l;
                    return t.replace(i, (function(t, i) {
                        return (0 === (l = Number(i)) ? 0 : (l = l / 750 * r, 0 === (l = Math.floor(l + 1e-4)) ? 1 !== n && o ? .5 : 1 : l)) + (e ? "px" : "");
                        var l
                    }))
                }
            }
        },
        6: function(t, o, r) {
            var n = wx.getSystemInfoSync(),
                l = r(0).transformRpx;
            e({
                name: "recycle-view",
                options: {
                    multipleSlots: !0
                },
                relations: {
                    "../recycle-item/recycle-item": {
                        type: "child",
                        linked: function(t) {
                            if (!this._hasCheckSize) {
                                this._hasCheckSize = !0;
                                var e = this.boundingClientRect(this._pos.beginIndex);
                                if (!e) return;
                                setTimeout((function() {
                                    try {
                                        t.createSelectorQuery().select(".wx-recycle-item").boundingClientRect((function(t) {
                                            !t || t.width === e.width && t.height === e.height || console.warn("[recycle-view] the size in <recycle-item> is not the same with param itemSize, expect {width: " + t.width + ", height: " + t.height + "} but got {width: " + e.width + ", height: " + e.height + "}")
                                        })).exec()
                                    } catch (t) {}
                                }), 10)
                            }
                        }
                    }
                },
                properties: {
                    debug: {
                        type: Boolean,
                        value: !1
                    },
                    scrollY: {
                        type: Boolean,
                        value: !0
                    },
                    batch: {
                        type: Boolean,
                        value: !1,
                        public: !0,
                        observer: "_recycleInnerBatchDataChanged"
                    },
                    batchKey: {
                        type: String,
                        value: "batchSetRecycleData",
                        public: !0
                    },
                    scrollTop: {
                        type: Number,
                        value: 0,
                        public: !0,
                        observer: "_scrollTopChanged",
                        observeAssignments: !0
                    },
                    height: {
                        type: Number,
                        value: n.windowHeight,
                        public: !0,
                        observer: "_heightChanged"
                    },
                    width: {
                        type: Number,
                        value: n.windowWidth,
                        public: !0,
                        observer: "_widthChanged"
                    },
                    upperThreshold: {
                        type: Number,
                        value: 50,
                        public: !0
                    },
                    lowerThreshold: {
                        type: Number,
                        value: 50,
                        public: !0
                    },
                    scrollToIndex: {
                        type: Number,
                        public: !0,
                        value: 0,
                        observer: "_scrollToIndexChanged",
                        observeAssignments: !0
                    },
                    scrollWithAnimation: {
                        type: Boolean,
                        public: !0,
                        value: !1
                    },
                    enableBackToTop: {
                        type: Boolean,
                        public: !0,
                        value: !1
                    },
                    throttle: {
                        type: Boolean,
                        public: !0,
                        value: !0
                    },
                    placeholderImage: {
                        type: String,
                        public: !0,
                        value: ""
                    },
                    screen: {
                        type: Number,
                        public: !0,
                        value: 4
                    }
                },
                data: {
                    innerBeforeHeight: 0,
                    innerAfterHeight: 0,
                    innerScrollTop: 0,
                    innerScrollIntoView: "",
                    placeholderImageStr: "",
                    totalHeight: 0,
                    useInPage: !1
                },
                attached: function() {
                    this.data.placeholderImage && this.setData({
                        placeholderImageStr: l(this.data.placeholderImage, !0)
                    }), this.setItemSize({
                        array: [],
                        map: {},
                        totalHeight: 0
                    })
                },
                ready: function() {
                    var t = this;
                    this._initPosition((function() {
                        t._isReady = !0, t._updateTimerId || t._scrollViewDidScroll({
                            detail: {
                                scrollLeft: t._pos.left,
                                scrollTop: t._pos.top,
                                ignoreScroll: !0
                            }
                        }, !0)
                    }))
                },
                detached: function() {
                    this.page = null, this.context && (this.context.destroy(), this.context = null)
                },
                methods: {
                    _log: function() {
                        var t;
                        if (this.data.debug) {
                            for (var e = new Date, i = e.getHours() + ":" + e.getMinutes() + ":" + e.getSeconds() + "." + e.getMilliseconds(), o = arguments.length, r = Array(o), n = 0; n < o; n++) r[n] = arguments[n];
                            Array.prototype.splice.call(r, 0, 0, i), (t = console).log.apply(t, r)
                        }
                    },
                    _scrollToUpper: function(t) {
                        this.triggerEvent("scrolltoupper", t.detail)
                    },
                    _scrollToLower: function(t) {
                        this.triggerEvent("scrolltolower", t.detail)
                    },
                    _beginToScroll: function() {
                        this._lastScrollTop || (this._lastScrollTop = this._pos && (this._pos.top || 0))
                    },
                    _clearList: function(t) {
                        this.currentScrollTop = 0, this._lastScrollTop = 0;
                        var e = this._pos;
                        e.beginIndex = this._pos.endIndex = -1, e.afterHeight = e.minTop = e.maxTop = 0, this.page._recycleViewportChange({
                            detail: {
                                data: e,
                                id: this.id
                            }
                        }, t)
                    },
                    _isValid: function() {
                        return this.page && this.context && this.context.isDataReady
                    },
                    _scrollViewDidScroll: function(t, e) {
                        if (this._isValid())
                            if (t.detail.ignoreScroll || this.triggerEvent("scroll", t.detail), this.currentScrollTop = t.detail.scrollTop, this._pos.height && this.sizeArray.length)
                                if (this._isScrollingWithAnimation) this._isScrollingWithAnimation = !1;
                                else {
                                    var i = this._pos,
                                        o = this,
                                        r = t.detail.scrollLeft,
                                        n = t.detail.scrollTop,
                                        l = Math.abs(n - this._lastScrollTop);
                                    if (this._log("scrolling:\n        scrollTop=".concat(n, ",\n        pos.top=").concat(i.top, ",\n        abs=").concat(Math.abs(n - i.top), ",\n        pos.height x1.5 =").concat(i.height, "*1.5 = ").concat(1.5 * i.height, ",\n        ")), !e && Math.abs(n - i.top) < 1.5 * i.height) this._log("【not exceed height");
                                    else {
                                        this._log("超过了滚动区域Height*1.5"), this._lastScrollTop = n;
                                        this.data.screen;
                                        this._calcViewportIndexes(r, n, (function(s, a, h, c, d) {
                                            o._log("scrollDistance", l, "indexes", s, a), e || i.beginIndex !== s || i.endIndex !== a || i.minTop !== h || i.afterHeight !== c ? (o._log("【check】before setData, old pos is", i.minTop, i.maxTop, h, d), o._throttle = !1, i.left = r, i.top = n, i.beginIndex = s, i.endIndex = a, i.minTop = h, i.maxTop = d, i.afterHeight = c, i.ignoreBeginIndex = i.ignoreEndIndex = -1, o.page._recycleViewportChange({
                                                detail: {
                                                    data: o._pos,
                                                    id: o.id
                                                }
                                            }, (function() {
                                                t.detail.cb && t.detail.cb()
                                            }))) : o._log("------------is the same beginIndex and endIndex")
                                        }))
                                    }
                                } else this._clearList(t.detail.cb)
                    },
                    _calcViewportIndexes: function(t, e, i) {
                        var o = this;
                        this._getBeforeSlotHeight((function() {
                            var r = o.__calcViewportIndexes(t, e),
                                n = r.beginIndex,
                                l = r.endIndex,
                                s = r.minTop,
                                a = r.afterHeight,
                                h = r.maxTop;
                            i && i(n, l, s, a, h)
                        }))
                    },
                    _getBeforeSlotHeight: function(t) {
                        this._log("beforeSlotHeight = ".concat(this.data.beforeSlotHeight)), void 0 !== this.data.beforeSlotHeight ? t && t(this.data.beforeSlotHeight) : this.reRender(t)
                    },
                    _getAfterSlotHeight: function(t) {
                        void 0 !== this.data.afterSlotHeight ? t && t(this.data.afterSlotHeight) : this.reRender(t)
                    },
                    _getIndexes: function(t, e) {
                        if (t === e && 0 === e) return {
                            beginIndex: -1,
                            endIndex: -1
                        };
                        for (var i = Math.floor(t / 200), o = Math.ceil(e / 200), r = Math.floor(this.data.width / 200), n = void 0, l = void 0, s = this.sizeMap, a = i; a <= o; a++)
                            for (var h = 0; h < r; h++) {
                                var c = a + "." + h;
                                if (s[c])
                                    for (var d = 0; d < s[c].length; d++) void 0 !== n ? n > s[c][d] ? n = s[c][d] : l < s[c][d] && (l = s[c][d]) : n = l = s[c][d]
                            }
                        return {
                            beginIndex: n,
                            endIndex: l
                        }
                    },
                    _isIndexValid: function(t, e) {
                        return !(void 0 === t || -1 === t || void 0 === e || -1 === e || e >= this.sizeArray.length)
                    },
                    __calcViewportIndexes: function(t, e) {
                        if (!this.sizeArray.length) return {};
                        var i = this._pos;
                        void 0 === t && (t = i.left), void 0 === e && (e = i.top);
                        var o = this.data.beforeSlotHeight || 0,
                            r = this.data.screen,
                            n = e - i.height * r - o,
                            l = e + i.height * r - o;
                        l > this.totalHeight && (n -= l - this.totalHeight, l = this.totalHeight), n < o && (l = Math.min(l, i.height * r - o), n = 0);
                        var s = this._getIndexes(n, l),
                            a = s.beginIndex,
                            h = s.endIndex;
                        if (h >= this.sizeArray.length && (h = this.sizeArray.length - 1), !this._isIndexValid(a, h)) return {
                            beginIndex: -1,
                            endIndex: -1,
                            minTop: 0,
                            afterHeight: 0,
                            maxTop: 0
                        };
                        var c = this.sizeArray[h].beforeHeight + this.sizeArray[h].height,
                            d = this.sizeArray[a].beforeHeight,
                            g = this.totalHeight - c;
                        return this._log("render indexes: [".concat(a, ", ").concat(h, "], total ").concat(h - a + 1)), {
                            beginIndex: a,
                            endIndex: h,
                            minTop: d,
                            afterHeight: g,
                            maxTop: l
                        }
                    },
                    setItemSize: function(t) {
                        this.sizeArray = t.array, this.sizeMap = t.map, t.totalHeight !== this.totalHeight && this.setData({
                            totalHeight: t.totalHeight,
                            useInPage: this.useInPage || !1
                        }), this.totalHeight = t.totalHeight
                    },
                    setList: function(t, e) {
                        this._currentSetDataKey = t, this._currentSetDataList = e
                    },
                    setPage: function(t) {
                        this.page = t
                    },
                    forceUpdate: function(t, e) {
                        var i = this;
                        if (!this._isReady) return this._updateTimerId && clearTimeout(this._updateTimerId), void(this._updateTimerId = setTimeout((function() {
                            i.forceUpdate(t, e)
                        }), 10));
                        this._updateTimerId = null;
                        var o = this;
                        e ? this.reRender((function() {
                            o._scrollViewDidScroll({
                                detail: {
                                    scrollLeft: o._pos.left,
                                    scrollTop: o.currentScrollTop || o.data.scrollTop || 0,
                                    ignoreScroll: !0,
                                    cb: t
                                }
                            }, !0)
                        })) : this._scrollViewDidScroll({
                            detail: {
                                scrollLeft: o._pos.left,
                                scrollTop: o.currentScrollTop || o.data.scrollTop || 0,
                                ignoreScroll: !0,
                                cb: t
                            }
                        }, !0)
                    },
                    _initPosition: function(t) {
                        var e = this;
                        e.createSelectorQuery().in(e).select("#content").boundingClientRect((function(o) {
                            if (o) {
                                var r = 0 < e.data.width ? e.data.width : o.width,
                                    n = 0 < e.data.height ? e.data.height : o.height;
                                e._log("修改草率的w&h: w=".concat(r, ", h=").concat(n)), e._pos = {
                                    left: e.data.scrollLeft || 0,
                                    top: e.data.scrollTop || 0,
                                    width: r,
                                    height: n,
                                    direction: 0
                                }, e.reRender(t)
                            } else i.error("cannot get rect from boundingClientRect for #content")
                        })).exec()
                    },
                    _widthChanged: function(t) {
                        return this._isReady ? (this._pos.width = t, this._log("pos.width set to: ".concat(this._pos.width)), this.forceUpdate(), t) : t
                    },
                    _heightChanged: function(t) {
                        return this._isReady ? (this._pos.height = Math.max(500, t), this._log("pos.height set to: ".concat(this._pos.height)), this.forceUpdate(), t) : t
                    },
                    reRender: function(t) {
                        var e = this,
                            o = void 0,
                            r = void 0,
                            n = this;

                        function l() {
                            n._lastBeforeSlotHeight === o && n._lastAfterSlotHeight === r || n.setData({
                                hasBeforeSlotHeight: !0,
                                hasAfterSlotHeight: !0,
                                beforeSlotHeight: o,
                                afterSlotHeight: r
                            }), n._lastBeforeSlotHeight = o, n._lastAfterSlotHeight = r, t && t()
                        }
                        var s = !1,
                            a = !1;
                        this.setData({
                            hasBeforeSlotHeight: !1,
                            hasAfterSlotHeight: !1
                        }, (function() {
                            e.createSelectorQuery().in(n).select(".slot-before").boundingClientRect((function(t) {
                                t ? (o = t.height, s = !0, a && l && l()) : i.error("cannot get rect from boundingClientRect for .slot-before")
                            })).exec(), e.createSelectorQuery().in(n).select(".slot-after").boundingClientRect((function(t) {
                                t ? (r = t.height, a = !0, s && l && l()) : i.error("cannot get rect from boundingClientRect for .slot-after")
                            })).exec()
                        }))
                    },
                    _setInnerBeforeAndAfterHeight: function(t) {
                        void 0 !== t.beforeHeight && (this._tmpBeforeHeight = t.beforeHeight), t.afterHeight && (this._tmpAfterHeight = t.afterHeight)
                    },
                    _recycleInnerBatchDataChanged: function(t) {
                        var e = this;
                        if (void 0 !== this._tmpBeforeHeight) {
                            var i = {
                                innerBeforeHeight: this._tmpBeforeHeight || 0,
                                innerAfterHeight: this._tmpAfterHeight || 0
                            };
                            void 0 !== this._tmpInnerScrollTop && (i.innerScrollTop = this._tmpInnerScrollTop);
                            var o = {},
                                r = !1;
                            void 0 !== this._currentSetDataKey && (o[this._currentSetDataKey] = this._currentSetDataList, r = !0);
                            var n = this.data.scrollWithAnimation;
                            r && e.page.setData(o), e.setData(i, (function() {
                                e.setData({
                                    scrollWithAnimation: n
                                }), "function" == typeof t && t()
                            })), delete this._currentSetDataKey, delete this._currentSetDataList, this._tmpBeforeHeight = void 0, this._tmpAfterHeight = void 0, this._tmpInnerScrollTop = void 0
                        }
                    },
                    _renderByScrollTop: function(t) {
                        this._scrollViewDidScroll({
                            detail: {
                                scrollLeft: this._pos.scrollLeft,
                                scrollTop: t,
                                ignoreScroll: !0
                            }
                        }, !0), this.data.scrollWithAnimation && (this._isScrollingWithAnimation = !0), this.setData({
                            innerScrollTop: t
                        })
                    },
                    _scrollTopChanged: function(t, e) {
                        var i = this;
                        return this._isInitScrollTop || 0 !== t ? (this.currentScrollTop = t, this._isReady ? (this._isInitScrollTop = !0, this._scrollTopTimerId = null, void 0 === this._lastScrollTop && (this._lastScrollTop = this.data.scrollTop), Math.abs(t - this._lastScrollTop) < this._pos.height ? (this.setData({
                            innerScrollTop: t
                        }), t) : (this._isScrollTopChanged ? this._renderByScrollTop(t) : setTimeout((function() {
                            i._isScrollTopChanged = !0, i._renderByScrollTop(t)
                        }), 10), t)) : (this._scrollTopTimerId && clearTimeout(this._scrollTopTimerId), this._scrollTopTimerId = setTimeout((function() {
                            i._scrollTopChanged(t, e)
                        }), 10), t)) : (this._isInitScrollTop = !0, t)
                    },
                    _scrollToIndexChanged: function(t, e) {
                        var i = this;
                        if (!this._isInitScrollToIndex && 0 === t) return this._isInitScrollToIndex = !0, t;
                        if (!this._isReady) return this._scrollToIndexTimerId && clearTimeout(this._scrollToIndexTimerId), this._scrollToIndexTimerId = setTimeout((function() {
                            i._scrollToIndexChanged(t, e)
                        }), 10), t;
                        this._isInitScrollToIndex = !0, this._scrollToIndexTimerId = null, void 0 === this._lastScrollTop && (this._lastScrollTop = this.data.scrollTop);
                        var o = this.boundingClientRect(t);
                        if (!o) return t;
                        var r = o.top + (this.data.beforeSlotHeight || 0);
                        return this.currentScrollTop = r, Math.abs(r - this._lastScrollTop) < this._pos.height ? (this.setData({
                            innerScrollTop: r
                        }), t) : (this._isScrollToIndexChanged ? this._renderByScrollTop(r) : setTimeout((function() {
                            i._isScrollToIndexChanged = !0, i._renderByScrollTop(r)
                        }), 10), t)
                    },
                    boundingClientRect: function(t) {
                        return t < 0 || t >= this.sizeArray.length ? null : {
                            left: 0,
                            top: this.sizeArray[t].beforeHeight,
                            width: this.sizeArray[t].width,
                            height: this.sizeArray[t].height
                        }
                    },
                    getIndexesInViewport: function(t) {
                        t || (t = 1);
                        var e = this.currentScrollTop,
                            i = e + t;
                        i < 0 && (i = 0);
                        var o = e + this.data.height - t;
                        o > this.totalHeight && (o = this.totalHeight);
                        for (var r = [], n = 0; n < this.sizeArray.length && (this.sizeArray[n].beforeHeight + this.sizeArray[n].height >= i && this.sizeArray[n].beforeHeight <= o && r.push(n), !(this.sizeArray[n].beforeHeight > o)); n++);
                        return this._log("should be in [".concat(i, ", ").concat(o, "], index satisfied from ").concat(r[0], " to ").concat(r[r.length - 1], ", total ").concat(r.length)), r
                    },
                    getTotalHeight: function() {
                        return this.totalHeight
                    },
                    setUseInPage: function(t) {
                        this.useInPage = t
                    },
                    setPlaceholderImage: function(t, e) {
                        var i = ["data:image/svg+xml,%3Csvg height='" + e.height + "' width='" + e.width + "' xmlns='http://www.w3.org/2000/svg'%3E"];
                        t.forEach((function(t) {
                            i.push("%3Crect width='" + t.width + "' x='" + t.left + "' height='" + t.height + "' y='" + t.top + "' style='fill:rgb(204,204,204);' /%3E")
                        })), i.push("%3C/svg%3E"), this.setData({
                            placeholderImageStr: i.join("")
                        })
                    }
                },
                lifetimes: {
                    created: function() {}
                }
            })
        }
    });
});
require("components/miniprogram-recycle-view/recycle-view.js");
__wxRoute = 'components/navigation-bar/navigation-bar';
__wxRouteBegin = true;
__wxAppCurrentFile__ = 'components/navigation-bar/navigation-bar.js';
define("components/navigation-bar/navigation-bar.js", function(require, module, exports, window, document, frames, self, location, navigator, localStorage, history, Caches, screen, alert, confirm, prompt, XMLHttpRequest, WebSocket, Reporter, webkit, WeixinJSCore) {
    "use strict";
    var t = require("../../@babel/runtime/helpers/typeof");
    module.exports = function(e) {
        var n = {};

        function a(t) {
            if (n[t]) return n[t].exports;
            var i = n[t] = {
                i: t,
                l: !1,
                exports: {}
            };
            return e[t].call(i.exports, i, i.exports, a), i.l = !0, i.exports
        }
        return a.m = e, a.c = n, a.d = function(t, e, n) {
            a.o(t, e) || Object.defineProperty(t, e, {
                enumerable: !0,
                get: n
            })
        }, a.r = function(t) {
            "undefined" != typeof Symbol && Symbol.toStringTag && Object.defineProperty(t, Symbol.toStringTag, {
                value: "Module"
            }), Object.defineProperty(t, "__esModule", {
                value: !0
            })
        }, a.t = function(e, n) {
            if (1 & n && (e = a(e)), 8 & n) return e;
            if (4 & n && "object" === t(e) && e && e.__esModule) return e;
            var i = Object.create(null);
            if (a.r(i), Object.defineProperty(i, "default", {
                    enumerable: !0,
                    value: e
                }), 2 & n && "string" != typeof e)
                for (var o in e) a.d(i, o, function(t) {
                    return e[t]
                }.bind(null, o));
            return i
        }, a.n = function(t) {
            var e = t && t.__esModule ? function() {
                return t.default
            } : function() {
                return t
            };
            return a.d(e, "a", e), e
        }, a.o = function(t, e) {
            return Object.prototype.hasOwnProperty.call(t, e)
        }, a.p = "", a(a.s = 3)
    }({
        3: function(t, e, n) {
            Component({
                options: {
                    multipleSlots: !0,
                    addGlobalClass: !0
                },
                properties: {
                    extClass: {
                        type: String,
                        value: ""
                    },
                    title: {
                        type: String,
                        value: ""
                    },
                    background: {
                        type: String,
                        value: ""
                    },
                    color: {
                        type: String,
                        value: ""
                    },
                    back: {
                        type: Boolean,
                        value: !0
                    },
                    loading: {
                        type: Boolean,
                        value: !1
                    },
                    animated: {
                        type: Boolean,
                        value: !0
                    },
                    show: {
                        type: Boolean,
                        value: !0,
                        observer: "_showChange"
                    },
                    delta: {
                        type: Number,
                        value: 1
                    },
                    hide: {
                        type: Boolean,
                        value: !1
                    },
                    backArrowColor: {
                        type: String,
                        value: ""
                    }
                },
                data: {
                    displayStyle: ""
                },
                attached: function() {
                    this._setNavbarSize()
                },
                pageLifetimes: {
                    show: function() {},
                    hide: function() {},
                    resize: function(t) {}
                },
                methods: {
                    fixNavbar: function() {
                        this._setNavbarSize()
                    },
                    _showChange: function(t) {
                        var e = "";
                        e = this.data.animated ? "opacity: " + (t ? "1" : "0") + ";-webkit-transition:opacity 0.5s;transition:opacity 0.5s;" : "display: " + (t ? "" : "none"), this.setData({
                            displayStyle: e
                        })
                    },
                    back: function() {
                        this.triggerEvent("customback", {}, {})
                    },
                    _setNavbarSize: function() {
                        var t = this,
                            e = !!wx.getMenuButtonBoundingClientRect,
                            n = wx.getMenuButtonBoundingClientRect ? wx.getMenuButtonBoundingClientRect() : null;
                        wx.getSystemInfo({
                            success: function(a) {
                                var i = !!(a.system.toLowerCase().search("ios") + 1),
                                    o = 40;
                                n && (o = n.bottom + n.top), o < 40 && (o = 40);
                                t.setData({
                                    ios: i,
                                    statusBarHeight: 0,
                                    innerWidth: e ? ";width:" + n.left + "px" : "",
                                    innerPaddingRight: e ? ";padding-right:" + (a.windowWidth - n.left) + "px" : ";",
                                    leftWidth: e ? "width:" + (a.windowWidth - n.left) + "px" : ";",
                                    capsuleHeight: e ? o : i ? 44 : 48,
                                    navbarH: o + t.data.statusBarHeight
                                }), t.triggerEvent("NavbarHeightGot", {
                                    navbarH: o + t.data.statusBarHeight
                                }, {})
                            }
                        })
                    }
                }
            })
        }
    });
});
require("components/navigation-bar/navigation-bar.js");
__wxRoute = 'components/nickname-dialog/nickname-dialog';
__wxRouteBegin = true;
__wxAppCurrentFile__ = 'components/nickname-dialog/nickname-dialog.js';
define("components/nickname-dialog/nickname-dialog.js", function(require, module, exports, window, document, frames, self, location, navigator, localStorage, history, Caches, screen, alert, confirm, prompt, XMLHttpRequest, WebSocket, Reporter, webkit, WeixinJSCore) {
    "use strict";
    var n = require("../../@babel/runtime/helpers/objectSpread2");
    Component({
        properties: {
            key: {
                type: String,
                value: ""
            },
            closable: {
                type: Boolean,
                value: !1
            },
            closeOnTapOverlay: {
                type: Boolean,
                value: !1
            },
            onClose: {
                type: Function,
                value: function() {}
            },
            buttonStyle: {
                type: String,
                value: "flat"
            },
            className: {
                type: String,
                value: ""
            },
            mainContentClassName: {
                type: String,
                value: ""
            },
            title: {
                type: String,
                value: ""
            },
            content: {
                type: String,
                value: ""
            },
            contentArr: {
                type: Array,
                value: []
            },
            contentIsLeft: {
                type: Boolean,
                value: !1
            },
            okBtn: {
                type: Object,
                value: {
                    text: "确认",
                    onClick: null,
                    isOpen: !1,
                    "open-type": "",
                    "app-parameter": "",
                    "show-message-card": "",
                    "send-message-img": "",
                    "send-message-title": "",
                    bindlaunchapp: null,
                    bindgetuserinfo: null,
                    binderror: null
                }
            },
            cancelBtn: {
                type: Object,
                value: {
                    text: "取消",
                    onClick: null,
                    isOpen: !1,
                    "open-type": "",
                    "app-parameter": "",
                    "show-message-card": "",
                    "send-message-img": "",
                    "send-message-title": "",
                    bindlaunchapp: null,
                    bindgetuserinfo: null,
                    binderror: null
                }
            },
            nicknamePlaceholder: {
                type: String,
                value: "请输入您的名称"
            },
            nicknameMaxLen: {
                type: Number,
                value: 36
            }
        },
        observers: {},
        data: {
            visible: !1,
            key: "",
            nickname: "",
            nicknameFocus: !1
        },
        attached: function() {},
        detached: function() {},
        methods: {
            _getInitData: function() {
                return {
                    visible: !1,
                    closable: !1,
                    closeOnTapOverlay: !1,
                    key: "",
                    onClose: function() {},
                    buttonStyle: "flat",
                    className: "",
                    mainContentClassName: "",
                    title: "",
                    content: "",
                    cancelBtn: {
                        text: "取消",
                        onClick: null
                    },
                    okBtn: {
                        text: "确认",
                        onClick: null
                    }
                }
            },
            _init: function() {
                var n = this._getInitData();
                this.setData(n)
            },
            _handleCoverViewTap: function() {
                if (this.closeOnTapOverlay) {
                    var n = this.data.onClose;
                    this.close(), n && n()
                }
            },
            _onCloseBtnClick: function(n) {
                var t = this.data.onClose;
                this.close(), t && t(n)
            },
            close: function() {
                var t = this._getInitData();
                this.setData(n(n({}, t), {}, {
                    visible: !1
                }))
            },
            open: function() {
                var t = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {},
                    e = arguments.length > 1 && void 0 !== arguments[1] && arguments[1],
                    o = e ? this._getInitData() : {},
                    a = t.closable,
                    i = void 0 !== a && a,
                    l = t.closeOnTapOverlay,
                    c = void 0 !== l && l,
                    s = t.onClose,
                    u = void 0 === s ? function() {} : s,
                    r = t.key,
                    d = void 0 === r ? "" : r,
                    p = t.buttonStyle,
                    v = void 0 === p ? "flat" : p,
                    f = t.className,
                    h = void 0 === f ? "" : f,
                    y = t.mainContentClassName,
                    k = void 0 === y ? "" : y,
                    m = t.title,
                    C = void 0 === m ? "" : m,
                    b = t.content,
                    g = void 0 === b ? "" : b,
                    B = t.contentIsLeft,
                    O = void 0 !== B && B,
                    _ = t.okBtn,
                    N = void 0 === _ ? {
                        text: "确认",
                        onClick: null
                    } : _,
                    S = t.cancelBtn,
                    x = void 0 === S ? {
                        text: "取消",
                        onClick: null
                    } : S,
                    I = t.contentArr,
                    D = void 0 === I ? [] : I;
                o.visible = !0, this.setData(n(n({}, o), {}, {
                    closable: i,
                    closeOnTapOverlay: c,
                    onClose: u,
                    key: d,
                    buttonStyle: v,
                    className: h,
                    mainContentClassName: k,
                    title: C,
                    content: g,
                    contentIsLeft: O,
                    okBtn: N,
                    cancelBtn: x,
                    contentArr: D
                }))
            },
            _onClickContentArr: function(n) {
                var t, e, o, a, i, l = null == n || null === (t = n.target) || void 0 === t || null === (e = t.dataset) || void 0 === e ? void 0 : e.idx,
                    c = null === (o = this.data) || void 0 === o || null === (a = o.contentArr) || void 0 === a ? void 0 : a[l];
                null == c || null === (i = c.onClick) || void 0 === i || i.call(c)
            },
            getKey: function() {
                return this.data.key
            },
            _onCancelBtnClick: function(n) {
                var t = (this.data.cancelBtn || {}).onClick;
                "function" == typeof t && t(n), (this.data.cancelBtn || {}).isOpen || this.close()
            },
            _onCancelBtnLaunchApp: function(n) {
                var t = (this.data.cancelBtn || {}).bindlaunchapp;
                "function" == typeof t && t(n), this.close()
            },
            _onCancelBtnGetUserInfo: function(n) {
                var t = (this.data.cancelBtn || {}).bindgetuserinfo;
                "function" == typeof t && t(n), this.close()
            },
            _onCancelBtnError: function(n) {
                var t = (this.data.cancelBtn || {}).binderror;
                "function" == typeof t && t(n), this.close()
            },
            _onOkBtnClick: function(n) {
                var t = this.data.okBtn || {},
                    e = t.onClick,
                    o = t.isOpen;
                "function" == typeof e && e(n), o || this.close()
            },
            _onOkBtnLaunchApp: function(n) {
                var t = (this.data.okBtn || {}).bindlaunchapp;
                "function" == typeof t && t(n), this.close()
            },
            _onOkBtnGetUserInfo: function(n) {
                var t = (this.data.okBtn || {}).bindgetuserinfo;
                "function" == typeof t && t(n), this.close()
            },
            _onOkBtnError: function(n) {
                var t = this.data.okBtn || {},
                    e = t.binderror,
                    o = t.dialogNoClose;
                "function" == typeof e && e(n), !o && this.close()
            },
            onNicknameInput: function(n) {
                return this.setData({
                    nickname: n.detail.value
                }), n.detail.value
            },
            getNickname: function() {
                return this.data.nickname
            },
            setNicknameInputFocus: function() {
                this.setData({
                    nicknameFocus: !0
                })
            }
        },
        behaviors: ["wx://component-export"],
        export: function() {
            return {
                component: this
            }
        }
    });
});
require("components/nickname-dialog/nickname-dialog.js");
__wxRoute = 'components/slider-message-dialog/slider-message-dialog';
__wxRouteBegin = true;
__wxAppCurrentFile__ = 'components/slider-message-dialog/slider-message-dialog.js';
define("components/slider-message-dialog/slider-message-dialog.js", function(require, module, exports, window, document, frames, self, location, navigator, localStorage, history, Caches, screen, alert, confirm, prompt, XMLHttpRequest, WebSocket, Reporter, webkit, WeixinJSCore) {
    "use strict";
    Component({
        options: {
            multipleSlots: !0
        },
        properties: {
            height: {
                type: String,
                value: 228
            }
        },
        data: {
            show: !1
        },
        attached: function() {
            console.log("slider-message-dialog attached")
        },
        methods: {
            show: function() {
                this.setData({
                    show: !0
                })
            },
            hide: function() {
                this.setData({
                    show: !1
                })
            }
        }
    });
});
require("components/slider-message-dialog/slider-message-dialog.js");
__wxRoute = 'components/toast/toast';
__wxRouteBegin = true;
__wxAppCurrentFile__ = 'components/toast/toast.js';
define("components/toast/toast.js", function(require, module, exports, window, document, frames, self, location, navigator, localStorage, history, Caches, screen, alert, confirm, prompt, XMLHttpRequest, WebSocket, Reporter, webkit, WeixinJSCore) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
        value: !0
    });
    var t = require("../../@babel/runtime/helpers/typeof");
    Component({
        properties: {
            title: {
                type: String,
                value: ""
            },
            duration: {
                type: Number,
                value: 1500
            },
            icon: {
                type: String,
                value: "success"
            },
            image: {
                type: String,
                value: ""
            },
            zIndex: {
                type: Number,
                value: 999
            }
        },
        data: {
            showFadeAnimation: !1,
            show: !1,
            closeTimer: -1,
            fadeAnimationTimer: -1,
            isMutiLineText: !1
        },
        methods: {
            checkIsMutiLine: function(t) {
                var e, i;
                if (t && 0 !== t.length && "string" == typeof t) {
                    var o = null === (e = t.match) || void 0 === e ? void 0 : e.call(t, /[^\x00-\x80]/g);
                    return (null !== (i = null == o ? void 0 : o.length) && void 0 !== i ? i : 0) > 17.4
                }
            },
            getInitProps: function() {
                return {
                    title: "",
                    duration: 1500,
                    icon: "success",
                    image: "",
                    zIndex: 999
                }
            },
            show: function(e) {
                var i = this;
                if (e.title)
                    if ("string" == typeof e.title) {
                        var o = this.getInitProps(),
                            s = Object.assign({}, o, e);
                        s.isMutiLineText = this.checkIsMutiLine(e.title), s.showFadeAnimation = !1, s.show = !0, this.setData(s), this.data.closeTimer && clearTimeout(this.data.closeTimer), this.properties.duration > 0 && (this.data.closeTimer = setTimeout((function() {
                            i.close()
                        }), this.properties.duration))
                    } else console.error("[small-tip]字段title类型非法，应该是string，现在是" + t(e.title));
                else console.error("[small-tip]字段title是必须值")
            },
            close: function() {
                var t = this;
                this.setData({
                    showFadeAnimation: !0
                }), this.data.fadeAnimationTimer && clearTimeout(this.data.fadeAnimationTimer), this.data.fadeAnimationTimer = setTimeout((function() {
                    t.setData({
                        show: !1
                    })
                }), 200)
            },
            handleClickWrapper: function() {}
        },
        behaviors: ["wx://component-export"],
        export: function() {
            return {
                component: {
                    show: this.show.bind(this),
                    close: this.close.bind(this)
                }
            }
        }
    });
});
require("components/toast/toast.js");
__wxRoute = 'pages/index/index';
__wxRouteBegin = true;
__wxAppCurrentFile__ = 'pages/index/index.js';
define("pages/index/index.js", function(require, module, exports, window, document, frames, self, location, navigator, localStorage, history, Caches, screen, alert, confirm, prompt, XMLHttpRequest, WebSocket, Reporter, webkit, WeixinJSCore) {
    "use strict";
    require("../../@babel/runtime/helpers/Arrayincludes");
    var e, t = (e = require("../../utils/loggers/index")) && e.__esModule ? e : {
            default: e
        },
        n = require("../../configs/MsgCfgIndex");
    var i, o = require("../../clients/BeaconClient"),
        a = require("../../stores/UserStore"),
        r = require("../../actions/UserAction"),
        s = require("../../actions/AppAction"),
        c = require("../../stores/AppStore"),
        u = require("../../clients/WemeetClient"),
        g = require("../../utils/util.js").isPad,
        l = new t.default({
            pageName: "index",
            aegisLogEnable: !0,
            wxLogEnable: !1
        }),
        d = !1,
        p = !0;
    Page({
        data: {
            exit: {
                show: !1,
                content: "",
                btnText: ""
            },
            currentYear: (new Date).getFullYear()
        },
        onLoad: function(e) {
            var t = this;
            s.pageExposed("index"), l.info("onLoad: ".concat(JSON.stringify(e)));
            var n = (e || {}).chn,
                a = void 0 === n ? "" : n;
            a && o.report("mp_open_channel", {
                chn: a
            }), i = e;
            var c = Object.keys(e || {}).length;
            p = 0 === c, this.msgDialog = this.selectComponent("#message-dialog").component, this.makeSureLoginStateIsValid().then((function() {
                t.init()
            })).catch((function(e) {
                t.showExitDialog({
                    content: "加载失败，请退出重试",
                    btnText: "确定"
                }), r.setOpenId(""), l.warn("index onLoad error since got openID failed: ".concat(e))
            }))
        },
        makeSureLoginStateIsValid: function() {
            return new Promise((function(e, t) {
                var n = !!a.getXMPPToken() && r.isXMPPTokenValid();
                n || r.setPhoneNum("");
                var i = !!a.getOpenID();
                if (i && r.isCGITokenValid() && n) e("");
                else {
                    var o = "";
                    o = i ? n ? "cgi token not valid" : "xmpp token not valid" : "openID not found", l.warn("ready to do WeMeet-Login, because: ".concat(o)), r.doLogin().then((function() {
                        e("")
                    })).catch((function(e) {
                        t(e)
                    }))
                }
            }))
        },
        init: function() {
            var e = this;
            if (this.setSceneReport(), !c.getIsQYWX() || c.isSupportQYWX())
                if (c.getEnvSwitchEnable() || c.getIsSupportDevice())
                    if (a.isAccountIllegal()) this.showExitDialog({
                        content: "账号状态异常",
                        btnText: "确定"
                    });
                    else {
                        if (!c.getEnvSwitchEnable() && !c.isDevtools() && !c.getIsSupportMixAudio()) return this.showExitDialog({
                            content: "您的微信版本过低，请更新至最新版本后重试",
                            btnText: "关闭"
                        }), void o.report("mp_wechat_ver_less_than_mixaudio_required");
                        if (c.getIsAndroid8027Bug()) {
                            var t = function() {
                                setTimeout((function() {
                                    e.msgDialog.open(n.android8027BugDialog)
                                }), 0)
                            };
                            return n.android8027BugDialog.okBtn.onClick = function() {
                                l.reportCls("cls_android_bug_8027_fail_1"), wx.updateWeChatApp(), t()
                            }, n.android8027BugDialog.cancelBtn.onClick = function() {
                                l.reportCls("cls_android_bug_8027_fail_0"), t()
                            }, t(), void l.reportCls("cls_android_bug_8027_success")
                        }
                        u.isXMPPTokenValid() && (p && d ? o.report("tiny_house_clicked") : this.jumpToJoinMeetingPage()), this.fetchSubscribeStatus()
                    } else {
                var i = g(),
                    r = c.isOhOs() ? "腾讯会议小程序暂不支持鸿蒙系统。" : "腾讯会议小程序暂不支持在".concat(i ? "pad" : "PC", "端打开，请通过手机使用。");
                this.showExitDialog({
                    content: r,
                    btnText: "知道了"
                })
            } else this.showExitDialog({
                content: "企业微信版本过低，请升级后重新打开",
                btnText: "知道了"
            })
        },
        onGoOnTapped: function() {
            this.jumpToJoinMeetingPage()
        },
        jumpToJoinMeetingPage: function() {
            var e = "";
            Object.keys(i || {}).forEach((function(t) {
                e += e ? "&" : "?", e += "".concat(t, "=").concat(i[t])
            })), d || (d = !0), wx.redirectTo({
                url: "../sub-preMeeting/join-meeting/join-meeting".concat(e)
            })
        },
        fetchSubscribeStatus: function() {
            var e = a.getUnionId(),
                t = a.getOpenID(),
                n = a.getCGIToken();
            r.getUserSubscribeStatus(t, e, n)
        },
        goPrivacyPage: function() {
            wx.navigateTo({
                url: "./privacy/index"
            })
        },
        setSceneReport: function() {
            var e = wx.getLaunchOptionsSync(),
                t = e.query,
                n = e.scene,
                i = e.referrerInfo;
            t && t.chn && [1020, 1035, 1037, 1043, 1058, 1067, 1074, 1082, 1091].includes(n) && o.report("open_mp_by_scene", {
                scene: n,
                chn: t.chn,
                appId: (i || {}).appId || ""
            })
        },
        showExitDialog: function(e) {
            this.setData({
                "exit.content": e.content || "异常，请重新进入",
                "exit.btnText": e.btnText || "确定",
                "exit.show": !0
            })
        }
    });
});
require("pages/index/index.js");
__wxRoute = 'pages/face-verify/face-verify';
__wxRouteBegin = true;
__wxAppCurrentFile__ = 'pages/face-verify/face-verify.js';
define("pages/face-verify/face-verify.js", function(require, module, exports, window, document, frames, self, location, navigator, localStorage, history, Caches, screen, alert, confirm, prompt, XMLHttpRequest, WebSocket, Reporter, webkit, WeixinJSCore) {
    "use strict";
    var e = require("../../utils/logger"),
        o = require("../../utils/util"),
        n = new e({
            pageName: "preVerifyFace",
            aegisLogEnable: !0,
            wxLogEnable: !0
        });
    Page({
        data: {},
        onLoad: function(e) {
            console.log("<<< onLoad option face-verify pre:", JSON.stringify(e)), n.info("face-verify pre onLoad: ".concat(JSON.stringify(e)));
            var i = "/pages/sub-verify/face-verify/face-verify".concat(o.getQueryString(e));
            console.log("-----------\x3e>>>>>>", i), wx.redirectTo({
                url: i
            })
        },
        onReady: function() {},
        onShow: function() {},
        onHide: function() {},
        onUnload: function() {},
        onPullDownRefresh: function() {},
        onReachBottom: function() {},
        onShareAppMessage: function() {}
    });
});
require("pages/face-verify/face-verify.js");
__wxRoute = 'pages/detail/detail';
__wxRouteBegin = true;
__wxAppCurrentFile__ = 'pages/detail/detail.js';
define("pages/detail/detail.js", function(require, module, exports, window, document, frames, self, location, navigator, localStorage, history, Caches, screen, alert, confirm, prompt, XMLHttpRequest, WebSocket, Reporter, webkit, WeixinJSCore) {
    "use strict";
    var o = require("../../utils/logger"),
        n = require("../../utils/util"),
        e = new o({
            pageName: "preDetail",
            aegisLogEnable: !0,
            wxLogEnable: !0
        });
    Page({
        data: {},
        onLoad: function(o) {
            console.log("<<< onLoad option detail pre:", JSON.stringify(o)), e.info("detail pre onLoad: ".concat(JSON.stringify(o)));
            var i = "/pages/sub-detail/detail/detail".concat(n.getQueryString(o));
            console.log("-----------\x3e>>>>>>", i), wx.redirectTo({
                url: i
            })
        },
        onReady: function() {},
        onShow: function() {},
        onHide: function() {},
        onUnload: function() {},
        onPullDownRefresh: function() {},
        onReachBottom: function() {},
        onShareAppMessage: function() {}
    });
});
require("pages/detail/detail.js");
__wxRoute = 'pages/bigHouseCard/bigHouseCard';
__wxRouteBegin = true;
__wxAppCurrentFile__ = 'pages/bigHouseCard/bigHouseCard.js';
define("pages/bigHouseCard/bigHouseCard.js", function(require, module, exports, window, document, frames, self, location, navigator, localStorage, history, Caches, screen, alert, confirm, prompt, XMLHttpRequest, WebSocket, Reporter, webkit, WeixinJSCore) {
    "use strict";
    var o = require("../../utils/logger"),
        n = require("../../utils/util"),
        e = new o({
            pageName: "preBigHouse",
            aegisLogEnable: !0,
            wxLogEnable: !0
        });
    Page({
        data: {},
        onLoad: function(o) {
            console.log("<<< onLoad option big-house pre:", JSON.stringify(o)), e.info("big-house pre onLoad: ".concat(JSON.stringify(o)));
            var i = "/pages/sub-activity/bigHouseCard/bigHouseCard".concat(n.getQueryString(o));
            console.log("-----------\x3e>>>>>>", i), wx.redirectTo({
                url: i
            })
        },
        onReady: function() {},
        onShow: function() {},
        onHide: function() {},
        onUnload: function() {},
        onPullDownRefresh: function() {},
        onReachBottom: function() {},
        onShareAppMessage: function() {}
    });
});
require("pages/bigHouseCard/bigHouseCard.js");
__wxRoute = 'pages/index/privacy/index';
__wxRouteBegin = true;
__wxAppCurrentFile__ = 'pages/index/privacy/index.js';
define("pages/index/privacy/index.js", function(require, module, exports, window, document, frames, self, location, navigator, localStorage, history, Caches, screen, alert, confirm, prompt, XMLHttpRequest, WebSocket, Reporter, webkit, WeixinJSCore) {
    "use strict";
    var e, t = require("../../../@babel/runtime/helpers/regeneratorRuntime"),
        r = require("../../../@babel/runtime/helpers/asyncToGenerator"),
        i = require("../../../@babel/runtime/helpers/defineProperty"),
        o = (e = require("../../../utils/loggers/index")) && e.__esModule ? e : {
            default: e
        },
        n = require("../constants");
    var s = require("../../../stores/MeetingStore"),
        a = require("../../../utils/historyCodes.js").getInstance(),
        c = require("../../../utils/util.js"),
        u = require("../../../stores/UserStore"),
        l = require("../../../actions/UserAction"),
        d = require("../../../stores/AppStore"),
        g = require("../../../https/UserHttps"),
        h = require("../../../clients/WemeetClient"),
        p = new o.default({
            pageName: "index-privacy",
            aegisLogEnable: !0,
            wxLogEnable: !1
        });
    Page({
        data: {
            hasUseRulesRedRot: !1,
            hasPrivacyRedRot: !1
        },
        onLoad: function() {
            this.sliderMsgDialog = this.selectComponent("#privacy-message-dialog")
        },
        onShow: function() {
            this.getUserRedRotInfo()
        },
        goUseRules: function() {
            this.data.hasUseRulesRedRot && this.resetUserRedRotInfo(n.RedDotPath.service_agreement, "hasUseRulesRedRot");
            var e = c.getQueryString({
                url: "https://rule.tencent.com/rule/preview/ab9ea528-0bf1-47b3-a8c3-f001b98912e2"
            });
            wx.navigateTo({
                url: "../../sub-web/web/web".concat(e)
            })
        },
        goPrivacy: function() {
            this.data.hasPrivacyRedRot && this.resetUserRedRotInfo(n.RedDotPath.privacy_policy, "hasPrivacyRedRot");
            var e = c.getQueryString({
                url: "https://privacy.qq.com/document/preview/f3e2eb5c0eee4f9c8ce169b4ba964bd7"
            });
            wx.navigateTo({
                url: "../../sub-web/web/web".concat(e)
            })
        },
        getUserRedRotInfo: function() {
            var e = this;
            if (h.isXMPPTokenValid()) {
                var t = u.getUserID(),
                    r = u.getOpenID(),
                    i = u.getAppID() || d.getSdkAppId(),
                    o = u.getWeMeetLoginToken(),
                    s = u.getCGIToken(),
                    a = l.isCGITokenValid();
                if (!(!o && (!s || !a) || !t && !r)) {
                    var c = {
                        corpId: i || "",
                        ticket: s,
                        token_type: n.TOKEN_TYPE.W10
                    };
                    g.getUserReddot(c).then((function(t) {
                        if (t) {
                            var r = t[n.RedDotPath.service_agreement],
                                i = t[n.RedDotPath.privacy_policy],
                                o = !1,
                                s = !1;
                            null != r && r.is_show && (o = !0), null != i && i.is_show && (s = !0), (o || s) && e.setData({
                                hasUseRulesRedRot: o,
                                hasPrivacyRedRot: s
                            })
                        }
                    })).catch((function(e) {
                        p.error("getUserReddot failed at index page: ".concat(JSON.stringify(e)))
                    }))
                }
            }
        },
        resetUserRedRotInfo: function(e, t) {
            var r = this,
                o = u.getUserID(),
                s = u.getOpenID(),
                a = u.getAppID() || d.getSdkAppId(),
                c = u.getWeMeetLoginToken(),
                h = u.getCGIToken(),
                f = l.isCGITokenValid();
            if (!(!c && (!h || !f) || !o && !s)) {
                var R = {
                    path: e,
                    corpId: a || "",
                    ticket: h,
                    token_type: n.TOKEN_TYPE.W10
                };
                g.resetUserReddot(R).then((function(e) {
                    e && r.setData(i({}, t, !1))
                })).catch((function(e) {
                    p.error("resetUserReddot failed at index page: ".concat(JSON.stringify(e)))
                }))
            }
        },
        logout: function() {
            this.sliderMsgDialog.show()
        },
        onCancelBtnClick: function() {
            this.sliderMsgDialog.hide()
        },
        onConfirmBtnClick: function() {
            var e = this;
            return r(t().mark((function r() {
                var i, o;
                return t().wrap((function(t) {
                    for (;;) switch (t.prev = t.next) {
                        case 0:
                            if (i = u.getOpenID(), o = u.getCGIToken(), i && o) {
                                t.next = 4;
                                break
                            }
                            return t.abrupt("return", wx.redirectTo({
                                url: "../index"
                            }));
                        case 4:
                            try {
                                wx.clearStorageSync(), u.handleCGILoginFail(), l.setPhoneNum(""), l.setXMPPToken(), u.setWXUserInfo(null), u.clearRegisterOrLoginAuthCode(), u.clearWeMeetLoginInfo(), u.setPrevSuccMeetingCode(), s.clear(), a.clear(), h.xmppLogout()
                            } finally {
                                e.sliderMsgDialog.hide(), wx.redirectTo({
                                    url: "../index"
                                })
                            }
                        case 5:
                        case "end":
                            return t.stop()
                    }
                }), r)
            })))()
        },
        goLogout: function() {
            wx.navigateTo({
                url: "./protocol/index"
            })
        }
    });
});
require("pages/index/privacy/index.js");
__wxRoute = 'pages/index/privacy/protocol/index';
__wxRouteBegin = true;
__wxAppCurrentFile__ = 'pages/index/privacy/protocol/index.js';
define("pages/index/privacy/protocol/index.js", function(require, module, exports, window, document, frames, self, location, navigator, localStorage, history, Caches, screen, alert, confirm, prompt, XMLHttpRequest, WebSocket, Reporter, webkit, WeixinJSCore) {
    "use strict";
    Page({
        data: {},
        onLoad: function() {},
        onReady: function() {},
        onShow: function() {},
        onHide: function() {},
        onUnload: function() {},
        onPullDownRefresh: function() {},
        onReachBottom: function() {},
        onShareAppMessage: function() {}
    });
});
require("pages/index/privacy/protocol/index.js");