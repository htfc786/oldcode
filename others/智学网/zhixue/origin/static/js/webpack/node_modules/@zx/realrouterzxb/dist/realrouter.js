import http from '@zx/crosshttp';

/**
 * 上云维度表
 */
var TABLE = [
  {
    name: 'examId',
    type: 'exam'
  },
  {
    name: 'paperId',
    type: 'markingPaper'
  }
];
/**
 * idc 环境标签
 */
var IDC = 'idc';
/**
 * 获取路由信息接口地址
 */
var ROUTER_URL = '/routingconfig/zxbRoutingConfig/getHostByBusinessId';
/**
 * 异常提示
 */
var EXCEPTION = 'route config exception, please try again later';
/**
 * log request url
 */
var LOG_URL = '//log.zhixue.com/httpLog/web/log';
/**
 * error note
 */
var ERR_NOTE = '网络异常，请尝试刷新该页面';

var createKey = function(key) {
  if (key.indexOf('zx') === 0) {
    return key;
  }
  return 'zx_router_zxb_' + key;
};
var jsonParse = function(text) {
  try {
    return JSON.parse(text);
  } catch (err) {
    console.error('json parse error, text = ', text, err);
  }
  return text;
};
/**
 * set sessionStorage
 * @param key 存储key
 * @param value 存储值
 * @param expire 过期时间，单位秒
 */
function setSessionStorage(key, value, expire) {
  try {
    var result = {
      data: value,
      time: new Date().getTime()
    };
    if (expire > 0) {
      result.expire = expire * 1000;
    }
    window.sessionStorage.setItem(createKey(key), JSON.stringify(result));
  } catch (err) {
    console.log('set sessionStorage error: ', err);
  }
}
/**
 * get sessionStorage
 * @param key 存储key
 */
function getSessionStorage(key) {
  try {
    var RealKey = createKey(key);
    var result = jsonParse(window.sessionStorage.getItem(RealKey));
    if (!result || !result.time) {
      return null;
    }
    if (!result.expire) {
      return result.data;
    }
    var now = new Date().getTime();
    if (now < result.time + result.expire) {
      return result.data;
    }
    window.sessionStorage.removeItem(RealKey);
    return null;
  } catch (err) {
    console.log('get sessionStorage error: ', err);
    return null;
  }
}

var cssText =
  '.realrouter-ex-alert{position:fixed;left:50%;top:20px;background:#fef0f0;width:320px;box-sizing:border-box;border:1px solid #fde2e2;padding:15px 20px;color:#f56c6c;border-radius:3px;font-size:14px;margin-left:-160px}';
function styleInject(css) {
  var head = document.head || document.getElementsByTagName('head')[0];
  var style = document.createElement('style');
  style.appendChild(document.createTextNode(css));
  head.appendChild(style);
}
function alertErr(txt) {
  if (document.querySelector('.realrouter-ex-alert')) {
    return;
  }
  var html = '<div class="realrouter-ex-alert">' + txt + '</div>';
  styleInject(cssText);
  document.querySelector('body').insertAdjacentHTML('beforeend', html);
}

function log(params) {
  var hostname = window.location.hostname;
  var names = [
    'localhost',
    'test.zhixue.com',
    'test02.zhixue.com',
    'examtest.zhixue.com'
  ];
  if (names.indexOf(hostname) > -1) {
    return;
  }
  var href = window.location.href;
  if (href.indexOf('file') === 0) {
    return;
  }
  // 输出 log
  http(LOG_URL, params, true)
    .then(function() {})
    ['catch'](function() {});
}

var dealFormData = function(data) {
  if (data.constructor !== FormData) {
    return data;
  }
  var obj = {};
  for (var i = 0; i < TABLE.length; i++) {
    var name_1 = TABLE[i].name;
    if (data.get && data.get(name_1)) {
      obj[name_1] = data.get(name_1);
    }
  }
  return obj;
};
var getRealObj = function(obj) {
  if (obj.method === 'get') {
    return dealFormData(obj.params || {});
  }
  if (obj.method === 'post') {
    return dealFormData(obj.data || {});
  }
  return obj;
};
var getDim = function(params, dimension, id) {
  var finalObj = getRealObj(params || {});
  var finalTable = dimension || TABLE;
  var finalDim = null;
  for (var i = 0; i < finalTable.length; i++) {
    var dim = finalTable[i];
    for (var key in finalObj) {
      if (
        finalObj.hasOwnProperty(key) &&
        key === dim['name'] &&
        finalObj[key]
      ) {
        finalDim = {
          type: dim['type'],
          id: finalObj[key]
        };
        break;
      }
    }
    if (finalDim != null) {
      break;
    }
  }
  if (finalDim != null) {
    return finalDim;
  }
  return {
    type: 'user',
    id: id
  };
};
/**
 * 获取路由
 * @param params 参数
 * @param userId 用户id
 * @param dimension 维度表，可不指定
 */
var realrouter = function(params, userId, dimension, token) {
  return new Promise(function(resolve, reject) {
    var _a = getDim(params, dimension, userId),
      bizType = _a.type,
      bizId = _a.id;
    if (!bizType || !bizId) {
      // 日志
      var otherInfo = {
        params: params,
        dimension: dimension,
        token: token
      };
      log({
        userId: userId,
        bizType: bizType,
        bizId: bizId,
        type: 'params error',
        respone: JSON.stringify(otherInfo)
      });
      throw new Error('[REAL ROUTER] Illegal entry');
    }
    var CUR_HOST = '';
    var SESSION_KEY = bizType + '_' + bizId;
    var cache = getSessionStorage(SESSION_KEY);
    if (cache || cache === CUR_HOST) {
      return resolve(cache);
    }
    var person = {
      businessType: bizType,
      businessId: bizId
    };
    if (token) {
      person.token = token;
    }
    http(ROUTER_URL, person, false)
      .then(function(res) {
        if (res && res.code == 200) {
          var data = res.data || {};
          var host = data.host,
            tag = data.tag;
          // 日志
          log({
            userId: userId,
            bizType: bizType,
            bizId: bizId,
            host: host,
            tag: tag
          });
          if (tag === IDC) {
            setSessionStorage(SESSION_KEY, CUR_HOST, 900);
            return resolve(CUR_HOST);
          }
          if (host) {
            setSessionStorage(SESSION_KEY, host, 900);
            return resolve(host);
          }
        }
        // 日志
        log({
          userId: userId,
          bizType: bizType,
          bizId: bizId,
          type: 'error',
          respone: JSON.stringify(res)
        });
        alertErr(ERR_NOTE);
        reject('[REAL ROUTER] ' + EXCEPTION);
      })
      ['catch'](function(err) {
        // 日志
        log({
          userId: userId,
          bizType: bizType,
          bizId: bizId,
          type: 'exception',
          respone: JSON.stringify(err)
        });
        alertErr(ERR_NOTE);
        reject('[REAL ROUTER] ' + EXCEPTION);
      });
  });
};

export default realrouter;



//////////////////
// WEBPACK FOOTER
// ./node_modules/@zx/realrouterzxb/dist/realrouter.js
// module id = null
// module chunks = 