import time

time.time()     #获取当前时间戳，即计算机内部时间值，浮点数
time.time()
#输出为：1553264498.4923499


time.ctime()    #获取当前时间并以易读方式表示，返回字符串
print(time.ctime())
#输出为：Fri Mar 22 22:21:04 2019


time.gmtime()   #获取当前时间，表示位计算机可处理的时间格式
print(time.gmtime())
#输出为：time.struct_time(tm_year=2019, tm_mon=3, tm_mday=22, tm_hour=14, tm_min=22, tm_sec=48, tm_wday=4, tm_yday=81,
#                    tm_isdst=0)


#time.strftime(tpl,ts)    #tpl是格式化模板字符串，用来定义输出效果，ts是计算机内部事件类型变量
t=time.gmtime()
print(time.strftime("%Y-%m-%d %H:%M:%S",t))
#输出为：2019-03-23 01:12:06


#time.strptime(str,tpl)   #str是字符串类型的时间值，tpl是格式化模板字符串，用来定义输入效果
timestr='2018-01-26 12:55:20'
print(time.strptime(timestr,"%Y-%m-%d %H:%M:%S"))
#输出为time.struct_time(tm_year=2018, tm_mon=1, tm_mday=26, tm_hour=12, tm_min=55, tm_sec=20, tm_wday=4, tm_yday=26,
#                   tm_isdst=-1)


time.localtime() #返回本电脑上的时间
print(time.localtime())
#输出为time.struct_time(tm_year=2018, tm_mon=1, tm_mday=26, tm_hour=12, tm_min=55, tm_sec=20, tm_wday=4, tm_yday=26,
#                   tm_isdst=-1)

time.perf_counter()	#返回一个CPU级别的精确时间计数值，单位为秒，由于这个计数值起点不确定，连续调用差值才有意义
start=time.perf_counter()
print(start)
#输出为：0.540116479


#time.sleep(s)	#s拟休眠的时间，单位是秒，可以是浮点数
time.sleep(3.3)
